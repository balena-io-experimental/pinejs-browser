{"version":3,"sources":["webpack:///out/pine.js","webpack:///webpack/bootstrap a1cb07fb9a099fd0e365","webpack:///./src/server/src/server-glue/server.coffee","webpack:///./src/server/src/server-glue/module.coffee","webpack:///external \"bluebird\"","webpack:///./src/server/src/database-layer/db.coffee","webpack:///external \"lodash\"","webpack:///./src/server/src/database-layer/sql-binds.coffee","webpack:///external \"typed-error\"","webpack:///external \"pg\"","webpack:///./~/pg/lib/connection-parameters.js","webpack:///external \"url\"","webpack:///external \"dns\"","webpack:///./~/pg/lib/defaults.js","webpack:///./~/pg-types/index.js","webpack:///./~/pg-types/lib/textParsers.js","webpack:///./~/postgres-array/index.js","webpack:///./~/ap/index.js","webpack:///./~/pg-types/lib/arrayParser.js","webpack:///./~/postgres-date/index.js","webpack:///./~/postgres-interval/index.js","webpack:///./~/xtend/mutable.js","webpack:///./~/postgres-bytea/index.js","webpack:///./~/pg-types/lib/binaryParsers.js","webpack:///./~/pg-connection-string/index.js","webpack:///external \"mysql\"","webpack:///./src/server/src/sbvr-api/sbvr-utils.coffee","webpack:///./~/@resin/lf-to-abstract-sql/index.js","webpack:///./~/@resin/lf-to-abstract-sql/lf-to-abstract-sql-prep.js","webpack:///./~/@resin/sbvr-parser/lf-optimiser.js","webpack:///./~/ometa-js/lib/ometajs/core.js","webpack:///./~/@resin/sbvr-parser/lf-validator.js","webpack:///./~/@resin/sbvr-parser/sbvr-libs.js","webpack:///./~/@resin/lf-to-abstract-sql/sbvr-compiler-libs.js","webpack:///./~/@resin/lf-to-abstract-sql/lf-to-abstract-sql.js","webpack:///./~/@resin/abstract-sql-compiler/AbstractSQLCompiler.js","webpack:///./~/@resin/abstract-sql-compiler/AbstractSQLOptimiser.js","webpack:///./~/@resin/abstract-sql-compiler/AbstractSQLRules2SQL.js","webpack:///./~/@resin/sbvr-types/bin/types.js","webpack:///external \"bcrypt\"","webpack:///external \"bcryptjs\"","webpack:///external \"pinejs-client/core\"","webpack:///./src/common/extended-sbvr-parser/extended-sbvr-parser.coffee","webpack:///./~/@resin/sbvr-parser/sbvr-parser.js","webpack:///./~/@resin/sbvr-parser/inflection.js","webpack:///./~/@resin/sbvr-types/Type.sbvr","webpack:///./src/server/src/migrator/migrator.coffee","webpack:///./src/server/src/migrator/migrations.sbvr","webpack:///./src/server/src/sbvr-api/permissions.coffee","webpack:///external \"bluebird-lru-cache\"","webpack:///./src/server/src/config-loader/env.coffee","webpack:///./src/server/src/sbvr-api/user.sbvr","webpack:///./src/server/src/sbvr-api/uri-parser.coffee","webpack:///./~/@resin/odata-parser/odata-parser.js","webpack:///./~/@resin/odata-to-abstract-sql/odata-to-abstract-sql.js","webpack:///./~/@resin/odata-to-abstract-sql/~/memoizee/index.js","webpack:///./~/es5-ext/object/normalize-options.js","webpack:///./~/@resin/odata-to-abstract-sql/~/memoizee/lib/resolve-length.js","webpack:///./~/es5-ext/number/to-pos-integer.js","webpack:///./~/es5-ext/number/to-integer.js","webpack:///./~/es5-ext/math/sign/index.js","webpack:///./~/es5-ext/math/sign/is-implemented.js","webpack:///./~/es5-ext/math/sign/shim.js","webpack:///./~/@resin/odata-to-abstract-sql/~/memoizee/plain.js","webpack:///./~/es5-ext/object/valid-callable.js","webpack:///./~/es5-ext/object/for-each.js","webpack:///./~/es5-ext/object/_iterate.js","webpack:///./~/es5-ext/object/valid-value.js","webpack:///./~/@resin/odata-to-abstract-sql/~/memoizee/lib/registered-extensions.js","webpack:///./~/@resin/odata-to-abstract-sql/~/memoizee/lib/configure-map.js","webpack:///./~/es5-ext/error/custom.js","webpack:///./~/es5-ext/object/assign/index.js","webpack:///./~/es5-ext/object/assign/is-implemented.js","webpack:///./~/es5-ext/object/assign/shim.js","webpack:///./~/es5-ext/object/keys/index.js","webpack:///./~/es5-ext/object/keys/is-implemented.js","webpack:///./~/es5-ext/object/keys/shim.js","webpack:///./~/es5-ext/function/_define-length.js","webpack:///./~/es5-ext/object/mixin.js","webpack:///./~/d/index.js","webpack:///./~/es5-ext/object/is-callable.js","webpack:///./~/es5-ext/string/#/contains/index.js","webpack:///./~/es5-ext/string/#/contains/is-implemented.js","webpack:///./~/es5-ext/string/#/contains/shim.js","webpack:///./~/event-emitter/index.js","webpack:///./~/@resin/odata-to-abstract-sql/~/memoizee/lib/resolve-resolve.js","webpack:///./~/es5-ext/array/to-array.js","webpack:///./~/es5-ext/array/from/index.js","webpack:///./~/es5-ext/array/from/is-implemented.js","webpack:///./~/es5-ext/array/from/shim.js","webpack:///./~/es6-symbol/index.js","webpack:///./~/es6-symbol/is-implemented.js","webpack:///./~/es6-symbol/polyfill.js","webpack:///./~/es6-symbol/validate-symbol.js","webpack:///./~/es6-symbol/is-symbol.js","webpack:///./~/es5-ext/function/is-arguments.js","webpack:///./~/es5-ext/function/is-function.js","webpack:///./~/es5-ext/function/noop.js","webpack:///./~/es5-ext/string/is-string.js","webpack:///./~/@resin/odata-to-abstract-sql/~/memoizee/lib/resolve-normalize.js","webpack:///./~/@resin/odata-to-abstract-sql/~/memoizee/normalizers/primitive.js","webpack:///./~/@resin/odata-to-abstract-sql/~/memoizee/normalizers/get-primitive-fixed.js","webpack:///./~/@resin/odata-to-abstract-sql/~/memoizee/normalizers/get.js","webpack:///./~/es5-ext/array/#/e-index-of.js","webpack:///./~/@resin/odata-to-abstract-sql/~/memoizee/normalizers/get-1.js","webpack:///./~/@resin/odata-to-abstract-sql/~/memoizee/normalizers/get-fixed.js","webpack:///./~/@resin/odata-to-abstract-sql/~/memoizee/ext/async.js","webpack:///./~/next-tick/index.js","webpack:///./~/@resin/odata-to-abstract-sql/~/memoizee/ext/dispose.js","webpack:///./~/@resin/odata-to-abstract-sql/~/memoizee/ext/max-age.js","webpack:///./~/timers-ext/valid-timeout.js","webpack:///./~/timers-ext/max-timeout.js","webpack:///./~/@resin/odata-to-abstract-sql/~/memoizee/ext/max.js","webpack:///./~/lru-queue/index.js","webpack:///./~/@resin/odata-to-abstract-sql/~/memoizee/ext/ref-counter.js","webpack:///./~/memoizee/index.js","webpack:///./~/memoizee/plain.js","webpack:///./~/memoizee/lib/configure-map.js","webpack:///./~/memoizee/lib/resolve-normalize.js","webpack:///./~/memoizee/ext/async.js","webpack:///./~/es5-ext/object/map.js","webpack:///./~/memoizee/~/next-tick/index.js","webpack:///./~/memoizee/ext/promise.js","webpack:///./~/is-promise/index.js","webpack:///./~/memoizee/ext/dispose.js","webpack:///./~/memoizee/ext/max-age.js","webpack:///./~/memoizee/ext/max.js","webpack:///./~/memoizee/ext/ref-counter.js","webpack:///./~/@resin/abstract-sql-to-odata-schema/AbstractSQL2ODataSchema.js","webpack:///./src/server/src/sbvr-compiler/ODataMetadataGenerator.coffee","webpack:///./src/server/src/sbvr-api/dev.sbvr","webpack:///./src/server/src/config-loader/config-loader.coffee","webpack:///external \"fs\"","webpack:///external \"coffee-script/register\"","webpack:///external \"path\"","webpack:///./src/server/src/pinejs-session-store/pinejs-session-store.coffee","webpack:///external \"express-session\"","webpack:///./src/server/src/data-server/SBVRServer.coffee","webpack:///./src/server/src/http-transactions/transactions.coffee","webpack:///./src/server/src/http-transactions/transaction.sbvr","webpack:///./src/server/src/passport-pinejs/passport-pinejs.coffee","webpack:///external \"express\""],"names":["e","a","i","exports","modules","__webpack_require__","moduleId","installedModules","module","id","loaded","call","m","c","p","Object","prototype","hasOwnProperty","_m","args","slice","fn","b","apply","this","concat","Pinejs","PinejsSessionStore","Promise","app","bodyParser","compression","cookieParser","express","expressSession","initialised","methodOverride","multer","passport","passportPinejs","path","root","sbvrUtils","serveStatic","get","console","log","longStackTraces","init","then","configLoader","all","loadConfig","config","process","env","DISABLE_DEFAULT_AUTH","post","login","err","user","req","res","next","error","stack","sendStatus","xhr","redirect","logout","listen","PORT","info","exit","databaseOptions","databaseURL","db","dbModule","fs","migrator","websql","engine","params","DATABASE_URL","postgres","mysql","Error","indexOf","connect","setup","tap","promises","sbvrServer","transactions","push","addModelHooks","SessionStore","require","ConnectionParameters","ConstraintError","DEFAULT_VALUE","DatabaseError","ForeignKeyConstraintError","NotADatabaseError","Tx","TypedError","UniqueConstraintError","_","alwaysExport","atomicExecuteSql","bindDefaultValues","createTransaction","pg","sqlBinds","extend","child","parent","ctor","constructor","key","hasProp","__super__","superClass","message","code","name","arguments","sql","bindings","bindNo","some","binding","splice","callback","transaction","tx","result","executeSql","isRejected","rollback","end","nodeify","stackTraceErr","automaticClose","closeTransaction","pendingExecutes","_this","timeoutMS","automaticCloseTimeout","pending","setTimeout","increment","clearTimeout","decrement","cancel","length","promise","rejectionValue","rejected","TRANSACTION_TIMEOUT_MS","parseInt","isNaN","createFunc","resolve","reject","connectString","PG_FOREIGN_KEY_VIOLATION","PG_UNIQUE_VIOLATION","PostgresTx","createResult","pool","max","defaults","poolSize","idleTimeoutMillis","poolIdleTimeout","poolLog","Pool","arg","ref","rowCount","rows","item","forEach","iterator","thisArg","map","rowsAffected","insertId","_db","_close","_stackTraceErr","addReturning","test","replace","includes","bindString","initialBindNo","Array","isArray","j","len","results","join","fromCallback","query","text","values","tableList","extraWhereClause","isFunction","dropTable","tableName","ifExists","client","done","PG_SCHEMA","options","MYSQL_FOREIGN_KEY_VIOLATION","MYSQL_UNIQUE_VIOLATION","MySqlTx","_pool","createPool","on","affectedRows","database","getConnection","release","openDatabase","databaseName","WEBSQL_CONSTRAINT_ERR","WebSqlTx","getInsertId","clone","_tx","asyncRecurse","queue","running","pop","debug","errorCallback","successCallback","_results","fulfilled","nextBindFn","newSql","startQuote","url","dns","val","envVar","undefined","toUpperCase","parse","useSsl","PGSSLMODE","ssl","connectionString","port","host","password","binary","client_encoding","isDomainSocket","application_name","fallback_application_name","add","paramName","value","getLibpqConnectionString","cb","lookup","address","platform","USERNAME","USER","reapIntervalMillis","returnToHead","parseInputDatesAsUTC","pgTypes","parseBigInteger","getTypeParser","parseBigIntegerArray","__defineSetter__","setTypeParser","noParse","String","oid","format","typeParsers","parseFn","textParsers","binaryParsers","arrayParser","converter","allowNull","nullAllowed","parseBool","parseBoolArray","array","parseIntegerArray","ap","partialRight","entry","trim","parseDate","parseInterval","parseByteA","parseFloatArray","create","parseFloat","parseStringArray","parseDateArray","parseByteAArray","arr","element","parseInteger","valStr","parseJsonArray","el","JSON","parsePoint","substring","split","x","y","parseCircle","point","radius","pointParsed","register","bind","ArrayParser","source","transform","identity","position","entries","recorded","dimension","isEof","nextCharacter","character","escaped","record","newEntry","includeEmpty","nested","parser","quote","substr","rest","first","pa","apa","left","right","partial","curry","curryRight","getDate","isoDate","matches","DATE","exec","year","month","day","date","Date","setFullYear","timeZoneOffset","zone","TIME_ZONE","type","sign","offset","DATE_TIME","BC","INFINITY","Number","isBC","isFirstCentury","hour","minute","second","ms","utc","UTC","setUTCFullYear","PostgresInterval","raw","interval","INTERVAL","isNegative","keys","positions","reduce","parsed","property","negatives","properties","toPostgres","filtered","filter","NUMBER","YEAR","MONTH","DAY","TIME","RegExp","regexString","years","months","days","hours","minutes","seconds","milliseconds","target","parseBytea","input","Buffer","output","fromCharCode","backslashes","k","Math","floor","parseBits","data","bits","invert","lastValue","newValue","pow","offsetBytes","inv","mask","firstBits","bytes","lastBits","parseFloatFromBits","precisionBits","exponentBits","bias","exponent","precisionBitsCounter","parsePrecisionBits","mantissa","Infinity","NaN","parseInt16","parseInt32","parseFloat32","parseFloat64","parseNumeric","weight","digits","ndigits","scale","round","isUTC","rawValue","setTime","getTime","getTimezoneOffset","usec","getMicroSeconds","setMicroSeconds","getUTCMicroSeconds","parseArray","dim","flags","elementType","dims","parseElement","toString","encoding","count","shift","unshift","parseText","str","charAt","encodeURI","protocol","decodeURI","pathname","hostname","auth","AbstractSQL2CLF","AbstractSQLCompiler","LF2AbstractSQL","LF2AbstractSQLTranslator","ODataMetadataGenerator","PinejsClient","PinejsClientCore","SBVRParser","SbvrValidationError","SqlCompilationError","UnsupportedMethodError","api","apiHooks","checkForExpansion","cleanupModel","clientModels","devModel","executeModel","executeModels","executeStandardModels","fetchProcessing","getAndCheckBindValues","getHooks","handleODataRequest","memoize","memoizedCompileRule","odataMetadata","odataResourceURI","permissions","prettifyConstraintError","processOData","resolveOdataBind","respondDelete","respondGet","respondOptions","respondPost","respondPut","runDelete","runGet","runHook","runPost","runPut","runQuery","runTransaction","runURI","sbvrTypes","seModels","sqlModels","uriParser","validateModel","abstractSqlQuery","compileRule","primitive","mapValues","promisify","createTranslator","GET","PUT","POST","PATCH","DELETE","OPTIONS","MERGE","odataBinds","dataType","isObject","vocab","mappings","sqlModelTables","resourceToSQLMappings","tables","field","fieldName","mappedFieldName","mappedTableName","ref1","ref2","referencedName","find","fields","isInteger","dataTypeValidate","modelName","rules","rule","structuredEnglish","model","models","seModel","modelText","apiRoot","run","abstractSqlModel","clientModel","lfModel","metadata","sqlModel","matchAll","compileSchema","createSchema","createStatement","addClientModel","ref3","logger","logging","se","lf","abstractsql","updateModel","modelType","dev","resource","passthrough","rootRead","select","vocabulary","model_type","body","method","uri","model_value","deleteClientModel","getMethodHooks","getResourceHooks","getVocabHooks","mergeHooks","mergeWith","vocabHooks","request","resourceName","methodHooks","hookName","hooks","defineProperty","once","pick","hook","deleteModel","dropStatements","dropSchema","dropStatement","getID","comparison","idField","len1","whereClause","rowsObjectHack","instance","expandedField","__deferred","__id","isString","encodeURIComponent","getFetchProcessingFields","getLocalFields","resourceModel","localFields","fetchProcessingFields","fromPairs","expandableFields","instances","instancesPromise","processedFields","$count","__metadata","runRule","LF2AbstractSQLPrepHack","translator","LF2AbstractSQLPrep","_extend","CardinalityOptimisation","_pred","createInstance","addTypes","fetchingViolators","formulationType","ruleAbs","ruleBody","ruleLF","ruleSQL","slfModel","wantNonViolators","match","reset","0","queryPart","ids","resources","row","uniq","__formulationType","__resourceName","_request","apiKey","trace","warn","statusCode","status","statusCode1","send","json","set","route","parseODataURI","requests","translateUri","sqlQuery","EvalError","RangeError","ReferenceError","SyntaxError","TypeError","URIError","BadRequestError","PermissionError","TranslationError","ParsingError","PermissionParsingError","runCallback","queryIndex","d","__model","sqlResult","location","addHook","callbacks","apiRootHooks","callbackType","resourceHooks","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","factory","translate","types","OMeta","SBVRCompilerLibs","LFOptimiser","AttrConceptType","termName","$elf","_fromIdx","idx","conceptType","_superApplyWithArgs","_opt","primitives","_apply","AttrDatabaseAttribute","termOrFactType","attrVal","newAttrVal","anything","attributes","AttrDatabasePrimitive","AttrTermForm","factType","termForms","UniversalQuantification","v","xs","_applyWithArgs","_many","AtMostNQuantification","maxCard","CardinalityOptimisation2","v1","actualFactType","atomicForm","card","required","v2","_or","_form","IdentifiersEqual","foreignKeys","uniqueKeys","_fail","NecessityOptimisation","ObligationOptimisation","Rule","initialize","assign","defaultAttributes","attrsFound","attrs","IsPrimitive","SetHelped","UnmappedFactType","Unique","___MISMATCHED_UNIQUE_KEY___","die","ForeignKey","___MISMATCHED_FOREIGN_KEY___","LFValidator","Helped","helped","Process","AtLeastNQuantification","NumericalRangeQuantification","LogicalNegation","_didSomething","objectThatDelegatesTo","obj","props","isSequenceable","o","getTag","_id_","isImmutable","success","fallback","always","after","returnTrue","returnFalse","throwFail","fail","noop","OMInputStream","hd","tl","memo","lst","OMInputStreamEnd","ListOMInputStream","makeListOMInputStream","makeOMInputStreamProxy","upTo","head","tail","that","r","curr","_enableTokens","rulesToTrack","_tokensEnabled","_addToken","startInput","endInput","ruleArgs","tokens","_enableBranchTracking","branches","_addBranch","_getBranches","memoRec","origInput","ans","nextInput","failer","self","sentinel","lookupFunc","ruleFn","ruleFnArity","min","_prependInput","recv","_disablePrependingInput","memoizeParameterizedRules","newInput","_not","origAddBranch","origAddToken","_lookahead","_xor","ruleName","disableXORs","resetAndReturnTrue","_many1","_consumedBy","_idxConsumedBy","fromIdx","toIdx","_interleave","currInput","allDone","f","_currIdx","lowerCaseAnything","toLowerCase","pos","empty","foreign","grammar","grammarInstance","exactly","wanted","true","false","number","string","char","space","charCodeAt","spaces","digit","lower","upper","letter","letterOrDigit","firstAndRest","seq","notLast","listOf","delim","token","cs","fromTo","hexDigit","escapedChar","s","matchFailed","listyObj","setInput","inputHead","realArgs","start","line","col","aRule","enableReusingMemoizations","sideEffectingRules","previousText","divergencePoint","l","cleanInput","secondaryDivergencePoint","memoTokens","ruleNames","duplicateTokens","SBVRLibs","trans","t","letters","n","Model","FactType","identifier","verb","Vocabulary","Term","term","Name","Verb","negated","Disjunction","Conjunction","addAttributes","attrName","DefaultAttr","tableID","vocabularies","currentVocabulary","ConceptTypes","AttrDefinition","AttrNecessity","AttrSynonymousForm","synForm","StructuredEnglish","ObligationFormulation","NecessityFormulation","PossibilityFormulation","PermissibilityFormulation","quant","ExistentialQuantification","ExactQuantification","Cardinality","MinimumCardinality","MaximumCardinality","Variable","num","w","Real","Integer","Text","Value","RoleBinding","bindIdentifier","AtomicFormulation","termOrVerb","factTypes","ApplyFirstExisting","FollowConceptType","conceptTypes","AddVocabulary","baseSynonym","IdentifierChildren","formatFactType","AddFactType","realFactType","mappedFactType","matchingFactTypes","isEqual","realFactTypePart","mappingFound","factTypePart","_traverseFactType","traverseRecurse","currentFactTypePart","remainingFactType","currentLevel","__valid","finalLevel","finalLevels","isEmpty","TYPE_VOCAB","IsChild","MappedFactType","traverseInfo","GetResourceName","GetTable","termNameOrFactType","GetTableID","GetTableField","table","fieldID","GetTableFieldID","tableFields","Identifier","IdentifierName","identifierName","identifiers","CreateTable","Attributes","attributeName","attributeValue","conceptTable","identifierTable","references","referenceScheme","AttrDatabaseIDField","index","AttrReferenceScheme","AttrDatabaseTableName","attributeTable","baseTable","AttrForeignKey","fkName","fkTable","AttrUnique","uniqueField","extraFactType","linkTable","uniqueFields","indexes","cardinality","selectBody","varNum","whereBody","whereBody2","bindAttributes","RoleBindings","binds","findIndex","3","baseTermName","baseBind","conceptTypeResolver","conceptTypeResolvers","NativeProperty","nativeProperties","NativeFactType","secondPrimitive","nativeFactTypes","___NativeFactTypeMatchingFailed___","LinkTableAlias","bindNumbers","identifierType","mapping","partAlias","LinkTable","tableAlias","each","baseIdentifierName","AddWhereClause","baseToIdentifier","bindFrom","bindTo","tableTo","___ForeignKeyMatchingFailed___","BooleanAttribute","___BooleanAttributeMatchingFailed___","Attribute","bindAttr","bindReal","___AttributeMatchingFailed___","AtLeast","minCard","variable","where","Exactly","exists","Range","Exists","Negation","RulePart","RuleBody","ReconstructIdentifier","ProcessAtomicFormulations","bindAttributeDepth","nonPrimitiveExists","ProcessAtomicFormulationsRecurse","depth","unmappedFactType","ProcessAtomicFormulationsNonPrimitive","ProcessAtomicFormulationsAttributes","attrBinding","baseBinding","bindNumber","ProcessAtomicFormulationsNativeProperties","every","ruleText","AddTableField","defaultValue","CreateConceptTypesResolver","parentAlias","concept","conceptTypeResolutions","untilConcept","conceptAlias","last","ResetRuleState","arg1","AbstractSQLOptimiser","AbstractSQLRules2SQL","dataTypeGen","validateTypes","arg2","validate","necessity","dbType","compiler","optimiser","abstractSQL","ifNotExists","createSQL","createSchemaStatements","dependency","depends","dropSQL","dropSchemaStatements","foreignKey","hasDependants","len2","len3","len4","len5","ref4","ref5","ruleSE","ruleStatements","schemaDependencyMap","schemaInfo","tableNames","unsolvedDependency","reverse","stringify","AbstractSQLValidator","Query","SelectQuery","from","groupBy","limit","orderBy","DeleteQuery","UpsertQuery","insert","update","InsertQuery","UpdateQuery","InsertBody","UpdateBody","Fields","Values","Default","Select","as","SelectField","Count","Table","Join","boolStatement","Where","GroupBy","OrderBy","order","orders","Limit","Offset","AnyValue","UnknownValue","Field","UnreferencedField","ReferencedField","Bind","Null","Cast","TextValue","Concat","firstString","otherStrings","Lower","Upper","Trim","Replace","replacement","Substring","Right","indent","NumericValue","MathOp","Add","lhs","rhs","Subtract","Multiply","Divide","BitwiseAnd","operand","BitwiseShiftRight","CharacterLength","IndexOf","haystack","needle","StrPos","Year","Month","Day","Hour","Minute","Second","FractionalSeconds","TotalSeconds","duration","Round","Floor","Ceiling","BooleanValue","Boolean","bool","Not","And","firstBool","otherBools","Or","NotExists","Comparison","Equals","comp1","comp2","GreaterThan","GreaterThanOrEqual","LessThan","LessThanOrEqual","NotEquals","Like","Between","comp3","In","vals","NotIn","DateValue","isDate","ToDate","ToTime","Now","JSONValue","AggregateJSON","DurationValue","Duration","omitBy","isNil","pickBy","isBoolean","isNumber","omit","FieldNotEquals","FieldEquals","conditions","inStatement","inVals","or","secondBool","and","Contains","StartsWith","EndsWith","disableMemoisationHack","comparisons","fractionalSecondsFormat","Totalseconds","websqlBasicDateFormat","websqlDateFormats","Fractionalseconds","basicDateFormat","part","dateFormats","NestedIndent","nestedIndent","fieldOrderings","sets","alias","nestedindent","DataType","typeName","comparators","op","ExtractNumericDatePart","bools","comparator","negative","toLocaleString","minimumFractionDigits","SBVRTypes","TypeUtils","equality","to","nativeFactTypeTemplates","is equal to","equals","is greater than","is greater than or equal to","is less than","is less than or equal to","integer","processedValue","typeFunc","odata","originalValue","Color","complexType","has","Red Component","Green Component","Blue Component","Alpha Component","g","component","componentValue","ConceptType","Date Time","File","isBuffer","Hashed","bcrypt","promisifyAll","genSaltAsync","salt","hashAsync","asCallback","compare","compareAsync","Interval","Serial","Short Text","Length","Time","toLocaleTimeString","Types","AddCustomAttribute","AddBuiltInVocab","EOL","EOLSpaces","eol","IdentifierKey","identifierKey","varNumber","ruleVars","toSBVREOL","toEOL","AddIdentifier","_AddIdentifier","InformalIdentifier","factTypeSoFar","noAutoComplete","FindIdentifier","FindIdentifierNest","identifierSoFar","longestIdentifier","FindVocabulary","bracket","FindVocabularyNest","vocabularySoFar","IdentifierPart","addVerb","FindVerb","verbSoFar","_verbForm","VerbPart","JoiningQuantifier","Quantifier","Keyword","word","noToken","addThat","addThe","DisableCommas","disableCommas","addComma","force","CreateVar","ruleVarsCount","EmbedVar","IsAtomicFormulation","ClosedProjection","TermEntity","thatLF","varLF","parentIdentifier","parentBind","termEntity","VerbContinuation","Modifier","JunctionType","SerialCommaCheck","UpcomingCommaJunction","SimpleJunction","junctioned","cloneDeep","Junction","commaSeparated","upcoming","StartRule","NewRule","mod","StartFactType","NewFactType","StartVocabulary","StartTerm","StartName","NewIdentifier","func","NewAttribute","attrValOrFunc","currentLine","lines","lastLine","AllowedAttrs","termForm","identifierVocab","termVocab","moreValues","AttrGuidanceType","AttrSynonym","StartComment","NewComment","EOLTerminator","Terminator","Line","ClearSuggestions","builtInVocab","builtInVocabInputHead","allowedAttrLists","defaultAllowedAttrLists","_sideEffectingRules","pluralize","BaseSynonym","singularize","IsFactTypeIdentifier","baseIdentifier","IsVerb","IsFactType","removeRegex","getValidFactTypeParts","factTypeParts","followChildrenChain","factTypePartVocabulary","origInputHead","attachedTo","matchForAny","matchForAll","window","InflectionJS","uncountable_words","plural_rules","singular_rules","non_titlecased_words","id_suffix","underbar","space_or_underbar","uppercase","underbar_prefix","apply_rules","skip","fromIndex","compareFunc","_uncountable_words","_plural_rules","_singular_rules","_non_titlecased_words","plural","thisString","singular","camelize","lowFirstLetter","str_path","str_arr","initX","underscore","humanize","capitalize","dasherize","titleize","demodulize","tableize","classify","foreign_key","dropIdUbar","ordinalize","ltd","ld","suf","MigrationError","migrations","checkModelAlreadyExists","setExecutedMigrations","getExecutedMigrations","executedMigrations","pendingMigrations","filterAndSortPendingMigrations","executeMigrations","newlyExecutedMigrations","top","migrationsApi","executed_migrations","put","model_name","toPairs","sortBy","executeMigration","concurrency","migration","customServerCode","BluebirdLRU","ODataParser","collapsePermissionFilters","metadataEndpoints","methodPermissions","nestedCheck","parsePermissions","userModel","_parsePermissions","odataParser","bindsLength","tree","extraBinds","check","stringCallback","checkType","checkTypes","subcheck","flattenDeep","addPermissions","apiKeyMiddleware","checkApiKey","checkPermissions","customApiKeyMiddleware","customAuthorizationMiddleware","getApiKeyPermissions","getPermissions","getUserPermissions","PREPARSE","POSTPARSE","actor","POSTRUN","checkPassword","username","authApi","Auth","actorId","hash","userId","permsFilter","permission","isFinite","$or","user__has__permission","$any","$alias","$expr","uhp","expiry_date","$gt","$now","role__has__permission","rhp","role","user__has__role","uhr","cache","apiKeys","permissionsCache","maxAge","fetchFn","api_key__has__permission","khp","api_key","api_key__has__role","khr","expectedScheme","parts","scheme","header","authorizationMiddleware","_getGuestPermissions","_guestPermissions","_checkPermissions","actionList","actorID","apiKeyActorID","callbackArg","checkObject","permissionCheck","conditionalPermissions","resourcePermission","vocabularyPermission","vocabularyResourcePermission","permissionName","condition","allowed","apiKeyPermissions","apiKeyAllowed","actorIDs","guestAllowed","checkPermissionsMiddleware","action","_addPermissions","permissionType","odataQuery","conditionalPerms","permissionFilters","$filter","$expand","expand","custom","isMetadataEndpoint","OData2AbstractSQL","memoizedOdata2AbstractSQL","notParsingError","odata2AbstractSQL","_memoizedOdata2AbstractSQL","bodyKeys","normalizer","extraBodyVars","sort","setClientModel","ProcessRule","OData","QueryOptions","QueryOption","OperationParam","SortOption","SortProperty","TopOption","SkipOption","InlineCountOption","CountOption","ExpandOption","SelectOption","FilterByOption","expr","FormatOption","RecognisedOption","FilterByExpression","FilterAndExpression","FilterLogicalExpression","FilterSubExpression","FilterAddExpression","FilterModExpression","FilterDivExpression","FilterMulExpression","FilterByValue","GroupedPrecedenceExpression","FilterRecognisedMathOperand","FilterAndOperand","FilterByOperand","FilterNegateExpression","FilterMethodCallExpression","ContainsMethodCall","EndsWithMethodCall","StartsWithMethodCall","LengthMethodCall","IndexOfMethodCall","SubstringMethodCall","ToLowerMethodCall","ToUpperMethodCall","TrimMethodCall","ConcatMethodCall","YearMethodCall","MonthMethodCall","DayMethodCall","HourMethodCall","MinuteMethodCall","SecondMethodCall","FractionalSecondsMethodCall","DateMethodCall","TimeMethodCall","TotalOffsetMinutesMethodCall","NowMethodCall","MaxDateTimeMethodCall","MinDateTimeMethodCall","TotalSecondsMethodCall","RoundMethodCall","FloorMethodCall","CeilingMethodCall","IsOfMethodCall","CastMethodCall","SubstringOfMethodCall","ReplaceMethodCall","MethodCall","arity","LambdaMethodCall","expression","PropertyPathList","PropertyPath","ExpandPropertyPathList","ExpandPropertyPath","optionsObj","ExpandPathOption","LambdaPropertyPath","lambda","Key","PathSegment","link","SubPathSegment","ContentType","ResourceName","decodeURIComponent","Decimal","UnsignedInteger","True","False","timeExists","DurationInteger","DurationNumber","ReservedUriComponent","GenDelim","SubDelim","Sign","Apostrophe","QuotedText","NumberBind","DateBind","BooleanBind","QuotedTextBind","ParseOptionsObject","numberOf","separator","ret","extras","merge","otherQuery","fromResource","compile","queryType","compiled","insertQuery","aliasedField","bindVars","childQuery","linkResource","navigationWhere","propertyResource","referencedField","referencedIdField","resourceMapping","subQuery","valuesIndex","defaultResource","PathKey","qualifiedIDField","SelectFilter","InsertFilter","bindVar","cast","UpdateFilter","orderby","OrderByProperties","ordering","BindVars","compact","ResolveResourceAlias","aliasName","resourceAliases","Resource","parentResource","_name","checkAlias","FieldContainedIn","mappedField","ResourceMapping","AddCountField","AddSelectFields","$select","existingField","AliasSelectField","resourceField","op1","op2","operation","BooleanFunction","NumberFunction","TextFunction","DateFunction","AliasedFunction","odataName","sqlName","Function","Arguments","Operand","Lambda","Properties","ReferencedProperty","prop","Property","propResource","Expands","expandQuery","expandResource","nestedExpandQuery","AddExtraQueryOptions","$orderby","$top","$skip","NavigateResources","resource1","resource2","fkField","AddExtraFroms","searchPoint","extraFroms","extraResource","currentResource","AddNavigation","ExtraFroms","froms","nextProp","nagivationWhere","generateShortAliases","trie","resourceNames","invokeMap","node","$suffix","shortAliases","traverseNodes","lowerCaseResourceName","origResourceName","aliasLength","shortPart","normalizeOpts","resolveLength","plain","async","dispose","refCounter","src","toPosInt","optsLength","fnLength","isAsync","toInteger","abs","callable","extensions","configure","conf","__profiler__","updateEnv","memoized","propertyIsEnumerable","defVal","list","compareFn","customError","defineLength","ee","methods","resolveResolve","resolveNormalize","defineProperties","emit","original","memLength","del","clear","extDel","getListeners","setListeners","deleteListeners","delete","resolvers","oldCache","listener","__memoized__","captureStackTrace","ext","foo","bar","trzy","dest","object","desc","generate","mixin","configurable","writable","enumerable","ignore","getOwnPropertyDescriptor","getOwnPropertyNames","getOwnPropertySymbols","sourceObject","symbol","isCallable","contains","dscr","gs","searchString","descriptor","off","descriptors","base","__ee__","__eeOnceListener__","listeners","candidate","toArray","resolveArgs","arrayLike","iteratorSymbol","isArguments","validValue","mapFn","Constructor","getIterator","Symbol","validTypes","toPrimitive","toStringTag","validateSymbol","objPrototype","NativeSymbol","SymbolPolyfill","HiddenSymbol","globalSymbols","isNativeSafe","generateName","created","postfix","ie11BugWorkaround","description","__description__","__name__","for","keyFor","hasInstance","isConcatSpreadable","search","species","unscopables","valueOf","isSymbol","userNormalizer","lastId","searchElement","argsMap","aFrom","nextTick","tbi","waiting","currentCallback","currentContext","currentArgs","context","origCb","byObserver","Observer","document","createTextNode","observe","characterData","MutationObserver","WebKitMutationObserver","setImmediate","timeout","timeouts","preFetchAge","preFetchTimeouts","preFetch","maxTimeout","toPosInteger","lruQueue","hit","size","oldIndex","nuIndex","deleteRef","getRefCount","extGet","extHas","_get","_has","objectMap","currentQueue","isPromise","mode","isFailed","onSuccess","onFailure","finally","resultArray","getField","tableField","addMapping","idPart","idParts","sqlFieldName","sqlTable","sqlTableName","topLevel","actions","forEachUniqueTable","getResourceName","usedTableNames","associations","complexTypes","ends","resolveDataType","fieldType","referencedResource","results1","loadApplicationConfig","loadJSON","modelFile","authApiTx","users","userID","permissionID","apiRoute","customCode","nodeRequire","is","readFileSync","argv","__dirname","dirname","cwd","readFileAsync","migrationsPath","readdirAsync","filename","filePath","migrationKey","extname","sqlBuffer","sessionAPI","sessionModel","sid","session","session_id","expiry_time","cookie","expires","destroy","$ge","now","sessions","Store","default","isServerOnAir","serverIsOnAir","uiModel","_resolve","isPending","onAir","devApi","setupModels","uiApi","ui","uiApiTx","patch","is_disabled","queries","exported","insQuery","currRow","notFirst","propName","valQuery","transactionModel","endTransaction","transactionID","getFieldsObject","getLockedRow","placeholders","lockID","conditionalResourceID","fieldsObject","fieldValue","modelField","field_name","field_value","resolvedID","conditionalResources","conditionalResource","placeholder","doCleanup","lock","resource_type","conditional_type","lockedRow","resource_id","transactionURI","conditionalResourceURI","conditionalFieldURI","lockURI","transactionLockURI","resourceURI","lockResourceURI","exclusiveLockURI","commitTransactionURI","LocalStrategy","_user","use"],"mappings":"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","file":"out/pine.js","sourcesContent":["(function(e, a) { for(var i in a) e[i] = a[i]; }(exports, /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ((function(modules) {\n\t// Check all modules for deduplicated modules\n\tfor(var i in modules) {\n\t\tif(Object.prototype.hasOwnProperty.call(modules, i)) {\n\t\t\tswitch(typeof modules[i]) {\n\t\t\tcase \"function\": break;\n\t\t\tcase \"object\":\n\t\t\t\t// Module can be created from a template\n\t\t\t\tmodules[i] = (function(_m) {\n\t\t\t\t\tvar args = _m.slice(1), fn = modules[_m[0]];\n\t\t\t\t\treturn function (a,b,c) {\n\t\t\t\t\t\tfn.apply(this, [a,b,c].concat(args));\n\t\t\t\t\t};\n\t\t\t\t}(modules[i]));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t// Module is a copy of another module\n\t\t\t\tmodules[i] = modules[modules[i]];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn modules;\n}([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Pinejs, PinejsSessionStore, Promise, app, bodyParser, compression, cookieParser, express, expressSession, initialised, methodOverride, multer, passport, passportPinejs, path, root, sbvrUtils, serveStatic;\n\t\n\tPinejs = __webpack_require__(1);\n\t\n\tPromise = __webpack_require__(2);\n\t\n\tsbvrUtils = __webpack_require__(24);\n\t\n\tpassportPinejs = __webpack_require__(149);\n\t\n\tPinejsSessionStore = __webpack_require__(144);\n\t\n\texpress = __webpack_require__(150);\n\t\n\tapp = express();\n\t\n\tswitch (app.get('env')) {\n\t  case 'production':\n\t    console.log = function() {};\n\t    break;\n\t  case 'development':\n\t    Promise.longStackTraces();\n\t}\n\t\n\tif (false) {\n\t  passport = require('passport');\n\t  path = require('path');\n\t  compression = require('compression');\n\t  serveStatic = require('serve-static');\n\t  cookieParser = require('cookie-parser');\n\t  bodyParser = require('body-parser');\n\t  multer = require('multer');\n\t  methodOverride = require('method-override');\n\t  expressSession = require('express-session');\n\t  app.use(compression());\n\t  root = process.argv[2] || __dirname;\n\t  app.use('/', serveStatic(path.join(root, 'static')));\n\t  app.use(cookieParser());\n\t  app.use(bodyParser());\n\t  app.use(multer().any());\n\t  app.use(methodOverride());\n\t  app.use(expressSession({\n\t    secret: 'A pink cat jumped over a rainbow',\n\t    store: new PinejsSessionStore()\n\t  }));\n\t  app.use(passport.initialize());\n\t  app.use(passport.session());\n\t  app.use(function(req, res, next) {\n\t    var origin;\n\t    origin = req.get('Origin') || '*';\n\t    res.header('Access-Control-Allow-Origin', origin);\n\t    res.header('Access-Control-Allow-Methods', 'GET, PUT, POST, PATCH, DELETE, OPTIONS, HEAD');\n\t    res.header('Access-Control-Allow-Headers', 'Content-Type, Authorization, Application-Record-Count, MaxDataServiceVersion, X-Requested-With');\n\t    res.header('Access-Control-Allow-Credentials', 'true');\n\t    return next();\n\t  });\n\t  app.use(function(req, res, next) {\n\t    console.log('%s %s', req.method, req.url);\n\t    return next();\n\t  });\n\t}\n\t\n\tinitialised = Pinejs.init(app).then(function(configLoader) {\n\t  return Promise.all([configLoader.loadConfig(passportPinejs.config), configLoader.loadConfig(PinejsSessionStore.config)]);\n\t}).then(function() {\n\t  if (!(typeof process !== \"undefined\" && process !== null ? process.env.DISABLE_DEFAULT_AUTH : void 0)) {\n\t    app.post('/login', passportPinejs.login(function(err, user, req, res, next) {\n\t      if (err) {\n\t        console.error('Error logging in', err, err.stack);\n\t        return res.sendStatus(500);\n\t      } else if (user === false) {\n\t        if (req.xhr === true) {\n\t          return res.sendStatus(401);\n\t        } else {\n\t          return res.redirect('/login.html');\n\t        }\n\t      } else {\n\t        if (req.xhr === true) {\n\t          return res.sendStatus(200);\n\t        } else {\n\t          return res.redirect('/');\n\t        }\n\t      }\n\t    }));\n\t    return app.get('/logout', passportPinejs.logout, function(req, res, next) {\n\t      return res.redirect('/');\n\t    });\n\t  }\n\t}).then(function() {\n\t  return app.listen(process.env.PORT || 1337, function() {\n\t    return console.info('Server started');\n\t  });\n\t})[\"catch\"](function(err) {\n\t  console.error('Error initialising server', err, err.stack);\n\t  return process.exit();\n\t});\n\t\n\tmodule.exports = {\n\t  initialised: initialised,\n\t  app: app,\n\t  sbvrUtils: sbvrUtils\n\t};\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar PinejsSessionStore, Promise, configLoader, databaseOptions, databaseURL, db, dbModule, fs, init, migrator, sbvrUtils;\n\t\n\tif (false) {\n\t  if (typeof nodeRequire === \"undefined\" || nodeRequire === null) {\n\t    global.nodeRequire = require;\n\t  }\n\t  fs = require('fs');\n\t  nodeRequire.extensions['.sbvr'] = function(module, filename) {\n\t    return module.exports = fs.readFileSync(filename, {\n\t      encoding: 'utf8'\n\t    });\n\t  };\n\t  nodeRequire('ometa-js');\n\t}\n\t\n\tPromise = __webpack_require__(2);\n\t\n\tdbModule = __webpack_require__(3);\n\t\n\tsbvrUtils = __webpack_require__(24);\n\t\n\tconfigLoader = __webpack_require__(140);\n\t\n\tmigrator = __webpack_require__(44);\n\t\n\tPinejsSessionStore = __webpack_require__(144);\n\t\n\tif (dbModule.websql != null) {\n\t  databaseOptions = {\n\t    engine: 'websql',\n\t    params: 'rulemotion'\n\t  };\n\t} else {\n\t  databaseURL = (function() {\n\t    if (process.env.DATABASE_URL) {\n\t      return process.env.DATABASE_URL;\n\t    } else if (dbModule.postgres != null) {\n\t      return 'postgres://postgres:.@localhost:5432/postgres';\n\t    } else if (dbModule.mysql != null) {\n\t      return 'mysql://mysql:.@localhost:3306';\n\t    } else {\n\t      throw new Error('No supported database options available');\n\t    }\n\t  })();\n\t  databaseOptions = {\n\t    engine: databaseURL.slice(0, databaseURL.indexOf(':')),\n\t    params: databaseURL\n\t  };\n\t}\n\t\n\tdb = dbModule.connect(databaseOptions);\n\t\n\tinit = function(app, config) {\n\t  return sbvrUtils.setup(app, db).then(function() {\n\t    configLoader = configLoader.setup(app);\n\t    return configLoader.loadConfig(migrator.config)[\"return\"](configLoader);\n\t  }).tap(function(configLoader) {\n\t    var promises, sbvrServer, transactions;\n\t    promises = [];\n\t    if (true) {\n\t      sbvrServer = __webpack_require__(146);\n\t      promises.push(configLoader.loadConfig(sbvrServer.config));\n\t    }\n\t    if (true) {\n\t      transactions = __webpack_require__(147);\n\t      promises.push(configLoader.loadConfig(transactions.config).then(function() {\n\t        return transactions.addModelHooks('data');\n\t      }));\n\t    }\n\t    if (false) {\n\t      promises.push(configLoader.loadApplicationConfig(config));\n\t    }\n\t    return Promise.all(promises);\n\t  })[\"catch\"](function(err) {\n\t    console.error('Error initialising server', err, err.stack);\n\t    return process.exit();\n\t  });\n\t};\n\t\n\tmodule.exports = {\n\t  init: init,\n\t  sbvrUtils: sbvrUtils,\n\t  SessionStore: PinejsSessionStore\n\t};\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = require(\"bluebird\");\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar ConnectionParameters, ConstraintError, DEFAULT_VALUE, DatabaseError, ForeignKeyConstraintError, NotADatabaseError, Promise, Tx, TypedError, UniqueConstraintError, _, alwaysExport, atomicExecuteSql, bindDefaultValues, createTransaction, mysql, pg, sqlBinds,\n\t  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n\t  hasProp = {}.hasOwnProperty,\n\t  slice = [].slice;\n\t\n\t_ = __webpack_require__(4);\n\t\n\tPromise = __webpack_require__(2);\n\t\n\tsqlBinds = __webpack_require__(5);\n\t\n\tTypedError = __webpack_require__(6);\n\t\n\tDatabaseError = (function(superClass) {\n\t  extend(DatabaseError, superClass);\n\t\n\t  function DatabaseError(message) {\n\t    if ((message != null ? message.code : void 0) != null) {\n\t      this.code = message.code;\n\t    }\n\t    if ((message != null ? message.constructor.name : void 0) === 'SQLError') {\n\t      message = message.message;\n\t    }\n\t    DatabaseError.__super__.constructor.call(this, message);\n\t  }\n\t\n\t  return DatabaseError;\n\t\n\t})(TypedError);\n\t\n\tConstraintError = (function(superClass) {\n\t  extend(ConstraintError, superClass);\n\t\n\t  function ConstraintError() {\n\t    return ConstraintError.__super__.constructor.apply(this, arguments);\n\t  }\n\t\n\t  return ConstraintError;\n\t\n\t})(DatabaseError);\n\t\n\tUniqueConstraintError = (function(superClass) {\n\t  extend(UniqueConstraintError, superClass);\n\t\n\t  function UniqueConstraintError() {\n\t    return UniqueConstraintError.__super__.constructor.apply(this, arguments);\n\t  }\n\t\n\t  return UniqueConstraintError;\n\t\n\t})(ConstraintError);\n\t\n\tForeignKeyConstraintError = (function(superClass) {\n\t  extend(ForeignKeyConstraintError, superClass);\n\t\n\t  function ForeignKeyConstraintError() {\n\t    return ForeignKeyConstraintError.__super__.constructor.apply(this, arguments);\n\t  }\n\t\n\t  return ForeignKeyConstraintError;\n\t\n\t})(ConstraintError);\n\t\n\tNotADatabaseError = function(err) {\n\t  return !(err instanceof DatabaseError);\n\t};\n\t\n\tDEFAULT_VALUE = {};\n\t\n\tbindDefaultValues = function(sql, bindings) {\n\t  var bindNo;\n\t  if (!_.some(bindings, function(binding) {\n\t    return binding === DEFAULT_VALUE;\n\t  })) {\n\t    return sql;\n\t  }\n\t  bindNo = 0;\n\t  return sqlBinds(sql, function() {\n\t    if (bindings[bindNo] === DEFAULT_VALUE) {\n\t      bindings.splice(bindNo, 1);\n\t      return 'DEFAULT';\n\t    } else {\n\t      bindNo++;\n\t      return '?';\n\t    }\n\t  });\n\t};\n\t\n\talwaysExport = {\n\t  DEFAULT_VALUE: DEFAULT_VALUE,\n\t  DatabaseError: DatabaseError,\n\t  ConstraintError: ConstraintError,\n\t  UniqueConstraintError: UniqueConstraintError,\n\t  ForeignKeyConstraintError: ForeignKeyConstraintError\n\t};\n\t\n\tatomicExecuteSql = function(sql, bindings, callback) {\n\t  return this.transaction().then(function(tx) {\n\t    var result;\n\t    result = tx.executeSql(sql, bindings);\n\t    return result[\"finally\"](function() {\n\t      if (result.isRejected()) {\n\t        return tx.rollback();\n\t      } else {\n\t        return tx.end();\n\t      }\n\t    });\n\t  }).nodeify(callback);\n\t};\n\t\n\tTx = (function() {\n\t  var timeoutMS;\n\t\n\t  if (process.env.TRANSACTION_TIMEOUT_MS) {\n\t    timeoutMS = parseInt(process.env.TRANSACTION_TIMEOUT_MS);\n\t    if (_.isNaN(timeoutMS) || timeoutMS <= 0) {\n\t      throw new Error(\"Invalid valid for TRANSACTION_TIMEOUT_MS: \" + process.env.TRANSACTION_TIMEOUT_MS);\n\t    }\n\t  } else {\n\t    timeoutMS = 10000;\n\t  }\n\t\n\t  function Tx(stackTraceErr, executeSql, rollback, end) {\n\t    var automaticClose, closeTransaction, pendingExecutes;\n\t    automaticClose = (function(_this) {\n\t      return function() {\n\t        console.error('Transaction still open after ' + timeoutMS + 'ms without an execute call.', stackTraceErr.stack);\n\t        return _this.rollback();\n\t      };\n\t    })(this);\n\t    pendingExecutes = (function() {\n\t      var automaticCloseTimeout, pending;\n\t      automaticCloseTimeout = setTimeout(automaticClose, timeoutMS);\n\t      pending = 0;\n\t      return {\n\t        increment: function() {\n\t          if (pending === false) {\n\t            return;\n\t          }\n\t          pending++;\n\t          return clearTimeout(automaticCloseTimeout);\n\t        },\n\t        decrement: function() {\n\t          if (pending === false) {\n\t            return;\n\t          }\n\t          pending--;\n\t          if (pending === 0) {\n\t            return automaticCloseTimeout = setTimeout(automaticClose, timeoutMS);\n\t          } else if (pending < 0) {\n\t            console.error('Pending transactions is less than 0, wtf?');\n\t            return pending = 0;\n\t          }\n\t        },\n\t        cancel: function() {\n\t          pending = false;\n\t          return clearTimeout(automaticCloseTimeout);\n\t        }\n\t      };\n\t    })();\n\t    this.executeSql = function() {\n\t      var args, bindings, callback, sql;\n\t      sql = arguments[0], bindings = arguments[1], callback = arguments[2], args = 4 <= arguments.length ? slice.call(arguments, 3) : [];\n\t      if (bindings == null) {\n\t        bindings = [];\n\t      }\n\t      pendingExecutes.increment();\n\t      sql = bindDefaultValues(sql, bindings);\n\t      return executeSql.apply(null, [sql, bindings].concat(slice.call(args)))[\"finally\"](pendingExecutes.decrement)[\"catch\"](NotADatabaseError, function(err) {\n\t        throw new DatabaseError(err);\n\t      }).nodeify(callback);\n\t    };\n\t    this.rollback = function(callback) {\n\t      var promise;\n\t      promise = rollback();\n\t      closeTransaction('Transaction has been rolled back.');\n\t      return promise.nodeify(callback);\n\t    };\n\t    this.end = function(callback) {\n\t      var promise;\n\t      promise = end();\n\t      closeTransaction('Transaction has been ended.');\n\t      return promise.nodeify(callback);\n\t    };\n\t    closeTransaction = (function(_this) {\n\t      return function(message) {\n\t        var rejectionValue;\n\t        pendingExecutes.cancel();\n\t        rejectionValue = new Error(message);\n\t        _this.executeSql = function(sql, bindings, callback) {\n\t          return Promise.rejected(rejectionValue).nodeify(callback);\n\t        };\n\t        return _this.rollback = _this.end = function(callback) {\n\t          return Promise.rejected(rejectionValue).nodeify(callback);\n\t        };\n\t      };\n\t    })(this);\n\t  }\n\t\n\t  return Tx;\n\t\n\t})();\n\t\n\tcreateTransaction = function(createFunc) {\n\t  return function(callback) {\n\t    var promise, stackTraceErr;\n\t    stackTraceErr = new Error();\n\t    promise = new Promise(function(resolve, reject) {\n\t      return createFunc(resolve, reject, stackTraceErr);\n\t    });\n\t    if (callback != null) {\n\t      promise.tap(callback)[\"catch\"](function(err) {\n\t        return console.error(err, callback);\n\t      });\n\t    }\n\t    return promise;\n\t  };\n\t};\n\t\n\ttry {\n\t  pg = __webpack_require__(7);\n\t  ConnectionParameters = __webpack_require__(8);\n\t} catch (error) {}\n\t\n\tif (pg != null) {\n\t  exports.postgres = function(connectString) {\n\t    var PG_FOREIGN_KEY_VIOLATION, PG_UNIQUE_VIOLATION, PostgresTx, config, createResult, pool;\n\t    PG_UNIQUE_VIOLATION = '23505';\n\t    PG_FOREIGN_KEY_VIOLATION = '23503';\n\t    config = new ConnectionParameters(connectString);\n\t    config.Promise = Promise;\n\t    config.max = pg.defaults.poolSize;\n\t    config.idleTimeoutMillis = pg.defaults.poolIdleTimeout;\n\t    config.log = pg.defaults.poolLog;\n\t    pool = new pg.Pool(config);\n\t    createResult = function(arg) {\n\t      var ref, rowCount, rows;\n\t      rowCount = arg.rowCount, rows = arg.rows;\n\t      return {\n\t        rows: {\n\t          length: (rows != null ? rows.length : void 0) || 0,\n\t          item: function(i) {\n\t            return rows[i];\n\t          },\n\t          forEach: function(iterator, thisArg) {\n\t            return rows.forEach(iterator, thisArg);\n\t          },\n\t          map: function(iterator, thisArg) {\n\t            return rows.map(iterator, thisArg);\n\t          }\n\t        },\n\t        rowsAffected: rowCount,\n\t        insertId: ((ref = rows[0]) != null ? ref.id : void 0) || null\n\t      };\n\t    };\n\t    PostgresTx = (function(superClass) {\n\t      extend(PostgresTx, superClass);\n\t\n\t      function PostgresTx(_db, _close, _stackTraceErr) {\n\t        var end, executeSql, rollback;\n\t        executeSql = function(sql, bindings, addReturning) {\n\t          var bindNo;\n\t          if (addReturning == null) {\n\t            addReturning = false;\n\t          }\n\t          bindings = bindings.slice(0);\n\t          if (addReturning && /^\\s*INSERT\\s+INTO/i.test(sql)) {\n\t            sql = sql.replace(/;?$/, ' RETURNING \"' + addReturning + '\";');\n\t          }\n\t          if (_.includes(sql, '?')) {\n\t            bindNo = 0;\n\t            sql = sqlBinds(sql, function() {\n\t              var bindString, binding, initialBindNo;\n\t              if (Array.isArray(bindings[bindNo])) {\n\t                initialBindNo = bindNo;\n\t                bindString = ((function() {\n\t                  var j, len, ref, results;\n\t                  ref = bindings[initialBindNo];\n\t                  results = [];\n\t                  for (j = 0, len = ref.length; j < len; j++) {\n\t                    binding = ref[j];\n\t                    results.push('$' + ++bindNo);\n\t                  }\n\t                  return results;\n\t                })()).join(',');\n\t                Array.prototype.splice.apply(bindings, [initialBindNo, 1].concat(bindings[initialBindNo]));\n\t                return bindString;\n\t              } else if (bindings[bindNo] === DEFAULT_VALUE) {\n\t                bindings.splice(bindNo, 1);\n\t                return 'DEFAULT';\n\t              } else {\n\t                return '$' + ++bindNo;\n\t              }\n\t            });\n\t          }\n\t          return Promise.fromCallback(function(callback) {\n\t            return _db.query({\n\t              text: sql,\n\t              values: bindings\n\t            }, callback);\n\t          })[\"catch\"]({\n\t            code: PG_UNIQUE_VIOLATION\n\t          }, function(err) {\n\t            throw new UniqueConstraintError(err);\n\t          })[\"catch\"]({\n\t            code: PG_FOREIGN_KEY_VIOLATION\n\t          }, function(err) {\n\t            throw new ForeignKeyConstraintError(err);\n\t          }).then(createResult);\n\t        };\n\t        rollback = (function(_this) {\n\t          return function() {\n\t            var promise;\n\t            promise = _this.executeSql('ROLLBACK;');\n\t            _close();\n\t            return promise;\n\t          };\n\t        })(this);\n\t        end = (function(_this) {\n\t          return function() {\n\t            var promise;\n\t            promise = _this.executeSql('COMMIT;');\n\t            _close();\n\t            return promise;\n\t          };\n\t        })(this);\n\t        PostgresTx.__super__.constructor.call(this, _stackTraceErr, executeSql, rollback, end);\n\t      }\n\t\n\t      PostgresTx.prototype.tableList = function(extraWhereClause, callback) {\n\t        if (extraWhereClause == null) {\n\t          extraWhereClause = '';\n\t        }\n\t        if ((callback == null) && _.isFunction(extraWhereClause)) {\n\t          callback = extraWhereClause;\n\t          extraWhereClause = '';\n\t        }\n\t        if (extraWhereClause !== '') {\n\t          extraWhereClause = 'WHERE ' + extraWhereClause;\n\t        }\n\t        return this.executeSql(\"SELECT * FROM (SELECT tablename as name FROM pg_tables WHERE schemaname = 'public') t \" + extraWhereClause + \";\", [], callback);\n\t      };\n\t\n\t      PostgresTx.prototype.dropTable = function(tableName, ifExists, callback) {\n\t        if (ifExists == null) {\n\t          ifExists = true;\n\t        }\n\t        return this.executeSql('DROP TABLE ' + (ifExists === true ? 'IF EXISTS ' : '') + '\"' + tableName + '\" CASCADE;', [], callback);\n\t      };\n\t\n\t      return PostgresTx;\n\t\n\t    })(Tx);\n\t    return _.extend({\n\t      engine: 'postgres',\n\t      executeSql: atomicExecuteSql,\n\t      transaction: createTransaction(function(resolve, reject, stackTraceErr) {\n\t        return pool.connect(function(err, client, done) {\n\t          var tx;\n\t          if (err) {\n\t            console.error('Error connecting', err, err.stack);\n\t            process.exit();\n\t          }\n\t          tx = new PostgresTx(client, done, stackTraceErr);\n\t          if (process.env.PG_SCHEMA != null) {\n\t            tx.executeSql('SET search_path TO \"' + process.env.PG_SCHEMA + '\"');\n\t          }\n\t          tx.executeSql('START TRANSACTION;');\n\t          return resolve(tx);\n\t        });\n\t      })\n\t    }, alwaysExport);\n\t  };\n\t}\n\t\n\ttry {\n\t  mysql = __webpack_require__(23);\n\t} catch (error) {}\n\t\n\tif (mysql != null) {\n\t  exports.mysql = function(options) {\n\t    var MYSQL_FOREIGN_KEY_VIOLATION, MYSQL_UNIQUE_VIOLATION, MySqlTx, _pool, createResult;\n\t    MYSQL_UNIQUE_VIOLATION = 'ER_DUP_ENTRY';\n\t    MYSQL_FOREIGN_KEY_VIOLATION = 'ER_ROW_IS_REFERENCED';\n\t    _pool = mysql.createPool(options);\n\t    _pool.on('connection', function(_db) {\n\t      return _db.query(\"SET sql_mode='ANSI_QUOTES';\");\n\t    });\n\t    createResult = function(rows) {\n\t      return {\n\t        rows: {\n\t          length: (rows != null ? rows.length : void 0) || 0,\n\t          item: function(i) {\n\t            return rows[i];\n\t          },\n\t          forEach: function(iterator, thisArg) {\n\t            return rows.forEach(iterator, thisArg);\n\t          },\n\t          map: function(iterator, thisArg) {\n\t            return rows.map(iterator, thisArg);\n\t          }\n\t        },\n\t        rowsAffected: rows.affectedRows,\n\t        insertId: rows.insertId || null\n\t      };\n\t    };\n\t    MySqlTx = (function(superClass) {\n\t      extend(MySqlTx, superClass);\n\t\n\t      function MySqlTx(_db, _close, _stackTraceErr) {\n\t        var end, executeSql, rollback;\n\t        executeSql = function(sql, bindings) {\n\t          return Promise.fromCallback(function(callback) {\n\t            return _db.query(sql, bindings, callback);\n\t          })[\"catch\"]({\n\t            code: MYSQL_UNIQUE_VIOLATION\n\t          }, function(err) {\n\t            throw new UniqueConstraintError(err);\n\t          })[\"catch\"]({\n\t            code: MYSQL_FOREIGN_KEY_VIOLATION\n\t          }, function(err) {\n\t            throw new ForeignKeyConstraintError(err);\n\t          }).then(createResult);\n\t        };\n\t        rollback = (function(_this) {\n\t          return function() {\n\t            var promise;\n\t            promise = _this.executeSql('ROLLBACK;');\n\t            _close();\n\t            return promise;\n\t          };\n\t        })(this);\n\t        end = (function(_this) {\n\t          return function() {\n\t            var promise;\n\t            promise = _this.executeSql('COMMIT;');\n\t            _close();\n\t            return promise;\n\t          };\n\t        })(this);\n\t        MySqlTx.__super__.constructor.call(this, _stackTraceErr, executeSql, rollback, end);\n\t      }\n\t\n\t      MySqlTx.prototype.tableList = function(extraWhereClause, callback) {\n\t        if (extraWhereClause == null) {\n\t          extraWhereClause = '';\n\t        }\n\t        if ((callback == null) && _.isFunction(extraWhereClause)) {\n\t          callback = extraWhereClause;\n\t          extraWhereClause = '';\n\t        }\n\t        if (extraWhereClause !== '') {\n\t          extraWhereClause = ' WHERE ' + extraWhereClause;\n\t        }\n\t        return this.executeSql('SELECT name FROM (SELECT table_name as name FROM information_schema.tables WHERE table_schema = ?) t' + extraWhereClause + ';', [options.database], callback);\n\t      };\n\t\n\t      MySqlTx.prototype.dropTable = function(tableName, ifExists, callback) {\n\t        if (ifExists == null) {\n\t          ifExists = true;\n\t        }\n\t        return this.executeSql('DROP TABLE ' + (ifExists === true ? 'IF EXISTS ' : '') + '\"' + tableName + '\";', [], callback);\n\t      };\n\t\n\t      return MySqlTx;\n\t\n\t    })(Tx);\n\t    return _.extend({\n\t      engine: 'mysql',\n\t      executeSql: atomicExecuteSql,\n\t      transaction: createTransaction(function(resolve, reject, stackTraceErr) {\n\t        return _pool.getConnection(function(err, _db) {\n\t          var _close, tx;\n\t          if (err) {\n\t            console.error('Error connecting', err, err.stack);\n\t            process.exit();\n\t          }\n\t          _close = function() {\n\t            return _db.release();\n\t          };\n\t          tx = new MySqlTx(_db, _close, stackTraceErr);\n\t          tx.executeSql('START TRANSACTION;');\n\t          return resolve(tx);\n\t        });\n\t      })\n\t    }, alwaysExport);\n\t  };\n\t}\n\t\n\tif (typeof openDatabase !== \"undefined\" && openDatabase !== null) {\n\t  exports.websql = function(databaseName) {\n\t    var WEBSQL_CONSTRAINT_ERR, WebSqlTx, _db, createResult, getInsertId;\n\t    WEBSQL_CONSTRAINT_ERR = 6;\n\t    _db = openDatabase(databaseName, '1.0', 'rulemotion', 2 * 1024 * 1024);\n\t    getInsertId = function(result) {\n\t      try {\n\t        return result.insertId;\n\t      } catch (error) {}\n\t    };\n\t    createResult = function(result) {\n\t      return {\n\t        rows: {\n\t          length: result.rows.length,\n\t          item: function(i) {\n\t            return _.clone(result.rows.item(i));\n\t          },\n\t          forEach: function() {\n\t            var args;\n\t            args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n\t            this.map.apply(this, args);\n\t          },\n\t          map: function(iterator, thisArg) {\n\t            var i, j, ref, results;\n\t            results = [];\n\t            for (i = j = 0, ref = result.rows.length; j < ref; i = j += 1) {\n\t              results.push(iterator.call(thisArg, this.item(i), i, result.rows));\n\t            }\n\t            return results;\n\t          }\n\t        },\n\t        rowsAffected: result.rowsAffected,\n\t        insertId: getInsertId(result)\n\t      };\n\t    };\n\t    WebSqlTx = (function(superClass) {\n\t      extend(WebSqlTx, superClass);\n\t\n\t      function WebSqlTx(_tx, _stackTraceErr) {\n\t        var asyncRecurse, end, executeSql, queue, rollback, running;\n\t        running = true;\n\t        queue = [];\n\t        asyncRecurse = function() {\n\t          var args;\n\t          while (args = queue.pop()) {\n\t            console.debug('Running', args[0]);\n\t            _tx.executeSql.apply(_tx, args);\n\t          }\n\t          if (running === true) {\n\t            console.debug('Looping');\n\t            return _tx.executeSql('SELECT 0', [], asyncRecurse);\n\t          }\n\t        };\n\t        asyncRecurse();\n\t        executeSql = function(sql, bindings) {\n\t          return new Promise(function(resolve, reject) {\n\t            var errorCallback, successCallback;\n\t            sql = bindDefaultValues(sql, bindings);\n\t            successCallback = function(_tx, _results) {\n\t              return resolve(_results);\n\t            };\n\t            errorCallback = function(_tx, err) {\n\t              return reject(err);\n\t            };\n\t            return queue.push([sql, bindings, successCallback, errorCallback]);\n\t          })[\"catch\"]({\n\t            code: WEBSQL_CONSTRAINT_ERR\n\t          }, function() {\n\t            throw new ConstraintError('Constraint failed.');\n\t          }).then(createResult);\n\t        };\n\t        rollback = function() {\n\t          return new Promise(function(resolve) {\n\t            var errorCallback, successCallback;\n\t            successCallback = function() {\n\t              resolve();\n\t              throw new Error('Rollback');\n\t            };\n\t            errorCallback = function() {\n\t              resolve();\n\t              return true;\n\t            };\n\t            queue = [['RUN A FAILING STATEMENT TO ROLLBACK', [], successCallback, errorCallback]];\n\t            return running = false;\n\t          });\n\t        };\n\t        end = function() {\n\t          running = false;\n\t          return Promise.fulfilled();\n\t        };\n\t        WebSqlTx.__super__.constructor.call(this, _stackTraceErr, executeSql, rollback, end);\n\t      }\n\t\n\t      WebSqlTx.prototype.tableList = function(extraWhereClause, callback) {\n\t        if (extraWhereClause == null) {\n\t          extraWhereClause = '';\n\t        }\n\t        if ((callback == null) && _.isFunction(extraWhereClause)) {\n\t          callback = extraWhereClause;\n\t          extraWhereClause = '';\n\t        }\n\t        if (extraWhereClause !== '') {\n\t          extraWhereClause = ' AND ' + extraWhereClause;\n\t        }\n\t        return this.executeSql(\"SELECT name, sql FROM sqlite_master WHERE type='table' AND name NOT IN ('__WebKitDatabaseInfoTable__', 'sqlite_sequence')\" + extraWhereClause + ';', [], callback);\n\t      };\n\t\n\t      WebSqlTx.prototype.dropTable = function(tableName, ifExists, callback) {\n\t        if (ifExists == null) {\n\t          ifExists = true;\n\t        }\n\t        return this.executeSql('DROP TABLE ' + (ifExists === true ? 'IF EXISTS ' : '') + '\"' + tableName + '\";', [], callback);\n\t      };\n\t\n\t      return WebSqlTx;\n\t\n\t    })(Tx);\n\t    return _.extend({\n\t      engine: 'websql',\n\t      executeSql: atomicExecuteSql,\n\t      transaction: createTransaction(function(resolve, reject, stackTraceErr) {\n\t        return _db.transaction(function(_tx) {\n\t          return resolve(new WebSqlTx(_tx, stackTraceErr));\n\t        });\n\t      })\n\t    }, alwaysExport);\n\t  };\n\t}\n\t\n\texports.connect = function(databaseOptions) {\n\t  if ((exports[databaseOptions.engine] == null) || databaseOptions.engine === 'connect') {\n\t    throw new Error('Unsupported database engine: ' + databaseOptions.engine);\n\t  }\n\t  return exports[databaseOptions.engine](databaseOptions.params);\n\t};\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = require(\"lodash\");\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function(sql, nextBindFn) {\n\t  var c, i, length, newSql, ref, startQuote;\n\t  newSql = '';\n\t  startQuote = false;\n\t  i = 0;\n\t  length = sql.length;\n\t  while (i < length) {\n\t    c = sql[i];\n\t    i++;\n\t    if (startQuote !== false) {\n\t      if (c === '\\\\' || (c === startQuote && sql[i] === startQuote)) {\n\t        newSql += c;\n\t        c = (ref = sql[i]) != null ? ref : '';\n\t        i++;\n\t      } else if (c === startQuote) {\n\t        startQuote = false;\n\t      }\n\t      newSql += c;\n\t    } else if (c === \"'\" || c === '\"') {\n\t      startQuote = c;\n\t      newSql += c;\n\t    } else if (c === '?') {\n\t      newSql += nextBindFn();\n\t    } else {\n\t      newSql += c;\n\t    }\n\t  }\n\t  return newSql;\n\t};\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = require(\"typed-error\");\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = require(\"pg\");\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2010-2016 Brian Carlson (brian.m.carlson@gmail.com)\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * README.md file in the root directory of this source tree.\n\t */\n\t\n\tvar url = __webpack_require__(9);\n\tvar dns = __webpack_require__(10);\n\t\n\tvar defaults = __webpack_require__(11);\n\t\n\tvar val = function(key, config, envVar) {\n\t  if (envVar === undefined) {\n\t    envVar = process.env[ 'PG' + key.toUpperCase() ];\n\t  } else if (envVar === false) {\n\t    // do nothing ... use false\n\t  } else {\n\t    envVar = process.env[ envVar ];\n\t  }\n\t\n\t  return config[key] ||\n\t    envVar ||\n\t    defaults[key];\n\t};\n\t\n\t//parses a connection string\n\tvar parse = __webpack_require__(22).parse;\n\t\n\tvar useSsl = function() {\n\t  switch(process.env.PGSSLMODE) {\n\t  case \"disable\":\n\t    return false;\n\t  case \"prefer\":\n\t  case \"require\":\n\t  case \"verify-ca\":\n\t  case \"verify-full\":\n\t    return true;\n\t  }\n\t  return defaults.ssl;\n\t};\n\t\n\tvar ConnectionParameters = function(config) {\n\t  //if a string is passed, it is a raw connection string so we parse it into a config\n\t  config = typeof config == 'string' ? parse(config) : (config || {});\n\t  //if the config has a connectionString defined, parse IT into the config we use\n\t  //this will override other default values with what is stored in connectionString\n\t  if(config.connectionString) {\n\t    config = parse(config.connectionString);\n\t  }\n\t  this.user = val('user', config);\n\t  this.database = val('database', config);\n\t  this.port = parseInt(val('port', config), 10);\n\t  this.host = val('host', config);\n\t  this.password = val('password', config);\n\t  this.binary = val('binary', config);\n\t  this.ssl = typeof config.ssl === 'undefined' ? useSsl() : config.ssl;\n\t  this.client_encoding = val(\"client_encoding\", config);\n\t  //a domain socket begins with '/'\n\t  this.isDomainSocket = (!(this.host||'').indexOf('/'));\n\t\n\t  this.application_name = val('application_name', config, 'PGAPPNAME');\n\t  this.fallback_application_name = val('fallback_application_name', config, false);\n\t};\n\t\n\tvar add = function(params, config, paramName) {\n\t  var value = config[paramName];\n\t  if(value) {\n\t    params.push(paramName+\"='\"+value+\"'\");\n\t  }\n\t};\n\t\n\tConnectionParameters.prototype.getLibpqConnectionString = function(cb) {\n\t  var params = [];\n\t  add(params, this, 'user');\n\t  add(params, this, 'password');\n\t  add(params, this, 'port');\n\t  add(params, this, 'application_name');\n\t  add(params, this, 'fallback_application_name');\n\t\n\t  if(this.database) {\n\t    params.push(\"dbname='\" + this.database + \"'\");\n\t  }\n\t  if(this.host) {\n\t    params.push(\"host=\" + this.host);\n\t  }\n\t  if(this.isDomainSocket) {\n\t    return cb(null, params.join(' '));\n\t  }\n\t  if(this.client_encoding) {\n\t    params.push(\"client_encoding='\" + this.client_encoding + \"'\");\n\t  }\n\t  dns.lookup(this.host, function(err, address) {\n\t    if(err) return cb(err, null);\n\t    params.push(\"hostaddr=\" + address);\n\t    return cb(null, params.join(' '));\n\t  });\n\t};\n\t\n\tmodule.exports = ConnectionParameters;\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = require(\"url\");\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = require(\"dns\");\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2010-2016 Brian Carlson (brian.m.carlson@gmail.com)\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * README.md file in the root directory of this source tree.\n\t */\n\t\n\tvar defaults = module.exports = {\n\t  // database host. defaults to localhost\n\t  host: 'localhost',\n\t\n\t  //database user's name\n\t  user: process.platform === 'win32' ? process.env.USERNAME : process.env.USER,\n\t\n\t  //name of database to connect\n\t  database: process.platform === 'win32' ? process.env.USERNAME : process.env.USER,\n\t\n\t  //database user's password\n\t  password: null,\n\t\n\t  // a Postgres connection string to be used instead of setting individual connection items\n\t  // NOTE:  Setting this value will cause it to override any other value (such as database or user) defined\n\t  // in the defaults object.\n\t  connectionString : undefined,\n\t\n\t  //database port\n\t  port: 5432,\n\t\n\t  //number of rows to return at a time from a prepared statement's\n\t  //portal. 0 will return all rows at once\n\t  rows: 0,\n\t\n\t  // binary result mode\n\t  binary: false,\n\t\n\t  //Connection pool options - see https://github.com/coopernurse/node-pool\n\t  //number of connections to use in connection pool\n\t  //0 will disable connection pooling\n\t  poolSize: 10,\n\t\n\t  //max milliseconds a client can go unused before it is removed\n\t  //from the pool and destroyed\n\t  poolIdleTimeout: 30000,\n\t\n\t  //frequency to check for idle clients within the client pool\n\t  reapIntervalMillis: 1000,\n\t\n\t  //if true the most recently released resources will be the first to be allocated\n\t  returnToHead: false,\n\t\n\t  //pool log function / boolean\n\t  poolLog: false,\n\t\n\t  client_encoding: \"\",\n\t\n\t  ssl: false,\n\t\n\t  application_name: undefined,\n\t  fallback_application_name: undefined,\n\t\n\t  parseInputDatesAsUTC: false\n\t};\n\t\n\tvar pgTypes = __webpack_require__(12);\n\t// save default parsers\n\tvar parseBigInteger = pgTypes.getTypeParser(20, 'text');\n\tvar parseBigIntegerArray = pgTypes.getTypeParser(1016, 'text');\n\t\n\t//parse int8 so you can get your count values as actual numbers\n\tmodule.exports.__defineSetter__(\"parseInt8\", function(val) {\n\t  pgTypes.setTypeParser(20, 'text', val ? pgTypes.getTypeParser(23, 'text') : parseBigInteger);\n\t  pgTypes.setTypeParser(1016, 'text', val ? pgTypes.getTypeParser(1007, 'text') : parseBigIntegerArray);\n\t});\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar textParsers = __webpack_require__(13);\n\tvar binaryParsers = __webpack_require__(21);\n\tvar arrayParser = __webpack_require__(16);\n\t\n\texports.getTypeParser = getTypeParser;\n\texports.setTypeParser = setTypeParser;\n\texports.arrayParser = arrayParser;\n\t\n\tvar typeParsers = {\n\t  text: {},\n\t  binary: {}\n\t};\n\t\n\t//the empty parse function\n\tfunction noParse (val) {\n\t  return String(val);\n\t};\n\t\n\t//returns a function used to convert a specific type (specified by\n\t//oid) into a result javascript type\n\t//note: the oid can be obtained via the following sql query:\n\t//SELECT oid FROM pg_type WHERE typname = 'TYPE_NAME_HERE';\n\tfunction getTypeParser (oid, format) {\n\t  format = format || 'text';\n\t  if (!typeParsers[format]) {\n\t    return noParse;\n\t  }\n\t  return typeParsers[format][oid] || noParse;\n\t};\n\t\n\tfunction setTypeParser (oid, format, parseFn) {\n\t  if(typeof format == 'function') {\n\t    parseFn = format;\n\t    format = 'text';\n\t  }\n\t  typeParsers[format][oid] = parseFn;\n\t};\n\t\n\ttextParsers.init(function(oid, converter) {\n\t  typeParsers.text[oid] = converter;\n\t});\n\t\n\tbinaryParsers.init(function(oid, converter) {\n\t  typeParsers.binary[oid] = converter;\n\t});\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar array = __webpack_require__(14)\n\tvar ap = __webpack_require__(15)\n\tvar arrayParser = __webpack_require__(16);\n\tvar parseDate = __webpack_require__(17);\n\tvar parseInterval = __webpack_require__(18);\n\tvar parseByteA = __webpack_require__(20);\n\t\n\tfunction allowNull (fn) {\n\t  return function nullAllowed (value) {\n\t    if (value === null) return value\n\t    return fn(value)\n\t  }\n\t}\n\t\n\tfunction parseBool (value) {\n\t  if (value === null) return value\n\t  return value === 't';\n\t}\n\t\n\tfunction parseBoolArray (value) {\n\t  if (!value) return null\n\t  return array.parse(value, parseBool)\n\t}\n\t\n\tfunction parseIntegerArray (value) {\n\t  if (!value) return null\n\t  return array.parse(value, allowNull(ap.partialRight(parseInt, 10)))\n\t}\n\t\n\tfunction parseBigIntegerArray (value) {\n\t  if (!value) return null\n\t  return array.parse(value, allowNull(function (entry) {\n\t    return parseBigInteger(entry).trim()\n\t  }))\n\t}\n\t\n\tvar parseFloatArray = function(value) {\n\t  if(!value) { return null; }\n\t  var p = arrayParser.create(value, function(entry) {\n\t    if(entry !== null) {\n\t      entry = parseFloat(entry);\n\t    }\n\t    return entry;\n\t  });\n\t\n\t  return p.parse();\n\t};\n\t\n\tvar parseStringArray = function(value) {\n\t  if(!value) { return null; }\n\t\n\t  var p = arrayParser.create(value);\n\t  return p.parse();\n\t};\n\t\n\tvar parseDateArray = function(value) {\n\t  if (!value) { return null; }\n\t\n\t  var p = arrayParser.create(value, function(entry) {\n\t    if (entry !== null) {\n\t      entry = parseDate(entry);\n\t    }\n\t    return entry;\n\t  });\n\t\n\t  return p.parse();\n\t};\n\t\n\tvar parseByteAArray = function(value) {\n\t  var arr = parseStringArray(value);\n\t  if (!arr) return arr;\n\t\n\t  return arr.map(function(element) {\n\t    return parseByteA(element);\n\t  });\n\t};\n\t\n\tvar parseInteger = function(value) {\n\t  return parseInt(value, 10);\n\t};\n\t\n\tvar parseBigInteger = function(value) {\n\t  var valStr = String(value);\n\t  if (/^\\d+$/.test(valStr)) { return valStr; }\n\t  return value;\n\t};\n\t\n\tvar parseJsonArray = function(value) {\n\t  var arr = parseStringArray(value);\n\t\n\t  if (!arr) {\n\t    return arr;\n\t  }\n\t\n\t  return arr.map(function(el) { return JSON.parse(el); });\n\t};\n\t\n\tvar parsePoint = function(value) {\n\t  if (value[0] !== '(') { return null; }\n\t\n\t  value = value.substring( 1, value.length - 1 ).split(',');\n\t\n\t  return {\n\t    x: parseFloat(value[0])\n\t  , y: parseFloat(value[1])\n\t  };\n\t};\n\t\n\tvar parseCircle = function(value) {\n\t  if (value[0] !== '<' && value[1] !== '(') { return null; }\n\t\n\t  var point = '(';\n\t  var radius = '';\n\t  var pointParsed = false;\n\t  for (var i = 2; i < value.length - 1; i++){\n\t    if (!pointParsed) {\n\t      point += value[i];\n\t    }\n\t\n\t    if (value[i] === ')') {\n\t      pointParsed = true;\n\t      continue;\n\t    } else if (!pointParsed) {\n\t      continue;\n\t    }\n\t\n\t    if (value[i] === ','){\n\t      continue;\n\t    }\n\t\n\t    radius += value[i];\n\t  }\n\t  var result = parsePoint(point);\n\t  result.radius = parseFloat(radius);\n\t\n\t  return result;\n\t};\n\t\n\tvar init = function(register) {\n\t  register(20, parseBigInteger); // int8\n\t  register(21, parseInteger); // int2\n\t  register(23, parseInteger); // int4\n\t  register(26, parseInteger); // oid\n\t  register(700, parseFloat); // float4/real\n\t  register(701, parseFloat); // float8/double\n\t  register(16, parseBool);\n\t  register(1082, parseDate); // date\n\t  register(1114, parseDate); // timestamp without timezone\n\t  register(1184, parseDate); // timestamp\n\t  register(600, parsePoint); // point\n\t  register(718, parseCircle); // circle\n\t  register(1000, parseBoolArray);\n\t  register(1001, parseByteAArray);\n\t  register(1005, parseIntegerArray); // _int2\n\t  register(1007, parseIntegerArray); // _int4\n\t  register(1028, parseIntegerArray); // oid[]\n\t  register(1016, parseBigIntegerArray); // _int8\n\t  register(1021, parseFloatArray); // _float4\n\t  register(1022, parseFloatArray); // _float8\n\t  register(1231, parseFloatArray); // _numeric\n\t  register(1014, parseStringArray); //char\n\t  register(1015, parseStringArray); //varchar\n\t  register(1008, parseStringArray);\n\t  register(1009, parseStringArray);\n\t  register(1115, parseDateArray); // timestamp without time zone[]\n\t  register(1182, parseDateArray); // _date\n\t  register(1185, parseDateArray); // timestamp with time zone[]\n\t  register(1186, parseInterval);\n\t  register(17, parseByteA);\n\t  register(114, JSON.parse.bind(JSON)); // json\n\t  register(3802, JSON.parse.bind(JSON)); // jsonb\n\t  register(199, parseJsonArray); // json[]\n\t  register(3807, parseJsonArray); // jsonb[]\n\t  register(2951, parseStringArray); // uuid[]\n\t  register(791, parseStringArray); // money[]\n\t  register(1183, parseStringArray); // time[]\n\t};\n\t\n\tmodule.exports = {\n\t  init: init\n\t};\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\n\t'use strict'\n\t\n\texports.parse = function (source, transform) {\n\t  return new ArrayParser(source, transform).parse()\n\t}\n\t\n\tfunction ArrayParser (source, transform) {\n\t  this.source = source\n\t  this.transform = transform || identity\n\t  this.position = 0\n\t  this.entries = []\n\t  this.recorded = []\n\t  this.dimension = 0\n\t}\n\t\n\tArrayParser.prototype.isEof = function () {\n\t  return this.position >= this.source.length\n\t}\n\t\n\tArrayParser.prototype.nextCharacter = function () {\n\t  var character = this.source[this.position++]\n\t  if (character === '\\\\') {\n\t    return {\n\t      value: this.source[this.position++],\n\t      escaped: true\n\t    }\n\t  }\n\t  return {\n\t    value: character,\n\t    escaped: false\n\t  }\n\t}\n\t\n\tArrayParser.prototype.record = function (character) {\n\t  this.recorded.push(character)\n\t}\n\t\n\tArrayParser.prototype.newEntry = function (includeEmpty) {\n\t  var entry\n\t  if (this.recorded.length > 0 || includeEmpty) {\n\t    entry = this.recorded.join('')\n\t    if (entry === 'NULL' && !includeEmpty) {\n\t      entry = null\n\t    }\n\t    if (entry !== null) entry = this.transform(entry)\n\t    this.entries.push(entry)\n\t    this.recorded = []\n\t  }\n\t}\n\t\n\tArrayParser.prototype.parse = function (nested) {\n\t  var character, parser, quote\n\t  while (!this.isEof()) {\n\t    character = this.nextCharacter()\n\t    if (character.value === '{' && !quote) {\n\t      this.dimension++\n\t      if (this.dimension > 1) {\n\t        parser = new ArrayParser(this.source.substr(this.position - 1), this.transform)\n\t        this.entries.push(parser.parse(true))\n\t        this.position += parser.position - 2\n\t      }\n\t    } else if (character.value === '}' && !quote) {\n\t      this.dimension--\n\t      if (!this.dimension) {\n\t        this.newEntry()\n\t        if (nested) return this.entries\n\t      }\n\t    } else if (character.value === '\"' && !character.escaped) {\n\t      if (quote) this.newEntry(true)\n\t      quote = !quote\n\t    } else if (character.value === ',' && !quote) {\n\t      this.newEntry()\n\t    } else {\n\t      this.record(character.value)\n\t    }\n\t  }\n\t  if (this.dimension !== 0) {\n\t    throw new Error('array dimension not balanced')\n\t  }\n\t  return this.entries\n\t}\n\t\n\tfunction identity (value) {\n\t  return value\n\t}\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\n\texports = module.exports = ap;\n\tfunction ap (args, fn) {\n\t    return function () {\n\t        var rest = [].slice.call(arguments)\n\t            , first = args.slice()\n\t        first.push.apply(first, rest)\n\t        return fn.apply(this, first);\n\t    };\n\t}\n\t\n\texports.pa = pa;\n\tfunction pa (args, fn) {\n\t    return function () {\n\t        var rest = [].slice.call(arguments)\n\t        rest.push.apply(rest, args)\n\t        return fn.apply(this, rest);\n\t    };\n\t}\n\t\n\texports.apa = apa;\n\tfunction apa (left, right, fn) {\n\t    return function () {\n\t        return fn.apply(this,\n\t            left.concat.apply(left, arguments).concat(right)\n\t        );\n\t    };\n\t}\n\t\n\texports.partial = partial;\n\tfunction partial (fn) {\n\t    var args = [].slice.call(arguments, 1);\n\t    return ap(args, fn);\n\t}\n\t\n\texports.partialRight = partialRight;\n\tfunction partialRight (fn) {\n\t    var args = [].slice.call(arguments, 1);\n\t    return pa(args, fn);\n\t}\n\t\n\texports.curry = curry;\n\tfunction curry (fn) {\n\t    return partial(partial, fn);\n\t}\n\t\n\texports.curryRight = function curryRight (fn) {\n\t    return partial(partialRight, fn);\n\t}\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar array = __webpack_require__(14);\n\t\n\tmodule.exports = {\n\t  create: function (source, transform) {\n\t    return {\n\t      parse: function() {\n\t        return array.parse(source, transform);\n\t      }\n\t    };\n\t  }\n\t};\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\n\t'use strict'\n\t\n\tvar DATE_TIME = /(\\d{1,})-(\\d{2})-(\\d{2}) (\\d{2}):(\\d{2}):(\\d{2})(\\.\\d{1,})?/\n\tvar DATE = /^(\\d{1,})-(\\d{2})-(\\d{2})$/\n\tvar TIME_ZONE = /([Z+-])(\\d{2})?:?(\\d{2})?:?(\\d{2})?/\n\tvar BC = /BC$/\n\tvar INFINITY = /^-?infinity$/\n\t\n\tmodule.exports = function parseDate (isoDate) {\n\t  if (INFINITY.test(isoDate)) {\n\t    // Capitalize to Infinity before passing to Number\n\t    return Number(isoDate.replace('i', 'I'))\n\t  }\n\t  var matches = DATE_TIME.exec(isoDate)\n\t\n\t  if (!matches) {\n\t    // Force YYYY-MM-DD dates to be parsed as local time\n\t    return DATE.test(isoDate) ?\n\t      getDate(isoDate) :\n\t      null\n\t  }\n\t\n\t  var isBC = BC.test(isoDate)\n\t  var year = parseInt(matches[1], 10)\n\t  var isFirstCentury = year > 0 && year < 100\n\t  year = (isBC ? '-' : '') + year\n\t\n\t  var month = parseInt(matches[2], 10) - 1\n\t  var day = matches[3]\n\t  var hour = parseInt(matches[4], 10)\n\t  var minute = parseInt(matches[5], 10)\n\t  var second = parseInt(matches[6], 10)\n\t\n\t  var ms = matches[7]\n\t  ms = ms ? 1000 * parseFloat(ms) : 0\n\t\n\t  var date\n\t  var offset = timeZoneOffset(isoDate)\n\t  if (offset != null) {\n\t    var utc = Date.UTC(year, month, day, hour, minute, second, ms)\n\t    date = new Date(utc - offset)\n\t  } else {\n\t    date = new Date(year, month, day, hour, minute, second, ms)\n\t  }\n\t\n\t  if (isFirstCentury) {\n\t    date.setUTCFullYear(year)\n\t  }\n\t\n\t  return date\n\t}\n\t\n\tfunction getDate (isoDate) {\n\t  var matches = DATE.exec(isoDate)\n\t  var year = parseInt(matches[1], 10)\n\t  var month = parseInt(matches[2], 10) - 1\n\t  var day = matches[3]\n\t  // YYYY-MM-DD will be parsed as local time\n\t  var date = new Date(year, month, day)\n\t  date.setFullYear(year)\n\t  return date\n\t}\n\t\n\t// match timezones:\n\t// Z (UTC)\n\t// -05\n\t// +06:30\n\tfunction timeZoneOffset (isoDate) {\n\t  var zone = TIME_ZONE.exec(isoDate.split(' ')[1])\n\t  if (!zone) return\n\t  var type = zone[1]\n\t\n\t  if (type === 'Z') {\n\t    return 0\n\t  }\n\t  var sign = type === '-' ? -1 : 1\n\t  var offset = parseInt(zone[2], 10) * 3600 +\n\t    parseInt(zone[3] || 0, 10) * 60 +\n\t    parseInt(zone[4] || 0, 10)\n\t\n\t  return offset * sign * 1000\n\t}\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict'\n\t\n\tvar extend = __webpack_require__(19)\n\t\n\tmodule.exports = PostgresInterval\n\t\n\tfunction PostgresInterval (raw) {\n\t  if (!(this instanceof PostgresInterval)) {\n\t    return new PostgresInterval(raw)\n\t  }\n\t  extend(this, parse(raw))\n\t}\n\tvar properties = ['seconds', 'minutes', 'hours', 'days', 'months', 'years']\n\tPostgresInterval.prototype.toPostgres = function () {\n\t  var filtered = properties.filter(this.hasOwnProperty, this)\n\t  if (filtered.length === 0) return '0'\n\t  return filtered\n\t    .map(function (property) {\n\t      return this[property] + ' ' + property\n\t    }, this)\n\t    .join(' ')\n\t}\n\t\n\tvar NUMBER = '([+-]?\\\\d+)'\n\tvar YEAR = NUMBER + '\\\\s+years?'\n\tvar MONTH = NUMBER + '\\\\s+mons?'\n\tvar DAY = NUMBER + '\\\\s+days?'\n\tvar TIME = '([+-])?([\\\\d]*):(\\\\d\\\\d):(\\\\d\\\\d):?(\\\\d\\\\d\\\\d)?'\n\tvar INTERVAL = new RegExp([YEAR, MONTH, DAY, TIME].map(function (regexString) {\n\t  return '(' + regexString + ')?'\n\t})\n\t.join('\\\\s*'))\n\t\n\t// Positions of values in regex match\n\tvar positions = {\n\t  years: 2,\n\t  months: 4,\n\t  days: 6,\n\t  hours: 9,\n\t  minutes: 10,\n\t  seconds: 11,\n\t  milliseconds: 12\n\t}\n\t// We can use negative time\n\tvar negatives = ['hours', 'minutes', 'seconds']\n\t\n\tfunction parse (interval) {\n\t  if (!interval) return {}\n\t  var matches = INTERVAL.exec(interval)\n\t  var isNegative = matches[8] === '-'\n\t  return Object.keys(positions)\n\t    .reduce(function (parsed, property) {\n\t      var position = positions[property]\n\t      var value = matches[position]\n\t      // no empty string\n\t      if (!value) return parsed\n\t      value = parseInt(value, 10)\n\t      // no zeros\n\t      if (!value) return parsed\n\t      if (isNegative && ~negatives.indexOf(property)) {\n\t        value *= -1\n\t      }\n\t      parsed[property] = value\n\t      return parsed\n\t    }, {})\n\t}\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = extend\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\n\tfunction extend(target) {\n\t    for (var i = 1; i < arguments.length; i++) {\n\t        var source = arguments[i]\n\t\n\t        for (var key in source) {\n\t            if (hasOwnProperty.call(source, key)) {\n\t                target[key] = source[key]\n\t            }\n\t        }\n\t    }\n\t\n\t    return target\n\t}\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\n\t'use strict'\n\t\n\tmodule.exports = function parseBytea (input) {\n\t  if (/^\\\\x/.test(input)) {\n\t    // new 'hex' style response (pg >9.0)\n\t    return new Buffer(input.substr(2), 'hex')\n\t  }\n\t  var output = ''\n\t  var i = 0\n\t  while (i < input.length) {\n\t    if (input[i] !== '\\\\') {\n\t      output += input[i]\n\t      ++i\n\t    } else {\n\t      if (/[0-7]{3}/.test(input.substr(i + 1, 3))) {\n\t        output += String.fromCharCode(parseInt(input.substr(i + 1, 3), 8))\n\t        i += 4\n\t      } else {\n\t        var backslashes = 1\n\t        while (i + backslashes < input.length && input[i + backslashes] === '\\\\') {\n\t          backslashes++\n\t        }\n\t        for (var k = 0; k < Math.floor(backslashes / 2); ++k) {\n\t          output += '\\\\'\n\t        }\n\t        i += Math.floor(backslashes / 2) * 2\n\t      }\n\t    }\n\t  }\n\t  return new Buffer(output, 'binary')\n\t}\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\n\tvar parseBits = function(data, bits, offset, invert, callback) {\n\t  offset = offset || 0;\n\t  invert = invert || false;\n\t  callback = callback || function(lastValue, newValue, bits) { return (lastValue * Math.pow(2, bits)) + newValue; };\n\t  var offsetBytes = offset >> 3;\n\t\n\t  var inv = function(value) {\n\t    if (invert) {\n\t      return ~value & 0xff;\n\t    }\n\t\n\t    return value;\n\t  };\n\t\n\t  // read first (maybe partial) byte\n\t  var mask = 0xff;\n\t  var firstBits = 8 - (offset % 8);\n\t  if (bits < firstBits) {\n\t    mask = (0xff << (8 - bits)) & 0xff;\n\t    firstBits = bits;\n\t  }\n\t\n\t  if (offset) {\n\t    mask = mask >> (offset % 8);\n\t  }\n\t\n\t  var result = 0;\n\t  if ((offset % 8) + bits >= 8) {\n\t    result = callback(0, inv(data[offsetBytes]) & mask, firstBits);\n\t  }\n\t\n\t  // read bytes\n\t  var bytes = (bits + offset) >> 3;\n\t  for (var i = offsetBytes + 1; i < bytes; i++) {\n\t    result = callback(result, inv(data[i]), 8);\n\t  }\n\t\n\t  // bits to read, that are not a complete byte\n\t  var lastBits = (bits + offset) % 8;\n\t  if (lastBits > 0) {\n\t    result = callback(result, inv(data[bytes]) >> (8 - lastBits), lastBits);\n\t  }\n\t\n\t  return result;\n\t};\n\t\n\tvar parseFloatFromBits = function(data, precisionBits, exponentBits) {\n\t  var bias = Math.pow(2, exponentBits - 1) - 1;\n\t  var sign = parseBits(data, 1);\n\t  var exponent = parseBits(data, exponentBits, 1);\n\t\n\t  if (exponent === 0) {\n\t    return 0;\n\t  }\n\t\n\t  // parse mantissa\n\t  var precisionBitsCounter = 1;\n\t  var parsePrecisionBits = function(lastValue, newValue, bits) {\n\t    if (lastValue === 0) {\n\t      lastValue = 1;\n\t    }\n\t\n\t    for (var i = 1; i <= bits; i++) {\n\t      precisionBitsCounter /= 2;\n\t      if ((newValue & (0x1 << (bits - i))) > 0) {\n\t        lastValue += precisionBitsCounter;\n\t      }\n\t    }\n\t\n\t    return lastValue;\n\t  };\n\t\n\t  var mantissa = parseBits(data, precisionBits, exponentBits + 1, false, parsePrecisionBits);\n\t\n\t  // special cases\n\t  if (exponent == (Math.pow(2, exponentBits + 1) - 1)) {\n\t    if (mantissa === 0) {\n\t      return (sign === 0) ? Infinity : -Infinity;\n\t    }\n\t\n\t    return NaN;\n\t  }\n\t\n\t  // normale number\n\t  return ((sign === 0) ? 1 : -1) * Math.pow(2, exponent - bias) * mantissa;\n\t};\n\t\n\tvar parseInt16 = function(value) {\n\t  if (parseBits(value, 1) == 1) {\n\t    return -1 * (parseBits(value, 15, 1, true) + 1);\n\t  }\n\t\n\t  return parseBits(value, 15, 1);\n\t};\n\t\n\tvar parseInt32 = function(value) {\n\t  if (parseBits(value, 1) == 1) {\n\t    return -1 * (parseBits(value, 31, 1, true) + 1);\n\t  }\n\t\n\t  return parseBits(value, 31, 1);\n\t};\n\t\n\tvar parseFloat32 = function(value) {\n\t  return parseFloatFromBits(value, 23, 8);\n\t};\n\t\n\tvar parseFloat64 = function(value) {\n\t  return parseFloatFromBits(value, 52, 11);\n\t};\n\t\n\tvar parseNumeric = function(value) {\n\t  var sign = parseBits(value, 16, 32);\n\t  if (sign == 0xc000) {\n\t    return NaN;\n\t  }\n\t\n\t  var weight = Math.pow(10000, parseBits(value, 16, 16));\n\t  var result = 0;\n\t\n\t  var digits = [];\n\t  var ndigits = parseBits(value, 16);\n\t  for (var i = 0; i < ndigits; i++) {\n\t    result += parseBits(value, 16, 64 + (16 * i)) * weight;\n\t    weight /= 10000;\n\t  }\n\t\n\t  var scale = Math.pow(10, parseBits(value, 16, 48));\n\t  return ((sign === 0) ? 1 : -1) * Math.round(result * scale) / scale;\n\t};\n\t\n\tvar parseDate = function(isUTC, value) {\n\t  var sign = parseBits(value, 1);\n\t  var rawValue = parseBits(value, 63, 1);\n\t\n\t  // discard usecs and shift from 2000 to 1970\n\t  var result = new Date((((sign === 0) ? 1 : -1) * rawValue / 1000) + 946684800000);\n\t\n\t  if (!isUTC) {\n\t    result.setTime(result.getTime() + result.getTimezoneOffset() * 60000);\n\t  }\n\t\n\t  // add microseconds to the date\n\t  result.usec = rawValue % 1000;\n\t  result.getMicroSeconds = function() {\n\t    return this.usec;\n\t  };\n\t  result.setMicroSeconds = function(value) {\n\t    this.usec = value;\n\t  };\n\t  result.getUTCMicroSeconds = function() {\n\t    return this.usec;\n\t  };\n\t\n\t  return result;\n\t};\n\t\n\tvar parseArray = function(value) {\n\t  var dim = parseBits(value, 32);\n\t\n\t  var flags = parseBits(value, 32, 32);\n\t  var elementType = parseBits(value, 32, 64);\n\t\n\t  var offset = 96;\n\t  var dims = [];\n\t  for (var i = 0; i < dim; i++) {\n\t    // parse dimension\n\t    dims[i] = parseBits(value, 32, offset);\n\t    offset += 32;\n\t\n\t    // ignore lower bounds\n\t    offset += 32;\n\t  }\n\t\n\t  var parseElement = function(elementType) {\n\t    // parse content length\n\t    var length = parseBits(value, 32, offset);\n\t    offset += 32;\n\t\n\t    // parse null values\n\t    if (length == 0xffffffff) {\n\t      return null;\n\t    }\n\t\n\t    var result;\n\t    if ((elementType == 0x17) || (elementType == 0x14)) {\n\t      // int/bigint\n\t      result = parseBits(value, length * 8, offset);\n\t      offset += length * 8;\n\t      return result;\n\t    }\n\t    else if (elementType == 0x19) {\n\t      // string\n\t      result = value.toString(this.encoding, offset >> 3, (offset += (length << 3)) >> 3);\n\t      return result;\n\t    }\n\t    else {\n\t      console.log(\"ERROR: ElementType not implemented: \" + elementType);\n\t    }\n\t  };\n\t\n\t  var parse = function(dimension, elementType) {\n\t    var array = [];\n\t    var i;\n\t\n\t    if (dimension.length > 1) {\n\t      var count = dimension.shift();\n\t      for (i = 0; i < count; i++) {\n\t        array[i] = parse(dimension, elementType);\n\t      }\n\t      dimension.unshift(count);\n\t    }\n\t    else {\n\t      for (i = 0; i < dimension[0]; i++) {\n\t        array[i] = parseElement(elementType);\n\t      }\n\t    }\n\t\n\t    return array;\n\t  };\n\t\n\t  return parse(dims, elementType);\n\t};\n\t\n\tvar parseText = function(value) {\n\t  return value.toString('utf8');\n\t};\n\t\n\tvar parseBool = function(value) {\n\t  if(value === null) return null;\n\t  return (parseBits(value, 8) > 0);\n\t};\n\t\n\tvar init = function(register) {\n\t  register(21, parseInt16);\n\t  register(23, parseInt32);\n\t  register(26, parseInt32);\n\t  register(1700, parseNumeric);\n\t  register(700, parseFloat32);\n\t  register(701, parseFloat64);\n\t  register(16, parseBool);\n\t  register(1114, parseDate.bind(null, false));\n\t  register(1184, parseDate.bind(null, true));\n\t  register(1000, parseArray);\n\t  register(1007, parseArray);\n\t  register(1016, parseArray);\n\t  register(1008, parseArray);\n\t  register(1009, parseArray);\n\t  register(25, parseText);\n\t};\n\t\n\tmodule.exports = {\n\t  init: init\n\t};\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar url = __webpack_require__(9);\n\t\n\t//Parse method copied from https://github.com/brianc/node-postgres\n\t//Copyright (c) 2010-2014 Brian Carlson (brian.m.carlson@gmail.com)\n\t//MIT License\n\t\n\t//parses a connection string\n\tfunction parse(str) {\n\t  var config;\n\t  //unix socket\n\t  if(str.charAt(0) === '/') {\n\t    config = str.split(' ');\n\t    return { host: config[0], database: config[1] };\n\t  }\n\t  // url parse expects spaces encoded as %20\n\t  if(/ |%[^a-f0-9]|%[a-f0-9][^a-f0-9]/i.test(str)) {\n\t    str = encodeURI(str).replace(/\\%25(\\d\\d)/g, \"%$1\");\n\t  }\n\t  var result = url.parse(str, true);\n\t  config = {};\n\t\n\t  if (result.query.application_name) {\n\t    config.application_name = result.query.application_name;\n\t  }\n\t  if (result.query.fallback_application_name) {\n\t    config.fallback_application_name = result.query.fallback_application_name;\n\t  }\n\t\n\t  config.port = result.port;\n\t  if(result.protocol == 'socket:') {\n\t    config.host = decodeURI(result.pathname);\n\t    config.database = result.query.db;\n\t    config.client_encoding = result.query.encoding;\n\t    return config;\n\t  }\n\t  config.host = result.hostname;\n\t\n\t  // result.pathname is not always guaranteed to have a '/' prefix (e.g. relative urls)\n\t  // only strip the slash if it is present.\n\t  var pathname = result.pathname;\n\t  if (pathname && pathname.charAt(0) === '/') {\n\t    pathname = result.pathname.slice(1) || null;\n\t  }\n\t  config.database = pathname && decodeURI(pathname);\n\t\n\t  var auth = (result.auth || ':').split(':');\n\t  config.user = auth[0];\n\t  config.password = auth.splice(1).join(':');\n\t\n\t  var ssl = result.query.ssl;\n\t  if (ssl === 'true' || ssl === '1') {\n\t    config.ssl = true;\n\t  }\n\t\n\t  return config;\n\t}\n\t\n\tmodule.exports = {\n\t  parse: parse\n\t};\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = require(\"mysql\");\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar AbstractSQL2CLF, AbstractSQLCompiler, LF2AbstractSQL, LF2AbstractSQLTranslator, ODataMetadataGenerator, PinejsClient, PinejsClientCore, Promise, SBVRParser, SbvrValidationError, SqlCompilationError, TypedError, UnsupportedMethodError, _, api, apiHooks, checkForExpansion, cleanupModel, clientModels, db, devModel, executeModel, executeModels, executeStandardModels, fetchProcessing, getAndCheckBindValues, getHooks, handleODataRequest, memoize, memoizedCompileRule, migrator, odataMetadata, odataResourceURI, permissions, prettifyConstraintError, processOData, resolveOdataBind, respondDelete, respondGet, respondOptions, respondPost, respondPut, runDelete, runGet, runHook, runPost, runPut, runQuery, runTransaction, runURI, sbvrTypes, seModels, sqlModels, uriParser, validateModel,\n\t  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n\t  hasProp = {}.hasOwnProperty;\n\t\n\t_ = __webpack_require__(4);\n\t\n\tPromise = __webpack_require__(2);\n\t\n\tTypedError = __webpack_require__(6);\n\t\n\tLF2AbstractSQL = __webpack_require__(25);\n\t\n\tAbstractSQLCompiler = __webpack_require__(33);\n\t\n\tPinejsClientCore = __webpack_require__(39);\n\t\n\tsbvrTypes = __webpack_require__(36);\n\t\n\tSBVRParser = __webpack_require__(40);\n\t\n\tmigrator = __webpack_require__(44);\n\t\n\tAbstractSQL2CLF = __webpack_require__(137);\n\t\n\tODataMetadataGenerator = __webpack_require__(138);\n\t\n\tdevModel = __webpack_require__(139);\n\t\n\tpermissions = __webpack_require__(46);\n\t\n\turiParser = __webpack_require__(50);\n\t\n\tmemoize = __webpack_require__(115);\n\t\n\tmemoizedCompileRule = memoize(function(abstractSqlQuery) {\n\t  return AbstractSQLCompiler.compileRule(abstractSqlQuery);\n\t}, {\n\t  primitive: true\n\t});\n\t\n\tdb = null;\n\t\n\texports.sbvrTypes = sbvrTypes;\n\t\n\tfetchProcessing = _.mapValues(sbvrTypes, function(arg) {\n\t  var fetchProcessing;\n\t  fetchProcessing = arg.fetchProcessing;\n\t  if (fetchProcessing != null) {\n\t    return Promise.promisify(fetchProcessing);\n\t  }\n\t});\n\t\n\tLF2AbstractSQLTranslator = LF2AbstractSQL.createTranslator(sbvrTypes);\n\t\n\tseModels = {};\n\t\n\tsqlModels = {};\n\t\n\tclientModels = {};\n\t\n\todataMetadata = {};\n\t\n\tapiHooks = {\n\t  all: {},\n\t  GET: {},\n\t  PUT: {},\n\t  POST: {},\n\t  PATCH: {},\n\t  DELETE: {},\n\t  OPTIONS: {}\n\t};\n\t\n\tapiHooks.MERGE = apiHooks.PATCH;\n\t\n\tUnsupportedMethodError = (function(superClass) {\n\t  extend(UnsupportedMethodError, superClass);\n\t\n\t  function UnsupportedMethodError() {\n\t    return UnsupportedMethodError.__super__.constructor.apply(this, arguments);\n\t  }\n\t\n\t  return UnsupportedMethodError;\n\t\n\t})(TypedError);\n\t\n\tSqlCompilationError = (function(superClass) {\n\t  extend(SqlCompilationError, superClass);\n\t\n\t  function SqlCompilationError() {\n\t    return SqlCompilationError.__super__.constructor.apply(this, arguments);\n\t  }\n\t\n\t  return SqlCompilationError;\n\t\n\t})(TypedError);\n\t\n\tSbvrValidationError = (function(superClass) {\n\t  extend(SbvrValidationError, superClass);\n\t\n\t  function SbvrValidationError() {\n\t    return SbvrValidationError.__super__.constructor.apply(this, arguments);\n\t  }\n\t\n\t  return SbvrValidationError;\n\t\n\t})(TypedError);\n\t\n\tprettifyConstraintError = function(err, tableName) {\n\t  var matches;\n\t  if (err instanceof db.ConstraintError) {\n\t    if (err instanceof db.UniqueConstraintError) {\n\t      switch (db.engine) {\n\t        case 'mysql':\n\t          matches = /ER_DUP_ENTRY: Duplicate entry '.*?[^\\\\]' for key '(.*?[^\\\\])'/.exec(err);\n\t          break;\n\t        case 'postgres':\n\t          matches = new RegExp('\"' + tableName + '_(.*?)_key\"').exec(err);\n\t          if (matches == null) {\n\t            throw new db.UniqueConstraintError('Unique key constraint violated');\n\t          }\n\t      }\n\t      throw new db.UniqueConstraintError('\"' + matches[1] + '\" must be unique'.replace(/-/g, '__') + '.');\n\t    }\n\t    if (err instanceof db.ForeignKeyConstraintError) {\n\t      switch (db.engine) {\n\t        case 'mysql':\n\t          matches = /ER_ROW_IS_REFERENCED_: Cannot delete or update a parent row: a foreign key constraint fails \\(\".*?\"\\.(\".*?\").*/.exec(err);\n\t          break;\n\t        case 'postgres':\n\t          matches = new RegExp('\"' + tableName + '\" violates foreign key constraint \".*?\" on table \"(.*?)\"').exec(err);\n\t          if (matches == null) {\n\t            matches = new RegExp('\"' + tableName + '\" violates foreign key constraint \"' + tableName + '_(.*?)_fkey\"').exec(err);\n\t          }\n\t          if (matches == null) {\n\t            throw new db.ForeignKeyConstraintError('Foreign key constraint violated');\n\t          }\n\t      }\n\t      throw new db.ForeignKeyConstraintError('Data is referenced by ' + matches[1].replace(/\\ /g, '_').replace(/-/g, '__') + '.');\n\t    }\n\t    throw err;\n\t  }\n\t};\n\t\n\texports.resolveOdataBind = resolveOdataBind = function(odataBinds, value) {\n\t  var dataType, ref;\n\t  if (_.isObject(value) && (value.bind != null)) {\n\t    ref = odataBinds[value.bind], dataType = ref[0], value = ref[1];\n\t  }\n\t  return value;\n\t};\n\t\n\tgetAndCheckBindValues = function(vocab, odataBinds, bindings, values) {\n\t  var mappings, sqlModelTables;\n\t  mappings = clientModels[vocab].resourceToSQLMappings;\n\t  sqlModelTables = sqlModels[vocab].tables;\n\t  return Promise.map(bindings, function(binding) {\n\t    var dataType, field, fieldName, mappedFieldName, mappedTableName, ref, ref1, ref2, referencedName, tableName, value;\n\t    if (binding[0] === 'Bind') {\n\t      if (_.isArray(binding[1])) {\n\t        ref = binding[1], tableName = ref[0], fieldName = ref[1];\n\t        referencedName = tableName + '.' + fieldName;\n\t        value = values[referencedName];\n\t        if (value === void 0) {\n\t          value = values[fieldName];\n\t        }\n\t        value = resolveOdataBind(odataBinds, value);\n\t        ref1 = mappings[tableName][fieldName], mappedTableName = ref1[0], mappedFieldName = ref1[1];\n\t        field = _.find(sqlModelTables[mappedTableName].fields, {\n\t          fieldName: mappedFieldName\n\t        });\n\t      } else if (_.isInteger(binding[1])) {\n\t        if (binding[1] >= odataBinds.length) {\n\t          console.error(\"Invalid binding number '\" + binding[1] + \"' for binds: \", odataBinds);\n\t          throw new Error('Invalid binding');\n\t        }\n\t        ref2 = odataBinds[binding[1]], dataType = ref2[0], value = ref2[1];\n\t        field = {\n\t          dataType: dataType\n\t        };\n\t      } else {\n\t        throw new Error(\"Unknown binding: \" + binding);\n\t      }\n\t    } else {\n\t      dataType = binding[0], value = binding[1];\n\t      field = {\n\t        dataType: dataType\n\t      };\n\t    }\n\t    if (value === void 0) {\n\t      return db.DEFAULT_VALUE;\n\t    }\n\t    return AbstractSQLCompiler.dataTypeValidate(value, field)[\"catch\"](function(e) {\n\t      e.message = '\"' + fieldName + '\" ' + e.message;\n\t      throw e;\n\t    });\n\t  });\n\t};\n\t\n\texports.validateModel = validateModel = function(tx, modelName) {\n\t  return Promise.map(sqlModels[modelName].rules, function(rule) {\n\t    return tx.executeSql(rule.sql, rule.bindings).then(function(result) {\n\t      var ref;\n\t      if ((ref = result.rows.item(0).result) === false || ref === 0 || ref === '0') {\n\t        throw new SbvrValidationError(rule.structuredEnglish);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\texports.executeModel = executeModel = function(tx, model, callback) {\n\t  return executeModels(tx, [model], callback);\n\t};\n\t\n\texports.executeModels = executeModels = function(tx, models, callback) {\n\t  return Promise.map(models, function(model) {\n\t    var seModel, vocab;\n\t    seModel = model.modelText;\n\t    vocab = model.apiRoot;\n\t    return migrator.run(tx, model).then(function() {\n\t      var abstractSqlModel, clientModel, e, lfModel, metadata, sqlModel;\n\t      try {\n\t        lfModel = SBVRParser.matchAll(seModel, 'Process');\n\t      } catch (error) {\n\t        e = error;\n\t        console.error('Error parsing model', vocab, e, e.stack);\n\t        throw new Error(['Error parsing model', e]);\n\t      }\n\t      try {\n\t        abstractSqlModel = LF2AbstractSQLTranslator(lfModel, 'Process');\n\t        sqlModel = AbstractSQLCompiler.compileSchema(abstractSqlModel);\n\t        clientModel = AbstractSQL2CLF(sqlModel);\n\t        metadata = ODataMetadataGenerator(vocab, sqlModel);\n\t      } catch (error) {\n\t        e = error;\n\t        console.error('Error compiling model', vocab, e, e.stack);\n\t        throw new Error(['Error compiling model', e]);\n\t      }\n\t      return Promise.reduce(sqlModel.createSchema, function(arr, createStatement) {\n\t        return tx.executeSql(createStatement)[\"catch\"](function() {});\n\t      }, []).then(function() {\n\t        seModels[vocab] = seModel;\n\t        sqlModels[vocab] = sqlModel;\n\t        clientModels[vocab] = clientModel;\n\t        odataMetadata[vocab] = metadata;\n\t        uriParser.addClientModel(vocab, clientModel);\n\t        return validateModel(tx, vocab);\n\t      }).then(function() {\n\t        var key, ref, ref1, ref2, ref3, value;\n\t        api[vocab] = new PinejsClient('/' + vocab + '/');\n\t        api[vocab].logger = {};\n\t        for (key in console) {\n\t          value = console[key];\n\t          if (_.isFunction(value)) {\n\t            if ((ref = (ref1 = (ref2 = model.logging) != null ? ref2[key] : void 0) != null ? ref1 : (ref3 = model.logging) != null ? ref3[\"default\"] : void 0) != null ? ref : true) {\n\t              api[vocab].logger[key] = _.bind(value, console, vocab + ':');\n\t            } else {\n\t              api[vocab].logger[key] = function() {};\n\t            }\n\t          } else {\n\t            api[vocab].logger[key] = value;\n\t          }\n\t        }\n\t        return {\n\t          vocab: vocab,\n\t          se: seModel,\n\t          lf: lfModel,\n\t          abstractsql: abstractSqlModel,\n\t          sql: sqlModel,\n\t          client: clientModel\n\t        };\n\t      });\n\t    });\n\t  }).map(function(model) {\n\t    var updateModel;\n\t    updateModel = function(modelType, modelText) {\n\t      return api.dev.get({\n\t        resource: 'model',\n\t        passthrough: {\n\t          tx: tx,\n\t          req: permissions.rootRead\n\t        },\n\t        options: {\n\t          select: 'id',\n\t          filter: {\n\t            vocabulary: model.vocab,\n\t            model_type: modelType\n\t          }\n\t        }\n\t      }).then(function(result) {\n\t        var body, id, method, ref, uri;\n\t        method = 'POST';\n\t        uri = '/dev/model';\n\t        body = {\n\t          vocabulary: model.vocab,\n\t          model_value: modelText,\n\t          model_type: modelType\n\t        };\n\t        id = (ref = result[0]) != null ? ref.id : void 0;\n\t        if (id != null) {\n\t          uri += '(' + id + ')';\n\t          method = 'PATCH';\n\t          body.id = id;\n\t        }\n\t        return runURI(method, uri, body, tx, permissions.root);\n\t      });\n\t    };\n\t    return Promise.all([updateModel('se', model.se), updateModel('lf', model.lf), updateModel('abstractsql', model.abstractsql), updateModel('sql', model.sql), updateModel('client', model.client)]);\n\t  })[\"catch\"](function(err) {\n\t    Promise.map(models, function(model) {\n\t      return cleanupModel(model.apiRoot);\n\t    });\n\t    throw err;\n\t  }).nodeify(callback);\n\t};\n\t\n\tcleanupModel = function(vocab) {\n\t  delete seModels[vocab];\n\t  delete sqlModels[vocab];\n\t  delete clientModels[vocab];\n\t  delete odataMetadata[vocab];\n\t  uriParser.deleteClientModel(vocab);\n\t  return delete api[vocab];\n\t};\n\t\n\tgetHooks = (function() {\n\t  var getMethodHooks, getResourceHooks, getVocabHooks, mergeHooks;\n\t  mergeHooks = function(a, b) {\n\t    return _.mergeWith({}, a, b, function(a, b) {\n\t      if (_.isArray(a)) {\n\t        return a.concat(b);\n\t      }\n\t    });\n\t  };\n\t  getResourceHooks = function(vocabHooks, request) {\n\t    if (vocabHooks == null) {\n\t      return {};\n\t    }\n\t    if (request.resourceName == null) {\n\t      return vocabHooks['all'];\n\t    }\n\t    return mergeHooks(vocabHooks[request.resourceName], vocabHooks['all']);\n\t  };\n\t  getVocabHooks = function(methodHooks, request) {\n\t    if (methodHooks == null) {\n\t      return {};\n\t    }\n\t    return mergeHooks(getResourceHooks(methodHooks[request.vocabulary], request), getResourceHooks(methodHooks['all'], request));\n\t  };\n\t  return getMethodHooks = function(request) {\n\t    return mergeHooks(getVocabHooks(apiHooks[request.method], request), getVocabHooks(apiHooks['all'], request));\n\t  };\n\t})();\n\t\n\trunHook = function(hookName, args) {\n\t  var hooks;\n\t  Object.defineProperty(args, 'api', {\n\t    get: _.once(function() {\n\t      return api[args.request.vocabulary].clone({\n\t        passthrough: _.pick(args, 'req', 'tx')\n\t      });\n\t    })\n\t  });\n\t  hooks = args.req.hooks[hookName] || [];\n\t  return Promise.map(hooks, function(hook) {\n\t    return hook(args);\n\t  });\n\t};\n\t\n\texports.deleteModel = function(vocabulary, callback) {\n\t  return db.transaction().then(function(tx) {\n\t    var dropStatements, ref;\n\t    dropStatements = _.map((ref = sqlModels[vocabulary]) != null ? ref.dropSchema : void 0, function(dropStatement) {\n\t      return tx.executeSql(dropStatement);\n\t    });\n\t    return Promise.all(dropStatements.concat([\n\t      api.dev[\"delete\"]({\n\t        resource: 'model',\n\t        passthrough: {\n\t          tx: tx,\n\t          req: permissions.root\n\t        },\n\t        options: {\n\t          filter: {\n\t            vocabulary: vocabulary\n\t          }\n\t        }\n\t      })\n\t    ])).then(function() {\n\t      tx.end();\n\t      return cleanupModel(vocabulary);\n\t    })[\"catch\"](function(err) {\n\t      tx.rollback();\n\t      throw err;\n\t    });\n\t  }).nodeify(callback);\n\t};\n\t\n\texports.getID = function(vocab, request) {\n\t  var comparison, idField, j, k, len, len1, ref, ref1, whereClause;\n\t  idField = sqlModels[vocab].tables[request.resourceName].idField;\n\t  ref = request.abstractSqlQuery;\n\t  for (j = 0, len = ref.length; j < len; j++) {\n\t    whereClause = ref[j];\n\t    if (whereClause[0] === 'Where') {\n\t      ref1 = whereClause.slice(1);\n\t      for (k = 0, len1 = ref1.length; k < len1; k++) {\n\t        comparison = ref1[k];\n\t        if (!(comparison[0] === 'Equals')) {\n\t          continue;\n\t        }\n\t        if (comparison[1][2] === idField) {\n\t          return comparison[2][1];\n\t        }\n\t        if (comparison[2][2] === idField) {\n\t          return comparison[1][1];\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return 0;\n\t};\n\t\n\tcheckForExpansion = (function() {\n\t  var rowsObjectHack;\n\t  rowsObjectHack = function(i) {\n\t    return this[i];\n\t  };\n\t  return Promise.method(function(vocab, clientModel, fieldName, instance) {\n\t    var field;\n\t    try {\n\t      field = JSON.parse(instance[fieldName]);\n\t    } catch (error) {\n\t      field = instance[fieldName];\n\t    }\n\t    if (_.isArray(field)) {\n\t      field.item = rowsObjectHack;\n\t      return processOData(vocab, clientModel, fieldName, field).then(function(expandedField) {\n\t        instance[fieldName] = expandedField;\n\t      });\n\t    } else if (field != null) {\n\t      instance[fieldName] = {\n\t        __deferred: {\n\t          uri: '/' + vocab + '/' + fieldName + '(' + field + ')'\n\t        },\n\t        __id: field\n\t      };\n\t    }\n\t  });\n\t})();\n\t\n\todataResourceURI = function(vocab, resourceName, id) {\n\t  id = _.isString(id) ? \"'\" + encodeURIComponent(id) + \"'\" : id;\n\t  return '/' + vocab + '/' + resourceName + '(' + id + ')';\n\t};\n\t\n\tprocessOData = (function() {\n\t  var getFetchProcessingFields, getLocalFields;\n\t  getLocalFields = function(resourceModel) {\n\t    var dataType, fieldName, j, len, ref, ref1;\n\t    if (resourceModel.localFields == null) {\n\t      resourceModel.localFields = {};\n\t      ref = resourceModel.fields;\n\t      for (j = 0, len = ref.length; j < len; j++) {\n\t        ref1 = ref[j], fieldName = ref1.fieldName, dataType = ref1.dataType;\n\t        if (dataType !== 'ForeignKey') {\n\t          resourceModel.localFields[fieldName.replace(/\\ /g, '_')] = true;\n\t        }\n\t      }\n\t    }\n\t    return resourceModel.localFields;\n\t  };\n\t  getFetchProcessingFields = function(resourceModel) {\n\t    return resourceModel.fetchProcessingFields != null ? resourceModel.fetchProcessingFields : resourceModel.fetchProcessingFields = _(resourceModel.fields).filter(function(arg) {\n\t      var dataType;\n\t      dataType = arg.dataType;\n\t      return fetchProcessing[dataType] != null;\n\t    }).map(function(arg) {\n\t      var dataType, fieldName;\n\t      fieldName = arg.fieldName, dataType = arg.dataType;\n\t      return [fieldName.replace(/\\ /g, '_'), fetchProcessing[dataType]];\n\t    }).fromPairs().value();\n\t  };\n\t  return function(vocab, clientModel, resourceName, rows) {\n\t    var count, expandableFields, fetchProcessingFields, instances, instancesPromise, localFields, processedFields, resourceModel;\n\t    if (rows.length === 0) {\n\t      return Promise.fulfilled([]);\n\t    }\n\t    if (rows.length === 1) {\n\t      if (rows.item(0).$count != null) {\n\t        count = parseInt(rows.item(0).$count, 10);\n\t        return Promise.fulfilled(count);\n\t      }\n\t    }\n\t    resourceModel = clientModel[resourceName];\n\t    instances = rows.map(function(instance) {\n\t      instance.__metadata = {\n\t        uri: odataResourceURI(vocab, resourceModel.resourceName, +instance[resourceModel.idField]),\n\t        type: ''\n\t      };\n\t      return instance;\n\t    });\n\t    instancesPromise = Promise.fulfilled();\n\t    localFields = getLocalFields(resourceModel);\n\t    expandableFields = _.filter(_.keys(instances[0]), function(fieldName) {\n\t      return fieldName.slice(0, 2) !== '__' && !localFields.hasOwnProperty(fieldName);\n\t    });\n\t    if (expandableFields.length > 0) {\n\t      instancesPromise = Promise.map(instances, function(instance) {\n\t        return Promise.map(expandableFields, function(fieldName) {\n\t          return checkForExpansion(vocab, clientModel, fieldName, instance);\n\t        });\n\t      });\n\t    }\n\t    fetchProcessingFields = getFetchProcessingFields(resourceModel);\n\t    processedFields = _.filter(_.keys(instances[0]), function(fieldName) {\n\t      return fieldName.slice(0, 2) !== '__' && fetchProcessingFields.hasOwnProperty(fieldName);\n\t    });\n\t    if (processedFields.length > 0) {\n\t      instancesPromise = instancesPromise.then(function() {\n\t        return Promise.map(instances, function(instance) {\n\t          return Promise.map(processedFields, function(resourceName) {\n\t            return fetchProcessingFields[resourceName](instance[resourceName]).then(function(result) {\n\t              instance[resourceName] = result;\n\t            });\n\t          });\n\t        });\n\t      });\n\t    }\n\t    return instancesPromise.then(function() {\n\t      return instances;\n\t    });\n\t  };\n\t})();\n\t\n\texports.runRule = (function() {\n\t  var LF2AbstractSQLPrepHack, translator;\n\t  LF2AbstractSQLPrepHack = LF2AbstractSQL.LF2AbstractSQLPrep._extend({\n\t    CardinalityOptimisation: function() {\n\t      return this._pred(false);\n\t    }\n\t  });\n\t  translator = LF2AbstractSQL.LF2AbstractSQL.createInstance();\n\t  translator.addTypes(sbvrTypes);\n\t  return function(vocab, rule, callback) {\n\t    return Promise[\"try\"](function() {\n\t      var abstractSqlModel, e, fetchingViolators, formulationType, lfModel, logger, resourceName, ruleAbs, ruleBody, ruleLF, ruleSQL, seModel, slfModel, wantNonViolators;\n\t      seModel = seModels[vocab];\n\t      logger = api[vocab].logger;\n\t      try {\n\t        lfModel = SBVRParser.matchAll(seModel + '\\nRule: ' + rule, 'Process');\n\t      } catch (error) {\n\t        e = error;\n\t        logger.error('Error parsing rule', rule, e, e.stack);\n\t        throw new Error(['Error parsing rule', rule, e]);\n\t      }\n\t      ruleLF = lfModel[lfModel.length - 1];\n\t      lfModel = lfModel.slice(0, -1);\n\t      try {\n\t        slfModel = LF2AbstractSQL.LF2AbstractSQLPrep.match(lfModel, 'Process');\n\t        slfModel.push(ruleLF);\n\t        slfModel = LF2AbstractSQLPrepHack.match(slfModel, 'Process');\n\t        translator.reset();\n\t        abstractSqlModel = translator.match(slfModel, 'Process');\n\t      } catch (error) {\n\t        e = error;\n\t        logger.error('Error compiling rule', rule, e, e.stack);\n\t        throw new Error(['Error compiling rule', rule, e]);\n\t      }\n\t      formulationType = ruleLF[1][0];\n\t      resourceName = ruleLF[1][1][0] === 'LogicalNegation' ? ruleLF[1][1][1][1][2][1] : ruleLF[1][1][1][2][1];\n\t      fetchingViolators = false;\n\t      ruleAbs = abstractSqlModel.rules.slice(-1)[0];\n\t      ruleBody = _.find(ruleAbs, {\n\t        0: 'Body'\n\t      });\n\t      if (ruleBody[1][0] === 'Not' && ruleBody[1][1][0] === 'Exists' && ruleBody[1][1][1][0] === 'SelectQuery') {\n\t        ruleBody[1] = ruleBody[1][1][1];\n\t        fetchingViolators = true;\n\t      } else if (ruleBody[1][0] === 'Exists' && ruleBody[1][1][0] === 'SelectQuery') {\n\t        ruleBody[1] = ruleBody[1][1];\n\t      } else {\n\t        throw new Error('Unsupported rule formulation');\n\t      }\n\t      wantNonViolators = formulationType === 'PossibilityFormulation' || formulationType === 'PermissibilityFormulation';\n\t      if (wantNonViolators === fetchingViolators) {\n\t        ruleBody[1] = _.map(ruleBody[1], function(queryPart) {\n\t          if (queryPart[0] !== 'Where') {\n\t            return queryPart;\n\t          }\n\t          if (queryPart.length > 2) {\n\t            throw new Error('Unsupported rule formulation');\n\t          }\n\t          return ['Where', ['Not', queryPart[1]]];\n\t        });\n\t      }\n\t      ruleBody[1] = _.map(ruleBody[1], function(queryPart) {\n\t        if (queryPart[0] !== 'Select') {\n\t          return queryPart;\n\t        }\n\t        return ['Select', '*'];\n\t      });\n\t      ruleSQL = AbstractSQLCompiler.compileRule(ruleBody);\n\t      return db.executeSql(ruleSQL.query, ruleSQL.bindings).then(function(result) {\n\t        var clientModel, filter, ids;\n\t        resourceName = resourceName.replace(/\\ /g, '_').replace(/-/g, '__');\n\t        clientModel = clientModels[vocab].resources[resourceName];\n\t        ids = result.rows.map(function(row) {\n\t          return row[clientModel.idField];\n\t        });\n\t        ids = _.uniq(ids);\n\t        ids = _.map(ids, function(id) {\n\t          return clientModel.idField + ' eq ' + id;\n\t        });\n\t        filter = ids.length > 0 ? ids.join(' or ') : '0 eq 1';\n\t        return runURI('GET', '/' + vocab + '/' + clientModel.resourceName + '?$filter=' + filter, null, null, permissions.rootRead).then(function(result) {\n\t          result.__formulationType = formulationType;\n\t          result.__resourceName = resourceName;\n\t          return result;\n\t        });\n\t      });\n\t    }).nodeify(callback);\n\t  };\n\t})();\n\t\n\texports.PinejsClient = PinejsClient = (function(superClass) {\n\t  extend(PinejsClient, superClass);\n\t\n\t  function PinejsClient() {\n\t    return PinejsClient.__super__.constructor.apply(this, arguments);\n\t  }\n\t\n\t  PinejsClient.prototype._request = function(arg) {\n\t    var body, method, req, tx, url;\n\t    method = arg.method, url = arg.url, body = arg.body, tx = arg.tx, req = arg.req;\n\t    return runURI(method, url, body, tx, req);\n\t  };\n\t\n\t  return PinejsClient;\n\t\n\t})(PinejsClientCore(_, Promise));\n\t\n\texports.api = api = {};\n\t\n\texports.runURI = runURI = function(method, uri, body, tx, req, callback) {\n\t  var apiKey, message, user;\n\t  if (body == null) {\n\t    body = {};\n\t  }\n\t  if ((callback != null) && !_.isFunction(callback)) {\n\t    message = 'Called runURI with a non-function callback?!';\n\t    console.trace(message);\n\t    return Promise.rejected(message);\n\t  }\n\t  if (_.isObject(req)) {\n\t    user = req.user;\n\t    apiKey = req.apiKey;\n\t  } else {\n\t    if (req != null) {\n\t      console.warn('Non-object req passed to runURI?', req, new Error().stack);\n\t    }\n\t    user = {\n\t      permissions: []\n\t    };\n\t  }\n\t  req = {\n\t    user: user,\n\t    apiKey: apiKey,\n\t    method: method,\n\t    url: uri,\n\t    body: body,\n\t    params: {},\n\t    query: {},\n\t    tx: tx\n\t  };\n\t  return new Promise(function(resolve, reject) {\n\t    var next, res;\n\t    res = {\n\t      statusCode: 200,\n\t      status: function(statusCode1) {\n\t        this.statusCode = statusCode1;\n\t        return this;\n\t      },\n\t      sendStatus: function(statusCode) {\n\t        if (statusCode >= 400) {\n\t          return reject(statusCode);\n\t        } else {\n\t          return resolve();\n\t        }\n\t      },\n\t      send: function(statusCode) {\n\t        if (statusCode == null) {\n\t          statusCode = this.statusCode;\n\t        }\n\t        return this.sendStatus(statusCode);\n\t      },\n\t      json: function(data, statusCode) {\n\t        if (statusCode == null) {\n\t          statusCode = this.statusCode;\n\t        }\n\t        if (statusCode >= 400) {\n\t          return reject(data);\n\t        } else {\n\t          return resolve(data);\n\t        }\n\t      },\n\t      set: function() {},\n\t      type: function() {}\n\t    };\n\t    next = function(route) {\n\t      console.warn('Next called on a runURI?!', method, uri, route);\n\t      return res.sendStatus(500);\n\t    };\n\t    return handleODataRequest(req, res, next);\n\t  }).nodeify(callback);\n\t};\n\t\n\texports.handleODataRequest = handleODataRequest = function(req, res, next) {\n\t  var apiRoot, url;\n\t  url = req.url.split('/');\n\t  apiRoot = url[1];\n\t  if ((apiRoot == null) || (clientModels[apiRoot] == null)) {\n\t    return next('route');\n\t  }\n\t  if (true) {\n\t    api[apiRoot].logger.log('Parsing', req.method, req.url);\n\t  }\n\t  req.hooks = getHooks({\n\t    method: req.method,\n\t    vocabulary: apiRoot\n\t  });\n\t  return runHook('PREPARSE', {\n\t    req: req,\n\t    tx: req.tx\n\t  }).then(function() {\n\t    return uriParser.parseODataURI(req);\n\t  }).then(function(requests) {\n\t    return Promise.map(requests, function(request) {\n\t      req.hooks = getHooks(request);\n\t      return runHook('POSTPARSE', {\n\t        req: req,\n\t        request: request,\n\t        tx: req.tx\n\t      })[\"return\"](request).then(uriParser.translateUri).then(function(request) {\n\t        var err;\n\t        if (request.abstractSqlQuery != null) {\n\t          try {\n\t            request.sqlQuery = memoizedCompileRule(request.abstractSqlQuery);\n\t          } catch (error) {\n\t            err = error;\n\t            api[apiRoot].logger.error('Failed to compile abstract sql: ', request.abstractSqlQuery, err, err.stack);\n\t            throw new SqlCompilationError(err);\n\t          }\n\t        }\n\t        return request;\n\t      });\n\t    });\n\t  }).then(function(requests) {\n\t    var logger, request;\n\t    request = requests[0];\n\t    logger = api[request.vocabulary].logger;\n\t    res.set('Cache-Control', 'no-cache');\n\t    if (true) {\n\t      logger.log('Running', req.method, req.url);\n\t    }\n\t    return runTransaction(req, request, function(tx) {\n\t      return runHook('PRERUN', {\n\t        req: req,\n\t        request: request,\n\t        tx: tx\n\t      }).then(function() {\n\t        switch (req.method) {\n\t          case 'GET':\n\t            return runGet(req, res, request, tx);\n\t          case 'POST':\n\t            return runPost(req, res, request, tx);\n\t          case 'PUT':\n\t          case 'PATCH':\n\t          case 'MERGE':\n\t            return runPut(req, res, request, tx);\n\t          case 'DELETE':\n\t            return runDelete(req, res, request, tx);\n\t        }\n\t      });\n\t    }).then(function(result) {\n\t      switch (req.method) {\n\t        case 'GET':\n\t          return respondGet(req, res, request, result);\n\t        case 'POST':\n\t          return respondPost(req, res, request, result);\n\t        case 'PUT':\n\t        case 'PATCH':\n\t        case 'MERGE':\n\t          return respondPut(req, res, request, result);\n\t        case 'DELETE':\n\t          return respondDelete(req, res, request, result);\n\t        case 'OPTIONS':\n\t          return respondOptions(req, res, request, result);\n\t        default:\n\t          throw new UnsupportedMethodError();\n\t      }\n\t    })[\"catch\"](db.DatabaseError, function(err) {\n\t      prettifyConstraintError(err, request.resourceName);\n\t      logger.error(err, err.stack);\n\t      return res.sendStatus(500);\n\t    })[\"catch\"](EvalError, RangeError, ReferenceError, SyntaxError, TypeError, URIError, function(err) {\n\t      logger.error(err, err.stack);\n\t      return res.sendStatus(500);\n\t    });\n\t  })[\"catch\"](SbvrValidationError, function(err) {\n\t    return res.status(400).send(err.message);\n\t  })[\"catch\"](uriParser.BadRequestError, function() {\n\t    return res.sendStatus(400);\n\t  })[\"catch\"](permissions.PermissionError, function(err) {\n\t    return res.sendStatus(401);\n\t  })[\"catch\"](SqlCompilationError, uriParser.TranslationError, uriParser.ParsingError, permissions.PermissionParsingError, function(err) {\n\t    return res.sendStatus(500);\n\t  })[\"catch\"](UnsupportedMethodError, function(err) {\n\t    return res.sendStatus(405);\n\t  })[\"catch\"](function(err) {\n\t    if (err instanceof Error) {\n\t      err = err.message;\n\t    }\n\t    return res.status(404).json(err);\n\t  });\n\t};\n\t\n\trunTransaction = function(req, request, callback) {\n\t  var runCallback;\n\t  runCallback = function(tx) {\n\t    return callback(tx).tap(function(result) {\n\t      return runHook('POSTRUN', {\n\t        req: req,\n\t        request: request,\n\t        result: result,\n\t        tx: tx\n\t      });\n\t    });\n\t  };\n\t  if (req.tx != null) {\n\t    return runCallback(req.tx);\n\t  } else {\n\t    return db.transaction().then(function(tx) {\n\t      return runCallback(tx).tap(function() {\n\t        return tx.end();\n\t      })[\"catch\"](function(err) {\n\t        tx.rollback();\n\t        throw err;\n\t      });\n\t    });\n\t  }\n\t};\n\t\n\trunQuery = function(tx, request, queryIndex, addReturning) {\n\t  var odataBinds, sqlQuery, values, vocabulary;\n\t  values = request.values, odataBinds = request.odataBinds, sqlQuery = request.sqlQuery, vocabulary = request.vocabulary;\n\t  if (queryIndex != null) {\n\t    sqlQuery = sqlQuery[queryIndex];\n\t  }\n\t  return getAndCheckBindValues(vocabulary, odataBinds, sqlQuery.bindings, values).then(function(values) {\n\t    if (true) {\n\t      api[vocabulary].logger.log(sqlQuery.query, values);\n\t    }\n\t    sqlQuery.values = values;\n\t    return tx.executeSql(sqlQuery.query, values, null, addReturning);\n\t  });\n\t};\n\t\n\trunGet = function(req, res, request, tx) {\n\t  if (request.sqlQuery != null) {\n\t    return runQuery(tx, request);\n\t  }\n\t};\n\t\n\trespondGet = function(req, res, request, result) {\n\t  var clientModel, data, vocab;\n\t  vocab = request.vocabulary;\n\t  if (request.sqlQuery != null) {\n\t    clientModel = clientModels[vocab].resources;\n\t    return processOData(vocab, clientModel, request.resourceName, result.rows).then(function(d) {\n\t      return runHook('PRERESPOND', {\n\t        req: req,\n\t        res: res,\n\t        request: request,\n\t        result: result,\n\t        data: d,\n\t        tx: req.tx\n\t      }).then(function() {\n\t        return res.json({\n\t          d: d\n\t        });\n\t      });\n\t    });\n\t  } else {\n\t    if (request.resourceName === '$metadata') {\n\t      res.type('xml');\n\t      res.send(odataMetadata[vocab]);\n\t    } else {\n\t      clientModel = clientModels[vocab];\n\t      data = request.resourceName === '$serviceroot' ? {\n\t        __model: clientModel.resources\n\t      } : {\n\t        __model: clientModel.resources[request.resourceName]\n\t      };\n\t      res.json(data);\n\t    }\n\t    return Promise.resolve();\n\t  }\n\t};\n\t\n\trunPost = function(req, res, request, tx) {\n\t  var idField, vocab;\n\t  vocab = request.vocabulary;\n\t  idField = clientModels[vocab].resources[request.resourceName].idField;\n\t  return runQuery(tx, request, null, idField).then(function(sqlResult) {\n\t    return validateModel(tx, vocab).then(function() {\n\t      if (request.abstractSqlQuery[0] === 'UpdateQuery') {\n\t        return request.sqlQuery.values[0];\n\t      } else {\n\t        return sqlResult.insertId;\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\trespondPost = function(req, res, request, result) {\n\t  var id, location, vocab;\n\t  vocab = request.vocabulary;\n\t  id = result;\n\t  location = odataResourceURI(vocab, request.resourceName, id);\n\t  api[vocab].logger.log('Insert ID: ', request.resourceName, id);\n\t  return runURI('GET', location, null, req.tx, req)[\"catch\"](function() {\n\t    return {\n\t      d: [\n\t        {\n\t          id: id\n\t        }\n\t      ]\n\t    };\n\t  }).then(function(result) {\n\t    return runHook('PRERESPOND', {\n\t      req: req,\n\t      res: res,\n\t      request: request,\n\t      result: result,\n\t      tx: req.tx\n\t    }).then(function() {\n\t      res.set('Location', location);\n\t      return res.status(201).json(result.d[0]);\n\t    });\n\t  });\n\t};\n\t\n\trunPut = function(req, res, request, tx) {\n\t  var vocab;\n\t  vocab = request.vocabulary;\n\t  return Promise[\"try\"](function() {\n\t    if (_.isArray(request.sqlQuery)) {\n\t      return runQuery(tx, request, 1).then(function(result) {\n\t        if (result.rowsAffected === 0) {\n\t          return runQuery(tx, request, 0);\n\t        }\n\t      });\n\t    } else {\n\t      return runQuery(tx, request);\n\t    }\n\t  }).then(function() {\n\t    return validateModel(tx, vocab);\n\t  });\n\t};\n\t\n\trespondPut = respondDelete = respondOptions = function(req, res, request) {\n\t  return runHook('PRERESPOND', {\n\t    req: req,\n\t    res: res,\n\t    request: request,\n\t    tx: req.tx\n\t  }).then(function() {\n\t    return res.sendStatus(200);\n\t  });\n\t};\n\t\n\trunDelete = function(req, res, request, tx) {\n\t  var vocab;\n\t  vocab = request.vocabulary;\n\t  return runQuery(tx, request).then(function() {\n\t    return validateModel(tx, vocab);\n\t  });\n\t};\n\t\n\texports.executeStandardModels = executeStandardModels = function(tx, callback) {\n\t  return executeModel(tx, {\n\t    apiRoot: 'dev',\n\t    modelText: devModel,\n\t    logging: {\n\t      log: false\n\t    }\n\t  }).then(function() {\n\t    return executeModels(tx, permissions.config.models);\n\t  }).then(function() {\n\t    return console.info('Sucessfully executed standard models.');\n\t  })[\"catch\"](function(err) {\n\t    console.error('Failed to execute standard models.', err, err.stack);\n\t    throw err;\n\t  }).nodeify(callback);\n\t};\n\t\n\texports.addHook = function(method, apiRoot, resourceName, callbacks) {\n\t  var apiRootHooks, callback, callbackType, methodHooks, resourceHooks, results;\n\t  methodHooks = apiHooks[method];\n\t  if (methodHooks == null) {\n\t    throw new Error('Unsupported method: ' + method);\n\t  }\n\t  if (apiRoot !== 'all' && (clientModels[apiRoot] == null)) {\n\t    throw new Error('Unknown api root: ' + apiRoot);\n\t  }\n\t  if (resourceName !== 'all' && (clientModels[apiRoot].resources[resourceName] == null)) {\n\t    throw new Error('Unknown resource for api root: ' + resourceName + ', ' + apiRoot);\n\t  }\n\t  for (callbackType in callbacks) {\n\t    callback = callbacks[callbackType];\n\t    if (callbackType !== 'PREPARSE' && callbackType !== 'POSTPARSE' && callbackType !== 'PRERUN' && callbackType !== 'POSTRUN' && callbackType !== 'PRERESPOND') {\n\t      throw new Error('Unknown callback type: ' + callbackType);\n\t    }\n\t  }\n\t  apiRootHooks = methodHooks[apiRoot] != null ? methodHooks[apiRoot] : methodHooks[apiRoot] = {};\n\t  resourceHooks = apiRootHooks[resourceName] != null ? apiRootHooks[resourceName] : apiRootHooks[resourceName] = {};\n\t  results = [];\n\t  for (callbackType in callbacks) {\n\t    callback = callbacks[callbackType];\n\t    if (resourceHooks[callbackType] == null) {\n\t      resourceHooks[callbackType] = [];\n\t    }\n\t    results.push(resourceHooks[callbackType].push(callback));\n\t  }\n\t  return results;\n\t};\n\t\n\texports.setup = function(app, _db, callback) {\n\t  exports.db = db = _db;\n\t  AbstractSQLCompiler = AbstractSQLCompiler[db.engine];\n\t  return db.transaction().then(function(tx) {\n\t    return executeStandardModels(tx).then(function() {\n\t      permissions.setup(app, exports);\n\t      _.extend(exports, permissions);\n\t      return tx.end();\n\t    })[\"catch\"](function(err) {\n\t      tx.rollback();\n\t      console.error('Could not execute standard models', err, err.stack);\n\t      return process.exit();\n\t    });\n\t  }).then(function() {\n\t    return db.executeSql('CREATE UNIQUE INDEX \"uniq_model_model_type_vocab\" ON \"model\" (\"vocabulary\", \"model type\");')[\"catch\"](function() {});\n\t  }).nodeify(callback);\n\t};\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {\n\t\tif (true) {\n\t\t\t// AMD. Register as an anonymous module.\n\t\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(26), __webpack_require__(32)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t} else if (typeof exports === 'object') {\n\t\t\t// Node. Does not work with strict CommonJS, but\n\t\t\t// only CommonJS-like enviroments that support module.exports,\n\t\t\t// like Node.\n\t\t\tmodule.exports = factory(\n\t\t\t\trequire('./lf-to-abstract-sql-prep'),\n\t\t\t\trequire('./lf-to-abstract-sql')\n\t\t\t);\n\t\t} else {\n\t\t\t// Browser globals\n\t\t\troot.LF2AbstractSQL = factory(LF2AbstractSQLPrep, LF2AbstractSQL);\n\t\t}\n\t}(this, function (LF2AbstractSQLPrep, LF2AbstractSQL) {\n\t\tLF2AbstractSQLPrep = LF2AbstractSQLPrep.LF2AbstractSQLPrep;\n\t\tLF2AbstractSQL = LF2AbstractSQL.LF2AbstractSQL;\n\t\treturn {\n\t\t\tLF2AbstractSQLPrep: LF2AbstractSQLPrep,\n\t\t\tLF2AbstractSQL: LF2AbstractSQL,\n\t\t\ttranslate: function(lf, types) {\n\t\t\t\tlf = LF2AbstractSQLPrep.match(lf, 'Process');\n\t\t\t\tvar translator = LF2AbstractSQL.createInstance();\n\t\t\t\ttranslator.addTypes(types);\n\t\t\t\treturn translator.match(lf, 'Process');\n\t\t\t},\n\t\t\tcreateTranslator: function(types) {\n\t\t\t\tvar translator = LF2AbstractSQL.createInstance();\n\t\t\t\ttranslator.addTypes(types);\n\t\t\t\treturn function(lf) {\n\t\t\t\t\tlf = LF2AbstractSQLPrep.match(lf, 'Process');\n\t\t\t\t\ttranslator.reset();\n\t\t\t\t\treturn translator.match(lf, 'Process');\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}));\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!function(root, factory) {\n\t     true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__, exports, __webpack_require__(28), __webpack_require__(31), __webpack_require__(27), __webpack_require__(4) ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : \"object\" == typeof exports ? factory(require, exports, require(\"ometa-js\").core) : factory(function(moduleName) {\n\t        return root[moduleName];\n\t    }, root, root.OMeta);\n\t}(this, function(require, exports, OMeta) {\n\t    var SBVRCompilerLibs = __webpack_require__(31).SBVRCompilerLibs, LFOptimiser = __webpack_require__(27).LFOptimiser, _ = __webpack_require__(4), LF2AbstractSQLPrep = exports.LF2AbstractSQLPrep = LFOptimiser._extend({\n\t        AttrConceptType: function(termName) {\n\t            var $elf = this, _fromIdx = this.input.idx, conceptType;\n\t            conceptType = LFOptimiser._superApplyWithArgs(this, \"AttrConceptType\", termName);\n\t            this._opt(function() {\n\t                this._pred(this.primitives[termName] === !1 && this.primitives[conceptType] !== !1);\n\t                this.primitives[conceptType] = !1;\n\t                return this._apply(\"SetHelped\");\n\t            });\n\t            return conceptType;\n\t        },\n\t        AttrDatabaseAttribute: function(termOrFactType) {\n\t            var $elf = this, _fromIdx = this.input.idx, attrVal, newAttrVal;\n\t            attrVal = this.anything();\n\t            newAttrVal = \"Term\" == termOrFactType[0] && (!this.attributes.hasOwnProperty(termOrFactType[3]) || this.attributes[termOrFactType[3]] === !0) || \"FactType\" == termOrFactType[0] && 4 == termOrFactType.length && (!this.attributes.hasOwnProperty(termOrFactType[3]) || this.attributes[termOrFactType[3]] === !0) && this.primitives.hasOwnProperty(termOrFactType[3]) && this.primitives[termOrFactType[3]] !== !1;\n\t            this.attributes[termOrFactType] = newAttrVal;\n\t            this._opt(function() {\n\t                this._pred(newAttrVal != attrVal);\n\t                return this._apply(\"SetHelped\");\n\t            });\n\t            return newAttrVal;\n\t        },\n\t        AttrDatabasePrimitive: function(termOrFactType) {\n\t            var $elf = this, _fromIdx = this.input.idx, attrVal, newAttrVal;\n\t            attrVal = this.anything();\n\t            newAttrVal = attrVal;\n\t            this._opt(function() {\n\t                this._pred(this.primitives.hasOwnProperty(termOrFactType));\n\t                newAttrVal = this.primitives[termOrFactType];\n\t                this._pred(newAttrVal != attrVal);\n\t                return this._apply(\"SetHelped\");\n\t            });\n\t            this.primitives[termOrFactType] = newAttrVal;\n\t            return newAttrVal;\n\t        },\n\t        AttrTermForm: function(factType) {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            this.termForms[factType] = !0;\n\t            return this.anything();\n\t        },\n\t        UniversalQuantification: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, v, xs;\n\t            v = this._applyWithArgs(\"token\", \"Variable\");\n\t            xs = this._many(function() {\n\t                return this._apply(\"trans\");\n\t            });\n\t            this._apply(\"SetHelped\");\n\t            return [ \"LogicalNegation\", [ \"ExistentialQuantification\", v, [ \"LogicalNegation\" ].concat(xs) ] ];\n\t        },\n\t        AtMostNQuantification: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, maxCard, v, xs;\n\t            maxCard = this._applyWithArgs(\"token\", \"MaximumCardinality\");\n\t            v = this._applyWithArgs(\"token\", \"Variable\");\n\t            xs = this._many(function() {\n\t                return this._apply(\"trans\");\n\t            });\n\t            this._apply(\"SetHelped\");\n\t            maxCard[1][1]++;\n\t            return [ \"LogicalNegation\", [ \"AtLeastNQuantification\", [ \"MinimumCardinality\", maxCard[1] ], v ].concat(xs) ];\n\t        },\n\t        CardinalityOptimisation2: function(v1) {\n\t            var $elf = this, _fromIdx = this.input.idx, actualFactType, atomicForm, card, factType, required, v2;\n\t            this._pred(3 == v1.length);\n\t            required = this._or(function() {\n\t                this._form(function() {\n\t                    this._applyWithArgs(\"exactly\", \"ExactQuantification\");\n\t                    card = this._applyWithArgs(\"token\", \"Cardinality\");\n\t                    this._pred(1 == card[1][1]);\n\t                    v2 = this._applyWithArgs(\"token\", \"Variable\");\n\t                    return atomicForm = this._applyWithArgs(\"token\", \"AtomicFormulation\");\n\t                });\n\t                return !0;\n\t            }, function() {\n\t                this._form(function() {\n\t                    this._applyWithArgs(\"exactly\", \"AtMostNQuantification\");\n\t                    card = this._applyWithArgs(\"token\", \"MaximumCardinality\");\n\t                    this._pred(1 == card[1][1]);\n\t                    v2 = this._applyWithArgs(\"token\", \"Variable\");\n\t                    return atomicForm = this._applyWithArgs(\"token\", \"AtomicFormulation\");\n\t                });\n\t                return !1;\n\t            });\n\t            this._apply(\"end\");\n\t            this._pred(3 == v2.length);\n\t            factType = atomicForm[1];\n\t            this._pred(!this.termForms[factType]);\n\t            this._pred(4 == atomicForm.length && 4 == factType.length);\n\t            actualFactType = this._applyWithArgs(\"UnmappedFactType\", factType.slice(1));\n\t            actualFactType = [ \"FactType\" ].concat(actualFactType);\n\t            this._or(function() {\n\t                this._pred(this.IdentifiersEqual(v1[2], actualFactType[1]) && this.IdentifiersEqual(v2[2], actualFactType[3]));\n\t                return this.foreignKeys[actualFactType] = required;\n\t            }, function() {\n\t                this._pred(this.IdentifiersEqual(v1[2], actualFactType[3]) && this.IdentifiersEqual(v2[2], actualFactType[1]));\n\t                return this.uniqueKeys[actualFactType] = required;\n\t            });\n\t            return this._apply(\"SetHelped\");\n\t        },\n\t        CardinalityOptimisation: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, v1;\n\t            return this._form(function() {\n\t                switch (this.anything()) {\n\t                  case \"LogicalNegation\":\n\t                    return this._form(function() {\n\t                        this._applyWithArgs(\"exactly\", \"ExistentialQuantification\");\n\t                        v1 = this._applyWithArgs(\"token\", \"Variable\");\n\t                        return this._form(function() {\n\t                            this._applyWithArgs(\"exactly\", \"LogicalNegation\");\n\t                            return this._applyWithArgs(\"CardinalityOptimisation2\", v1);\n\t                        });\n\t                    });\n\t\n\t                  case \"UniversalQuantification\":\n\t                    v1 = this._applyWithArgs(\"token\", \"Variable\");\n\t                    return this._applyWithArgs(\"CardinalityOptimisation2\", v1);\n\t\n\t                  default:\n\t                    throw this._fail();\n\t                }\n\t            });\n\t        },\n\t        NecessityOptimisation: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._apply(\"CardinalityOptimisation\");\n\t        },\n\t        ObligationOptimisation: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._apply(\"CardinalityOptimisation\");\n\t        },\n\t        Rule: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                this._form(function() {\n\t                    switch (this.anything()) {\n\t                      case \"NecessityFormulation\":\n\t                        return this._apply(\"NecessityOptimisation\");\n\t\n\t                      case \"ObligationFormulation\":\n\t                        return this._apply(\"ObligationOptimisation\");\n\t\n\t                      default:\n\t                        throw this._fail();\n\t                    }\n\t                });\n\t                this._applyWithArgs(\"token\", \"StructuredEnglish\");\n\t                return null;\n\t            }, function() {\n\t                return LFOptimiser._superApplyWithArgs(this, \"Rule\");\n\t            });\n\t        }\n\t    });\n\t    LF2AbstractSQLPrep.initialize = function() {\n\t        _.assign(this, SBVRCompilerLibs);\n\t        LFOptimiser.initialize.call(this);\n\t        this.foreignKeys = {};\n\t        this.uniqueKeys = {};\n\t        this.primitives = {};\n\t        this.attributes = {};\n\t        this.termForms = {};\n\t    };\n\t    LF2AbstractSQLPrep.defaultAttributes = function(termOrFactType, attrsFound, attrs) {\n\t        switch (termOrFactType[0]) {\n\t          case \"Name\":\n\t          case \"Term\":\n\t            if (!this.IsPrimitive(termOrFactType) && !attrsFound.hasOwnProperty(\"DatabaseIDField\")) {\n\t                attrs.splice(1, 0, [ \"DatabaseIDField\", \"id\" ]);\n\t                this.SetHelped();\n\t            }\n\t            if (!attrsFound.hasOwnProperty(\"ReferenceScheme\")) {\n\t                attrs.splice(1, 0, [ \"ReferenceScheme\", \"id\" ]);\n\t                this.SetHelped();\n\t            }\n\t            if (!attrsFound.hasOwnProperty(\"DatabaseTableName\")) {\n\t                attrs.splice(1, 0, [ \"DatabaseTableName\", termOrFactType[1].replace(new RegExp(\" \", \"g\"), \"_\") ]);\n\t                this.SetHelped();\n\t            }\n\t            if (!attrsFound.hasOwnProperty(\"DatabasePrimitive\")) {\n\t                this.primitives.hasOwnProperty(termOrFactType) || (this.primitives[termOrFactType] = this.IsPrimitive(termOrFactType));\n\t                attrs.splice(1, 0, [ \"DatabasePrimitive\", this.primitives[termOrFactType] ]);\n\t                this.SetHelped();\n\t            }\n\t            break;\n\t\n\t          case \"FactType\":\n\t            var actualFactType = this.UnmappedFactType(termOrFactType.slice(1));\n\t            actualFactType = [ \"FactType\" ].concat(actualFactType);\n\t            if (!this.IsPrimitive(actualFactType[1])) {\n\t                if (!attrsFound.hasOwnProperty(\"DatabaseIDField\")) {\n\t                    attrs.splice(1, 0, [ \"DatabaseIDField\", \"id\" ]);\n\t                    this.SetHelped();\n\t                }\n\t                if (!attrsFound.hasOwnProperty(\"DatabaseTableName\")) {\n\t                    for (var tableName = actualFactType[1][1].replace(new RegExp(\" \", \"g\"), \"_\"), i = 2; i < actualFactType.length; i++) tableName += \"-\" + actualFactType[i][1].replace(new RegExp(\" \", \"g\"), \"_\");\n\t                    attrs.splice(1, 0, [ \"DatabaseTableName\", tableName ]);\n\t                    this.SetHelped();\n\t                }\n\t                if (this.uniqueKeys.hasOwnProperty(actualFactType)) if (attrsFound.hasOwnProperty(\"Unique\")) {\n\t                    if (attrsFound.Unique != this.uniqueKeys[actualFactType]) {\n\t                        console.error(attrsFound.Unique, this.uniqueKeys[actualFactType]);\n\t                        ___MISMATCHED_UNIQUE_KEY___.die();\n\t                    }\n\t                } else {\n\t                    attrs.splice(1, 0, [ \"Unique\", this.uniqueKeys[actualFactType] ]);\n\t                    this.SetHelped();\n\t                }\n\t                if (this.foreignKeys.hasOwnProperty(actualFactType)) {\n\t                    if (!attrsFound.hasOwnProperty(\"DatabaseAttribute\")) {\n\t                        attrs.splice(1, 0, [ \"DatabaseAttribute\", !1 ]);\n\t                        this.SetHelped();\n\t                    }\n\t                    if (attrsFound.hasOwnProperty(\"ForeignKey\")) {\n\t                        if (attrsFound.ForeignKey != this.foreignKeys[actualFactType]) {\n\t                            console.error(attrsFound.ForeignKey, this.foreignKeys[actualFactType]);\n\t                            ___MISMATCHED_FOREIGN_KEY___.die();\n\t                        }\n\t                    } else {\n\t                        attrs.splice(1, 0, [ \"ForeignKey\", this.foreignKeys[actualFactType] ]);\n\t                        this.SetHelped();\n\t                    }\n\t                }\n\t                if (3 == actualFactType.length) {\n\t                    this.primitives.hasOwnProperty(actualFactType[1]) && this.primitives[actualFactType[1]] === !1 || this.SetHelped();\n\t                    this.primitives[actualFactType[1]] = !1;\n\t                } else if (actualFactType.length > 4) for (var i = 1; i < actualFactType.length; i += 2) {\n\t                    this.attributes.hasOwnProperty(actualFactType[i]) && this.attributes[actualFactType[i]] === !1 || this.SetHelped();\n\t                    this.attributes[actualFactType[i]] = !1;\n\t                }\n\t            }\n\t        }\n\t        termOrFactType.push(attrs);\n\t    };\n\t});\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!function(root, factory) {\n\t     true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__, exports, __webpack_require__(28), __webpack_require__(29) ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : \"object\" == typeof exports ? factory(require, exports, require(\"ometa-js\").core) : factory(function(moduleName) {\n\t        return root[moduleName];\n\t    }, root, root.OMeta);\n\t}(this, function(require, exports, OMeta) {\n\t    var LFValidator = __webpack_require__(29).LFValidator, LFOptimiser = exports.LFOptimiser = LFValidator._extend({\n\t        Helped: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            this._pred(this.helped === !0);\n\t            return this.helped = !1;\n\t        },\n\t        SetHelped: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this.helped = !0;\n\t        },\n\t        Process: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, x;\n\t            x = this.anything();\n\t            x = this._applyWithArgs(\"trans\", x);\n\t            this._many(function() {\n\t                this._applyWithArgs(\"Helped\", \"disableMemoisation\");\n\t                return this._or(function() {\n\t                    return x = this._applyWithArgs(\"trans\", x);\n\t                }, function() {\n\t                    console.error(\"Failed to reprocess?!\");\n\t                    return this._pred(!1);\n\t                });\n\t            });\n\t            return x;\n\t        },\n\t        AtLeastNQuantification: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, i, v, xs;\n\t            return this._or(function() {\n\t                i = this._applyWithArgs(\"token\", \"MinimumCardinality\");\n\t                this._pred(1 == i[1][1]);\n\t                v = this._applyWithArgs(\"token\", \"Variable\");\n\t                xs = this._many(function() {\n\t                    return this._apply(\"trans\");\n\t                });\n\t                this._apply(\"SetHelped\");\n\t                return [ \"ExistentialQuantification\", v ].concat(xs);\n\t            }, function() {\n\t                return LFValidator._superApplyWithArgs(this, \"AtLeastNQuantification\");\n\t            });\n\t        },\n\t        NumericalRangeQuantification: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, i, j, v, xs;\n\t            return this._or(function() {\n\t                i = this._applyWithArgs(\"token\", \"MinimumCardinality\");\n\t                j = this._applyWithArgs(\"token\", \"MaximumCardinality\");\n\t                this._pred(i[1][1] == j[1][1]);\n\t                v = this._applyWithArgs(\"token\", \"Variable\");\n\t                xs = this._many(function() {\n\t                    return this._apply(\"trans\");\n\t                });\n\t                this._apply(\"SetHelped\");\n\t                return [ \"ExactQuantification\", [ \"Cardinality\", i[1] ], v ].concat(xs);\n\t            }, function() {\n\t                return LFValidator._superApplyWithArgs(this, \"NumericalRangeQuantification\");\n\t            });\n\t        },\n\t        LogicalNegation: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, xs;\n\t            return this._or(function() {\n\t                this._form(function() {\n\t                    this._applyWithArgs(\"exactly\", \"LogicalNegation\");\n\t                    return xs = this._apply(\"trans\");\n\t                });\n\t                this._apply(\"SetHelped\");\n\t                return xs;\n\t            }, function() {\n\t                return LFValidator._superApplyWithArgs(this, \"LogicalNegation\");\n\t            });\n\t        }\n\t    });\n\t    LFOptimiser.initialize = function() {\n\t        LFValidator.initialize.call(this);\n\t        this._didSomething = !1;\n\t    };\n\t});\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {\n\t\tif (true) {\n\t\t\t// AMD. Register as an anonymous module.\n\t\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t\t\t\treturn (root.OMeta = factory());\n\t\t\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t} else if (typeof exports === 'object') {\n\t\t\t// Node. Does not work with strict CommonJS, but\n\t\t\t// only CommonJS-like enviroments that support module.exports,\n\t\t\t// like Node.\n\t\t\tmodule.exports = factory();\n\t\t} else {\n\t\t\t// Browser globals\n\t\t\troot.OMeta = factory();\n\t\t}\n\t}(this, function () {\n\t\t\"use strict\";\n\t\t/*\n\t\t\tnew syntax:\n\t\t\t\t#foo and `foo\tmatch the string object 'foo' (it's also accepted in my JS)\n\t\t\t\t'abc'\t\tmatch the string object 'abc'\n\t\t\t\t'c'\t\t\tmatch the string object 'c'\n\t\t\t\t``abc''\t\tmatch the sequence of string objects 'a', 'b', 'c'\n\t\t\t\t\"abc\"\t\ttoken('abc')\n\t\t\t\t[1 2 3]\t\tmatch the array object [1, 2, 3]\n\t\t\t\tfoo(bar)\t\tapply rule foo with argument bar\n\t\t\t\t-> ...\t\tsemantic actions written in JS (see OMetaParser's atomicHostExpr rule)\n\t\t*/\n\t\n\t\t/*\n\t\tometa M {\n\t\t\tnumber =\n\t\t\t\t\tnumber:n digit:d\n\t\t\t\t\t-> { n * 10 + parseInt(d, 10) }\n\t\t\t\t|\tdigit:d\n\t\t\t\t\t-> { parseInt(d, 10) }\n\t\t}\n\t\n\t\tcompiles into...\n\t\n\t\tM = objectThatDelegatesTo(OMeta, {\n\t\t\tnumber: function() {\n\t\t\t\treturn this._or(function() {\n\t\t\t\t\t\tvar n = this._apply(\"number\"),\n\t\t\t\t\t\t\td = this._apply(\"digit\");\n\t\t\t\t\t\treturn n * 10 + parseInt(d, 10);\n\t\t\t\t\t},\n\t\t\t\t\tfunction() {\n\t\t\t\t\t\tvar d = this._apply(\"digit\");\n\t\t\t\t\t\treturn parseInt(d, 10)\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t})\n\t\tM.matchAll(\"123456789\", \"number\")\n\t\t*/\n\t\n\t\t//\n\t\t// failure exception\n\t\t//\n\t\tvar fail = function fail() {\n\t\t\treturn fail.error;\n\t\t};\n\t\tfail.error = new SyntaxError('match failed');\n\t\tfail.error._extend = function(child) {\n\t\t\treturn objectThatDelegatesTo(this, child);\n\t\t};\n\t\n\t\t//\n\t\t// ### function objectThatDelegatesTo(obj, props)\n\t\t// #### @obj {Object} parent object\n\t\t// #### @props {Object} object to merge result with\n\t\t// Returns object with merged properties of `obj` and `props`\n\t\t//\n\t\tfunction objectThatDelegatesTo(obj, props) {\n\t\t\tvar clone = Object.create(obj || {});\n\t\n\t\t\tfor (var key in props) {\n\t\t\t\tif (props.hasOwnProperty(key)) {\n\t\t\t\t\tclone[key] = props[key];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn clone;\n\t\t}\n\t\n\t\t//\n\t\t// ### function isSequenceable(o)\n\t\t// #### @o {any} object to perform check against\n\t\t// Returns true if object is sequenceable\n\t\t//\n\t\tfunction isSequenceable(o) {\n\t\t\treturn typeof o === 'string' || Array.isArray(o);\n\t\t}\n\t\n\t\t//\n\t\t// ### function getTag(o)\n\t\t// #### @o {Object} input\n\t\t// unique tags for objects (useful for making \"hash tables\")\n\t\t//\n\t\tfunction getTag(o) {\n\t\t\tif (o == null) {\n\t\t\t\treturn 'null';\n\t\t\t}\n\t\n\t\t\tswitch (typeof o) {\n\t\t\t\tcase \"boolean\":\n\t\t\t\t\treturn o === true ? \"Btrue\" : \"Bfalse\";\n\t\t\t\tcase \"string\":\n\t\t\t\t\treturn \"S\" + o;\n\t\t\t\tcase \"number\":\n\t\t\t\t\treturn \"N\" + o;\n\t\t\t\tdefault:\n\t\t\t\t\tif (!o.hasOwnProperty(\"_id_\")) {\n\t\t\t\t\t\to._id_ = getTag.id++;\n\t\t\t\t\t}\n\t\t\t\t\treturn \"R\" + o._id_;\n\t\t\t}\n\t\t}\n\t\tgetTag.id = 0;\n\t\n\t\t//\n\t\t// ### function isImmutable(o)\n\t\t// #### @o {any} object to perform check against\n\t\t// Returns true if object is immutable\n\t\t//\n\t\tfunction isImmutable(o) {\n\t\t\treturn o == null ||\n\t\t\t\ttypeof o === 'boolean' || typeof o === 'number' ||\n\t\t\t\ttypeof o === 'string';\n\t\t}\n\t\n\t\t//\n\t\t// ### function lookup (fn, success, fallback)\n\t\t// #### @fn {Function} function that may throw\n\t\t// #### @success {Function} call if function hasn't thrown\n\t\t// #### @fallback {Function} call if function thrown fail()\n\t\t//\n\t\tfunction lookup(fn, success, fallback) {\n\t\t\tvar value;\n\t\t\ttry {\n\t\t\t\tvalue = fn();\n\t\t\t} catch (e) {\n\t\t\t\tif (!(e instanceof SyntaxError)) {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t\treturn fallback && fallback(e);\n\t\t\t}\n\t\n\t\t\treturn success && success(value);\n\t\t}\n\t\n\t\tfunction always(fn, after) {\n\t\t\ttry {\n\t\t\t\treturn fn();\n\t\t\t} finally {\n\t\t\t\tafter();\n\t\t\t}\n\t\t}\n\t\n\t\tfunction returnTrue() {\n\t\t\treturn true;\n\t\t}\n\t\n\t\tfunction returnFalse() {\n\t\t\treturn false;\n\t\t}\n\t\n\t\tfunction throwFail() {\n\t\t\tthrow fail();\n\t\t}\n\t\n\t\tfunction noop() {}\n\t\n\t\t//\n\t\t// ### function OMInputStream(hd, tl)\n\t\t// #### @hd {any} Head\n\t\t// #### @tl {Object} Tail\n\t\t// Streams and memoization\n\t\t//\n\t\tfunction OMInputStream(hd, tl) {\n\t\t\tthis.memo = {};\n\t\t\tthis.lst = tl.lst;\n\t\t\tthis.idx = tl.idx;\n\t\t\tthis.hd = hd;\n\t\t\tthis.tl = tl;\n\t\t}\n\t\n\t\t//\n\t\t// ### function head ()\n\t\t// Returns stream's `hd` property\n\t\t//\n\t\tOMInputStream.prototype.head = function() { return this.hd; };\n\t\n\t\t//\n\t\t// ### function tail ()\n\t\t// Returns stream's `tl` property\n\t\t//\n\t\tOMInputStream.prototype.tail = function() { return this.tl; };\n\t\n\t\t//\n\t\t// ### function type ()\n\t\t// Returns stream's `lst` property constructor\n\t\t//\n\t\tOMInputStream.prototype.type = function() { return this.lst.constructor; };\n\t\n\t\t//\n\t\t// ### function upTo (that)\n\t\t// #### @that {Object} target object\n\t\t// Visit all tails and join all met heads and return string or array\n\t\t// (depending on `.lst` type)\n\t\t//\n\t\tOMInputStream.prototype.upTo = function(that) {\n\t\t\tvar r = [], curr = this;\n\t\t\twhile (curr !== that) {\n\t\t\t\tr.push(curr.head());\n\t\t\t\tcurr = curr.tail();\n\t\t\t}\n\t\t\treturn this.type() === String ? r.join('') : r;\n\t\t};\n\t\n\t\t//\n\t\t// ### function OMInputStreamEnd (lst, idx)\n\t\t// #### @lst {Array} list\n\t\t// #### @idx {Number} index\n\t\t// Internal class\n\t\t//\n\t\tfunction OMInputStreamEnd(lst, idx) {\n\t\t\tthis.memo = {};\n\t\t\tthis.lst = lst;\n\t\t\tthis.idx = idx;\n\t\t}\n\t\tOMInputStreamEnd.prototype = objectThatDelegatesTo(OMInputStream.prototype);\n\t\n\t\t//\n\t\t// ### function head ()\n\t\t// Not implemented\n\t\t//\n\t\tOMInputStreamEnd.prototype.head = throwFail;\n\t\n\t\t//\n\t\t// ### function tail ()\n\t\t// Not implemented\n\t\t//\n\t\tOMInputStreamEnd.prototype.tail = throwFail;\n\t\n\t\t//\n\t\t// ### function ListOMInputStream (lst, idx)\n\t\t// #### @lst {Array} list\n\t\t// #### @idx {Number} index\n\t\t// Returns self-expanding stream\n\t\t//\n\t\tfunction ListOMInputStream(lst, idx) {\n\t\t\tthis.memo = { };\n\t\t\tthis.lst = lst;\n\t\t\tthis.idx = idx;\n\t\t\tthis.hd = lst[idx];\n\t\t}\n\t\tListOMInputStream.prototype = objectThatDelegatesTo(OMInputStream.prototype);\n\t\n\t\t//\n\t\t// ### function head ()\n\t\t// Returns stream's `hd` property's value\n\t\t//\n\t\tListOMInputStream.prototype.head = function() { return this.hd; };\n\t\n\t\t//\n\t\t// ### function tail ()\n\t\t// Returns or creates stream's tail\n\t\t//\n\t\tListOMInputStream.prototype.tail = function() {\n\t\t\treturn this.tl || (this.tl = makeListOMInputStream(this.lst, this.idx + 1));\n\t\t};\n\t\n\t\t//\n\t\t// ### function makeListOMInputStream (lst, idx)\n\t\t// #### @lst {Array} List\n\t\t// #### @idx {Number} index\n\t\t// Returns either ListOMInputStream's or OMInputStreamEnd's instance\n\t\t//\n\t\tfunction makeListOMInputStream(lst, idx) {\n\t\t\tif (idx < lst.length) {\n\t\t\t\treturn new ListOMInputStream(lst, idx);\n\t\t\t} else {\n\t\t\t\treturn new OMInputStreamEnd(lst, idx);\n\t\t\t}\n\t\t}\n\t\n\t\t//\n\t\t// ### function makeOMInputStreamProxy (target)\n\t\t// #### @target {any} Delegate's constructor\n\t\t// Returns object with stream's properties\n\t\t// (has self-expanding tail)\n\t\t//\n\t\tfunction makeOMInputStreamProxy(target) {\n\t\t\treturn {\n\t\t\t\tmemo: {},\n\t\t\t\ttarget: target,\n\t\t\t\tidx: target.idx,\n\t\t\t\ttl: undefined,\n\t\t\t\ttype: function() {\n\t\t\t\t\treturn String;\n\t\t\t\t},\n\t\t\t\tupTo: OMInputStream.prototype.upTo,\n\t\t\t\thead: function() {\n\t\t\t\t\treturn target.head();\n\t\t\t\t},\n\t\t\t\ttail: function() {\n\t\t\t\t\treturn this.tl || (this.tl = makeOMInputStreamProxy(target.tail()));\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\n\t\t//\n\t\t// ### OMeta\n\t\t// the OMeta \"class\" and basic functionality\n\t\t//\n\t\tvar OMeta;\n\t\treturn OMeta = {\n\t\t\t_extend: function(child) {\n\t\t\t\treturn objectThatDelegatesTo(this, child);\n\t\t\t},\n\t\t\t_fail: fail,\n\t\t\t_enableTokens: function(rulesToTrack) {\n\t\t\t\tif(rulesToTrack == null) {\n\t\t\t\t\t// No rules to track were supplied and it wasn't even a reference they could be added to.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._enableTokens = function() {\n\t\t\t\t\tthrow 'Can only enable tokens once';\n\t\t\t\t};\n\t\t\t\tthis._tokensEnabled = returnTrue;\n\t\t\t\tthis._addToken = function(startInput, endInput, rule, ruleArgs) {\n\t\t\t\t\tif(rulesToTrack.indexOf(rule) !== -1 && startInput !== endInput) {\n\t\t\t\t\t\twhile(startInput.hasOwnProperty('target')) {\n\t\t\t\t\t\t\tstartInput = startInput.target;\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile(endInput.hasOwnProperty('target')) {\n\t\t\t\t\t\t\tendInput = endInput.target;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(!startInput.hasOwnProperty('tokens')) {\n\t\t\t\t\t\t\tstartInput.tokens = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstartInput.tokens.push([endInput.idx, rule, ruleArgs]);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\t\t\t_addToken: noop,\n\t\t\t_tokensEnabled: returnFalse,\n\t\t\t\n\t\t\t_enableBranchTracking: function(rulesToTrack) {\n\t\t\t\tvar branches = [];\n\t\t\t\tthis._enableBranchTracking = function() {\n\t\t\t\t\tthrow 'Can only enable tokens once';\n\t\t\t\t};\n\t\t\t\tthis._addBranch = function(rule, ruleArgs) {\n\t\t\t\t\tif(rulesToTrack.hasOwnProperty(rule)) {\n\t\t\t\t\t\tvar idx = this.input.idx;\n\t\t\t\t\t\tif(branches[idx] === undefined) {\n\t\t\t\t\t\t\tbranches[idx] = {};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbranches[idx][rule] = ruleArgs;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tthis._getBranches = function() {\n\t\t\t\t\treturn branches;\n\t\t\t\t};\n\t\t\t},\n\t\t\t_addBranch: noop,\n\t\t\t_getBranches: noop,\n\t\t\t\n\t\t\t_apply: function(rule) {\n\t\t\t\tvar memo = this.input.memo,\n\t\t\t\t\tmemoRec = memo[rule],\n\t\t\t\t\torigInput = this.input;\n\t\t\t\tthis._addBranch(rule, []);\n\t\t\t\tif (memoRec === undefined) {\n\t\n\t\t\t\t\tmemo[rule] = false;\n\t\t\t\t\tmemoRec = {\n\t\t\t\t\t\tans: this[rule](),\n\t\t\t\t\t\tnextInput: this.input\n\t\t\t\t\t};\n\t\t\t\t\tvar failer = memo[rule];\n\t\t\t\t\tmemo[rule] = memoRec;\n\t\n\t\t\t\t\t// If we tried to match this rule again without progressing the input at all\n\t\t\t\t\t// then retry matching it now that we have an answer for it, this allows for rules like `A = A 'x' | 'x'`\n\t\t\t\t\tif (failer === true) {\n\t\t\t\t\t\tvar self = this,\n\t\t\t\t\t\t\tsentinel = this.input,\n\t\t\t\t\t\t\tlookupFunc = function() {\n\t\t\t\t\t\t\t\tself.input = origInput;\n\t\t\t\t\t\t\t\tvar ans = self[rule]();\n\t\n\t\t\t\t\t\t\t\tif (self.input === sentinel) {\n\t\t\t\t\t\t\t\t\tthrow fail();\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\tmemoRec.ans = ans;\n\t\t\t\t\t\t\t\tmemoRec.nextInput = self.input;\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\twhile (lookup(lookupFunc, returnTrue, returnFalse));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (typeof memoRec === 'boolean') {\n\t\t\t\t\tmemo[rule] = true;\n\t\t\t\t\tthrow fail();\n\t\t\t\t}\n\t\t\t\tthis.input = memoRec.nextInput;\n\t\t\t\tthis._addToken(origInput, this.input, rule, []);\n\t\t\t\treturn memoRec.ans;\n\t\t\t},\n\t\n\t\t\t// note: _applyWithArgs and _superApplyWithArgs are not memoized, so they can't be left-recursive\n\t\t\t_applyWithArgs: function(rule) {\n\t\t\t\tvar origInput = this.input,\n\t\t\t\t\truleFn = this[rule],\n\t\t\t\t\truleFnArity = ruleFn.length,\n\t\t\t\t\truleArgs = new Array(Math.min(arguments.length - 1, ruleFnArity));\n\t\t\t\tfor(var i = 0; i < ruleArgs.length; ++i) {\n\t\t\t\t\truleArgs[i] = arguments[i + 1];\n\t\t\t\t}\n\t\t\t\tfor (var idx = arguments.length - 1; idx > ruleFnArity; idx--) { // prepend \"extra\" arguments in reverse order\n\t\t\t\t\tthis._prependInput(arguments[idx]);\n\t\t\t\t}\n\t\t\t\tthis._addBranch(rule, ruleArgs);\n\t\t\t\tvar ans = ruleFnArity === 0 ?\n\t\t\t\t\truleFn.call(this) :\n\t\t\t\t\truleFn.apply(this, ruleArgs);\n\t\t\t\tthis._addToken(origInput, this.input, rule, ruleArgs);\n\t\t\t\treturn ans;\n\t\t\t},\n\t\t\t_superApplyWithArgs: function(recv, rule) {\n\t\t\t\tvar origInput = recv.input,\n\t\t\t\t\truleFn = this[rule],\n\t\t\t\t\truleFnArity = ruleFn.length,\n\t\t\t\t\truleArgs = new Array(Math.min(arguments.length - 2, ruleFnArity));\n\t\t\t\tfor(var i = 0; i < ruleArgs.length; ++i) {\n\t\t\t\t\truleArgs[i] = arguments[i + 2];\n\t\t\t\t}\n\t\t\t\tfor (var idx = arguments.length - 1; idx > ruleFnArity + 1; idx--) { // prepend \"extra\" arguments in reverse order\n\t\t\t\t\trecv._prependInput(arguments[idx]);\n\t\t\t\t}\n\t\t\t\tthis._addBranch(rule, ruleArgs);\n\t\t\t\tvar ans = ruleFnArity === 0 ?\n\t\t\t\t\truleFn.call(recv) :\n\t\t\t\t\truleFn.apply(recv, ruleArgs);\n\t\t\t\tthis._addToken(origInput, recv.input, rule, ruleArgs);\n\t\t\t\treturn ans;\n\t\t\t},\n\t\t\t_prependInput: function(v) {\n\t\t\t\tthis.input = new OMInputStream(v, this.input);\n\t\t\t},\n\t\t\t\n\t\t\t// Use this if you want to disable prepending to the input (increases performances but requires using `Rule :param1 :param2 =` style parameter binding at all times)\n\t\t\t_disablePrependingInput: function() {\n\t\t\t\tthis._applyWithArgs = function(rule) {\n\t\t\t\t\tvar origInput = this.input,\n\t\t\t\t\t\truleArgs = new Array(arguments.length - 1);\n\t\t\t\t\tfor(var i = 0; i < ruleArgs.length; ++i) {\n\t\t\t\t\t\truleArgs[i] = arguments[i + 1];\n\t\t\t\t\t}\n\t\t\t\t\tthis._addBranch(rule, ruleArgs);\n\t\t\t\t\tvar ans = this[rule].apply(this, ruleArgs);\n\t\t\t\t\tthis._addToken(origInput, this.input, rule, ruleArgs);\n\t\t\t\t\treturn ans;\n\t\t\t\t};\n\t\t\t\tthis._superApplyWithArgs = function(recv, rule) {\n\t\t\t\t\tvar origInput = recv.input,\n\t\t\t\t\t\truleArgs = new Array(arguments.length - 2);\n\t\t\t\t\tfor(var i = 0; i < ruleArgs.length; ++i) {\n\t\t\t\t\t\truleArgs[i] = arguments[i + 2];\n\t\t\t\t\t}\n\t\t\t\t\tthis._addBranch(rule, ruleArgs);\n\t\t\t\t\tvar ans = this[rule].apply(recv, ruleArgs);\n\t\t\t\t\tthis._addToken(origInput, recv.input, rule, ruleArgs);\n\t\t\t\t\treturn ans;\n\t\t\t\t};\n\t\t\t},\n\t\n\t\t\t// if you want your grammar (and its subgrammars) to memoize parameterized rules, invoke this method on it:\n\t\t\tmemoizeParameterizedRules: function() {\n\t\t\t\tthis._prependInput = function(v) {\n\t\t\t\t\tvar newInput;\n\t\t\t\t\tif (isImmutable(v)) {\n\t\t\t\t\t\tnewInput = this.input[getTag(v)];\n\t\t\t\t\t\tif (!newInput) {\n\t\t\t\t\t\t\tnewInput = new OMInputStream(v, this.input);\n\t\t\t\t\t\t\tthis.input[getTag(v)] = newInput;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnewInput = new OMInputStream(v, this.input);\n\t\t\t\t\t}\n\t\t\t\t\tthis.input = newInput;\n\t\t\t\t};\n\t\t\t\tthis._applyWithArgs = function(rule) {\n\t\t\t\t\tvar origInput = this.input,\n\t\t\t\t\t\truleFn = this[rule],\n\t\t\t\t\t\truleFnArity = ruleFn.length,\n\t\t\t\t\t\truleArgs = new Array(Math.min(arguments.length - 1, ruleFnArity));\n\t\t\t\t\tfor(var i = 0; i < ruleArgs.length; ++i) {\n\t\t\t\t\t\truleArgs[i] = arguments[i + 1];\n\t\t\t\t\t}\n\t\t\t\t\tfor (var idx = arguments.length - 1; idx > ruleFnArity; idx--) { // prepend \"extra\" arguments in reverse order\n\t\t\t\t\t\tthis._prependInput(arguments[idx]);\n\t\t\t\t\t}\n\t\t\t\t\tthis._addBranch(rule, ruleArgs);\n\t\t\t\t\tvar ans = ruleFnArity === 0 ?\n\t\t\t\t\t\truleFn.call(this) :\n\t\t\t\t\t\truleFn.apply(this, ruleArgs);\n\t\t\t\t\tthis._addToken(origInput, this.input, rule, ruleArgs);\n\t\t\t\t\treturn ans;\n\t\t\t\t};\n\t\t\t},\n\t\n\t\t\t_pred: function(b) {\n\t\t\t\tif (b) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\n\t\t\t\tthrow fail();\n\t\t\t},\n\t\t\t_not: function(x) {\n\t\t\t\tvar self = this,\n\t\t\t\t\torigInput = this.input,\n\t\t\t\t\torigAddBranch = this._addBranch,\n\t\t\t\t\torigAddToken = this._addToken;\n\t\t\t\treturn always(function() {\n\t\t\t\t\treturn lookup(function() {\n\t\t\t\t\t\tx.call(self);\n\t\t\t\t\t}, throwFail, function() {\n\t\t\t\t\t\tself.input = origInput;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t});\n\t\t\t\t}, function() {\n\t\t\t\t\tself._addBranch = origAddBranch;\n\t\t\t\t\tself._addToken = origAddToken;\n\t\t\t\t});\n\t\t\t},\n\t\t\t_lookahead: function(x) {\n\t\t\t\tvar origInput = this.input,\n\t\t\t\t\tr = x.call(this);\n\t\t\t\tthis.input = origInput;\n\t\t\t\treturn r;\n\t\t\t},\n\t\t\t_or: function() {\n\t\t\t\tvar self = this,\n\t\t\t\t\torigInput = this.input,\n\t\t\t\t\tref = {},\n\t\t\t\t\tresult = ref,\n\t\t\t\t\tlookupFunc = function() {\n\t\t\t\t\t\tself.input = origInput;\n\t\t\t\t\t\tresult = arg.call(self);\n\t\t\t\t\t};\n\t\n\t\t\t\tfor (var idx = 0; idx < arguments.length; idx++) {\n\t\t\t\t\tvar arg = arguments[idx];\n\t\n\t\t\t\t\tlookup(lookupFunc);\n\t\n\t\t\t\t\tif (result !== ref) {\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tthrow fail();\n\t\t\t},\n\t\t\t_xor: function(ruleName) {\n\t\t\t\tvar self = this,\n\t\t\t\t\torigInput = this.input,\n\t\t\t\t\tidx = 1,\n\t\t\t\t\tnewInput,\n\t\t\t\t\tans,\n\t\t\t\t\targ,\n\t\t\t\t\tlookupFunc = function() {\n\t\t\t\t\t\tself.input = origInput;\n\t\t\t\t\t\tans = arg.call(self);\n\t\t\t\t\t\tif (newInput) {\n\t\t\t\t\t\t\tthrow 'more than one choice matched by \"exclusive-OR\" in ' + ruleName;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnewInput = self.input;\n\t\t\t\t\t};\n\t\n\t\t\t\twhile (idx < arguments.length) {\n\t\t\t\t\targ = arguments[idx];\n\t\n\t\t\t\t\tlookup(lookupFunc);\n\t\t\t\t\tidx++;\n\t\t\t\t}\n\t\n\t\t\t\tif (newInput) {\n\t\t\t\t\tthis.input = newInput;\n\t\t\t\t\treturn ans;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthrow fail();\n\t\t\t\t}\n\t\t\t},\n\t\t\tdisableXORs: function() {\n\t\t\t\tthis._xor = function() {\n\t\t\t\t\tvar self = this,\n\t\t\t\t\t\torigInput = this.input,\n\t\t\t\t\t\tref = {},\n\t\t\t\t\t\tresult = ref,\n\t\t\t\t\t\tlookupFunc = function() {\n\t\t\t\t\t\t\tself.input = origInput;\n\t\t\t\t\t\t\tresult = arg.call(self);\n\t\t\t\t\t\t};\n\t\n\t\t\t\t\tfor (var idx = 1; idx < arguments.length; idx++) {\n\t\t\t\t\t\tvar arg = arguments[idx];\n\t\n\t\t\t\t\t\tlookup(lookupFunc);\n\t\n\t\t\t\t\t\tif (result !== ref) {\n\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthrow fail();\n\t\t\t\t};\n\t\t\t},\n\t\t\t_opt: function(x) {\n\t\t\t\tvar self = this,\n\t\t\t\t\torigInput = this.input,\n\t\t\t\t\tans;\n\t\n\t\t\t\tlookup(function() {\n\t\t\t\t\tans = x.call(self);\n\t\t\t\t}, noop, function() {\n\t\t\t\t\tself.input = origInput;\n\t\t\t\t});\n\t\n\t\t\t\treturn ans;\n\t\t\t},\n\t\t\t_many: function(x, y) {\n\t\t\t\tvar self = this,\n\t\t\t\t\torigInput,\n\t\t\t\t\tans = y !== undefined ? [y] : [],\n\t\t\t\t\tresetAndReturnTrue = function () {\n\t\t\t\t\t\tself.input = origInput;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t},\n\t\t\t\t\tlookupFunc = function() {\n\t\t\t\t\t\tans.push(x.call(self));\n\t\t\t\t\t};\n\t\n\t\t\t\twhile (true) {\n\t\t\t\t\torigInput = this.input;\n\t\n\t\t\t\t\tvar result = lookup(lookupFunc, returnFalse, resetAndReturnTrue);\n\t\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn ans;\n\t\t\t},\n\t\t\t_many1: function(x) {\n\t\t\t\treturn this._many(x, x.call(this));\n\t\t\t},\n\t\t\t_form: function(x) {\n\t\t\t\tvar v = this.anything(),\n\t\t\t\t\torigInput = this.input;\n\t\t\t\tthis._pred(isSequenceable(v));\n\t\t\t\tthis.input = makeListOMInputStream(v, 0);\n\t\t\t\tx.call(this);\n\t\t\t\tthis._apply(\"end\");\n\t\t\t\tthis.input = origInput;\n\t\t\t\treturn v;\n\t\t\t},\n\t\t\t_consumedBy: function(x) {\n\t\t\t\tvar origInput = this.input;\n\t\t\t\tx.call(this);\n\t\t\t\treturn origInput.upTo(this.input);\n\t\t\t},\n\t\t\t_idxConsumedBy: function(x) {\n\t\t\t\tvar origInput = this.input;\n\t\t\t\tx.call(this);\n\t\t\t\treturn {fromIdx: origInput.idx, toIdx: this.input.idx};\n\t\t\t},\n\t\t\t_interleave: function(/* mode1, part1, mode2, part2 ..., moden, partn */) {\n\t\t\t\tvar currInput = this.input, ans = [], idx, args = new Array(arguments.length);\n\t\t\t\tfor(var i = 0; i < args.length; ++i) {\n\t\t\t\t\targs[i] = arguments[i];\n\t\t\t\t}\n\t\t\t\tfor (idx = 0; idx < args.length; idx += 2) {\n\t\t\t\t\tans[idx / 2] = (args[idx] === \"*\" || args[idx] === \"+\") ? [] : undefined;\n\t\t\t\t}\n\t\t\t\twhile (true) {\n\t\t\t\t\tvar allDone = true;\n\t\t\t\t\tidx = 0;\n\t\t\t\t\twhile (idx < args.length) {\n\t\t\t\t\t\tif (args[idx] !== \"0\") {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tthis.input = currInput;\n\t\t\t\t\t\t\t\tswitch (args[idx]) {\n\t\t\t\t\t\t\t\t\tcase \"*\":\n\t\t\t\t\t\t\t\t\t\tans[idx / 2].push(args[idx + 1].call(this));\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase \"+\":\n\t\t\t\t\t\t\t\t\t\tans[idx / 2].push(args[idx + 1].call(this));\n\t\t\t\t\t\t\t\t\t\targs[idx] = \"*\";\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase \"?\":\n\t\t\t\t\t\t\t\t\t\tans[idx / 2] = args[idx + 1].call(this);\n\t\t\t\t\t\t\t\t\t\targs[idx] = \"0\";\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase \"1\":\n\t\t\t\t\t\t\t\t\t\tans[idx / 2] = args[idx + 1].call(this);\n\t\t\t\t\t\t\t\t\t\targs[idx] = \"0\";\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tthrow \"invalid mode '\" + args[idx] + \"' in OMeta._interleave\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcurrInput = this.input;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcatch (f) {\n\t\t\t\t\t\t\t\tif (!(f instanceof SyntaxError)) {\n\t\t\t\t\t\t\t\t\tthrow f;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// if this (failed) part's mode is \"1\" or \"+\", we're not done yet\n\t\t\t\t\t\t\t\tallDone = allDone && (args[idx] === \"*\" || args[idx] === \"?\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tidx += 2;\n\t\t\t\t\t}\n\t\t\t\t\tif (idx === args.length) {\n\t\t\t\t\t\tif (allDone) {\n\t\t\t\t\t\t\treturn ans;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthrow fail();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t_currIdx: function() {\n\t\t\t\treturn this.input.idx;\n\t\t\t},\n\t\n\t\t\t// some basic rules\n\t\t\tanything: function() {\n\t\t\t\tvar r = this.input.head();\n\t\t\t\tthis.input = this.input.tail();\n\t\t\t\treturn r;\n\t\t\t},\n\t\t\t// This is useful for case insensitive matching, as the `.toLowerCase()` will be memoised.\n\t\t\tlowerCaseAnything: function() {\n\t\t\t\treturn this.anything().toLowerCase();\n\t\t\t},\n\t\t\tend: function() {\n\t\t\t\treturn this._not(this.anything);\n\t\t\t},\n\t\t\tpos: function() {\n\t\t\t\treturn this.input.idx;\n\t\t\t},\n\t\t\tempty: returnTrue,\n\t\t\tapply: function(r) {\n\t\t\t\treturn this._apply(r);\n\t\t\t},\n\t\t\tforeign: function(grammar, ruleName) {\n\t\t\t\tvar ans,\n\t\t\t\t\tgrammarInstance = grammar._extend({input: makeOMInputStreamProxy(this.input)});\n\t\t\t\tif(this._tokensEnabled()) {\n\t\t\t\t\tgrammarInstance._enableTokens();\n\t\t\t\t}\n\t\t\t\tans = grammarInstance._apply(ruleName);\n\t\t\t\t// No need to merge tokens as they will automatically have been placed on the root target.\n\t\t\t\tthis.input = grammarInstance.input.target;\n\t\t\t\treturn ans;\n\t\t\t},\n\t\n\t\t\t// some useful \"derived\" rules\n\t\t\texactly: function(wanted) {\n\t\t\t\tthis._pred(wanted === this.anything());\n\t\t\t\treturn wanted;\n\t\t\t},\n\t\t\t\"true\": function() {\n\t\t\t\tvar r = this.anything();\n\t\t\t\tthis._pred(r === true);\n\t\t\t\treturn r;\n\t\t\t},\n\t\t\t\"false\": function() {\n\t\t\t\tvar r = this.anything();\n\t\t\t\tthis._pred(r === false);\n\t\t\t\treturn r;\n\t\t\t},\n\t\t\t\"undefined\": function() {\n\t\t\t\tvar r = this.anything();\n\t\t\t\tthis._pred(r === undefined);\n\t\t\t\treturn r;\n\t\t\t},\n\t\t\tnumber: function() {\n\t\t\t\tvar r = this.anything();\n\t\t\t\tthis._pred(typeof r === \"number\");\n\t\t\t\treturn r;\n\t\t\t},\n\t\t\tstring: function() {\n\t\t\t\tvar r = this.anything();\n\t\t\t\tthis._pred(typeof r === \"string\");\n\t\t\t\treturn r;\n\t\t\t},\n\t\t\t\"char\": function() {\n\t\t\t\tvar r = this.anything();\n\t\t\t\tthis._pred(typeof r === \"string\" && r.length === 1);\n\t\t\t\treturn r;\n\t\t\t},\n\t\t\tspace: function() {\n\t\t\t\tvar r = this._apply(\"char\");\n\t\t\t\tthis._pred(r.charCodeAt(0) <= 32);\n\t\t\t\treturn r;\n\t\t\t},\n\t\t\tspaces: function() {\n\t\t\t\treturn this._many(function() {\n\t\t\t\t\treturn this._apply(\"space\");\n\t\t\t\t});\n\t\t\t},\n\t\t\tdigit: function() {\n\t\t\t\tvar r = this._apply(\"char\");\n\t\t\t\tthis._pred(r >= \"0\" && r <= \"9\");\n\t\t\t\treturn r;\n\t\t\t},\n\t\t\tlower: function() {\n\t\t\t\tvar r = this._apply(\"char\");\n\t\t\t\tthis._pred(r >= \"a\" && r <= \"z\");\n\t\t\t\treturn r;\n\t\t\t},\n\t\t\tupper: function() {\n\t\t\t\tvar r = this._apply(\"char\");\n\t\t\t\tthis._pred(r >= \"A\" && r <= \"Z\");\n\t\t\t\treturn r;\n\t\t\t},\n\t\t\tletter: function() {\n\t\t\t\tvar r = this._apply(\"char\");\n\t\t\t\tthis._pred(r >= \"a\" && r <= \"z\" || r >= \"A\" && r <= \"Z\");\n\t\t\t\treturn r;\n\t\t\t\t// Note: The following code will potentially make use of more memoisations,\n\t\t\t\t// however it will have more overhead and it is unlikely that letter/upper/lower calls will be mixed in a memoisable way.\n\t\t\t\t// return this._or(function() { return this._apply(\"lower\"); },\n\t\t\t\t\t\t\t\t\t\t\t\t// function() { return this._apply(\"upper\"); });\n\t\t\t},\n\t\t\tletterOrDigit: function() {\n\t\t\t\treturn this._or(function() { return this._apply(\"letter\"); },\n\t\t\t\t\tfunction() { return this._apply(\"digit\"); });\n\t\t\t},\n\t\t\tfirstAndRest: function(first, rest) {\n\t\t\t\treturn this._many(function() {\n\t\t\t\t\treturn this._apply(rest);\n\t\t\t\t}, this._apply(first));\n\t\t\t},\n\t\t\tseq: function(xs) {\n\t\t\t\tfor (var idx = 0; idx < xs.length; idx++) {\n\t\t\t\t\tthis._applyWithArgs(\"exactly\", xs[idx]);\n\t\t\t\t}\n\t\t\t\treturn xs;\n\t\t\t},\n\t\t\tnotLast: function(rule) {\n\t\t\t\tvar r = this._apply(rule);\n\t\t\t\tthis._lookahead(function() { return this._apply(rule); });\n\t\t\t\treturn r;\n\t\t\t},\n\t\t\tlistOf: function(rule, delim) {\n\t\t\t\treturn this._or(function() {\n\t\t\t\t\t\tvar r = this._apply(rule);\n\t\t\t\t\t\treturn this._many(function() {\n\t\t\t\t\t\t\t\tthis._applyWithArgs(\"token\", delim);\n\t\t\t\t\t\t\t\treturn this._apply(rule);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tr\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t\tfunction() {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t},\n\t\t\ttoken: function(cs) {\n\t\t\t\tthis._apply(\"spaces\");\n\t\t\t\treturn this._applyWithArgs(\"seq\", cs);\n\t\t\t},\n\t\t\tfromTo: function (x, y) {\n\t\t\t\treturn this._consumedBy(function() {\n\t\t\t\t\tthis._applyWithArgs(\"seq\", x);\n\t\t\t\t\tthis._many(function() {\n\t\t\t\t\t\tthis._not(function() { this._applyWithArgs(\"seq\", y); });\n\t\t\t\t\t\tthis._apply(\"char\");\n\t\t\t\t\t});\n\t\t\t\t\tthis._applyWithArgs(\"seq\", y);\n\t\t\t\t});\n\t\t\t},\n\t\t\thexDigit: function() {\n\t\t\t\tvar v, c;\n\t\t\t\tc = this._apply(\"char\");\n\t\t\t\tv = \"0123456789abcdef\".indexOf(c.toLowerCase());\n\t\t\t\tif(v === -1) {\n\t\t\t\t\tthrow this._fail();\n\t\t\t\t}\n\t\t\t\treturn v;\n\t\t\t},\n\t\t\tescapedChar: function() {\n\t\t\t\tvar s, c;\n\t\t\t\tthis._applyWithArgs(\"exactly\", \"\\\\\");\n\t\t\t\tc = this.anything();\n\t\t\t\tswitch (c) {\n\t\t\t\t\tcase \"'\":\treturn \"'\";\n\t\t\t\t\tcase '\"':\treturn '\"';\n\t\t\t\t\tcase '\\\\':\treturn '\\\\';\n\t\t\t\t\tcase 'b':\treturn '\\b';\n\t\t\t\t\tcase 'f':\treturn '\\f';\n\t\t\t\t\tcase 'n':\treturn '\\n';\n\t\t\t\t\tcase 'r':\treturn '\\r';\n\t\t\t\t\tcase 't':\treturn '\\t';\n\t\t\t\t\tcase 'v':\treturn '\\v';\n\t\t\t\t\tcase \"u\":\n\t\t\t\t\t\ts = this._consumedBy(function() {\n\t\t\t\t\t\t\tthis._apply(\"hexDigit\");\n\t\t\t\t\t\t\tthis._apply(\"hexDigit\");\n\t\t\t\t\t\t\tthis._apply(\"hexDigit\");\n\t\t\t\t\t\t\tthis._apply(\"hexDigit\");\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn String.fromCharCode(parseInt(s, 16));\n\t\t\t\t\tcase \"x\":\n\t\t\t\t\t\ts = this._consumedBy(function() {\n\t\t\t\t\t\t\tthis._apply(\"hexDigit\");\n\t\t\t\t\t\t\tthis._apply(\"hexDigit\");\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn String.fromCharCode(parseInt(s, 16));\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn c;\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\tinitialize: noop,\n\t\t\t// match and matchAll are a grammar's \"public interface\"\n\t\t\tmatch: function(obj, rule, args, matchFailed) {\n\t\t\t\treturn this.matchAll([obj], rule, args, matchFailed);\n\t\t\t},\n\t\t\tmatchAll: function(listyObj, rule, args, matchFailed) {\n\t\t\t\tvar m = this.createInstance();\n\t\t\t\treturn m.matchAll(listyObj, rule, args, matchFailed);\n\t\t\t},\n\t\t\tcreateInstance: function() {\n\t\t\t\tvar m = objectThatDelegatesTo(this);\n\t\t\t\tm.setInput = function(listyObj) {\n\t\t\t\t\treturn this.inputHead = this.input = makeListOMInputStream(listyObj, 0);\n\t\t\t\t};\n\t\t\t\tm.matchAll = function(listyObj, rule, args, matchFailed) {\n\t\t\t\t\tif (args == null) {\n\t\t\t\t\t\targs = [];\n\t\t\t\t\t}\n\t\t\t\t\tvar realArgs = [rule];\n\t\t\t\t\tfor (var idx = 0; idx < args.length; idx++) {\n\t\t\t\t\t\trealArgs.push(args[idx]);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.setInput(listyObj);\n\t\t\t\t\treturn lookup(function() {\n\t\t\t\t\t\treturn realArgs.length === 1 ?\n\t\t\t\t\t\t\t\tm._apply.call(m, realArgs[0]) :\n\t\t\t\t\t\t\t\tm._applyWithArgs.apply(m, realArgs);\n\t\t\t\t\t}, function(value) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}, function(err) {\n\t\t\t\t\t\terr.OMeta = {};\n\t\t\t\t\t\tvar input = m.input;\n\t\t\t\t\t\tif (input.idx !== undefined) {\n\t\t\t\t\t\t\twhile (input.tl !== undefined && input.tl.idx !== undefined) {\n\t\t\t\t\t\t\t\tinput = input.tl;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\terr.OMeta.idx = input.idx - 1;\n\t\t\t\t\t\t\tif(typeof input.lst == 'string') {\n\t\t\t\t\t\t\t\tvar source = input.lst,\n\t\t\t\t\t\t\t\t\ti = 0,\n\t\t\t\t\t\t\t\t\tchar,\n\t\t\t\t\t\t\t\t\tstart;\n\t\t\t\t\t\t\t\terr.OMeta.line = 1;\n\t\t\t\t\t\t\t\terr.OMeta.col = 0;\n\t\t\t\t\t\t\t\tfor(; i < err.OMeta.idx; i++) {\n\t\t\t\t\t\t\t\t\tchar = source.charAt(i);\n\t\t\t\t\t\t\t\t\terr.OMeta.col++;\n\t\t\t\t\t\t\t\t\tif(char === '\\n') {\n\t\t\t\t\t\t\t\t\t\terr.OMeta.line++;\n\t\t\t\t\t\t\t\t\t\terr.OMeta.col = 0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (typeof matchFailed === 'function') {\n\t\t\t\t\t\t\treturn matchFailed(m, err);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\tm.match = function(obj, aRule, args, matchFailed) {\n\t\t\t\t\treturn this.matchAll([obj], aRule, args, matchFailed);\n\t\t\t\t};\n\t\t\t\t// This will reuse memoisations when possible, currently only works for string inputs.\n\t\t\t\tm.enableReusingMemoizations = function(sideEffectingRules) {\n\t\t\t\t\tsideEffectingRules = sideEffectingRules || [];\n\t\t\t\t\tthis.setInput = function(listyObj) {\n\t\t\t\t\t\tvar input = this.inputHead;\n\t\t\t\t\t\tif(input && typeof input.lst === 'string' && typeof listyObj === 'string') {\n\t\t\t\t\t\t\tvar previousText = input.lst;\n\t\t\t\t\t\t\tfor(var divergencePoint = 0, l = Math.min(listyObj.length, previousText.length); divergencePoint < l; divergencePoint++) {\n\t\t\t\t\t\t\t\tif(listyObj.charAt(divergencePoint) !== previousText.charAt(divergencePoint)) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// We will have stepped one past the divergence point, so decrement to correct.\n\t\t\t\t\t\t\tdivergencePoint--;\n\t\t\t\t\t\t\t// Step back to the start of any white space to minimise issues with keeping no longer correct memoisations\n\t\t\t\t\t\t\twhile(/\\s/.test(listyObj.charAt(divergencePoint))) {\n\t\t\t\t\t\t\t\tdivergencePoint--;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(divergencePoint > 0) {\n\t\t\t\t\t\t\t\t// If we diverge after the first character then fixup the memoisations.\n\t\t\t\t\t\t\t\tvar cleanInput = function(divergencePoint) {\n\t\t\t\t\t\t\t\t\tvar secondaryDivergencePoint;\n\t\t\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\t\t\tvar memo = input.memo,\n\t\t\t\t\t\t\t\t\t\t\tmemoTokens = input.tokens,\n\t\t\t\t\t\t\t\t\t\t\truleNames = Object.keys(memo);\n\t\t\t\t\t\t\t\t\t\t// For each memoised rule, delete it if it is a boolean (failer - it may now parse)\n\t\t\t\t\t\t\t\t\t\t// or if it is a rule with side effects.\n\t\t\t\t\t\t\t\t\t\t// or if it ends on or after the point of divergence (the nextInput is guaranteed to be wrong,\n\t\t\t\t\t\t\t\t\t\t// even if the rule will still pass - for the ending on the divergence point then it might be a case that with the change the rule will now encompass more)\n\t\t\t\t\t\t\t\t\t\t// There should be no need to update the memoised new inputs - as we traverse through inputs by idx they should be updated (as they should be references).\n\t\t\t\t\t\t\t\t\t\tfor(var i = 0; i < ruleNames.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\tvar ruleName = ruleNames[i];\n\t\t\t\t\t\t\t\t\t\t\tif(typeof memo[ruleName] === 'boolean'\n\t\t\t\t\t\t\t\t\t\t\t\t|| sideEffectingRules.indexOf(ruleName) !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t|| memo[ruleName].nextInput.idx >= divergencePoint) {\n\t\t\t\t\t\t\t\t\t\t\t\tdelete memo[ruleName];\n\t\t\t\t\t\t\t\t\t\t\t} else if(input.idx > secondaryDivergencePoint && !OMeta.hasOwnProperty(ruleName)) {\n\t\t\t\t\t\t\t\t\t\t\t\tsecondaryDivergencePoint = input.idx;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t// Remove tokens that end on or after the divergence point, similar to memoisation\n\t\t\t\t\t\t\t\t\t\tif(memoTokens != null) {\n\t\t\t\t\t\t\t\t\t\t\tvar duplicateTokens = {};\n\t\t\t\t\t\t\t\t\t\t\tfor(var i = memoTokens.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\t\t\t\t\t\tif(memoTokens[i][0] >= divergencePoint || duplicateTokens[memoTokens[i][1]]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tmemoTokens.splice(i, 1);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\t\t\t\tduplicateTokens[memoTokens[i][1]] = true;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tinput.lst = listyObj;\n\t\t\t\t\t\t\t\t\t} while(input.idx < divergencePoint && (input = input.tail()));\n\t\t\t\t\t\t\t\t\treturn secondaryDivergencePoint;\n\t\t\t\t\t\t\t\t};\n\t\n\t\t\t\t\t\t\t\tdivergencePoint = cleanInput(divergencePoint);\n\t\n\t\t\t\t\t\t\t\tif(divergencePoint > 0) {\n\t\t\t\t\t\t\t\t\tcleanInput(divergencePoint);\n\t\t\t\t\t\t\t\t\tdelete input.tl;\n\t\t\t\t\t\t\t\t\treturn this.input = this.inputHead;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// If we couldn't reuse memoisations for whatever reason then just create a new input.\n\t\t\t\t\t\treturn this.input = this.inputHead = makeListOMInputStream(listyObj, 0);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\n\t\t\t\tm.initialize();\n\t\t\t\treturn m;\n\t\t\t}\n\t\t};\n\t}));\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!function(root, factory) {\n\t     true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__, exports, __webpack_require__(28), __webpack_require__(30) ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : \"object\" == typeof exports ? factory(require, exports, require(\"ometa-js\").core) : factory(function(moduleName) {\n\t        return root[moduleName];\n\t    }, root, root.OMeta);\n\t}(this, function(require, exports, OMeta) {\n\t    var SBVRLibs = __webpack_require__(30).SBVRLibs, LFValidator = exports.LFValidator = SBVRLibs._extend({\n\t        trans: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, a, t;\n\t            this._form(function() {\n\t                t = this.anything();\n\t                return a = this._applyWithArgs(\"apply\", t);\n\t            });\n\t            return a;\n\t        },\n\t        token: function(x) {\n\t            var $elf = this, _fromIdx = this.input.idx, a, t;\n\t            this._form(function() {\n\t                t = this.anything();\n\t                this._pred(t == x);\n\t                return a = this._applyWithArgs(\"apply\", x);\n\t            });\n\t            return a;\n\t        },\n\t        letters: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, l;\n\t            l = this._many1(function() {\n\t                return this._apply(\"letter\");\n\t            });\n\t            this._many(function() {\n\t                return this._apply(\"space\");\n\t            });\n\t            return l.join(\"\");\n\t        },\n\t        Number: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, n;\n\t            n = this._apply(\"number\");\n\t            this._pred(!isNaN(n));\n\t            return [ \"Number\", parseInt(n, 10) ];\n\t        },\n\t        Model: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, x, xs;\n\t            xs = [];\n\t            this._many(function() {\n\t                x = this._or(function() {\n\t                    return this._applyWithArgs(\"token\", \"Vocabulary\");\n\t                }, function() {\n\t                    return this._applyWithArgs(\"token\", \"Term\");\n\t                }, function() {\n\t                    return this._applyWithArgs(\"token\", \"Name\");\n\t                }, function() {\n\t                    return this._applyWithArgs(\"token\", \"FactType\");\n\t                }, function() {\n\t                    return this._applyWithArgs(\"token\", \"Rule\");\n\t                });\n\t                return this._opt(function() {\n\t                    this._pred(null != x);\n\t                    return xs.push(x);\n\t                });\n\t            });\n\t            return [ \"Model\" ].concat(xs);\n\t        },\n\t        FactType: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, attrs, factType, identifier, verb;\n\t            factType = [];\n\t            this._many(function() {\n\t                identifier = this._or(function() {\n\t                    return this._applyWithArgs(\"token\", \"Term\");\n\t                }, function() {\n\t                    return this._applyWithArgs(\"token\", \"Name\");\n\t                });\n\t                verb = this._applyWithArgs(\"token\", \"Verb\");\n\t                return factType = factType.concat([ identifier, verb ]);\n\t            });\n\t            this._opt(function() {\n\t                identifier = this._or(function() {\n\t                    return this._applyWithArgs(\"token\", \"Term\");\n\t                }, function() {\n\t                    return this._applyWithArgs(\"token\", \"Name\");\n\t                });\n\t                return factType.push(identifier);\n\t            });\n\t            this._opt(function() {\n\t                return this._lookahead(function() {\n\t                    attrs = this.anything();\n\t                    return this._applyWithArgs(\"AddFactType\", factType, factType);\n\t                });\n\t            });\n\t            return this._applyWithArgs(\"addAttributes\", [ \"FactType\" ].concat(factType));\n\t        },\n\t        Vocabulary: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, vocab;\n\t            vocab = this.anything();\n\t            this._applyWithArgs(\"AddVocabulary\", vocab, vocab);\n\t            return this._applyWithArgs(\"addAttributes\", [ \"Vocabulary\", vocab ]);\n\t        },\n\t        Term: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, data, term, vocab;\n\t            term = this.anything();\n\t            vocab = this.anything();\n\t            return this._or(function() {\n\t                data = this._or(function() {\n\t                    return this._applyWithArgs(\"token\", \"Number\");\n\t                }, function() {\n\t                    return this._apply(\"Value\");\n\t                });\n\t                return [ \"Term\", term, vocab, data ];\n\t            }, function() {\n\t                return this._applyWithArgs(\"addAttributes\", [ \"Term\", term, vocab ]);\n\t            });\n\t        },\n\t        Name: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, name, vocab;\n\t            name = this.anything();\n\t            vocab = this.anything();\n\t            return this._applyWithArgs(\"addAttributes\", [ \"Name\", name, vocab ]);\n\t        },\n\t        Verb: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, negated, v;\n\t            v = this.anything();\n\t            negated = this._or(function() {\n\t                return this._apply(\"true\");\n\t            }, function() {\n\t                return this._apply(\"false\");\n\t            });\n\t            return [ \"Verb\", v, negated ];\n\t        },\n\t        Disjunction: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, xs;\n\t            xs = this._many(function() {\n\t                return this._apply(\"trans\");\n\t            });\n\t            return [ \"Disjunction\" ].concat(xs);\n\t        },\n\t        Conjunction: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, xs;\n\t            xs = this._many(function() {\n\t                return this._apply(\"trans\");\n\t            });\n\t            return [ \"Conjunction\" ].concat(xs);\n\t        },\n\t        Rule: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, t, x;\n\t            x = this._or(function() {\n\t                return this._applyWithArgs(\"token\", \"ObligationFormulation\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"token\", \"NecessityFormulation\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"token\", \"PossibilityFormulation\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"token\", \"PermissibilityFormulation\");\n\t            });\n\t            t = this._applyWithArgs(\"token\", \"StructuredEnglish\");\n\t            return [ \"Rule\", x, t ];\n\t        },\n\t        addAttributes: function(termOrFactType) {\n\t            var $elf = this, _fromIdx = this.input.idx, attrName, attrVal, attrs, attrsFound;\n\t            this._or(function() {\n\t                return this._apply(\"end\");\n\t            }, function() {\n\t                attrsFound = {};\n\t                attrs = [ \"Attributes\" ];\n\t                this._form(function() {\n\t                    this._applyWithArgs(\"exactly\", \"Attributes\");\n\t                    this._many(function() {\n\t                        return this._form(function() {\n\t                            attrName = this.anything();\n\t                            attrVal = this._applyWithArgs(\"ApplyFirstExisting\", [ \"Attr\" + attrName, \"DefaultAttr\" ], [ termOrFactType ]);\n\t                            return this._opt(function() {\n\t                                this._pred(null != attrVal);\n\t                                attrsFound[attrName] = attrVal;\n\t                                return attrs.push([ attrName, attrVal ]);\n\t                            });\n\t                        });\n\t                    });\n\t                    return this._apply(\"end\");\n\t                });\n\t                return this._applyWithArgs(\"defaultAttributes\", termOrFactType, attrsFound, attrs);\n\t            });\n\t            return termOrFactType;\n\t        },\n\t        DefaultAttr: function(tableID) {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this.anything();\n\t        },\n\t        AttrConceptType: function(termOrFactType) {\n\t            var $elf = this, _fromIdx = this.input.idx, conceptType, term, vocab;\n\t            term = this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Term\");\n\t                conceptType = this.anything();\n\t                return vocab = this.anything();\n\t            });\n\t            this.vocabularies[this.currentVocabulary].ConceptTypes[termOrFactType] = term;\n\t            return term;\n\t        },\n\t        AttrDefinition: function(termOrFactType) {\n\t            var $elf = this, _fromIdx = this.input.idx, values;\n\t            return this._or(function() {\n\t                return this._form(function() {\n\t                    this._applyWithArgs(\"exactly\", \"Enum\");\n\t                    return values = this._many1(function() {\n\t                        return this.anything();\n\t                    });\n\t                });\n\t            }, function() {\n\t                return this._apply(\"trans\");\n\t            });\n\t        },\n\t        AttrNecessity: function(termOrFactType) {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._applyWithArgs(\"token\", \"Rule\");\n\t            }, function() {\n\t                return this._apply(\"DefaultAttr\");\n\t            });\n\t        },\n\t        AttrSynonymousForm: function(factType) {\n\t            var $elf = this, _fromIdx = this.input.idx, synForm;\n\t            synForm = this.anything();\n\t            this._applyWithArgs(\"AddFactType\", synForm, factType.slice(1));\n\t            return synForm;\n\t        },\n\t        StructuredEnglish: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, a;\n\t            a = this.anything();\n\t            return [ \"StructuredEnglish\", a ];\n\t        },\n\t        ObligationFormulation: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, xs;\n\t            xs = this._many(function() {\n\t                return this._apply(\"trans\");\n\t            });\n\t            return [ \"ObligationFormulation\" ].concat(xs);\n\t        },\n\t        NecessityFormulation: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, xs;\n\t            xs = this._many(function() {\n\t                return this._apply(\"trans\");\n\t            });\n\t            return [ \"NecessityFormulation\" ].concat(xs);\n\t        },\n\t        PossibilityFormulation: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, xs;\n\t            xs = this._many(function() {\n\t                return this._apply(\"trans\");\n\t            });\n\t            return [ \"PossibilityFormulation\" ].concat(xs);\n\t        },\n\t        PermissibilityFormulation: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, xs;\n\t            xs = this._many(function() {\n\t                return this._apply(\"trans\");\n\t            });\n\t            return [ \"PermissibilityFormulation\" ].concat(xs);\n\t        },\n\t        LogicalNegation: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, xs;\n\t            xs = this._apply(\"trans\");\n\t            return [ \"LogicalNegation\" ].concat([ xs ]);\n\t        },\n\t        quant: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, x;\n\t            return this._or(function() {\n\t                return this._applyWithArgs(\"token\", \"Disjunction\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"token\", \"Conjunction\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"token\", \"UniversalQuantification\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"token\", \"ExistentialQuantification\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"token\", \"ExactQuantification\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"token\", \"AtMostNQuantification\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"token\", \"AtLeastNQuantification\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"token\", \"NumericalRangeQuantification\");\n\t            }, function() {\n\t                this._form(function() {\n\t                    this._applyWithArgs(\"exactly\", \"LogicalNegation\");\n\t                    return x = this._apply(\"quant\");\n\t                });\n\t                return [ \"LogicalNegation\", x ];\n\t            });\n\t        },\n\t        UniversalQuantification: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, v, xs;\n\t            v = this._applyWithArgs(\"token\", \"Variable\");\n\t            xs = this._many(function() {\n\t                return this._apply(\"trans\");\n\t            });\n\t            return [ \"UniversalQuantification\", v ].concat(xs);\n\t        },\n\t        ExistentialQuantification: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, v, xs;\n\t            v = this._applyWithArgs(\"token\", \"Variable\");\n\t            xs = this._many(function() {\n\t                return this._apply(\"trans\");\n\t            });\n\t            return [ \"ExistentialQuantification\", v ].concat(xs);\n\t        },\n\t        ExactQuantification: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, i, v, xs;\n\t            i = this._applyWithArgs(\"token\", \"Cardinality\");\n\t            v = this._applyWithArgs(\"token\", \"Variable\");\n\t            xs = this._many(function() {\n\t                return this._apply(\"trans\");\n\t            });\n\t            return [ \"ExactQuantification\", i, v ].concat(xs);\n\t        },\n\t        AtMostNQuantification: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, a, v, xs;\n\t            a = this._applyWithArgs(\"token\", \"MaximumCardinality\");\n\t            v = this._applyWithArgs(\"token\", \"Variable\");\n\t            xs = this._many(function() {\n\t                return this._apply(\"trans\");\n\t            });\n\t            return [ \"AtMostNQuantification\", a, v ].concat(xs);\n\t        },\n\t        AtLeastNQuantification: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, i, v, xs;\n\t            i = this._applyWithArgs(\"token\", \"MinimumCardinality\");\n\t            v = this._applyWithArgs(\"token\", \"Variable\");\n\t            xs = this._many(function() {\n\t                return this._apply(\"trans\");\n\t            });\n\t            return [ \"AtLeastNQuantification\", i, v ].concat(xs);\n\t        },\n\t        NumericalRangeQuantification: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, a, i, v, xs;\n\t            i = this._applyWithArgs(\"token\", \"MinimumCardinality\");\n\t            a = this._applyWithArgs(\"token\", \"MaximumCardinality\");\n\t            v = this._applyWithArgs(\"token\", \"Variable\");\n\t            xs = this._many(function() {\n\t                return this._apply(\"trans\");\n\t            });\n\t            return [ \"NumericalRangeQuantification\", i, a, v ].concat(xs);\n\t        },\n\t        Cardinality: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, n;\n\t            n = this._applyWithArgs(\"token\", \"Number\");\n\t            return [ \"Cardinality\", n ];\n\t        },\n\t        MinimumCardinality: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, n;\n\t            n = this._applyWithArgs(\"token\", \"Number\");\n\t            return [ \"MinimumCardinality\", n ];\n\t        },\n\t        MaximumCardinality: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, n;\n\t            n = this._applyWithArgs(\"token\", \"Number\");\n\t            return [ \"MaximumCardinality\", n ];\n\t        },\n\t        Variable: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, num, term, w;\n\t            num = this._applyWithArgs(\"token\", \"Number\");\n\t            term = this._applyWithArgs(\"token\", \"Term\");\n\t            w = this._many(function() {\n\t                return this._or(function() {\n\t                    return this._applyWithArgs(\"token\", \"AtomicFormulation\");\n\t                }, function() {\n\t                    return this._apply(\"quant\");\n\t                });\n\t            });\n\t            return [ \"Variable\", num, term ].concat(w);\n\t        },\n\t        Real: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, num;\n\t            num = this._apply(\"number\");\n\t            this._pred(!isNaN(num));\n\t            return [ \"Real\", num ];\n\t        },\n\t        Integer: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, num;\n\t            num = this._apply(\"number\");\n\t            this._pred(!isNaN(num));\n\t            return [ \"Integer\", num ];\n\t        },\n\t        Text: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, text;\n\t            text = this.anything();\n\t            return [ \"Text\", text ];\n\t        },\n\t        Value: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._applyWithArgs(\"token\", \"Real\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"token\", \"Integer\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"token\", \"Text\");\n\t            });\n\t        },\n\t        RoleBinding: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, bindIdentifier, identifier;\n\t            identifier = this._or(function() {\n\t                return this._applyWithArgs(\"token\", \"Term\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"token\", \"Name\");\n\t            });\n\t            bindIdentifier = this._or(function() {\n\t                return this._apply(\"number\");\n\t            }, function() {\n\t                return this._apply(\"Value\");\n\t            });\n\t            return [ \"RoleBinding\", identifier, bindIdentifier ];\n\t        },\n\t        AtomicFormulation: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, b, f;\n\t            f = this._applyWithArgs(\"token\", \"FactType\");\n\t            b = this._many(function() {\n\t                return this._applyWithArgs(\"token\", \"RoleBinding\");\n\t            });\n\t            return [ \"AtomicFormulation\", f ].concat(b);\n\t        }\n\t    });\n\t    LFValidator.initialize = function() {\n\t        SBVRLibs.initialize.call(this);\n\t    };\n\t    LFValidator.defaultAttributes = function(termOrVerb, attrsFound, attrs) {\n\t        termOrVerb.push(attrs);\n\t    };\n\t});\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!function(root, factory) {\n\t     true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__, exports, __webpack_require__(28), __webpack_require__(4) ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : \"object\" == typeof exports ? factory(require, exports, require(\"ometa-js\").core) : factory(function(moduleName) {\n\t        return root[moduleName];\n\t    }, root, root.OMeta);\n\t}(this, function(require, exports, OMeta) {\n\t    var _ = __webpack_require__(4), SBVRLibs = exports.SBVRLibs = OMeta._extend({});\n\t    SBVRLibs.initialize = function() {\n\t        this.currentVocabulary = \"\";\n\t        this.vocabularies = {};\n\t        this.factTypes = {};\n\t    };\n\t    SBVRLibs.ApplyFirstExisting = function(rules, ruleArgs) {\n\t        null == ruleArgs && (ruleArgs = []);\n\t        for (var i = 0; i < rules.length; i++) if (null != this[rules[i]]) return ruleArgs.length > 0 ? this._applyWithArgs.apply(this, [ rules[i] ].concat(ruleArgs)) : this._apply(rules[i], ruleArgs);\n\t    };\n\t    SBVRLibs.IdentifiersEqual = function(a, b) {\n\t        return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n\t    };\n\t    SBVRLibs.FollowConceptType = function(identifier) {\n\t        var conceptTypes = this.vocabularies[identifier[2]].ConceptTypes;\n\t        identifier = identifier.slice(0, 3);\n\t        return !!conceptTypes.hasOwnProperty(identifier) && conceptTypes[identifier];\n\t    };\n\t    SBVRLibs.AddVocabulary = function(vocabulary, baseSynonym) {\n\t        this.currentVocabulary = baseSynonym;\n\t        this.vocabularies.hasOwnProperty(baseSynonym) || (this.vocabularies[baseSynonym] = {\n\t            Term: {},\n\t            Name: {},\n\t            IdentifierChildren: {},\n\t            ConceptTypes: {}\n\t        });\n\t        this.vocabularies.hasOwnProperty(vocabulary) || (this.vocabularies[vocabulary] = this.vocabularies[baseSynonym]);\n\t    };\n\t    var formatFactType = function(factType) {\n\t        return _.map(factType, 1).join(\" \");\n\t    };\n\t    SBVRLibs.AddFactType = function(factType, realFactType) {\n\t        for (var mappedFactType = [], matchingFactTypes = _.isEqual(factType, realFactType), i = 0; i < realFactType.length; i++) {\n\t            var realFactTypePart = realFactType[i];\n\t            mappedFactType[i] = realFactTypePart.slice(0, 3);\n\t            if (\"Verb\" !== realFactTypePart[0]) if (matchingFactTypes) mappedFactType[i][3] = i; else {\n\t                for (var mappingFound = !1, j = 0; j < factType.length; j++) {\n\t                    var factTypePart = factType[j];\n\t                    if (\"Verb\" !== factTypePart[0] && this.IdentifiersEqual(realFactTypePart, factTypePart) && realFactTypePart.length === factTypePart.length && (realFactTypePart.length < 4 || realFactTypePart[3][1] === factTypePart[3][1])) {\n\t                        if (mappingFound) throw new Error('Ambiguous use of fact type \"' + formatFactType(factType) + '\", please add explicit numbering');\n\t                        mappingFound = !0;\n\t                        mappedFactType[i][3] = j;\n\t                    }\n\t                }\n\t                if (!mappingFound) throw new Error('Unable to map identifiers for \"' + formatFactType(factType) + '\", please add explicit numbering');\n\t            }\n\t        }\n\t        this._traverseFactType(factType, mappedFactType);\n\t        if (3 === factType.length && (\"has\" === factType[1][1] || \"is of\" === factType[1][1])) {\n\t            mappedFactType = _.clone(mappedFactType);\n\t            mappedFactType[0] = mappedFactType[0].slice(0, 3).concat(2);\n\t            mappedFactType[2] = mappedFactType[2].slice(0, 3).concat(0);\n\t            \"has\" === factType[1][1] ? this._traverseFactType([ factType[2], [ \"Verb\", \"is of\", factType[1][2] ], factType[0] ], mappedFactType) : \"is of\" === factType[1][1] && this._traverseFactType([ factType[2], [ \"Verb\", \"has\", factType[1][2] ], factType[0] ], mappedFactType);\n\t        }\n\t    };\n\t    SBVRLibs._traverseFactType = function(factType, create) {\n\t        var $elf = this, traverseRecurse = function(currentFactTypePart, remainingFactType, currentLevel) {\n\t            if (null == currentFactTypePart) {\n\t                create && (currentLevel.__valid = create);\n\t                return currentLevel;\n\t            }\n\t            var finalLevel, finalLevels = {};\n\t            switch (currentFactTypePart[0]) {\n\t              case \"Verb\":\n\t                currentFactTypePart = currentFactTypePart.slice(0, 2);\n\t                break;\n\t\n\t              default:\n\t                currentFactTypePart = currentFactTypePart.slice(0, 3);\n\t            }\n\t            if (currentLevel.hasOwnProperty(currentFactTypePart) || create && (currentLevel[currentFactTypePart] = {})) {\n\t                finalLevel = traverseRecurse(remainingFactType[0], remainingFactType.slice(1), currentLevel[currentFactTypePart]);\n\t                finalLevel !== !1 && _.assign(finalLevels, finalLevel);\n\t            }\n\t            if (!create && (\"Term\" === currentFactTypePart[0] || \"Name\" === currentFactTypePart[0])) for (;(currentFactTypePart = $elf.FollowConceptType(currentFactTypePart)) !== !1; ) if (currentLevel.hasOwnProperty(currentFactTypePart)) {\n\t                finalLevel = traverseRecurse(remainingFactType[0], remainingFactType.slice(1), currentLevel[currentFactTypePart]);\n\t                finalLevel !== !1 && _.assign(finalLevels, finalLevel);\n\t            }\n\t            return _.isEmpty(finalLevels) !== !0 && finalLevels;\n\t        };\n\t        return traverseRecurse(factType[0], factType.slice(1), this.factTypes);\n\t    };\n\t});\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!function(root, factory) {\n\t     true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__, exports, __webpack_require__(28), __webpack_require__(30), __webpack_require__(4) ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : \"object\" == typeof exports ? factory(require, exports, require(\"ometa-js\").core) : factory(function(moduleName) {\n\t        return root[moduleName];\n\t    }, root, root.OMeta);\n\t}(this, function(require, exports, OMeta) {\n\t    var SBVRLibs = __webpack_require__(30).SBVRLibs, _ = __webpack_require__(4), SBVRCompilerLibs = exports.SBVRCompilerLibs = SBVRLibs._extend({});\n\t    SBVRCompilerLibs.initialize = function() {\n\t        SBVRLibs.initialize.call(this);\n\t    };\n\t    SBVRCompilerLibs.TYPE_VOCAB = \"Type\";\n\t    SBVRCompilerLibs.IsPrimitive = function(term) {\n\t        return term[2] == this.TYPE_VOCAB ? term[1] : (term = this.FollowConceptType(term)) !== !1 && term[2] == this.TYPE_VOCAB ? term[1] : !1;\n\t    };\n\t    SBVRCompilerLibs.IsChild = function(child, parent) {\n\t        do if (this.IdentifiersEqual(child, parent)) return !0; while ((child = this.FollowConceptType(child)) !== !1);\n\t        return !1;\n\t    };\n\t    SBVRCompilerLibs.MappedFactType = function(factType) {\n\t        var traverseInfo = this._traverseFactType(factType), mappedFactType = [];\n\t        if (traverseInfo === !1 || !traverseInfo.hasOwnProperty(\"__valid\")) return !1;\n\t        for (var i = 0; i < traverseInfo.__valid.length; i++) mappedFactType[i] = traverseInfo.__valid[i].slice();\n\t        mappedFactType[1][2] = factType[1][2];\n\t        return mappedFactType;\n\t    };\n\t    SBVRCompilerLibs.UnmappedFactType = function(factType) {\n\t        var mappedFactType = this.MappedFactType(factType);\n\t        if (mappedFactType === !1) return !1;\n\t        for (var i = 0; i < mappedFactType.length; i++) mappedFactType[i] = mappedFactType[i].slice(0, 3);\n\t        return mappedFactType;\n\t    };\n\t    SBVRCompilerLibs.GetResourceName = function(termOrFactType) {\n\t        var i = 0, resource = [];\n\t        if (_.isString(termOrFactType)) return termOrFactType.replace(new RegExp(\" \", \"g\"), \"_\");\n\t        for (void 0; i < termOrFactType.length; i++) resource.push(termOrFactType[i][1].replace(new RegExp(\" \", \"g\"), \"_\"));\n\t        return resource.join(\"-\");\n\t    };\n\t    SBVRCompilerLibs.GetTable = function(termNameOrFactType) {\n\t        return this.tables[this.GetResourceName(termNameOrFactType)];\n\t    };\n\t    SBVRCompilerLibs.GetTableID = function(termOrFactType) {\n\t        switch (termOrFactType[0]) {\n\t          case \"Term\":\n\t          case \"Name\":\n\t            return termOrFactType[1];\n\t\n\t          default:\n\t            return termOrFactType;\n\t        }\n\t    };\n\t    SBVRCompilerLibs.GetTableField = function(table, fieldName) {\n\t        var fieldID = this.GetTableFieldID(table, fieldName);\n\t        return fieldID === !1 ? !1 : table.fields[fieldID];\n\t    };\n\t    SBVRCompilerLibs.GetTableFieldID = function(table, fieldName) {\n\t        for (var tableFields = table.fields, i = 0; i < tableFields.length; i++) if (tableFields[i].fieldName == fieldName) return i;\n\t        return !1;\n\t    };\n\t});\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!function(root, factory) {\n\t     true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__, exports, __webpack_require__(28), __webpack_require__(31), __webpack_require__(4) ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : \"object\" == typeof exports ? factory(require, exports, require(\"ometa-js\").core) : factory(function(moduleName) {\n\t        return root[moduleName];\n\t    }, root, root.OMeta);\n\t}(this, function(require, exports, OMeta) {\n\t    var SBVRCompilerLibs = __webpack_require__(31).SBVRCompilerLibs, _ = __webpack_require__(4), LF2AbstractSQL = exports.LF2AbstractSQL = SBVRCompilerLibs._extend({\n\t        Number: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, num;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Number\");\n\t                num = this._apply(\"number\");\n\t                return this._pred(!isNaN(num));\n\t            });\n\t            return num;\n\t        },\n\t        Real: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, num;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Real\");\n\t                num = this._apply(\"number\");\n\t                return this._pred(!isNaN(num));\n\t            });\n\t            return [ \"Real\", num ];\n\t        },\n\t        Integer: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, num;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Integer\");\n\t                num = this._apply(\"number\");\n\t                return this._pred(!isNaN(num));\n\t            });\n\t            return [ \"Integer\", num ];\n\t        },\n\t        Text: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, text;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Text\");\n\t                return text = this.anything();\n\t            });\n\t            return [ \"Text\", text ];\n\t        },\n\t        Value: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._apply(\"Real\");\n\t            }, function() {\n\t                return this._apply(\"Integer\");\n\t            }, function() {\n\t                return this._apply(\"Text\");\n\t            });\n\t        },\n\t        Identifier: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, name, num, type, vocab;\n\t            num = \"\";\n\t            this._form(function() {\n\t                type = function() {\n\t                    switch (this.anything()) {\n\t                      case \"Name\":\n\t                        return \"Name\";\n\t\n\t                      case \"Term\":\n\t                        return \"Term\";\n\t\n\t                      default:\n\t                        throw this._fail();\n\t                    }\n\t                }.call(this);\n\t                name = this.anything();\n\t                vocab = this.anything();\n\t                return this._opt(function() {\n\t                    return this._or(function() {\n\t                        return num = this._apply(\"Number\");\n\t                    }, function() {\n\t                        return this._apply(\"Value\");\n\t                    });\n\t                });\n\t            });\n\t            return {\n\t                type: type,\n\t                name: name,\n\t                num: num,\n\t                vocab: vocab\n\t            };\n\t        },\n\t        IdentifierName: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, identifierName, resourceName;\n\t            identifierName = this.anything();\n\t            resourceName = this._applyWithArgs(\"GetResourceName\", identifierName);\n\t            this._or(function() {\n\t                return this._pred(!this.tables.hasOwnProperty(resourceName));\n\t            }, function() {\n\t                console.error(\"We already have an identifier with a name of: \" + identifierName);\n\t                return this._pred(!1);\n\t            });\n\t            this.identifiers[identifierName] = identifierName;\n\t            this.tables[resourceName] = this.CreateTable();\n\t            return identifierName;\n\t        },\n\t        Attributes: function(termOrFactType) {\n\t            var $elf = this, _fromIdx = this.input.idx, attributeName, attributeValue;\n\t            return this._or(function() {\n\t                return this._apply(\"end\");\n\t            }, function() {\n\t                return this._form(function() {\n\t                    this._applyWithArgs(\"exactly\", \"Attributes\");\n\t                    return this._many(function() {\n\t                        return this._form(function() {\n\t                            attributeName = this.anything();\n\t                            return attributeValue = this._applyWithArgs(\"ApplyFirstExisting\", [ \"Attr\" + attributeName, \"DefaultAttr\" ], [ termOrFactType ]);\n\t                        });\n\t                    });\n\t                });\n\t            });\n\t        },\n\t        DefaultAttr: function(termOrFactType) {\n\t            var $elf = this, _fromIdx = this.input.idx, anything;\n\t            return anything = this.anything();\n\t        },\n\t        AttrConceptType: function(termOrFactType) {\n\t            var $elf = this, _fromIdx = this.input.idx, conceptTable, conceptType, dataType, fieldID, identifierTable, primitive, references, term, vocab;\n\t            term = this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Term\");\n\t                conceptType = this.anything();\n\t                return vocab = this.anything();\n\t            });\n\t            (function() {\n\t                this.termForms[termOrFactType] && (termOrFactType = this.termForms[termOrFactType]);\n\t            }).call(this);\n\t            this.vocabularies[termOrFactType[2]].ConceptTypes[termOrFactType] = term;\n\t            primitive = this._applyWithArgs(\"IsPrimitive\", term);\n\t            conceptTable = this._applyWithArgs(\"GetTable\", conceptType);\n\t            identifierTable = this._applyWithArgs(\"GetTable\", termOrFactType[1]);\n\t            this._or(function() {\n\t                this._pred(primitive !== !1 && conceptType === primitive);\n\t                dataType = primitive;\n\t                this._opt(function() {\n\t                    this._pred(identifierTable.hasOwnProperty(\"referenceScheme\"));\n\t                    fieldID = this._applyWithArgs(\"GetTableFieldID\", identifierTable, identifierTable.referenceScheme);\n\t                    this._pred(fieldID !== !1);\n\t                    return identifierTable.fields.splice(fieldID, 1);\n\t                });\n\t                return identifierTable.referenceScheme = conceptType;\n\t            }, function() {\n\t                dataType = \"ConceptType\";\n\t                return references = {\n\t                    tableName: conceptTable.name,\n\t                    fieldName: conceptTable.idField\n\t                };\n\t            });\n\t            return this._applyWithArgs(\"AddTableField\", identifierTable, conceptType, dataType, !0, null, references);\n\t        },\n\t        AttrDatabaseIDField: function(termOrFactType) {\n\t            var $elf = this, _fromIdx = this.input.idx, fieldID, idField, table, tableID;\n\t            idField = this.anything();\n\t            tableID = this._applyWithArgs(\"GetTableID\", termOrFactType);\n\t            table = this._applyWithArgs(\"GetTable\", tableID);\n\t            return this._or(function() {\n\t                return this._pred(_.isString(table));\n\t            }, function() {\n\t                fieldID = this._applyWithArgs(\"AddTableField\", table, idField, \"Serial\", !0, \"PRIMARY KEY\");\n\t                this._opt(function() {\n\t                    this._pred(fieldID !== !1);\n\t                    return table.fields[fieldID].index = \"PRIMARY KEY\";\n\t                });\n\t                return table.idField = idField;\n\t            });\n\t        },\n\t        AttrReferenceScheme: function(termOrFactType) {\n\t            var $elf = this, _fromIdx = this.input.idx, fieldID, referenceScheme, table, tableID;\n\t            referenceScheme = this.anything();\n\t            referenceScheme = this._or(function() {\n\t                this._pred(_.isArray(referenceScheme));\n\t                return referenceScheme[1];\n\t            }, function() {\n\t                return referenceScheme;\n\t            });\n\t            tableID = this._applyWithArgs(\"GetTableID\", termOrFactType);\n\t            table = this._applyWithArgs(\"GetTable\", tableID);\n\t            return this._or(function() {\n\t                return this._pred(_.isString(table));\n\t            }, function() {\n\t                this._opt(function() {\n\t                    this._pred(table.hasOwnProperty(\"referenceScheme\"));\n\t                    fieldID = this._applyWithArgs(\"GetTableFieldID\", table, table.referenceScheme);\n\t                    this._pred(fieldID !== !1);\n\t                    return table.fields[fieldID].fieldName = referenceScheme;\n\t                });\n\t                return table.referenceScheme = referenceScheme;\n\t            });\n\t        },\n\t        AttrDatabaseTableName: function(termOrFactType) {\n\t            var $elf = this, _fromIdx = this.input.idx, table, tableID, tableName;\n\t            tableName = this.anything();\n\t            tableID = this._applyWithArgs(\"GetTableID\", termOrFactType);\n\t            table = this._applyWithArgs(\"GetTable\", tableID);\n\t            return this._or(function() {\n\t                return this._pred(_.isString(table));\n\t            }, function() {\n\t                return table.name = tableName;\n\t            });\n\t        },\n\t        AttrDatabasePrimitive: function(termOrFactType) {\n\t            var $elf = this, _fromIdx = this.input.idx, attrVal, tableID;\n\t            attrVal = this.anything();\n\t            tableID = this._applyWithArgs(\"GetTableID\", termOrFactType);\n\t            return this.GetTable(tableID).primitive = attrVal;\n\t        },\n\t        AttrDatabaseAttribute: function(factType) {\n\t            var $elf = this, _fromIdx = this.input.idx, attrVal, attributeName, attributeTable, baseTable, fieldID;\n\t            attrVal = this.anything();\n\t            return this._opt(function() {\n\t                this._pred(attrVal);\n\t                this.attributes[factType] = attrVal;\n\t                this.tables[this.GetResourceName(factType)] = \"Attribute\";\n\t                baseTable = this._applyWithArgs(\"GetTable\", factType[0][1]);\n\t                attributeName = factType[2][1];\n\t                attributeTable = this._applyWithArgs(\"GetTable\", attributeName);\n\t                fieldID = this._applyWithArgs(\"GetTableFieldID\", baseTable, attributeName);\n\t                return baseTable.fields[fieldID].dataType = attributeTable.primitive;\n\t            });\n\t        },\n\t        AttrForeignKey: function(factType) {\n\t            var $elf = this, _fromIdx = this.input.idx, baseTable, fieldID, fkName, fkTable, required;\n\t            required = this.anything();\n\t            baseTable = this._applyWithArgs(\"GetTable\", factType[0][1]);\n\t            fkName = factType[2][1];\n\t            fkTable = this._applyWithArgs(\"GetTable\", fkName);\n\t            this._opt(function() {\n\t                this._pred(baseTable.idField == fkName);\n\t                fieldID = this._applyWithArgs(\"GetTableFieldID\", baseTable, fkName);\n\t                this._pred(fieldID !== !1);\n\t                return baseTable.fields.splice(fieldID, 1);\n\t            });\n\t            fieldID = this._applyWithArgs(\"AddTableField\", baseTable, fkName, \"ForeignKey\", required, null, {\n\t                tableName: fkTable.name,\n\t                fieldName: fkTable.idField\n\t            });\n\t            this._opt(function() {\n\t                this._pred(fieldID);\n\t                return baseTable.fields[fieldID].required = required;\n\t            });\n\t            return this.tables[this.GetResourceName(factType)] = \"ForeignKey\";\n\t        },\n\t        AttrUnique: function(factType) {\n\t            var $elf = this, _fromIdx = this.input.idx, baseTable, fieldID, required, uniqueField;\n\t            required = this.anything();\n\t            baseTable = this._applyWithArgs(\"GetTable\", factType);\n\t            this._opt(function() {\n\t                this._pred(\"Attribute\" === baseTable || \"ForeignKey\" === baseTable);\n\t                return baseTable = this._applyWithArgs(\"GetTable\", factType[0][1]);\n\t            });\n\t            uniqueField = factType[2][1];\n\t            fieldID = this._applyWithArgs(\"GetTableFieldID\", baseTable, uniqueField);\n\t            this._pred(fieldID !== !1);\n\t            return baseTable.fields[fieldID].index = \"UNIQUE\";\n\t        },\n\t        AttrSynonymousForm: function(factType) {\n\t            var $elf = this, _fromIdx = this.input.idx, synForm;\n\t            synForm = this.anything();\n\t            return this._applyWithArgs(\"AddFactType\", synForm, factType);\n\t        },\n\t        AttrTermForm: function(factType) {\n\t            var $elf = this, _fromIdx = this.input.idx, term;\n\t            term = this.anything();\n\t            return function() {\n\t                this.termForms[factType] = term;\n\t                this.identifiers[term[1]] = factType;\n\t                this.tables[this.GetResourceName(term[1])] = this.GetTable(factType);\n\t                for (var i = 0; i < factType.length; i++) if (\"Term\" === factType[i][0]) {\n\t                    var extraFactType = [ term, [ \"Verb\", \"has\", !1 ], factType[i] ];\n\t                    this.AddFactType(extraFactType, extraFactType);\n\t                    this.tables[this.GetResourceName(extraFactType)] = this.GetTable(factType[i][1]).primitive ? \"Attribute\" : \"ForeignKey\";\n\t                }\n\t            }.call(this);\n\t        },\n\t        AttrNecessity: function(tableID) {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._apply(\"Rule\");\n\t        },\n\t        FactType: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, attributes, factType, factTypePart, fieldName, fkTable, identifier, identifierTable, linkTable, negated, resourceName, uniqueFields, verb;\n\t            this._lookahead(function() {\n\t                return factType = this._many1(function() {\n\t                    factTypePart = this.anything();\n\t                    this._lookahead(function() {\n\t                        return attributes = this.anything();\n\t                    });\n\t                    return factTypePart;\n\t                });\n\t            });\n\t            this._applyWithArgs(\"AddFactType\", factType, factType);\n\t            this._or(function() {\n\t                this._pred(this.IsPrimitive(factType[0]));\n\t                return this._many1(function() {\n\t                    factTypePart = this.anything();\n\t                    return this._lookahead(function() {\n\t                        return attributes = this.anything();\n\t                    });\n\t                });\n\t            }, function() {\n\t                resourceName = this._applyWithArgs(\"GetResourceName\", factType);\n\t                return this._or(function() {\n\t                    this._pred(2 == factType.length);\n\t                    this._many1(function() {\n\t                        factTypePart = this.anything();\n\t                        return this._lookahead(function() {\n\t                            return attributes = this.anything();\n\t                        });\n\t                    });\n\t                    identifierTable = this._applyWithArgs(\"GetTable\", factType[0][1]);\n\t                    this._applyWithArgs(\"AddTableField\", identifierTable, factType[1][1], \"Boolean\", !0);\n\t                    return this.tables[resourceName] = \"BooleanAttribute\";\n\t                }, function() {\n\t                    linkTable = this.tables[resourceName] = this.CreateTable();\n\t                    uniqueFields = [];\n\t                    this._many1(function() {\n\t                        return this._or(function() {\n\t                            identifier = this._apply(\"Identifier\");\n\t                            fieldName = identifier.name + identifier.num;\n\t                            uniqueFields.push(fieldName);\n\t                            fkTable = this._applyWithArgs(\"GetTable\", identifier.name);\n\t                            return this._or(function() {\n\t                                this._pred(fkTable.primitive);\n\t                                return this._applyWithArgs(\"AddTableField\", linkTable, fieldName, fkTable.primitive, !0);\n\t                            }, function() {\n\t                                return this._applyWithArgs(\"AddTableField\", linkTable, fieldName, \"ForeignKey\", !0, null, {\n\t                                    tableName: fkTable.name,\n\t                                    fieldName: fkTable.idField\n\t                                });\n\t                            });\n\t                        }, function() {\n\t                            return this._form(function() {\n\t                                this._applyWithArgs(\"exactly\", \"Verb\");\n\t                                verb = this.anything();\n\t                                return negated = this.anything();\n\t                            });\n\t                        });\n\t                    });\n\t                    return linkTable.indexes.push({\n\t                        type: \"UNIQUE\",\n\t                        fields: uniqueFields\n\t                    });\n\t                });\n\t            });\n\t            return factType;\n\t        },\n\t        Cardinality: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, cardinality;\n\t            this._form(function() {\n\t                (function() {\n\t                    switch (this.anything()) {\n\t                      case \"Cardinality\":\n\t                        return \"Cardinality\";\n\t\n\t                      case \"MaximumCardinality\":\n\t                        return \"MaximumCardinality\";\n\t\n\t                      case \"MinimumCardinality\":\n\t                        return \"MinimumCardinality\";\n\t\n\t                      default:\n\t                        throw this._fail();\n\t                    }\n\t                }).call(this);\n\t                return cardinality = this._apply(\"Number\");\n\t            });\n\t            return cardinality;\n\t        },\n\t        Variable: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, bind, identifier, num, query, selectBody, varNum, whereBody, whereBody2;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Variable\");\n\t                num = this._apply(\"Number\");\n\t                identifier = this._apply(\"Identifier\");\n\t                query = this._or(function() {\n\t                    bind = this.bindAttributes[num];\n\t                    this._pred(bind);\n\t                    selectBody = _.clone(bind.binding);\n\t                    return [ \"SelectQuery\", [ \"Select\", [ selectBody ] ] ];\n\t                }, function() {\n\t                    varNum = \".\" + num;\n\t                    query = [ \"SelectQuery\", [ \"Select\", [] ], [ \"From\", [ this.GetTable(identifier.name).name, identifier.name + varNum ] ] ];\n\t                    this._applyWithArgs(\"CreateConceptTypesResolver\", query, identifier, varNum);\n\t                    return query;\n\t                });\n\t                return this._opt(function() {\n\t                    whereBody = this._apply(\"RulePart\");\n\t                    return this._opt(function() {\n\t                        this._pred(query);\n\t                        return this._applyWithArgs(\"AddWhereClause\", query, whereBody);\n\t                    });\n\t                });\n\t            });\n\t            this._opt(function() {\n\t                whereBody2 = this._apply(\"RulePart\");\n\t                return this._applyWithArgs(\"AddWhereClause\", query, whereBody2);\n\t            });\n\t            return this._or(function() {\n\t                this._pred(!_.some(query, {\n\t                    0: \"From\"\n\t                }));\n\t                this._opt(function() {\n\t                    whereBody = _.find(query, {\n\t                        0: \"Where\"\n\t                    });\n\t                    this._pred(whereBody);\n\t                    return selectBody.whereBody = whereBody[1];\n\t                });\n\t                return selectBody;\n\t            }, function() {\n\t                return query;\n\t            });\n\t        },\n\t        RoleBindings: function(actualFactType) {\n\t            var $elf = this, _fromIdx = this.input.idx, binds;\n\t            binds = [];\n\t            (function() {\n\t                for (var i = 0; i < actualFactType.length; i += 2) {\n\t                    var j = _.findIndex(actualFactType, {\n\t                        3: i\n\t                    });\n\t                    binds[j / 2] = this.RoleBinding(actualFactType[j][1]);\n\t                }\n\t            }).call(this);\n\t            this._apply(\"end\");\n\t            return binds;\n\t        },\n\t        RoleBinding: function(baseTermName) {\n\t            var $elf = this, _fromIdx = this.input.idx, baseBind, binding, conceptTypeResolver, data, identifier, number;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"RoleBinding\");\n\t                identifier = this._apply(\"Identifier\");\n\t                return this._or(function() {\n\t                    return number = this._apply(\"number\");\n\t                }, function() {\n\t                    return data = this._apply(\"Value\");\n\t                });\n\t            });\n\t            baseBind = this.bindAttributes[number];\n\t            binding = this._or(function() {\n\t                this._pred(data);\n\t                return data;\n\t            }, function() {\n\t                this._pred(baseBind);\n\t                return baseBind.binding;\n\t            }, function() {\n\t                conceptTypeResolver = this.conceptTypeResolvers[identifier.name + \".\" + number];\n\t                this._or(function() {\n\t                    return this._pred(!conceptTypeResolver);\n\t                }, function() {\n\t                    return conceptTypeResolver(baseTermName);\n\t                });\n\t                return [ \"ReferencedField\", baseTermName + \".\" + number, identifier.name ];\n\t            });\n\t            return {\n\t                identifier: identifier,\n\t                number: number,\n\t                data: data,\n\t                binding: binding\n\t            };\n\t        },\n\t        NativeProperty: function(actualFactType) {\n\t            var $elf = this, _fromIdx = this.input.idx, binds, primitive, property, verb;\n\t            this._pred(this.IsPrimitive(actualFactType[0]));\n\t            this._pred(this.IsPrimitive(actualFactType[2]));\n\t            binds = this._applyWithArgs(\"RoleBindings\", actualFactType);\n\t            this._pred(2 == binds.length);\n\t            primitive = actualFactType[0][1];\n\t            verb = actualFactType[1][1];\n\t            property = actualFactType[2][1];\n\t            this._pred(this.sbvrTypes[primitive] && this.sbvrTypes[primitive].nativeProperties && this.sbvrTypes[primitive].nativeProperties[verb] && this.sbvrTypes[primitive].nativeProperties[verb][property]);\n\t            return [ \"Equals\", [ \"Boolean\", !0 ], [ \"Boolean\", !0 ] ];\n\t        },\n\t        NativeFactType: function(actualFactType) {\n\t            var $elf = this, _fromIdx = this.input.idx, binds, primitive, secondPrimitive, verb;\n\t            this._pred(3 == actualFactType.length);\n\t            this._pred(this.IsPrimitive(actualFactType[0]));\n\t            this._pred(this.IsPrimitive(actualFactType[2]));\n\t            return this._or(function() {\n\t                binds = this._applyWithArgs(\"RoleBindings\", actualFactType);\n\t                this._pred(2 == binds.length);\n\t                primitive = actualFactType[0][1];\n\t                verb = actualFactType[1][1];\n\t                secondPrimitive = actualFactType[2][1];\n\t                this._pred(this.sbvrTypes[primitive] && this.sbvrTypes[primitive].nativeFactTypes && this.sbvrTypes[primitive].nativeFactTypes[secondPrimitive] && this.sbvrTypes[primitive].nativeFactTypes[secondPrimitive][verb]);\n\t                return this.sbvrTypes[primitive].nativeFactTypes[secondPrimitive][verb](binds[0].binding, binds[1].binding);\n\t            }, function() {\n\t                return this._applyWithArgs(\"foreign\", ___NativeFactTypeMatchingFailed___, \"die\");\n\t            });\n\t        },\n\t        LinkTableAlias: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, bindNumbers, binding, factType, identifierName, identifierType, mapping, partAlias, verb, vocab;\n\t            this._form(function() {\n\t                return bindNumbers = this._many1(function() {\n\t                    binding = this.anything();\n\t                    return binding.number;\n\t                });\n\t            });\n\t            this._form(function() {\n\t                return factType = this._many(function() {\n\t                    this._form(function() {\n\t                        return partAlias = this._or(function() {\n\t                            switch (this.anything()) {\n\t                              case \"Verb\":\n\t                                verb = this.anything();\n\t                                this.anything();\n\t                                return verb;\n\t\n\t                              default:\n\t                                throw this._fail();\n\t                            }\n\t                        }, function() {\n\t                            identifierType = this.anything();\n\t                            identifierName = this.anything();\n\t                            vocab = this.anything();\n\t                            mapping = this._opt(function() {\n\t                                return this.anything();\n\t                            });\n\t                            return identifierName + \".\" + bindNumbers.shift();\n\t                        });\n\t                    });\n\t                    return partAlias;\n\t                });\n\t            });\n\t            return factType.join(\"-\");\n\t        },\n\t        LinkTable: function(actualFactType) {\n\t            var $elf = this, _fromIdx = this.input.idx, binds, query, tableAlias;\n\t            binds = this._applyWithArgs(\"RoleBindings\", actualFactType);\n\t            tableAlias = this._applyWithArgs(\"LinkTableAlias\", binds, actualFactType);\n\t            query = [ \"SelectQuery\", [ \"Select\", [] ], [ \"From\", [ this.GetTable(actualFactType).name, tableAlias ] ] ];\n\t            _.each(binds, function(bind, i) {\n\t                var baseIdentifierName = actualFactType[2 * i][1], table = $elf.GetTable(baseIdentifierName);\n\t                table.primitive || $elf.AddWhereClause(query, [ \"Equals\", [ \"ReferencedField\", tableAlias, baseIdentifierName ], [ \"ReferencedField\", bind.binding[1], table.idField ] ]);\n\t            });\n\t            return [ \"Exists\", query ];\n\t        },\n\t        ForeignKey: function(actualFactType) {\n\t            var $elf = this, _fromIdx = this.input.idx, baseToIdentifier, bindFrom, bindTo, binds, tableTo;\n\t            this._pred(\"ForeignKey\" == this.GetTable(actualFactType));\n\t            this._or(function() {\n\t                binds = this._applyWithArgs(\"RoleBindings\", actualFactType);\n\t                this._pred(2 == binds.length);\n\t                bindFrom = binds[0];\n\t                bindTo = binds[1];\n\t                baseToIdentifier = actualFactType[2];\n\t                return tableTo = this._applyWithArgs(\"GetTable\", baseToIdentifier[1]);\n\t            }, function() {\n\t                return this._applyWithArgs(\"foreign\", ___ForeignKeyMatchingFailed___, \"die\");\n\t            });\n\t            return [ \"Equals\", [ \"ReferencedField\", bindFrom.binding[1], baseToIdentifier[1] ], [ \"ReferencedField\", bindTo.binding[1], tableTo.idField ] ];\n\t        },\n\t        BooleanAttribute: function(actualFactType) {\n\t            var $elf = this, _fromIdx = this.input.idx, attributeName, binds, negated;\n\t            this._pred(\"BooleanAttribute\" == this.GetTable(actualFactType));\n\t            this._or(function() {\n\t                binds = this._applyWithArgs(\"RoleBindings\", actualFactType);\n\t                this._pred(1 == binds.length);\n\t                attributeName = actualFactType[1][1];\n\t                return negated = actualFactType[1][2];\n\t            }, function() {\n\t                console.error(this.input);\n\t                return this._applyWithArgs(\"foreign\", ___BooleanAttributeMatchingFailed___, \"die\");\n\t            });\n\t            return [ \"Equals\", [ \"ReferencedField\", binds[0].binding[1], attributeName ], [ \"Boolean\", !negated ] ];\n\t        },\n\t        Attribute: function(actualFactType) {\n\t            var $elf = this, _fromIdx = this.input.idx, bind, bindAttr, bindReal, binds;\n\t            this._pred(\"Attribute\" == this.GetTable(actualFactType));\n\t            this._or(function() {\n\t                binds = this._applyWithArgs(\"RoleBindings\", actualFactType);\n\t                this._pred(2 == binds.length);\n\t                bindReal = binds[0];\n\t                return bindAttr = binds[1];\n\t            }, function() {\n\t                return this._applyWithArgs(\"foreign\", ___AttributeMatchingFailed___, \"die\");\n\t            });\n\t            return this._or(function() {\n\t                bind = this.bindAttributes[bindAttr.number];\n\t                bindAttr.binding = [ \"ReferencedField\", bindReal.binding[1], bind.binding[2] ];\n\t                this._pred(!_.isEqual(bindAttr.binding, bind.binding));\n\t                return [ \"Equals\", bindAttr.binding, bind.binding ];\n\t            }, function() {\n\t                return [ \"Equals\", [ \"Boolean\", !0 ], [ \"Boolean\", !0 ] ];\n\t            });\n\t        },\n\t        AtomicFormulation: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, actualFactType, factType, whereClause;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"AtomicFormulation\");\n\t                this._form(function() {\n\t                    this._applyWithArgs(\"exactly\", \"FactType\");\n\t                    return factType = this._many1(function() {\n\t                        return this.anything();\n\t                    });\n\t                });\n\t                actualFactType = this._applyWithArgs(\"MappedFactType\", factType);\n\t                return whereClause = this._or(function() {\n\t                    return this._applyWithArgs(\"NativeProperty\", actualFactType);\n\t                }, function() {\n\t                    return this._applyWithArgs(\"NativeFactType\", actualFactType);\n\t                }, function() {\n\t                    return this._applyWithArgs(\"ForeignKey\", actualFactType);\n\t                }, function() {\n\t                    return this._applyWithArgs(\"BooleanAttribute\", actualFactType);\n\t                }, function() {\n\t                    return this._applyWithArgs(\"Attribute\", actualFactType);\n\t                }, function() {\n\t                    return this._applyWithArgs(\"LinkTable\", actualFactType);\n\t                });\n\t            });\n\t            return whereClause;\n\t        },\n\t        AtLeast: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, minCard, variable, where;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"AtLeastNQuantification\");\n\t                minCard = this._apply(\"Cardinality\");\n\t                return variable = this._apply(\"Variable\");\n\t            });\n\t            where = this._or(function() {\n\t                this._pred(0 == minCard);\n\t                return [ \"Boolean\", !0 ];\n\t            }, function() {\n\t                this._pred(\"SelectQuery\" == variable[0] && 0 == variable[1][1].length);\n\t                variable[1][1].push([ \"Count\", \"*\" ]);\n\t                return [ \"GreaterThanOrEqual\", variable, [ \"Number\", minCard ] ];\n\t            }, function() {\n\t                this._pred(minCard > 1);\n\t                return [ \"Boolean\", !1 ];\n\t            }, function() {\n\t                return [ \"Exists\", variable ];\n\t            });\n\t            return this._or(function() {\n\t                this._pred(variable.whereBody);\n\t                return [ \"And\", variable.whereBody, where ];\n\t            }, function() {\n\t                return where;\n\t            });\n\t        },\n\t        Exactly: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, card, exists, variable, where;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"ExactQuantification\");\n\t                card = this._apply(\"Cardinality\");\n\t                return variable = this._apply(\"Variable\");\n\t            });\n\t            where = this._or(function() {\n\t                this._pred(\"SelectQuery\" == variable[0] && 0 == variable[1][1].length);\n\t                variable[1][1].push([ \"Count\", \"*\" ]);\n\t                return [ \"Equals\", variable, [ \"Number\", card ] ];\n\t            }, function() {\n\t                exists = [ \"Exists\", variable ];\n\t                return this._or(function() {\n\t                    this._pred(0 == card);\n\t                    return [ \"Not\", exists ];\n\t                }, function() {\n\t                    this._pred(1 == card);\n\t                    return exists;\n\t                }, function() {\n\t                    return [ \"Boolean\", !1 ];\n\t                });\n\t            });\n\t            return this._or(function() {\n\t                this._pred(variable.whereBody);\n\t                return [ \"And\", variable.whereBody, where ];\n\t            }, function() {\n\t                return where;\n\t            });\n\t        },\n\t        Range: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, exists, maxCard, minCard, variable, where;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"NumericalRangeQuantification\");\n\t                minCard = this._apply(\"Cardinality\");\n\t                maxCard = this._apply(\"Cardinality\");\n\t                return variable = this._apply(\"Variable\");\n\t            });\n\t            where = this._or(function() {\n\t                this._pred(\"SelectQuery\" == variable[0] && 0 == variable[1][1].length);\n\t                variable[1][1].push([ \"Count\", \"*\" ]);\n\t                return [ \"Between\", variable, [ \"Number\", minCard ], [ \"Number\", maxCard ] ];\n\t            }, function() {\n\t                exists = [ \"Exists\", variable ];\n\t                return this._or(function() {\n\t                    this._pred(0 == minCard);\n\t                    return this._or(function() {\n\t                        this._pred(0 == maxCard);\n\t                        return [ \"Not\", exists ];\n\t                    }, function() {\n\t                        return [ \"Boolean\", !0 ];\n\t                    });\n\t                }, function() {\n\t                    this._pred(1 == minCard);\n\t                    return exists;\n\t                }, function() {\n\t                    return [ \"Boolean\", !1 ];\n\t                });\n\t            });\n\t            return this._or(function() {\n\t                this._pred(variable.whereBody);\n\t                return [ \"And\", variable.whereBody, where ];\n\t            }, function() {\n\t                return where;\n\t            });\n\t        },\n\t        Disjunction: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, first, rest;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Disjunction\");\n\t                first = this._apply(\"RulePart\");\n\t                return rest = this._many1(function() {\n\t                    return this._apply(\"RulePart\");\n\t                });\n\t            });\n\t            return [ \"Or\", first ].concat(rest);\n\t        },\n\t        Conjunction: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, first, rest;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Conjunction\");\n\t                first = this._apply(\"RulePart\");\n\t                return rest = this._many1(function() {\n\t                    return this._apply(\"RulePart\");\n\t                });\n\t            });\n\t            return [ \"And\", first ].concat(rest);\n\t        },\n\t        Exists: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, variable, where;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"ExistentialQuantification\");\n\t                return variable = this._apply(\"Variable\");\n\t            });\n\t            where = [ \"Exists\", variable ];\n\t            return this._or(function() {\n\t                this._pred(variable.whereBody);\n\t                return [ \"And\", variable.whereBody, where ];\n\t            }, function() {\n\t                return where;\n\t            });\n\t        },\n\t        Negation: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, whereBody;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"LogicalNegation\");\n\t                return whereBody = this._apply(\"RulePart\");\n\t            });\n\t            return [ \"Not\", whereBody ];\n\t        },\n\t        RulePart: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, x;\n\t            return this._or(function() {\n\t                return this._apply(\"AtomicFormulation\");\n\t            }, function() {\n\t                return this._apply(\"AtLeast\");\n\t            }, function() {\n\t                return this._apply(\"Exactly\");\n\t            }, function() {\n\t                return this._apply(\"Exists\");\n\t            }, function() {\n\t                return this._apply(\"Negation\");\n\t            }, function() {\n\t                return this._apply(\"Range\");\n\t            }, function() {\n\t                return this._apply(\"Disjunction\");\n\t            }, function() {\n\t                return this._apply(\"Conjunction\");\n\t            }, function() {\n\t                x = this.anything();\n\t                console.error(\"Hit unhandled operation:\", x);\n\t                return this._pred(!1);\n\t            });\n\t        },\n\t        RuleBody: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, rule;\n\t            this._form(function() {\n\t                (function() {\n\t                    switch (this.anything()) {\n\t                      case \"NecessityFormulation\":\n\t                        return \"NecessityFormulation\";\n\t\n\t                      case \"ObligationFormulation\":\n\t                        return \"ObligationFormulation\";\n\t\n\t                      case \"PermissibilityFormulation\":\n\t                        return \"PermissibilityFormulation\";\n\t\n\t                      case \"PossibilityFormulation\":\n\t                        return \"PossibilityFormulation\";\n\t\n\t                      default:\n\t                        throw this._fail();\n\t                    }\n\t                }).call(this);\n\t                return rule = this._apply(\"RulePart\");\n\t            });\n\t            return rule;\n\t        },\n\t        ReconstructIdentifier: function(bindIdentifier) {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return [ bindIdentifier.type, bindIdentifier.name, bindIdentifier.vocab ];\n\t        },\n\t        ProcessAtomicFormulations: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            this.bindAttributes = [];\n\t            this.bindAttributeDepth = [];\n\t            this.nonPrimitiveExists = !1;\n\t            this._lookahead(function() {\n\t                return this._applyWithArgs(\"ProcessAtomicFormulationsRecurse\", 0, \"ProcessAtomicFormulationsAttributes\");\n\t            });\n\t            this._lookahead(function() {\n\t                return this._applyWithArgs(\"ProcessAtomicFormulationsRecurse\", 0, \"ProcessAtomicFormulationsNonPrimitive\");\n\t            });\n\t            return this._lookahead(function() {\n\t                return this._applyWithArgs(\"ProcessAtomicFormulationsRecurse\", 0, \"ProcessAtomicFormulationsNativeProperties\");\n\t            });\n\t        },\n\t        ProcessAtomicFormulationsRecurse: function(depth, rule) {\n\t            var $elf = this, _fromIdx = this.input.idx, actualFactType, factType, unmappedFactType;\n\t            return this._many(function() {\n\t                return this._or(function() {\n\t                    this._pred(_.isArray(this.input.hd));\n\t                    return this._form(function() {\n\t                        return this._or(function() {\n\t                            switch (this.anything()) {\n\t                              case \"AtomicFormulation\":\n\t                                this._form(function() {\n\t                                    this._applyWithArgs(\"exactly\", \"FactType\");\n\t                                    return factType = this._many1(function() {\n\t                                        return this.anything();\n\t                                    });\n\t                                });\n\t                                unmappedFactType = this._applyWithArgs(\"UnmappedFactType\", factType);\n\t                                actualFactType = this._applyWithArgs(\"MappedFactType\", factType);\n\t                                return this._applyWithArgs(rule, depth, unmappedFactType, actualFactType);\n\t\n\t                              default:\n\t                                throw this._fail();\n\t                            }\n\t                        }, function() {\n\t                            return this._applyWithArgs(\"ProcessAtomicFormulationsRecurse\", depth + 1, rule);\n\t                        });\n\t                    });\n\t                }, function() {\n\t                    return this.anything();\n\t                });\n\t            });\n\t        },\n\t        ProcessAtomicFormulationsNonPrimitive: function(depth, unmappedFactType, actualFactType) {\n\t            var $elf = this, _fromIdx = this.input.idx, binds;\n\t            binds = this._applyWithArgs(\"RoleBindings\", actualFactType);\n\t            return function() {\n\t                for (var i = 0; i < binds.length; i++) if (!this.IsPrimitive(this.ReconstructIdentifier(binds[i].identifier))) {\n\t                    this.nonPrimitiveExists = !0;\n\t                    break;\n\t                }\n\t            }.call(this);\n\t        },\n\t        ProcessAtomicFormulationsAttributes: function(depth, unmappedFactType, actualFactType) {\n\t            var $elf = this, _fromIdx = this.input.idx, attrBinding, baseBinding, binds, tableAlias;\n\t            binds = this._applyWithArgs(\"RoleBindings\", actualFactType);\n\t            return this._or(function() {\n\t                this._pred(this.attributes.hasOwnProperty(unmappedFactType) && this.attributes[unmappedFactType]);\n\t                baseBinding = _.find(binds, function(bind) {\n\t                    return !$elf.IsPrimitive($elf.ReconstructIdentifier(bind.identifier));\n\t                });\n\t                attrBinding = _.find(binds, function(bind) {\n\t                    return $elf.IsPrimitive($elf.ReconstructIdentifier(bind.identifier)) && (null == $elf.bindAttributeDepth[bind.number] || $elf.bindAttributeDepth[bind.number] > depth);\n\t                });\n\t                return function() {\n\t                    this.bindAttributeDepth[attrBinding.number] = depth;\n\t                    return this.bindAttributes[attrBinding.number] = {\n\t                        binding: [ \"ReferencedField\", baseBinding.binding[1], attrBinding.identifier.name ]\n\t                    };\n\t                }.call(this);\n\t            }, function() {\n\t                this._pred(_.some(binds, function(bind) {\n\t                    return !$elf.IsPrimitive($elf.ReconstructIdentifier(bind.identifier));\n\t                }));\n\t                tableAlias = this._applyWithArgs(\"LinkTableAlias\", binds, actualFactType);\n\t                return function() {\n\t                    for (var i = 0; i < actualFactType.length; i += 2) {\n\t                        var table = this.GetTable(actualFactType[i][1]), bindNumber = binds[i / 2].number;\n\t                        if (table && table.primitive && (null == this.bindAttributeDepth[bindNumber] || this.bindAttributeDepth[bindNumber] > depth)) {\n\t                            this.bindAttributeDepth[bindNumber] = depth;\n\t                            this.bindAttributes[bindNumber] = {\n\t                                binding: [ \"ReferencedField\", tableAlias, actualFactType[i][1] ]\n\t                            };\n\t                        }\n\t                    }\n\t                }.call(this);\n\t            });\n\t        },\n\t        ProcessAtomicFormulationsNativeProperties: function(depth, unmappedFactType, actualFactType) {\n\t            var $elf = this, _fromIdx = this.input.idx, binding, binds, primitive, property, verb;\n\t            binds = this._applyWithArgs(\"RoleBindings\", actualFactType);\n\t            this._pred(_.every(binds, function(bind) {\n\t                return $elf.IsPrimitive($elf.ReconstructIdentifier(bind.identifier));\n\t            }));\n\t            this._pred(2 == binds.length);\n\t            primitive = actualFactType[0][1];\n\t            verb = actualFactType[1][1];\n\t            property = actualFactType[2][1];\n\t            this._pred(this.sbvrTypes[primitive] && this.sbvrTypes[primitive].nativeProperties && this.sbvrTypes[primitive].nativeProperties[verb] && this.sbvrTypes[primitive].nativeProperties[verb][property]);\n\t            binding = this.sbvrTypes[primitive].nativeProperties[verb][property](binds[0].binding, binds[1].binding);\n\t            return function() {\n\t                this.bindAttributeDepth[binds[1].number] = depth;\n\t                return this.bindAttributes[binds[1].number] = {\n\t                    binding: binding\n\t                };\n\t            }.call(this);\n\t        },\n\t        Rule: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, ruleBody, ruleText;\n\t            this._apply(\"ResetRuleState\");\n\t            return this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Rule\");\n\t                this._lookahead(function() {\n\t                    return this._apply(\"ProcessAtomicFormulations\");\n\t                });\n\t                ruleBody = this._or(function() {\n\t                    this._pred(this.nonPrimitiveExists);\n\t                    return this._apply(\"RuleBody\");\n\t                }, function() {\n\t                    return this.anything();\n\t                });\n\t                this._form(function() {\n\t                    this._applyWithArgs(\"exactly\", \"StructuredEnglish\");\n\t                    return ruleText = this.anything();\n\t                });\n\t                return this._opt(function() {\n\t                    this._pred(this.nonPrimitiveExists);\n\t                    return this.rules.push([ \"Rule\", [ \"Body\", ruleBody ], [ \"StructuredEnglish\", ruleText ] ]);\n\t                });\n\t            });\n\t        },\n\t        Process: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, attributes, factType, identifierName, tables, type, vocab;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Model\");\n\t                return this._many1(function() {\n\t                    return this._or(function() {\n\t                        return this._form(function() {\n\t                            return this._or(function() {\n\t                                switch (this.anything()) {\n\t                                  case \"Vocabulary\":\n\t                                    vocab = this.anything();\n\t                                    return attributes = this.anything();\n\t\n\t                                  default:\n\t                                    throw this._fail();\n\t                                }\n\t                            }, function() {\n\t                                type = function() {\n\t                                    switch (this.anything()) {\n\t                                      case \"Name\":\n\t                                        return \"Name\";\n\t\n\t                                      case \"Term\":\n\t                                        return \"Term\";\n\t\n\t                                      default:\n\t                                        throw this._fail();\n\t                                    }\n\t                                }.call(this);\n\t                                identifierName = this._apply(\"IdentifierName\");\n\t                                vocab = this.anything();\n\t                                this._applyWithArgs(\"AddVocabulary\", vocab);\n\t                                return this._applyWithArgs(\"Attributes\", [ type, identifierName, vocab ]);\n\t                            }, function() {\n\t                                switch (this.anything()) {\n\t                                  case \"FactType\":\n\t                                    factType = this._apply(\"FactType\");\n\t                                    return this._applyWithArgs(\"Attributes\", factType);\n\t\n\t                                  default:\n\t                                    throw this._fail();\n\t                                }\n\t                            });\n\t                        });\n\t                    }, function() {\n\t                        return this._apply(\"Rule\");\n\t                    });\n\t                });\n\t            });\n\t            tables = {};\n\t            return {\n\t                tables: this.tables,\n\t                rules: this.rules\n\t            };\n\t        },\n\t        CreateTable: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, table;\n\t            table = {\n\t                fields: [],\n\t                primitive: !1,\n\t                name: null,\n\t                indexes: [],\n\t                idField: null\n\t            };\n\t            this._applyWithArgs(\"AddTableField\", table, \"created at\", \"Date Time\", !0, null, null, \"CURRENT_TIMESTAMP\");\n\t            return table;\n\t        }\n\t    });\n\t    LF2AbstractSQL.AddTableField = function(table, fieldName, dataType, required, index, references, defaultValue) {\n\t        void 0 === references && (references = null);\n\t        void 0 === index && (index = null);\n\t        void 0 === defaultValue && (defaultValue = null);\n\t        var fieldID = this.GetTableFieldID(table, fieldName);\n\t        fieldID === !1 && table.fields.push({\n\t            dataType: dataType,\n\t            fieldName: fieldName,\n\t            required: required,\n\t            index: index,\n\t            references: references,\n\t            defaultValue: defaultValue\n\t        });\n\t        return fieldID;\n\t    };\n\t    LF2AbstractSQL.AddWhereClause = function(query, whereBody) {\n\t        if (!_.isEqual(whereBody, [ \"Equals\", [ \"Boolean\", !0 ], [ \"Boolean\", !0 ] ])) if (\"Exists\" != whereBody[0] || \"SelectQuery\" != whereBody[1][0] && \"InsertQuery\" != whereBody[1][0] && \"UpdateQuery\" != whereBody[1][0] && \"UpsertQuery\" != whereBody[1][0]) {\n\t            for (var i = 1; i < query.length; i++) if (\"Where\" == query[i][0]) {\n\t                query[i][1] = [ \"And\", query[i][1], whereBody ];\n\t                return;\n\t            }\n\t            query.push([ \"Where\", whereBody ]);\n\t        } else {\n\t            whereBody = whereBody[1].slice(1);\n\t            for (var i = 0; i < whereBody.length; i++) \"From\" == whereBody[i][0] && query.push(whereBody[i]);\n\t            for (var i = 0; i < whereBody.length; i++) \"Where\" == whereBody[i][0] && this.AddWhereClause(query, whereBody[i][1]);\n\t        }\n\t    };\n\t    LF2AbstractSQL.CreateConceptTypesResolver = function(query, identifier, varNum) {\n\t        var parentAlias = identifier.name + varNum, concept = this.ReconstructIdentifier(identifier), conceptTypeResolutions, $elf = this;\n\t        if (this.conceptTypeResolvers[parentAlias]) throw new Error('Concept type resolver already added for \"' + parentAlias + '\"!');\n\t        conceptTypeResolutions = [ identifier.name ];\n\t        this.conceptTypeResolvers[parentAlias] = function(untilConcept) {\n\t            var conceptTable, conceptAlias;\n\t            parentAlias = _.last(conceptTypeResolutions);\n\t            if (parentAlias !== !0 && !_.includes(conceptTypeResolutions, untilConcept)) {\n\t                for (;(concept = this.FollowConceptType(concept)) !== !1; ) {\n\t                    conceptAlias = concept[1] + varNum;\n\t                    conceptTable = this.GetTable(concept[1]);\n\t                    if (conceptTable.primitive !== !1) break;\n\t                    query.push([ \"From\", [ conceptTable.name, conceptAlias ] ]);\n\t                    this.AddWhereClause(query, [ \"Equals\", [ \"ReferencedField\", parentAlias, concept[1] ], [ \"ReferencedField\", conceptAlias, conceptTable.idField ] ]);\n\t                    parentAlias = conceptAlias;\n\t                    conceptTypeResolutions.push(parentAlias);\n\t                    if (null != untilConcept && !this.IdentifiersEqual(concept, untilConcept)) break;\n\t                }\n\t                concept === !1 && conceptTypeResolutions.push(!0);\n\t            }\n\t        }.bind(this);\n\t    };\n\t    LF2AbstractSQL.initialize = function() {\n\t        this.reset();\n\t        this.sbvrTypes = {};\n\t        this.termForms = {};\n\t    };\n\t    LF2AbstractSQL.reset = function() {\n\t        SBVRCompilerLibs.initialize.call(this);\n\t        this.tables = {};\n\t        this.identifiers = {};\n\t        this.rules = [];\n\t        this.attributes = {};\n\t        this.bindAttributes = [];\n\t        this.bindAttributeDepth = [];\n\t        this.ResetRuleState();\n\t    };\n\t    LF2AbstractSQL.ResetRuleState = function() {\n\t        this.conceptTypeResolvers = {};\n\t    };\n\t    LF2AbstractSQL.addTypes = function(types) {\n\t        _.assign(this.sbvrTypes, types);\n\t    };\n\t});\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// Generated by CoffeeScript 1.10.0\n\t(function() {\n\t  var hasProp = {}.hasOwnProperty;\n\t\n\t  (function(root, factory) {\n\t    if (true) {\n\t      return !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(34), __webpack_require__(35), __webpack_require__(36), __webpack_require__(4), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else if (typeof exports === 'object') {\n\t      return module.exports = factory(require('./AbstractSQLOptimiser'), require('./AbstractSQLRules2SQL'), require('@resin/sbvr-types'), require('lodash'), require('bluebird'));\n\t    } else {\n\t      return root.AbstractSQLCompiler = factory(root.AbstractSQLOptimiser, root.AbstractSQLRules2SQL, root.sbvrTypes, root._, root.Promise);\n\t    }\n\t  })(this, function(arg, arg1, sbvrTypes, _, Promise) {\n\t    var AbstractSQLOptimiser, AbstractSQLRules2SQL, compileRule, compileSchema, dataTypeGen, dataTypeValidate, validateTypes;\n\t    AbstractSQLOptimiser = arg.AbstractSQLOptimiser;\n\t    AbstractSQLRules2SQL = arg1.AbstractSQLRules2SQL;\n\t    validateTypes = _.mapValues(sbvrTypes, function(arg2) {\n\t      var validate;\n\t      validate = arg2.validate;\n\t      if (validate != null) {\n\t        return Promise.promisify(validate);\n\t      }\n\t    });\n\t    dataTypeValidate = function(value, field, callback) {\n\t      var dataType, required;\n\t      dataType = field.dataType, required = field.required;\n\t      if (value === null) {\n\t        if (required) {\n\t          return Promise.rejected('cannot be null');\n\t        } else {\n\t          return Promise.fulfilled(null);\n\t        }\n\t      } else if (validateTypes[dataType] != null) {\n\t        return validateTypes[dataType](value, required);\n\t      } else {\n\t        return Promise.rejected('is an unsupported type: ' + dataType);\n\t      }\n\t    };\n\t    dataTypeGen = function(engine, dataType, necessity, index, defaultValue) {\n\t      var dbType, ref, ref1;\n\t      if (index == null) {\n\t        index = '';\n\t      }\n\t      necessity = necessity ? ' NOT NULL' : ' NULL';\n\t      defaultValue = defaultValue ? \" DEFAULT \" + defaultValue : void 0;\n\t      if (index !== '') {\n\t        index = ' ' + index;\n\t      }\n\t      dbType = (ref = sbvrTypes[dataType]) != null ? (ref1 = ref.types) != null ? ref1[engine] : void 0 : void 0;\n\t      if (dbType != null) {\n\t        if (_.isFunction(dbType)) {\n\t          return dbType(necessity, index);\n\t        }\n\t        if (defaultValue == null) {\n\t          defaultValue = '';\n\t        }\n\t        return dbType + defaultValue + necessity + index;\n\t      } else {\n\t        throw new Error(\"Unknown data type '\" + dataType + \"' for engine: \" + engine);\n\t      }\n\t    };\n\t    compileRule = (function() {\n\t      var compiler, optimiser;\n\t      optimiser = AbstractSQLOptimiser.createInstance();\n\t      compiler = AbstractSQLRules2SQL.createInstance();\n\t      return function(abstractSQL, engine) {\n\t        abstractSQL = optimiser.match(abstractSQL, 'Process');\n\t        compiler.engine = engine;\n\t        return compiler.match(abstractSQL, 'Process');\n\t      };\n\t    })();\n\t    compileSchema = function(sqlModel, engine, ifNotExists) {\n\t      var createSQL, createSchemaStatements, dataType, defaultValue, dependency, depends, dropSQL, dropSchemaStatements, e, error, fieldName, foreignKey, foreignKeys, hasDependants, i, index, j, k, l, len, len1, len2, len3, len4, len5, m, n, ref, ref1, ref2, ref3, ref4, ref5, references, required, resourceName, rule, ruleBody, ruleSE, ruleSQL, ruleStatements, schemaDependencyMap, schemaInfo, table, tableName, tableNames, unsolvedDependency;\n\t      ifNotExists = ifNotExists ? 'IF NOT EXISTS ' : '';\n\t      hasDependants = {};\n\t      schemaDependencyMap = {};\n\t      ref = sqlModel.tables;\n\t      for (resourceName in ref) {\n\t        if (!hasProp.call(ref, resourceName)) continue;\n\t        table = ref[resourceName];\n\t        if (!(!_.isString(table))) {\n\t          continue;\n\t        }\n\t        foreignKeys = [];\n\t        depends = [];\n\t        dropSQL = 'DROP TABLE \"' + table.name + '\";';\n\t        createSQL = 'CREATE TABLE ' + ifNotExists + '\"' + table.name + '\" (\\n\\t';\n\t        ref1 = table.fields;\n\t        for (i = 0, len = ref1.length; i < len; i++) {\n\t          ref2 = ref1[i], dataType = ref2.dataType, fieldName = ref2.fieldName, required = ref2.required, index = ref2.index, references = ref2.references, defaultValue = ref2.defaultValue;\n\t          createSQL += '\"' + fieldName + '\" ' + dataTypeGen(engine, dataType, required, index, defaultValue) + '\\n,\\t';\n\t          if (dataType === 'ForeignKey' || dataType === 'ConceptType') {\n\t            foreignKeys.push({\n\t              fieldName: fieldName,\n\t              references: references\n\t            });\n\t            depends.push(references.tableName);\n\t            hasDependants[references.tableName] = true;\n\t          }\n\t        }\n\t        for (j = 0, len1 = foreignKeys.length; j < len1; j++) {\n\t          foreignKey = foreignKeys[j];\n\t          createSQL += 'FOREIGN KEY (\"' + foreignKey.fieldName + '\") REFERENCES \"' + foreignKey.references.tableName + '\" (\"' + foreignKey.references.fieldName + '\")' + '\\n,\\t';\n\t        }\n\t        ref3 = table.indexes;\n\t        for (k = 0, len2 = ref3.length; k < len2; k++) {\n\t          index = ref3[k];\n\t          createSQL += index.type + '(\"' + index.fields.join('\", \"') + '\")\\n,\\t';\n\t        }\n\t        createSQL = createSQL.slice(0, -2) + ');';\n\t        schemaDependencyMap[table.name] = {\n\t          resourceName: resourceName,\n\t          primitive: table.primitive,\n\t          createSQL: createSQL,\n\t          dropSQL: dropSQL,\n\t          depends: depends\n\t        };\n\t      }\n\t      createSchemaStatements = [];\n\t      dropSchemaStatements = [];\n\t      tableNames = [];\n\t      while (tableNames.length !== (tableNames = Object.keys(schemaDependencyMap)).length && tableNames.length > 0) {\n\t        for (l = 0, len3 = tableNames.length; l < len3; l++) {\n\t          tableName = tableNames[l];\n\t          schemaInfo = schemaDependencyMap[tableName];\n\t          unsolvedDependency = false;\n\t          ref4 = schemaInfo.depends;\n\t          for (m = 0, len4 = ref4.length; m < len4; m++) {\n\t            dependency = ref4[m];\n\t            if (dependency !== schemaInfo.resourceName) {\n\t              if (schemaDependencyMap.hasOwnProperty(dependency)) {\n\t                unsolvedDependency = true;\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (unsolvedDependency === false) {\n\t            if (sqlModel.tables[schemaInfo.resourceName].exists = schemaInfo.primitive === false || (hasDependants[tableName] != null)) {\n\t              if (schemaInfo.primitive !== false) {\n\t                console.warn(\"We're adding a primitive table??\", schemaInfo.resourceName);\n\t              }\n\t              createSchemaStatements.push(schemaInfo.createSQL);\n\t              dropSchemaStatements.push(schemaInfo.dropSQL);\n\t            }\n\t            delete schemaDependencyMap[tableName];\n\t          }\n\t        }\n\t      }\n\t      if (schemaDependencyMap.length > 0) {\n\t        console.error('Failed to resolve all schema dependencies', schemaDependencyMap);\n\t        throw new Error('Failed to resolve all schema dependencies');\n\t      }\n\t      dropSchemaStatements = dropSchemaStatements.reverse();\n\t      ruleStatements = [];\n\t      try {\n\t        ref5 = sqlModel.rules;\n\t        for (n = 0, len5 = ref5.length; n < len5; n++) {\n\t          rule = ref5[n];\n\t          ruleBody = _.find(rule, {\n\t            0: 'Body'\n\t          })[1];\n\t          ruleSE = _.find(rule, {\n\t            0: 'StructuredEnglish'\n\t          })[1];\n\t          ruleSQL = compileRule(ruleBody, engine);\n\t          ruleStatements.push({\n\t            structuredEnglish: ruleSE,\n\t            sql: ruleSQL\n\t          });\n\t        }\n\t      } catch (error) {\n\t        e = error;\n\t        console.error('Failed to compile the rule', JSON.stringify(rule, null, '\\t'));\n\t        console.error(e, e.stack);\n\t        throw e;\n\t      }\n\t      return {\n\t        tables: sqlModel.tables,\n\t        createSchema: createSchemaStatements,\n\t        dropSchema: dropSchemaStatements,\n\t        rules: ruleStatements\n\t      };\n\t    };\n\t    return module.exports = _.mapValues({\n\t      postgres: true,\n\t      mysql: true,\n\t      websql: false\n\t    }, function(ifNotExists, engine) {\n\t      return {\n\t        compileSchema: _.partial(compileSchema, _, engine, ifNotExists),\n\t        compileRule: _.partial(compileRule, _, engine),\n\t        dataTypeValidate: dataTypeValidate\n\t      };\n\t    });\n\t  });\n\t\n\t}).call(this);\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!function(root, factory) {\n\t     true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__, exports, __webpack_require__(28), __webpack_require__(4) ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : \"object\" == typeof exports ? factory(require, exports, require(\"ometa-js\").core) : factory(function(moduleName) {\n\t        return root[moduleName];\n\t    }, root, root.OMeta);\n\t}(this, function(require, exports, OMeta) {\n\t    var _ = __webpack_require__(4), AbstractSQLValidator = OMeta._extend({\n\t        Query: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._apply(\"SelectQuery\");\n\t        },\n\t        SelectQuery: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, from, groupBy, limit, offset, orderBy, query, queryPart, select, where;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"SelectQuery\");\n\t                query = [ \"SelectQuery\" ];\n\t                this._many1(function() {\n\t                    queryPart = this._or(function() {\n\t                        this._pred(null == select);\n\t                        return select = this._apply(\"Select\");\n\t                    }, function() {\n\t                        return from = this._apply(\"Table\");\n\t                    }, function() {\n\t                        return this._apply(\"Join\");\n\t                    }, function() {\n\t                        this._pred(null == where);\n\t                        return where = this._apply(\"Where\");\n\t                    }, function() {\n\t                        this._pred(null == groupBy);\n\t                        return groupBy = this._apply(\"GroupBy\");\n\t                    }, function() {\n\t                        this._pred(null == orderBy);\n\t                        return orderBy = this._apply(\"OrderBy\");\n\t                    }, function() {\n\t                        this._pred(null == limit);\n\t                        return limit = this._apply(\"Limit\");\n\t                    }, function() {\n\t                        this._pred(null == offset);\n\t                        return offset = this._apply(\"Offset\");\n\t                    });\n\t                    return query = query.concat(queryPart);\n\t                });\n\t                return this._pred(null != select);\n\t            });\n\t            return query;\n\t        },\n\t        DeleteQuery: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, query, queryPart, table, where;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"DeleteQuery\");\n\t                query = [ \"DeleteQuery\" ];\n\t                this._many(function() {\n\t                    queryPart = this._or(function() {\n\t                        return table = this._apply(\"Table\");\n\t                    }, function() {\n\t                        this._pred(null == where);\n\t                        return where = this._apply(\"Where\");\n\t                    });\n\t                    return query = query.concat(queryPart);\n\t                });\n\t                return this._pred(null != table);\n\t            });\n\t            return query;\n\t        },\n\t        UpsertQuery: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, insert, update;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"UpsertQuery\");\n\t                insert = this._apply(\"InsertQuery\");\n\t                return update = this._apply(\"UpdateQuery\");\n\t            });\n\t            return [ \"UpsertQuery\", insert, update ];\n\t        },\n\t        InsertQuery: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, body;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"InsertQuery\");\n\t                return body = this._apply(\"InsertBody\");\n\t            });\n\t            return [ \"InsertQuery\" ].concat(body);\n\t        },\n\t        UpdateQuery: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, body;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"UpdateQuery\");\n\t                return body = this._apply(\"UpdateBody\");\n\t            });\n\t            return [ \"UpdateQuery\" ].concat(body);\n\t        },\n\t        InsertBody: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, body, fields, table, values;\n\t            body = [];\n\t            this._many1(function() {\n\t                return this._or(function() {\n\t                    return this._apply(\"Where\");\n\t                }, function() {\n\t                    table = this._apply(\"Table\");\n\t                    return body = body.concat(table);\n\t                }, function() {\n\t                    return fields = this._apply(\"Fields\");\n\t                }, function() {\n\t                    return values = this._apply(\"Values\");\n\t                });\n\t            });\n\t            this._pred(null != fields);\n\t            this._pred(null != values);\n\t            this._pred(null != table);\n\t            body = body.concat(fields, values);\n\t            return body;\n\t        },\n\t        UpdateBody: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, body, fields, table, values, where;\n\t            body = [];\n\t            this._many1(function() {\n\t                return this._or(function() {\n\t                    table = this._apply(\"Table\");\n\t                    return body = body.concat(table);\n\t                }, function() {\n\t                    return fields = this._apply(\"Fields\");\n\t                }, function() {\n\t                    return values = this._apply(\"Values\");\n\t                }, function() {\n\t                    this._pred(null == where);\n\t                    return where = this._apply(\"Where\");\n\t                });\n\t            });\n\t            this._pred(null != fields && fields[0].length > 0);\n\t            this._pred(null != values && values[0].length > 0);\n\t            this._pred(null != table);\n\t            body = body.concat(fields, values);\n\t            this._opt(function() {\n\t                this._pred(where);\n\t                return body = body.concat(where);\n\t            });\n\t            return body;\n\t        },\n\t        Fields: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, fields;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Fields\");\n\t                return this._form(function() {\n\t                    return fields = this._many(function() {\n\t                        return this.anything();\n\t                    });\n\t                });\n\t            });\n\t            return [ [ \"Fields\", fields ] ];\n\t        },\n\t        Values: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, values;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Values\");\n\t                return this._or(function() {\n\t                    return values = this._apply(\"SelectQuery\");\n\t                }, function() {\n\t                    return this._form(function() {\n\t                        return values = this._many(function() {\n\t                            return this._or(function() {\n\t                                switch (this.anything()) {\n\t                                  case \"?\":\n\t                                    return \"?\";\n\t\n\t                                  default:\n\t                                    throw this._fail();\n\t                                }\n\t                            }, function() {\n\t                                return this._apply(\"true\");\n\t                            }, function() {\n\t                                return this._apply(\"false\");\n\t                            }, function() {\n\t                                return this._apply(\"Null\");\n\t                            }, function() {\n\t                                return this._apply(\"Bind\");\n\t                            }, function() {\n\t                                return this._apply(\"Default\");\n\t                            }, function() {\n\t                                return this.anything();\n\t                            });\n\t                        });\n\t                    });\n\t                });\n\t            });\n\t            return [ [ \"Values\", values ] ];\n\t        },\n\t        Default: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._applyWithArgs(\"exactly\", \"Default\");\n\t        },\n\t        Select: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, as, field, fields, table;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Select\");\n\t                return this._form(function() {\n\t                    return fields = this._many(function() {\n\t                        return this._or(function() {\n\t                            this._form(function() {\n\t                                field = this._apply(\"SelectField\");\n\t                                return as = this.anything();\n\t                            });\n\t                            return [ field, as ];\n\t                        }, function() {\n\t                            return this._apply(\"SelectField\");\n\t                        }, function() {\n\t                            return this._form(function() {\n\t                                table = this.anything();\n\t                                return this._applyWithArgs(\"exactly\", \"*\");\n\t                            });\n\t                        }, function() {\n\t                            switch (this.anything()) {\n\t                              case \"*\":\n\t                                return \"*\";\n\t\n\t                              default:\n\t                                throw this._fail();\n\t                            }\n\t                        });\n\t                    });\n\t                });\n\t            });\n\t            return [ [ \"Select\", fields ] ];\n\t        },\n\t        SelectField: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._apply(\"Count\");\n\t            }, function() {\n\t                return this._apply(\"AnyValue\");\n\t            }, function() {\n\t                return this._apply(\"Null\");\n\t            });\n\t        },\n\t        Count: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Count\");\n\t                return this._applyWithArgs(\"exactly\", \"*\");\n\t            });\n\t        },\n\t        Table: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, as, from, table;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"From\");\n\t                return from = this._or(function() {\n\t                    this._not(function() {\n\t                        return this._apply(\"string\");\n\t                    });\n\t                    this._form(function() {\n\t                        table = this._or(function() {\n\t                            return this._apply(\"SelectQuery\");\n\t                        }, function() {\n\t                            return this.anything();\n\t                        });\n\t                        return as = this.anything();\n\t                    });\n\t                    return [ table, as ];\n\t                }, function() {\n\t                    return this._apply(\"SelectQuery\");\n\t                }, function() {\n\t                    return this.anything();\n\t                });\n\t            });\n\t            return [ [ \"From\", from ] ];\n\t        },\n\t        Join: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, boolStatement, table;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Join\");\n\t                this._form(function() {\n\t                    this._applyWithArgs(\"exactly\", \"With\");\n\t                    return table = this.anything();\n\t                });\n\t                return this._form(function() {\n\t                    this._applyWithArgs(\"exactly\", \"On\");\n\t                    return boolStatement = this._apply(\"BooleanValue\");\n\t                });\n\t            });\n\t            return [ [ \"Join\", [ \"With\", table ], [ \"On\", boolStatement ] ] ];\n\t        },\n\t        Where: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, boolStatement;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Where\");\n\t                return boolStatement = this._apply(\"BooleanValue\");\n\t            });\n\t            return [ [ \"Where\", boolStatement ] ];\n\t        },\n\t        GroupBy: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, values;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"GroupBy\");\n\t                return this._form(function() {\n\t                    return values = this._many1(function() {\n\t                        return this._apply(\"AnyValue\");\n\t                    });\n\t                });\n\t            });\n\t            return [ [ \"GroupBy\", values ] ];\n\t        },\n\t        OrderBy: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, field, order, orders;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"OrderBy\");\n\t                return orders = this._many1(function() {\n\t                    this._form(function() {\n\t                        order = function() {\n\t                            switch (this.anything()) {\n\t                              case \"ASC\":\n\t                                return \"ASC\";\n\t\n\t                              case \"DESC\":\n\t                                return \"DESC\";\n\t\n\t                              default:\n\t                                throw this._fail();\n\t                            }\n\t                        }.call(this);\n\t                        return field = this._apply(\"Field\");\n\t                    });\n\t                    return [ order, field ];\n\t                });\n\t            });\n\t            return [ [ \"OrderBy\" ].concat(orders) ];\n\t        },\n\t        Limit: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, num;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Limit\");\n\t                return num = this._apply(\"NumericValue\");\n\t            });\n\t            return [ [ \"Limit\", num ] ];\n\t        },\n\t        Offset: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, num;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Offset\");\n\t                return num = this._apply(\"NumericValue\");\n\t            });\n\t            return [ [ \"Offset\", num ] ];\n\t        },\n\t        AnyValue: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._apply(\"UnknownValue\");\n\t            }, function() {\n\t                return this._apply(\"TextValue\");\n\t            }, function() {\n\t                return this._apply(\"NumericValue\");\n\t            }, function() {\n\t                return this._apply(\"BooleanValue\");\n\t            }, function() {\n\t                return this._apply(\"DateValue\");\n\t            }, function() {\n\t                return this._apply(\"JSONValue\");\n\t            }, function() {\n\t                return this._apply(\"DurationValue\");\n\t            });\n\t        },\n\t        UnknownValue: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._apply(\"Field\");\n\t            }, function() {\n\t                return this._apply(\"Bind\");\n\t            }, function() {\n\t                return this._apply(\"Null\");\n\t            }, function() {\n\t                return this._apply(\"Cast\");\n\t            }, function() {\n\t                return this._apply(\"SelectQuery\");\n\t            });\n\t        },\n\t        Field: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._apply(\"ReferencedField\");\n\t            }, function() {\n\t                return this._apply(\"UnreferencedField\");\n\t            });\n\t        },\n\t        UnreferencedField: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, field;\n\t            return this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Field\");\n\t                return field = this.anything();\n\t            });\n\t        },\n\t        ReferencedField: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, field, table;\n\t            return this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"ReferencedField\");\n\t                table = this.anything();\n\t                return field = this.anything();\n\t            });\n\t        },\n\t        Bind: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, field, tableName;\n\t            return this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Bind\");\n\t                return this._or(function() {\n\t                    return this._apply(\"number\");\n\t                }, function() {\n\t                    tableName = this.anything();\n\t                    return field = this.anything();\n\t                });\n\t            });\n\t        },\n\t        Null: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, next;\n\t            next = this.anything();\n\t            this._pred(null === next || \"Null\" === next);\n\t            return null;\n\t        },\n\t        Cast: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, as, v;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Cast\");\n\t                v = this._apply(\"AnyValue\");\n\t                return as = this.anything();\n\t            });\n\t            return [ \"Cast\", v, as ];\n\t        },\n\t        TextValue: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._apply(\"UnknownValue\");\n\t            }, function() {\n\t                return this._apply(\"Text\");\n\t            }, function() {\n\t                return this._apply(\"Concat\");\n\t            }, function() {\n\t                return this._apply(\"Lower\");\n\t            }, function() {\n\t                return this._apply(\"Upper\");\n\t            }, function() {\n\t                return this._apply(\"Trim\");\n\t            }, function() {\n\t                return this._apply(\"Replace\");\n\t            }, function() {\n\t                return this._apply(\"Substring\");\n\t            }, function() {\n\t                return this._apply(\"Right\");\n\t            });\n\t        },\n\t        Text: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, text;\n\t            return this._form(function() {\n\t                (function() {\n\t                    switch (this.anything()) {\n\t                      case \"Text\":\n\t                        return \"Text\";\n\t\n\t                      case \"Value\":\n\t                        return \"Value\";\n\t\n\t                      default:\n\t                        throw this._fail();\n\t                    }\n\t                }).call(this);\n\t                return text = this.anything();\n\t            });\n\t        },\n\t        Concat: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, firstString, otherStrings;\n\t            this._form(function() {\n\t                (function() {\n\t                    switch (this.anything()) {\n\t                      case \"Concat\":\n\t                        return \"Concat\";\n\t\n\t                      case \"Concatenate\":\n\t                        return \"Concatenate\";\n\t\n\t                      default:\n\t                        throw this._fail();\n\t                    }\n\t                }).call(this);\n\t                firstString = this._apply(\"TextValue\");\n\t                return otherStrings = this._many1(function() {\n\t                    return this._apply(\"TextValue\");\n\t                });\n\t            });\n\t            return [ \"Concatenate\", firstString ].concat(otherStrings);\n\t        },\n\t        Lower: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, string;\n\t            this._form(function() {\n\t                (function() {\n\t                    switch (this.anything()) {\n\t                      case \"Lower\":\n\t                        return \"Lower\";\n\t\n\t                      case \"ToLower\":\n\t                        return \"ToLower\";\n\t\n\t                      case \"Tolower\":\n\t                        return \"Tolower\";\n\t\n\t                      default:\n\t                        throw this._fail();\n\t                    }\n\t                }).call(this);\n\t                return string = this._apply(\"TextValue\");\n\t            });\n\t            return [ \"Lower\", string ];\n\t        },\n\t        Upper: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, string;\n\t            this._form(function() {\n\t                (function() {\n\t                    switch (this.anything()) {\n\t                      case \"ToUpper\":\n\t                        return \"ToUpper\";\n\t\n\t                      case \"Toupper\":\n\t                        return \"Toupper\";\n\t\n\t                      case \"Upper\":\n\t                        return \"Upper\";\n\t\n\t                      default:\n\t                        throw this._fail();\n\t                    }\n\t                }).call(this);\n\t                return string = this._apply(\"TextValue\");\n\t            });\n\t            return [ \"Upper\", string ];\n\t        },\n\t        Trim: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, str;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Trim\");\n\t                return str = this._apply(\"TextValue\");\n\t            });\n\t            return [ \"Trim\", str ];\n\t        },\n\t        Replace: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, find, replacement, string;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Replace\");\n\t                string = this._apply(\"TextValue\");\n\t                find = this._apply(\"TextValue\");\n\t                return replacement = this._apply(\"TextValue\");\n\t            });\n\t            return [ \"Replace\", string, find, replacement ];\n\t        },\n\t        Substring: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, args, string;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Substring\");\n\t                string = this._apply(\"TextValue\");\n\t                return args = this._many1(function() {\n\t                    return this._apply(\"NumericValue\");\n\t                });\n\t            });\n\t            return [ \"Substring\", string ].concat(args);\n\t        },\n\t        Right: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, n, string;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Right\");\n\t                string = this._apply(\"TextValue\");\n\t                return n = this._apply(\"NumericValue\");\n\t            });\n\t            return [ \"Right\", string, n ];\n\t        },\n\t        NumericValue: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._apply(\"UnknownValue\");\n\t            }, function() {\n\t                return this._apply(\"Number\");\n\t            }, function() {\n\t                return this._apply(\"MathOp\");\n\t            }, function() {\n\t                return this._apply(\"BitwiseAnd\");\n\t            }, function() {\n\t                return this._apply(\"BitwiseShiftRight\");\n\t            }, function() {\n\t                return this._apply(\"CharacterLength\");\n\t            }, function() {\n\t                return this._apply(\"IndexOf\");\n\t            }, function() {\n\t                return this._apply(\"StrPos\");\n\t            }, function() {\n\t                return this._apply(\"Year\");\n\t            }, function() {\n\t                return this._apply(\"Month\");\n\t            }, function() {\n\t                return this._apply(\"Day\");\n\t            }, function() {\n\t                return this._apply(\"Hour\");\n\t            }, function() {\n\t                return this._apply(\"Minute\");\n\t            }, function() {\n\t                return this._apply(\"Second\");\n\t            }, function() {\n\t                return this._apply(\"FractionalSeconds\");\n\t            }, function() {\n\t                return this._apply(\"TotalSeconds\");\n\t            }, function() {\n\t                return this._apply(\"Round\");\n\t            }, function() {\n\t                return this._apply(\"Floor\");\n\t            }, function() {\n\t                return this._apply(\"Ceiling\");\n\t            });\n\t        },\n\t        Number: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, number;\n\t            return this._form(function() {\n\t                (function() {\n\t                    switch (this.anything()) {\n\t                      case \"Integer\":\n\t                        return \"Integer\";\n\t\n\t                      case \"Number\":\n\t                        return \"Number\";\n\t\n\t                      case \"Real\":\n\t                        return \"Real\";\n\t\n\t                      default:\n\t                        throw this._fail();\n\t                    }\n\t                }).call(this);\n\t                return number = this.anything();\n\t            });\n\t        },\n\t        MathOp: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._apply(\"Add\");\n\t            }, function() {\n\t                return this._apply(\"Subtract\");\n\t            }, function() {\n\t                return this._apply(\"Multiply\");\n\t            }, function() {\n\t                return this._apply(\"Divide\");\n\t            });\n\t        },\n\t        Add: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, lhs, rhs;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Add\");\n\t                lhs = this._apply(\"NumericValue\");\n\t                return rhs = this._apply(\"NumericValue\");\n\t            });\n\t            return [ \"Add\", lhs, rhs ];\n\t        },\n\t        Subtract: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, lhs, rhs;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Subtract\");\n\t                lhs = this._apply(\"NumericValue\");\n\t                return rhs = this._apply(\"NumericValue\");\n\t            });\n\t            return [ \"Subtract\", lhs, rhs ];\n\t        },\n\t        Multiply: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, lhs, rhs;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Multiply\");\n\t                lhs = this._apply(\"NumericValue\");\n\t                return rhs = this._apply(\"NumericValue\");\n\t            });\n\t            return [ \"Multiply\", lhs, rhs ];\n\t        },\n\t        Divide: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, lhs, rhs;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Divide\");\n\t                lhs = this._apply(\"NumericValue\");\n\t                return rhs = this._apply(\"NumericValue\");\n\t            });\n\t            return [ \"Divide\", lhs, rhs ];\n\t        },\n\t        BitwiseAnd: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, mask, operand;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"BitwiseAnd\");\n\t                operand = this._apply(\"NumericValue\");\n\t                return mask = this._apply(\"NumericValue\");\n\t            });\n\t            return [ \"BitwiseAnd\", operand, mask ];\n\t        },\n\t        BitwiseShiftRight: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, operand, shift;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"BitwiseShiftRight\");\n\t                operand = this._apply(\"NumericValue\");\n\t                return shift = this._apply(\"NumericValue\");\n\t            });\n\t            return [ \"BitwiseShiftRight\", operand, shift ];\n\t        },\n\t        CharacterLength: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, text;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"CharacterLength\");\n\t                return text = this._apply(\"TextValue\");\n\t            });\n\t            return [ \"CharacterLength\", text ];\n\t        },\n\t        IndexOf: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, haystack, needle;\n\t            this._form(function() {\n\t                (function() {\n\t                    switch (this.anything()) {\n\t                      case \"IndexOf\":\n\t                        return \"IndexOf\";\n\t\n\t                      case \"Indexof\":\n\t                        return \"Indexof\";\n\t\n\t                      default:\n\t                        throw this._fail();\n\t                    }\n\t                }).call(this);\n\t                haystack = this._apply(\"TextValue\");\n\t                return needle = this._apply(\"TextValue\");\n\t            });\n\t            this._apply(\"SetHelped\");\n\t            return [ \"Subtract\", [ \"StrPos\", haystack, needle ], [ \"Number\", 1 ] ];\n\t        },\n\t        StrPos: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, haystack, needle;\n\t            this._form(function() {\n\t                (function() {\n\t                    switch (this.anything()) {\n\t                      case \"InStr\":\n\t                        return \"InStr\";\n\t\n\t                      case \"StrPos\":\n\t                        return \"StrPos\";\n\t\n\t                      default:\n\t                        throw this._fail();\n\t                    }\n\t                }).call(this);\n\t                haystack = this._apply(\"TextValue\");\n\t                return needle = this._apply(\"TextValue\");\n\t            });\n\t            return [ \"StrPos\", haystack, needle ];\n\t        },\n\t        Year: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, date;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Year\");\n\t                return date = this._apply(\"DateValue\");\n\t            });\n\t            return [ \"Year\", date ];\n\t        },\n\t        Month: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, date;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Month\");\n\t                return date = this._apply(\"DateValue\");\n\t            });\n\t            return [ \"Month\", date ];\n\t        },\n\t        Day: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, date;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Day\");\n\t                return date = this._apply(\"DateValue\");\n\t            });\n\t            return [ \"Day\", date ];\n\t        },\n\t        Hour: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, date;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Hour\");\n\t                return date = this._apply(\"DateValue\");\n\t            });\n\t            return [ \"Hour\", date ];\n\t        },\n\t        Minute: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, date;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Minute\");\n\t                return date = this._apply(\"DateValue\");\n\t            });\n\t            return [ \"Minute\", date ];\n\t        },\n\t        Second: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, date;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Second\");\n\t                return date = this._apply(\"DateValue\");\n\t            });\n\t            return [ \"Second\", date ];\n\t        },\n\t        FractionalSeconds: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, date;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Fractionalseconds\");\n\t                return date = this._apply(\"DateValue\");\n\t            });\n\t            return [ \"Fractionalseconds\", date ];\n\t        },\n\t        TotalSeconds: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, duration;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Totalseconds\");\n\t                return duration = this._apply(\"DurationValue\");\n\t            });\n\t            return [ \"Totalseconds\", duration ];\n\t        },\n\t        Round: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, num;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Round\");\n\t                return num = this._apply(\"NumericValue\");\n\t            });\n\t            return [ \"Round\", num ];\n\t        },\n\t        Floor: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, num;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Floor\");\n\t                return num = this._apply(\"NumericValue\");\n\t            });\n\t            return [ \"Floor\", num ];\n\t        },\n\t        Ceiling: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, num;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Ceiling\");\n\t                return num = this._apply(\"NumericValue\");\n\t            });\n\t            return [ \"Ceiling\", num ];\n\t        },\n\t        BooleanValue: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._apply(\"UnknownValue\");\n\t            }, function() {\n\t                return this._apply(\"Boolean\");\n\t            }, function() {\n\t                return this._apply(\"And\");\n\t            }, function() {\n\t                return this._apply(\"Not\");\n\t            }, function() {\n\t                return this._apply(\"Or\");\n\t            }, function() {\n\t                return this._apply(\"Exists\");\n\t            }, function() {\n\t                return this._apply(\"NotExists\");\n\t            }, function() {\n\t                return this._apply(\"Comparison\");\n\t            }, function() {\n\t                return this._apply(\"Between\");\n\t            }, function() {\n\t                return this._apply(\"In\");\n\t            }, function() {\n\t                return this._apply(\"NotIn\");\n\t            });\n\t        },\n\t        Boolean: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, bool;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Boolean\");\n\t                return bool = this._or(function() {\n\t                    return this._apply(\"true\");\n\t                }, function() {\n\t                    return this._apply(\"false\");\n\t                });\n\t            });\n\t            return [ \"Boolean\", bool ];\n\t        },\n\t        Not: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, bool;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Not\");\n\t                return bool = this._apply(\"BooleanValue\");\n\t            });\n\t            return [ \"Not\", bool ];\n\t        },\n\t        And: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, firstBool, otherBools;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"And\");\n\t                firstBool = this._apply(\"BooleanValue\");\n\t                return otherBools = this._many1(function() {\n\t                    return this._apply(\"BooleanValue\");\n\t                });\n\t            });\n\t            return [ \"And\", firstBool ].concat(otherBools);\n\t        },\n\t        Or: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, firstBool, otherBools;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Or\");\n\t                firstBool = this._apply(\"BooleanValue\");\n\t                return otherBools = this._many1(function() {\n\t                    return this._apply(\"BooleanValue\");\n\t                });\n\t            });\n\t            return [ \"Or\", firstBool ].concat(otherBools);\n\t        },\n\t        NotExists: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, exists;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"NotExists\");\n\t                return exists = this._apply(\"AnyValue\");\n\t            });\n\t            return [ \"NotExists\", exists ];\n\t        },\n\t        Exists: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, exists;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Exists\");\n\t                return exists = this._apply(\"AnyValue\");\n\t            });\n\t            return [ \"Exists\", exists ];\n\t        },\n\t        Comparison: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._apply(\"Equals\");\n\t            }, function() {\n\t                return this._apply(\"GreaterThan\");\n\t            }, function() {\n\t                return this._apply(\"GreaterThanOrEqual\");\n\t            }, function() {\n\t                return this._apply(\"LessThan\");\n\t            }, function() {\n\t                return this._apply(\"LessThanOrEqual\");\n\t            }, function() {\n\t                return this._apply(\"NotEquals\");\n\t            }, function() {\n\t                return this._apply(\"Like\");\n\t            });\n\t        },\n\t        Equals: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, comp1, comp2;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Equals\");\n\t                comp1 = this._apply(\"AnyValue\");\n\t                return comp2 = this._apply(\"AnyValue\");\n\t            });\n\t            return [ \"Equals\", comp1, comp2 ];\n\t        },\n\t        GreaterThan: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, comp1, comp2;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"GreaterThan\");\n\t                comp1 = this._apply(\"AnyValue\");\n\t                return comp2 = this._apply(\"AnyValue\");\n\t            });\n\t            return [ \"GreaterThan\", comp1, comp2 ];\n\t        },\n\t        GreaterThanOrEqual: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, comp1, comp2;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"GreaterThanOrEqual\");\n\t                comp1 = this._apply(\"AnyValue\");\n\t                return comp2 = this._apply(\"AnyValue\");\n\t            });\n\t            return [ \"GreaterThanOrEqual\", comp1, comp2 ];\n\t        },\n\t        LessThan: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, comp1, comp2;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"LessThan\");\n\t                comp1 = this._apply(\"AnyValue\");\n\t                return comp2 = this._apply(\"AnyValue\");\n\t            });\n\t            return [ \"LessThan\", comp1, comp2 ];\n\t        },\n\t        LessThanOrEqual: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, comp1, comp2;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"LessThanOrEqual\");\n\t                comp1 = this._apply(\"AnyValue\");\n\t                return comp2 = this._apply(\"AnyValue\");\n\t            });\n\t            return [ \"LessThanOrEqual\", comp1, comp2 ];\n\t        },\n\t        NotEquals: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, comp1, comp2;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"NotEquals\");\n\t                comp1 = this._apply(\"AnyValue\");\n\t                return comp2 = this._apply(\"AnyValue\");\n\t            });\n\t            return [ \"NotEquals\", comp1, comp2 ];\n\t        },\n\t        Like: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, comp1, comp2;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Like\");\n\t                comp1 = this._apply(\"AnyValue\");\n\t                return comp2 = this._apply(\"AnyValue\");\n\t            });\n\t            return [ \"Like\", comp1, comp2 ];\n\t        },\n\t        Between: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, comp1, comp2, comp3;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Between\");\n\t                comp1 = this._apply(\"AnyValue\");\n\t                comp2 = this._apply(\"AnyValue\");\n\t                return comp3 = this._apply(\"AnyValue\");\n\t            });\n\t            return [ \"Between\", comp1, comp2, comp3 ];\n\t        },\n\t        In: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, field, vals;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"In\");\n\t                field = this._apply(\"Field\");\n\t                return vals = this._many1(function() {\n\t                    return this._apply(\"AnyValue\");\n\t                });\n\t            });\n\t            return [ \"In\", field ].concat(vals);\n\t        },\n\t        NotIn: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, field, vals;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"NotIn\");\n\t                field = this._apply(\"Field\");\n\t                return vals = this._many1(function() {\n\t                    return this._apply(\"AnyValue\");\n\t                });\n\t            });\n\t            return [ \"NotIn\", field ].concat(vals);\n\t        },\n\t        DateValue: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._apply(\"UnknownValue\");\n\t            }, function() {\n\t                return this._apply(\"Date\");\n\t            }, function() {\n\t                return this._apply(\"ToDate\");\n\t            }, function() {\n\t                return this._apply(\"ToTime\");\n\t            }, function() {\n\t                return this._apply(\"Now\");\n\t            });\n\t        },\n\t        Date: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, date;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Date\");\n\t                return date = this.anything();\n\t            });\n\t            this._pred(_.isDate(date));\n\t            return [ \"Date\", date ];\n\t        },\n\t        ToDate: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, date;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"ToDate\");\n\t                return date = this._apply(\"DateValue\");\n\t            });\n\t            return [ \"ToDate\", date ];\n\t        },\n\t        ToTime: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, date;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"ToTime\");\n\t                return date = this._apply(\"DateValue\");\n\t            });\n\t            return [ \"ToTime\", date ];\n\t        },\n\t        Now: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            this._form(function() {\n\t                return this._applyWithArgs(\"exactly\", \"Now\");\n\t            });\n\t            return [ \"Now\" ];\n\t        },\n\t        JSONValue: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._apply(\"UnknownValue\");\n\t            }, function() {\n\t                return this._apply(\"AggregateJSON\");\n\t            });\n\t        },\n\t        AggregateJSON: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, field;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"AggregateJSON\");\n\t                return field = this.anything();\n\t            });\n\t            return [ \"AggregateJSON\", field ];\n\t        },\n\t        DurationValue: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._apply(\"UnknownValue\");\n\t            }, function() {\n\t                return this._apply(\"Duration\");\n\t            });\n\t        },\n\t        Duration: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, duration;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Duration\");\n\t                return duration = this.anything();\n\t            });\n\t            this._pred(_.isObject(duration));\n\t            duration = _(duration).pick(\"negative\", \"day\", \"hour\", \"minute\", \"second\").omitBy(_.isNil).pickBy(function(value, key) {\n\t                return \"negative\" === key ? _.isBoolean(value) : _.isNumber(value);\n\t            }).value();\n\t            this._pred(!_(duration).omit(\"negative\").isEmpty());\n\t            return [ \"Duration\", duration ];\n\t        }\n\t    }), AbstractSQLOptimiser = exports.AbstractSQLOptimiser = AbstractSQLValidator._extend({\n\t        FieldNotEquals: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, comp1, comp2;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"NotEquals\");\n\t                return this._or(function() {\n\t                    comp1 = this._apply(\"Field\");\n\t                    return comp2 = this._apply(\"AnyValue\");\n\t                }, function() {\n\t                    comp2 = this._apply(\"AnyValue\");\n\t                    return comp1 = this._apply(\"Field\");\n\t                });\n\t            });\n\t            return [ \"NotEquals\", comp1, comp2 ];\n\t        },\n\t        FieldEquals: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, comp1, comp2;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Equals\");\n\t                return this._or(function() {\n\t                    comp1 = this._apply(\"Field\");\n\t                    return comp2 = this._apply(\"AnyValue\");\n\t                }, function() {\n\t                    comp2 = this._apply(\"AnyValue\");\n\t                    return comp1 = this._apply(\"Field\");\n\t                });\n\t            });\n\t            return [ \"Equals\", comp1, comp2 ];\n\t        },\n\t        Or: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, bool, conditions, firstBool, inStatement, inVals, or, otherBools, secondBool;\n\t            return this._or(function() {\n\t                this._form(function() {\n\t                    this._applyWithArgs(\"exactly\", \"Or\");\n\t                    firstBool = this._apply(\"FieldEquals\");\n\t                    inVals = this._many1(function() {\n\t                        secondBool = this._apply(\"FieldEquals\");\n\t                        this._pred(_.isEqual(firstBool[1], secondBool[1]));\n\t                        return secondBool[2];\n\t                    });\n\t                    return otherBools = this._many(function() {\n\t                        return this._apply(\"BooleanValue\");\n\t                    });\n\t                });\n\t                this._apply(\"SetHelped\");\n\t                inStatement = [ \"In\", firstBool[1], firstBool[2] ].concat(inVals);\n\t                return this._or(function() {\n\t                    this._pred(otherBools.length > 0);\n\t                    return [ \"Or\", inStatement ].concat(otherBools);\n\t                }, function() {\n\t                    return inStatement;\n\t                });\n\t            }, function() {\n\t                this._form(function() {\n\t                    this._applyWithArgs(\"exactly\", \"Or\");\n\t                    conditions = [];\n\t                    return this._many1(function() {\n\t                        return this._or(function() {\n\t                            or = this._apply(\"Or\");\n\t                            conditions = conditions.concat(or.slice(1));\n\t                            return this._apply(\"SetHelped\");\n\t                        }, function() {\n\t                            bool = this._apply(\"BooleanValue\");\n\t                            return conditions.push(bool);\n\t                        });\n\t                    });\n\t                });\n\t                return [ \"Or\" ].concat(conditions);\n\t            }, function() {\n\t                return AbstractSQLValidator._superApplyWithArgs(this, \"Or\");\n\t            });\n\t        },\n\t        And: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, and, bool, conditions, firstBool, inStatement, inVals, otherBools, secondBool;\n\t            return this._or(function() {\n\t                this._form(function() {\n\t                    this._applyWithArgs(\"exactly\", \"And\");\n\t                    firstBool = this._apply(\"FieldNotEquals\");\n\t                    inVals = this._many1(function() {\n\t                        secondBool = this._apply(\"FieldNotEquals\");\n\t                        this._pred(_.isEqual(firstBool[1], secondBool[1]));\n\t                        return secondBool[2];\n\t                    });\n\t                    return otherBools = this._many(function() {\n\t                        return this._apply(\"BooleanValue\");\n\t                    });\n\t                });\n\t                this._apply(\"SetHelped\");\n\t                inStatement = [ \"NotIn\", firstBool[1], firstBool[2] ].concat(inVals);\n\t                return this._or(function() {\n\t                    this._pred(otherBools.length > 0);\n\t                    return [ \"Or\", inStatement ].concat(otherBools);\n\t                }, function() {\n\t                    return inStatement;\n\t                });\n\t            }, function() {\n\t                this._form(function() {\n\t                    this._applyWithArgs(\"exactly\", \"And\");\n\t                    conditions = [];\n\t                    return this._many1(function() {\n\t                        return this._or(function() {\n\t                            and = this._apply(\"And\");\n\t                            conditions = conditions.concat(and.slice(1));\n\t                            return this._apply(\"SetHelped\");\n\t                        }, function() {\n\t                            bool = this._apply(\"BooleanValue\");\n\t                            return conditions.push(bool);\n\t                        });\n\t                    });\n\t                });\n\t                return [ \"And\" ].concat(conditions);\n\t            }, function() {\n\t                return AbstractSQLValidator._superApplyWithArgs(this, \"And\");\n\t            });\n\t        },\n\t        Not: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, boolStatement, replace;\n\t            return this._or(function() {\n\t                this._form(function() {\n\t                    this._applyWithArgs(\"exactly\", \"Not\");\n\t                    return this._or(function() {\n\t                        return this._form(function() {\n\t                            this._applyWithArgs(\"exactly\", \"Not\");\n\t                            return boolStatement = this._apply(\"BooleanValue\");\n\t                        });\n\t                    }, function() {\n\t                        replace = this._or(function() {\n\t                            boolStatement = this._apply(\"Equals\");\n\t                            return \"NotEquals\";\n\t                        }, function() {\n\t                            boolStatement = this._apply(\"NotEquals\");\n\t                            return \"Equals\";\n\t                        }, function() {\n\t                            boolStatement = this._apply(\"In\");\n\t                            return \"NotIn\";\n\t                        }, function() {\n\t                            boolStatement = this._apply(\"NotIn\");\n\t                            return \"In\";\n\t                        }, function() {\n\t                            boolStatement = this._apply(\"Exists\");\n\t                            return \"NotExists\";\n\t                        }, function() {\n\t                            boolStatement = this._apply(\"NotExists\");\n\t                            return \"Exists\";\n\t                        });\n\t                        return boolStatement[0] = replace;\n\t                    });\n\t                });\n\t                this._apply(\"SetHelped\");\n\t                return boolStatement;\n\t            }, function() {\n\t                return AbstractSQLValidator._superApplyWithArgs(this, \"Not\");\n\t            });\n\t        },\n\t        NotEquals: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, value;\n\t            return this._or(function() {\n\t                this._form(function() {\n\t                    this._applyWithArgs(\"exactly\", \"NotEquals\");\n\t                    return this._or(function() {\n\t                        this._apply(\"Null\");\n\t                        return value = this._apply(\"AnyValue\");\n\t                    }, function() {\n\t                        value = this._apply(\"AnyValue\");\n\t                        return this._apply(\"Null\");\n\t                    });\n\t                });\n\t                this._apply(\"SetHelped\");\n\t                return [ \"Exists\", value ];\n\t            }, function() {\n\t                return AbstractSQLValidator._superApplyWithArgs(this, \"NotEquals\");\n\t            });\n\t        },\n\t        Equals: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, value;\n\t            return this._or(function() {\n\t                this._form(function() {\n\t                    this._applyWithArgs(\"exactly\", \"Equals\");\n\t                    return this._or(function() {\n\t                        this._apply(\"Null\");\n\t                        return value = this._apply(\"AnyValue\");\n\t                    }, function() {\n\t                        value = this._apply(\"AnyValue\");\n\t                        return this._apply(\"Null\");\n\t                    });\n\t                });\n\t                this._apply(\"SetHelped\");\n\t                return [ \"Not\", [ \"Exists\", value ] ];\n\t            }, function() {\n\t                return AbstractSQLValidator._superApplyWithArgs(this, \"Equals\");\n\t            });\n\t        },\n\t        BooleanValue: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._apply(\"Contains\");\n\t            }, function() {\n\t                return this._apply(\"StartsWith\");\n\t            }, function() {\n\t                return this._apply(\"EndsWith\");\n\t            }, function() {\n\t                return AbstractSQLValidator._superApplyWithArgs(this, \"BooleanValue\");\n\t            });\n\t        },\n\t        Contains: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, haystack, needle;\n\t            this._form(function() {\n\t                switch (this.anything()) {\n\t                  case \"Contains\":\n\t                    haystack = this._apply(\"TextValue\");\n\t                    return needle = this._apply(\"TextValue\");\n\t\n\t                  case \"Substringof\":\n\t                    needle = this._apply(\"TextValue\");\n\t                    return haystack = this._apply(\"TextValue\");\n\t\n\t                  default:\n\t                    throw this._fail();\n\t                }\n\t            });\n\t            this._apply(\"SetHelped\");\n\t            return [ \"GreaterThan\", [ \"StrPos\", haystack, needle ], [ \"Number\", 0 ] ];\n\t        },\n\t        StartsWith: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, haystack, needle;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Startswith\");\n\t                haystack = this._apply(\"TextValue\");\n\t                return needle = this._apply(\"TextValue\");\n\t            });\n\t            this._apply(\"SetHelped\");\n\t            return [ \"Equals\", [ \"StrPos\", haystack, needle ], [ \"Number\", 1 ] ];\n\t        },\n\t        EndsWith: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, haystack, needle;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Endswith\");\n\t                haystack = this._apply(\"TextValue\");\n\t                return needle = this._apply(\"TextValue\");\n\t            });\n\t            this._apply(\"SetHelped\");\n\t            return [ \"Equals\", [ \"Right\", haystack, [ \"CharacterLength\", needle ] ], needle ];\n\t        },\n\t        Helped: function(disableMemoisationHack) {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            this._pred(this.helped === !0);\n\t            return this.helped = !1;\n\t        },\n\t        SetHelped: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this.helped = !0;\n\t        },\n\t        Process: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, query;\n\t            query = this.anything();\n\t            query = this._or(function() {\n\t                return this._applyWithArgs(\"AnyValue\", query);\n\t            }, function() {\n\t                return this._applyWithArgs(\"SelectQuery\", query);\n\t            }, function() {\n\t                return this._applyWithArgs(\"InsertQuery\", query);\n\t            }, function() {\n\t                return this._applyWithArgs(\"UpdateQuery\", query);\n\t            }, function() {\n\t                return this._applyWithArgs(\"DeleteQuery\", query);\n\t            }, function() {\n\t                return this._applyWithArgs(\"UpsertQuery\", query);\n\t            });\n\t            this._many(function() {\n\t                this._applyWithArgs(\"Helped\", \"disableMemoisation\");\n\t                return query = this._or(function() {\n\t                    return this._applyWithArgs(\"AnyValue\", query);\n\t                }, function() {\n\t                    return this._applyWithArgs(\"SelectQuery\", query);\n\t                }, function() {\n\t                    return this._applyWithArgs(\"InsertQuery\", query);\n\t                }, function() {\n\t                    return this._applyWithArgs(\"UpdateQuery\", query);\n\t                }, function() {\n\t                    return this._applyWithArgs(\"DeleteQuery\", query);\n\t                }, function() {\n\t                    return this._applyWithArgs(\"UpsertQuery\", query);\n\t                });\n\t            });\n\t            return query;\n\t        }\n\t    });\n\t    AbstractSQLOptimiser.initialize = function() {\n\t        this.helped = !1;\n\t    };\n\t});\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!function(root, factory) {\n\t     true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__, exports, __webpack_require__(28), __webpack_require__(36), __webpack_require__(4) ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : \"object\" == typeof exports ? factory(require, exports, require(\"ometa-js\").core) : factory(function(moduleName) {\n\t        return root[moduleName];\n\t    }, root, root.OMeta);\n\t}(this, function(require, exports, OMeta) {\n\t    var sbvrTypes = __webpack_require__(36), _ = __webpack_require__(4), comparisons = {\n\t        Equals: \" = \",\n\t        GreaterThan: \" > \",\n\t        GreaterThanOrEqual: \" >= \",\n\t        LessThan: \" < \",\n\t        LessThanOrEqual: \" <= \",\n\t        NotEquals: \" != \",\n\t        Like: \" LIKE \"\n\t    }, fractionalSecondsFormat = function(date) {\n\t        return this.Totalseconds(date) + \" - \" + this.Second(date);\n\t    }, websqlBasicDateFormat = function(format) {\n\t        return function(date) {\n\t            return \"STRFTIME('\" + format + \"', \" + date + \")\";\n\t        };\n\t    }, websqlDateFormats = {\n\t        Year: websqlBasicDateFormat(\"%Y\"),\n\t        Month: websqlBasicDateFormat(\"%m\"),\n\t        Day: websqlBasicDateFormat(\"%d\"),\n\t        Hour: websqlBasicDateFormat(\"%H\"),\n\t        Minute: websqlBasicDateFormat(\"%M\"),\n\t        Second: websqlBasicDateFormat(\"%S\"),\n\t        Fractionalseconds: fractionalSecondsFormat,\n\t        Totalseconds: websqlBasicDateFormat(\"%f\")\n\t    }, basicDateFormat = function(part) {\n\t        return function(date) {\n\t            return \"EXTRACT('\" + part + \"' FROM \" + date + \")\";\n\t        };\n\t    }, dateFormats = {\n\t        Year: basicDateFormat(\"YEAR\"),\n\t        Month: basicDateFormat(\"MONTH\"),\n\t        Day: basicDateFormat(\"DAY\"),\n\t        Hour: basicDateFormat(\"HOUR\"),\n\t        Minute: basicDateFormat(\"MINUTE\"),\n\t        Second: function(date) {\n\t            return \"FLOOR(\" + dateFormats.Totalseconds(date) + \")\";\n\t        },\n\t        Fractionalseconds: fractionalSecondsFormat,\n\t        Totalseconds: basicDateFormat(\"SECOND\")\n\t    }, AbstractSQLRules2SQL = exports.AbstractSQLRules2SQL = OMeta._extend({\n\t        NestedIndent: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return indent + \"\t\";\n\t        },\n\t        SelectQuery: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, fields, from, groupBy, limit, nestedIndent, offset, orderBy, table, tables, where;\n\t            nestedIndent = this._applyWithArgs(\"NestedIndent\", indent);\n\t            tables = [];\n\t            where = \"\";\n\t            groupBy = \"\";\n\t            orderBy = \"\";\n\t            limit = \"\";\n\t            offset = \"\";\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"SelectQuery\");\n\t                return this._many(function() {\n\t                    return this._form(function() {\n\t                        return this._or(function() {\n\t                            return fields = this._applyWithArgs(\"Select\", indent);\n\t                        }, function() {\n\t                            table = this._applyWithArgs(\"Table\", indent);\n\t                            return tables.push(table);\n\t                        }, function() {\n\t                            where = this._applyWithArgs(\"Where\", indent);\n\t                            return where = indent + where;\n\t                        }, function() {\n\t                            groupBy = this._applyWithArgs(\"GroupBy\", indent);\n\t                            return groupBy = indent + groupBy;\n\t                        }, function() {\n\t                            orderBy = this._applyWithArgs(\"OrderBy\", indent);\n\t                            return orderBy = indent + orderBy;\n\t                        }, function() {\n\t                            limit = this._applyWithArgs(\"Limit\", indent);\n\t                            return limit = indent + limit;\n\t                        }, function() {\n\t                            offset = this._applyWithArgs(\"Offset\", indent);\n\t                            return offset = indent + offset;\n\t                        });\n\t                    });\n\t                });\n\t            });\n\t            from = this._or(function() {\n\t                this._pred(tables.length);\n\t                return indent + \"FROM \" + tables.join(\",\" + nestedIndent);\n\t            }, function() {\n\t                return \"\";\n\t            });\n\t            return \"SELECT \" + fields.join(\", \") + from + where + groupBy + orderBy + limit + offset;\n\t        },\n\t        DeleteQuery: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, table, tables, where;\n\t            tables = [];\n\t            where = \"\";\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"DeleteQuery\");\n\t                return this._many(function() {\n\t                    return this._form(function() {\n\t                        return this._or(function() {\n\t                            table = this._applyWithArgs(\"Table\", indent);\n\t                            return tables.push(table);\n\t                        }, function() {\n\t                            where = this._applyWithArgs(\"Where\", indent);\n\t                            return where = indent + where;\n\t                        });\n\t                    });\n\t                });\n\t            });\n\t            return \"DELETE FROM \" + tables.join(\", \") + where;\n\t        },\n\t        UpsertQuery: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, insert, update;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"UpsertQuery\");\n\t                insert = this._applyWithArgs(\"InsertQuery\", indent);\n\t                insert = {\n\t                    query: insert,\n\t                    bindings: this.fieldOrderings\n\t                };\n\t                this.fieldOrderings = [];\n\t                update = this._applyWithArgs(\"UpdateQuery\", indent);\n\t                return update = {\n\t                    query: update,\n\t                    bindings: this.fieldOrderings\n\t                };\n\t            });\n\t            return [ insert, update ];\n\t        },\n\t        InsertQuery: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, insert;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"InsertQuery\");\n\t                return insert = this._applyWithArgs(\"InsertBody\", indent);\n\t            });\n\t            return insert;\n\t        },\n\t        UpdateQuery: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, update;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"UpdateQuery\");\n\t                return update = this._applyWithArgs(\"UpdateBody\", indent);\n\t            });\n\t            return update;\n\t        },\n\t        InsertBody: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, fields, table, tables, values;\n\t            tables = [];\n\t            this._many(function() {\n\t                return this._form(function() {\n\t                    return this._or(function() {\n\t                        return fields = this._apply(\"Fields\");\n\t                    }, function() {\n\t                        return values = this._applyWithArgs(\"Values\", indent);\n\t                    }, function() {\n\t                        table = this._applyWithArgs(\"Table\", indent);\n\t                        return tables.push(table);\n\t                    });\n\t                });\n\t            });\n\t            return this._or(function() {\n\t                this._pred(fields.length > 0);\n\t                this._opt(function() {\n\t                    this._pred(_.isArray(values));\n\t                    return values = \"VALUES (\" + values.join(\", \") + \")\";\n\t                });\n\t                return \"INSERT INTO \" + tables.join(\", \") + \" (\" + fields.join(\", \") + \")\" + indent + values;\n\t            }, function() {\n\t                return \"INSERT INTO \" + tables.join(\", \") + \" DEFAULT VALUES\";\n\t            });\n\t        },\n\t        UpdateBody: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, fields, nestedIndent, sets, table, tables, values, where;\n\t            tables = [];\n\t            where = \"\";\n\t            this._many(function() {\n\t                return this._form(function() {\n\t                    return this._or(function() {\n\t                        fields = this._apply(\"Fields\");\n\t                        return this._pred(fields.length > 0);\n\t                    }, function() {\n\t                        values = this._apply(\"Values\");\n\t                        return this._pred(values.length > 0);\n\t                    }, function() {\n\t                        table = this._applyWithArgs(\"Table\", indent);\n\t                        return tables.push(table);\n\t                    }, function() {\n\t                        where = this._applyWithArgs(\"Where\", indent);\n\t                        return where = indent + where;\n\t                    });\n\t                });\n\t            });\n\t            sets = [];\n\t            (function() {\n\t                for (var i = 0; i < fields.length; i++) sets[i] = fields[i] + \" = \" + values[i];\n\t            }).call(this);\n\t            nestedIndent = this._applyWithArgs(\"NestedIndent\", indent);\n\t            return \"UPDATE \" + tables.join(\", \") + indent + \"SET \" + sets.join(\",\" + nestedIndent) + where;\n\t        },\n\t        Fields: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, field, fields;\n\t            this._applyWithArgs(\"exactly\", \"Fields\");\n\t            fields = [];\n\t            this._form(function() {\n\t                return fields = this._many(function() {\n\t                    field = this.anything();\n\t                    return '\"' + field + '\"';\n\t                });\n\t            });\n\t            return fields;\n\t        },\n\t        Values: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, values;\n\t            this._applyWithArgs(\"exactly\", \"Values\");\n\t            this._or(function() {\n\t                return values = this._applyWithArgs(\"SelectQuery\", indent);\n\t            }, function() {\n\t                return this._form(function() {\n\t                    return values = this._many(function() {\n\t                        return this._or(function() {\n\t                            switch (this.anything()) {\n\t                              case \"?\":\n\t                                return \"?\";\n\t\n\t                              default:\n\t                                throw this._fail();\n\t                            }\n\t                        }, function() {\n\t                            this._apply(\"true\");\n\t                            return 1;\n\t                        }, function() {\n\t                            this._apply(\"false\");\n\t                            return 0;\n\t                        }, function() {\n\t                            return this._apply(\"Null\");\n\t                        }, function() {\n\t                            return this._apply(\"Bind\");\n\t                        }, function() {\n\t                            return this._apply(\"Default\");\n\t                        }, function() {\n\t                            return this._apply(\"Text\");\n\t                        }, function() {\n\t                            return this._apply(\"Number\");\n\t                        });\n\t                    });\n\t                });\n\t            });\n\t            return values;\n\t        },\n\t        Default: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            this._applyWithArgs(\"exactly\", \"Default\");\n\t            return \"DEFAULT\";\n\t        },\n\t        Select: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, as, field, fields, table, value;\n\t            this._applyWithArgs(\"exactly\", \"Select\");\n\t            this._form(function() {\n\t                return this._or(function() {\n\t                    this._apply(\"end\");\n\t                    return fields = [ \"1\" ];\n\t                }, function() {\n\t                    return fields = this._many(function() {\n\t                        return this._or(function() {\n\t                            this._form(function() {\n\t                                return field = this._or(function() {\n\t                                    field = this._applyWithArgs(\"SelectField\", indent);\n\t                                    as = this.anything();\n\t                                    return field + ' AS \"' + as + '\"';\n\t                                }, function() {\n\t                                    switch (this.anything()) {\n\t                                      case \"Count\":\n\t                                        this._applyWithArgs(\"exactly\", \"*\");\n\t                                        return \"COUNT(*)\";\n\t\n\t                                      default:\n\t                                        throw this._fail();\n\t                                    }\n\t                                }, function() {\n\t                                    table = this.anything();\n\t                                    this._applyWithArgs(\"exactly\", \"*\");\n\t                                    return '\"' + table + '\".*';\n\t                                }, function() {\n\t                                    value = this._applyWithArgs(\"AnyValue\", indent);\n\t                                    as = this.anything();\n\t                                    return value + ' AS \"' + as + '\"';\n\t                                });\n\t                            });\n\t                            return field;\n\t                        }, function() {\n\t                            return this._applyWithArgs(\"AnyValue\", indent);\n\t                        }, function() {\n\t                            switch (this.anything()) {\n\t                              case \"*\":\n\t                                return \"*\";\n\t\n\t                              default:\n\t                                throw this._fail();\n\t                            }\n\t                        }, function() {\n\t                            return this._apply(\"Null\");\n\t                        });\n\t                    });\n\t                });\n\t            });\n\t            return fields;\n\t        },\n\t        SelectField: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._apply(\"Count\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"AnyValue\", indent);\n\t            }, function() {\n\t                return this._apply(\"Null\");\n\t            });\n\t        },\n\t        Count: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Count\");\n\t                return this._applyWithArgs(\"exactly\", \"*\");\n\t            });\n\t            return \"COUNT(*)\";\n\t        },\n\t        Table: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, alias, from, nestedindent, query, table;\n\t            this._applyWithArgs(\"exactly\", \"From\");\n\t            nestedindent = this._applyWithArgs(\"NestedIndent\", indent);\n\t            return this._or(function() {\n\t                this._not(function() {\n\t                    return this._apply(\"string\");\n\t                });\n\t                this._form(function() {\n\t                    from = this._or(function() {\n\t                        query = this._applyWithArgs(\"SelectQuery\", nestedindent);\n\t                        return \"(\" + nestedindent + query + indent + \")\";\n\t                    }, function() {\n\t                        table = this.anything();\n\t                        return '\"' + table + '\"';\n\t                    });\n\t                    return alias = this.anything();\n\t                });\n\t                return from + ' AS \"' + alias + '\"';\n\t            }, function() {\n\t                query = this._applyWithArgs(\"SelectQuery\", nestedindent);\n\t                return \"(\" + nestedindent + query + indent + \")\";\n\t            }, function() {\n\t                table = this.anything();\n\t                return '\"' + table + '\"';\n\t            });\n\t        },\n\t        Where: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, ruleBody;\n\t            this._applyWithArgs(\"exactly\", \"Where\");\n\t            ruleBody = this._applyWithArgs(\"BooleanValue\", indent);\n\t            return \"WHERE \" + ruleBody;\n\t        },\n\t        GroupBy: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, values;\n\t            this._applyWithArgs(\"exactly\", \"GroupBy\");\n\t            this._form(function() {\n\t                return values = this._many1(function() {\n\t                    return this._applyWithArgs(\"AnyValue\", indent);\n\t                });\n\t            });\n\t            return \"GROUP BY \" + values.join(\", \");\n\t        },\n\t        OrderBy: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, field, nestedIndent, order, orders;\n\t            this._applyWithArgs(\"exactly\", \"OrderBy\");\n\t            orders = this._many1(function() {\n\t                this._form(function() {\n\t                    order = function() {\n\t                        switch (this.anything()) {\n\t                          case \"ASC\":\n\t                            return \"ASC\";\n\t\n\t                          case \"DESC\":\n\t                            return \"DESC\";\n\t\n\t                          default:\n\t                            throw this._fail();\n\t                        }\n\t                    }.call(this);\n\t                    return field = this._apply(\"Field\");\n\t                });\n\t                return field + \" \" + order;\n\t            });\n\t            nestedIndent = this._applyWithArgs(\"NestedIndent\", indent);\n\t            return \"ORDER BY \" + orders.join(\",\" + nestedIndent);\n\t        },\n\t        Limit: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, num;\n\t            this._applyWithArgs(\"exactly\", \"Limit\");\n\t            num = this._applyWithArgs(\"NumericValue\", indent);\n\t            return \"LIMIT \" + num;\n\t        },\n\t        Offset: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, num;\n\t            this._applyWithArgs(\"exactly\", \"Offset\");\n\t            num = this._applyWithArgs(\"NumericValue\", indent);\n\t            return \"OFFSET \" + num;\n\t        },\n\t        AnyValue: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._applyWithArgs(\"UnknownValue\", indent);\n\t            }, function() {\n\t                return this._applyWithArgs(\"TextValue\", indent);\n\t            }, function() {\n\t                return this._applyWithArgs(\"NumericValue\", indent);\n\t            }, function() {\n\t                return this._applyWithArgs(\"BooleanValue\", indent);\n\t            }, function() {\n\t                return this._applyWithArgs(\"DateValue\", indent);\n\t            }, function() {\n\t                return this._applyWithArgs(\"JSONValue\", indent);\n\t            }, function() {\n\t                return this._applyWithArgs(\"DurationValue\", indent);\n\t            });\n\t        },\n\t        UnknownValue: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, nestedIndent, query;\n\t            return this._or(function() {\n\t                return this._apply(\"Field\");\n\t            }, function() {\n\t                return this._apply(\"Bind\");\n\t            }, function() {\n\t                return this._apply(\"Null\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"Cast\", indent);\n\t            }, function() {\n\t                nestedIndent = this._applyWithArgs(\"NestedIndent\", indent);\n\t                query = this._applyWithArgs(\"SelectQuery\", nestedIndent);\n\t                return \"(\" + nestedIndent + query + indent + \")\";\n\t            });\n\t        },\n\t        Field: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._apply(\"ReferencedField\");\n\t            }, function() {\n\t                return this._apply(\"UnreferencedField\");\n\t            });\n\t        },\n\t        UnreferencedField: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, field;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Field\");\n\t                return field = this.anything();\n\t            });\n\t            return '\"' + field + '\"';\n\t        },\n\t        ReferencedField: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, field, table;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"ReferencedField\");\n\t                table = this.anything();\n\t                return field = this.anything();\n\t            });\n\t            return '\"' + table + '\".\"' + field + '\"';\n\t        },\n\t        Bind: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, bind, field, tableName;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Bind\");\n\t                return bind = this._or(function() {\n\t                    return this._apply(\"number\");\n\t                }, function() {\n\t                    tableName = this.anything();\n\t                    field = this.anything();\n\t                    return [ tableName, field ];\n\t                });\n\t            });\n\t            this.fieldOrderings.push([ \"Bind\", bind ]);\n\t            return \"?\";\n\t        },\n\t        Null: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, next;\n\t            next = this.anything();\n\t            this._pred(null === next);\n\t            return \"NULL\";\n\t        },\n\t        Cast: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, type, v;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Cast\");\n\t                v = this._applyWithArgs(\"AnyValue\", indent);\n\t                return type = this._apply(\"DataType\");\n\t            });\n\t            return \"CAST(\" + v + \" AS \" + type + \")\";\n\t        },\n\t        DataType: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, dbType, typeName;\n\t            typeName = this.anything();\n\t            this._pred(sbvrTypes[typeName]);\n\t            this._pred(sbvrTypes[typeName].types[this.engine]);\n\t            dbType = sbvrTypes[typeName].types[this.engine];\n\t            return this._or(function() {\n\t                this._pred(_.isFunction(dbType) || \"SERIAL\" === dbType.toUpperCase());\n\t                return \"INTEGER\";\n\t            }, function() {\n\t                return dbType;\n\t            });\n\t        },\n\t        TextValue: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._applyWithArgs(\"UnknownValue\", indent);\n\t            }, function() {\n\t                return this._apply(\"Text\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"Concat\", indent);\n\t            }, function() {\n\t                return this._applyWithArgs(\"Lower\", indent);\n\t            }, function() {\n\t                return this._applyWithArgs(\"Upper\", indent);\n\t            }, function() {\n\t                return this._applyWithArgs(\"Trim\", indent);\n\t            }, function() {\n\t                return this._applyWithArgs(\"Replace\", indent);\n\t            }, function() {\n\t                return this._applyWithArgs(\"Substring\", indent);\n\t            }, function() {\n\t                return this._applyWithArgs(\"Right\", indent);\n\t            });\n\t        },\n\t        Text: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, text;\n\t            this._form(function() {\n\t                (function() {\n\t                    switch (this.anything()) {\n\t                      case \"Text\":\n\t                        return \"Text\";\n\t\n\t                      case \"Value\":\n\t                        return \"Value\";\n\t\n\t                      default:\n\t                        throw this._fail();\n\t                    }\n\t                }).call(this);\n\t                return text = this.anything();\n\t            });\n\t            this.fieldOrderings.push([ \"Text\", text ]);\n\t            return \"?\";\n\t        },\n\t        Concat: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, comparators;\n\t            this._form(function() {\n\t                (function() {\n\t                    switch (this.anything()) {\n\t                      case \"Concat\":\n\t                        return \"Concat\";\n\t\n\t                      case \"Concatenate\":\n\t                        return \"Concatenate\";\n\t\n\t                      default:\n\t                        throw this._fail();\n\t                    }\n\t                }).call(this);\n\t                return comparators = this._many1(function() {\n\t                    return this._applyWithArgs(\"TextValue\", indent);\n\t                });\n\t            });\n\t            return this._or(function() {\n\t                this._pred(\"mysql\" == this.engine);\n\t                return \"CONCAT(\" + comparators.join(\", \") + \")\";\n\t            }, function() {\n\t                return \"(\" + comparators.join(\" || \") + \")\";\n\t            });\n\t        },\n\t        Lower: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, string;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Lower\");\n\t                return string = this._applyWithArgs(\"TextValue\", indent);\n\t            });\n\t            return \"LOWER(\" + string + \")\";\n\t        },\n\t        Upper: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, string;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Upper\");\n\t                return string = this._applyWithArgs(\"TextValue\", indent);\n\t            });\n\t            return \"UPPER(\" + string + \")\";\n\t        },\n\t        Trim: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, string;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Trim\");\n\t                return string = this._applyWithArgs(\"TextValue\", indent);\n\t            });\n\t            return \"TRIM(\" + string + \")\";\n\t        },\n\t        Replace: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, find, replacement, string;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Replace\");\n\t                string = this._applyWithArgs(\"TextValue\", indent);\n\t                find = this._applyWithArgs(\"TextValue\", indent);\n\t                return replacement = this._applyWithArgs(\"TextValue\", indent);\n\t            });\n\t            return \"REPLACE(\" + string + \", \" + find + \", \" + replacement + \")\";\n\t        },\n\t        Substring: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, args, string;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Substring\");\n\t                string = this._apply(\"TextValue\");\n\t                return args = this._many1(function() {\n\t                    return this._apply(\"NumericValue\");\n\t                });\n\t            });\n\t            return \"SUBSTRING(\" + [ string ].concat(args).join(\", \") + \")\";\n\t        },\n\t        Right: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, n, string;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Right\");\n\t                string = this._apply(\"TextValue\");\n\t                return n = this._apply(\"NumericValue\");\n\t            });\n\t            return this._or(function() {\n\t                this._pred(\"websql\" == this.engine);\n\t                return \"SUBSTRING(\" + string + \", -\" + n + \")\";\n\t            }, function() {\n\t                return \"RIGHT(\" + string + \", \" + n + \")\";\n\t            });\n\t        },\n\t        NumericValue: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._applyWithArgs(\"UnknownValue\", indent);\n\t            }, function() {\n\t                return this._apply(\"Number\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"MathOp\", indent);\n\t            }, function() {\n\t                return this._applyWithArgs(\"BitwiseAnd\", indent);\n\t            }, function() {\n\t                return this._applyWithArgs(\"BitwiseShiftRight\", indent);\n\t            }, function() {\n\t                return this._applyWithArgs(\"CharacterLength\", indent);\n\t            }, function() {\n\t                return this._applyWithArgs(\"StrPos\", indent);\n\t            }, function() {\n\t                return this._applyWithArgs(\"ExtractNumericDatePart\", indent);\n\t            }, function() {\n\t                return this._applyWithArgs(\"TotalSeconds\", indent);\n\t            }, function() {\n\t                return this._applyWithArgs(\"Round\", indent);\n\t            }, function() {\n\t                return this._applyWithArgs(\"Floor\", indent);\n\t            }, function() {\n\t                return this._applyWithArgs(\"Ceiling\", indent);\n\t            });\n\t        },\n\t        Number: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, number;\n\t            this._form(function() {\n\t                (function() {\n\t                    switch (this.anything()) {\n\t                      case \"Integer\":\n\t                        return \"Integer\";\n\t\n\t                      case \"Number\":\n\t                        return \"Number\";\n\t\n\t                      case \"Real\":\n\t                        return \"Real\";\n\t\n\t                      default:\n\t                        throw this._fail();\n\t                    }\n\t                }).call(this);\n\t                return number = this._apply(\"number\");\n\t            });\n\t            return number;\n\t        },\n\t        MathOp: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, lhs, op, rhs;\n\t            this._form(function() {\n\t                op = function() {\n\t                    switch (this.anything()) {\n\t                      case \"Add\":\n\t                        return \"+\";\n\t\n\t                      case \"Divide\":\n\t                        return \"/\";\n\t\n\t                      case \"Multiply\":\n\t                        return \"*\";\n\t\n\t                      case \"Subtract\":\n\t                        return \"-\";\n\t\n\t                      default:\n\t                        throw this._fail();\n\t                    }\n\t                }.call(this);\n\t                lhs = this._applyWithArgs(\"NumericValue\", indent);\n\t                return rhs = this._applyWithArgs(\"NumericValue\", indent);\n\t            });\n\t            return [ lhs, op, rhs ].join(\" \");\n\t        },\n\t        BitwiseAnd: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, mask, operand;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"BitwiseAnd\");\n\t                operand = this._applyWithArgs(\"NumericValue\", indent);\n\t                return mask = this._applyWithArgs(\"NumericValue\", indent);\n\t            });\n\t            return \"(\" + operand + \" & \" + mask + \")\";\n\t        },\n\t        BitwiseShiftRight: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, operand, shift;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"BitwiseShiftRight\");\n\t                operand = this._applyWithArgs(\"NumericValue\", indent);\n\t                return shift = this._applyWithArgs(\"NumericValue\", indent);\n\t            });\n\t            return \"(\" + operand + \" >> \" + shift + \")\";\n\t        },\n\t        CharacterLength: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, text;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"CharacterLength\");\n\t                return text = this._applyWithArgs(\"TextValue\", indent);\n\t            });\n\t            return this._or(function() {\n\t                this._pred(\"mysql\" == this.engine);\n\t                return \"CHAR_LENGTH(\" + text + \")\";\n\t            }, function() {\n\t                return \"LENGTH(\" + text + \")\";\n\t            });\n\t        },\n\t        StrPos: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, haystack, needle;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"StrPos\");\n\t                haystack = this._apply(\"TextValue\");\n\t                return needle = this._apply(\"TextValue\");\n\t            });\n\t            return this._or(function() {\n\t                this._pred(\"postgres\" == this.engine);\n\t                return \"STRPOS(\" + haystack + \", \" + needle + \")\";\n\t            }, function() {\n\t                return \"INSTR(\" + haystack + \", \" + needle + \")\";\n\t            });\n\t        },\n\t        ExtractNumericDatePart: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, date, part;\n\t            this._form(function() {\n\t                part = function() {\n\t                    switch (this.anything()) {\n\t                      case \"Day\":\n\t                        return \"Day\";\n\t\n\t                      case \"Fractionalseconds\":\n\t                        return \"Fractionalseconds\";\n\t\n\t                      case \"Hour\":\n\t                        return \"Hour\";\n\t\n\t                      case \"Minute\":\n\t                        return \"Minute\";\n\t\n\t                      case \"Month\":\n\t                        return \"Month\";\n\t\n\t                      case \"Second\":\n\t                        return \"Second\";\n\t\n\t                      case \"Year\":\n\t                        return \"Year\";\n\t\n\t                      default:\n\t                        throw this._fail();\n\t                    }\n\t                }.call(this);\n\t                return date = this._apply(\"DateValue\");\n\t            });\n\t            return this._or(function() {\n\t                this._pred(\"websql\" == this.engine);\n\t                return websqlDateFormats[part](date);\n\t            }, function() {\n\t                return dateFormats[part](date);\n\t            });\n\t        },\n\t        TotalSeconds: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, duration;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Totalseconds\");\n\t                return duration = this._applyWithArgs(\"DurationValue\", indent);\n\t            });\n\t            return this._or(function() {\n\t                this._pred(\"postgres\" == this.engine);\n\t                return \"EXTRACT(EPOCH FROM \" + duration + \")\";\n\t            }, function() {\n\t                this._pred(\"mysql\" == this.engine);\n\t                return \"(TIMESTAMPDIFF(MICROSECOND, FROM_UNIXTIME(0), FROM_UNIXTIME(0) + \" + duration + \") / 1000000)\";\n\t            }, function() {\n\t                return function() {\n\t                    throw new Error(\"TotalSeconds not supported on: \" + this.engine);\n\t                }.call(this);\n\t            });\n\t        },\n\t        Round: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, num;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Round\");\n\t                return num = this._apply(\"NumericValue\");\n\t            });\n\t            return \"ROUND(\" + num + \")\";\n\t        },\n\t        Floor: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, num;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Floor\");\n\t                return num = this._apply(\"NumericValue\");\n\t            });\n\t            return \"FLOOR(\" + num + \")\";\n\t        },\n\t        Ceiling: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, num;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Ceiling\");\n\t                return num = this._apply(\"NumericValue\");\n\t            });\n\t            return \"CEILING(\" + num + \")\";\n\t        },\n\t        BooleanValue: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._applyWithArgs(\"UnknownValue\", indent);\n\t            }, function() {\n\t                return this._apply(\"Boolean\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"And\", indent);\n\t            }, function() {\n\t                return this._applyWithArgs(\"Not\", indent);\n\t            }, function() {\n\t                return this._applyWithArgs(\"Or\", indent);\n\t            }, function() {\n\t                return this._applyWithArgs(\"Exists\", indent);\n\t            }, function() {\n\t                return this._applyWithArgs(\"NotExists\", indent);\n\t            }, function() {\n\t                return this._applyWithArgs(\"Comparison\", indent);\n\t            }, function() {\n\t                return this._applyWithArgs(\"Between\", indent);\n\t            }, function() {\n\t                return this._applyWithArgs(\"In\", indent);\n\t            }, function() {\n\t                return this._applyWithArgs(\"NotIn\", indent);\n\t            });\n\t        },\n\t        Boolean: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, bool;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Boolean\");\n\t                return bool = this._or(function() {\n\t                    this._apply(\"true\");\n\t                    return 1;\n\t                }, function() {\n\t                    this._apply(\"false\");\n\t                    return 0;\n\t                });\n\t            });\n\t            return bool;\n\t        },\n\t        Not: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, bool, nestedIndent;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Not\");\n\t                nestedIndent = this._applyWithArgs(\"NestedIndent\", indent);\n\t                return bool = this._applyWithArgs(\"BooleanValue\", nestedIndent);\n\t            });\n\t            return \"NOT (\" + nestedIndent + bool + indent + \")\";\n\t        },\n\t        And: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, bools;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"And\");\n\t                return bools = this._many(function() {\n\t                    return this._applyWithArgs(\"BooleanValue\", indent);\n\t                });\n\t            });\n\t            return bools.join(indent + \"AND \");\n\t        },\n\t        Or: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, bools;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Or\");\n\t                return bools = this._many(function() {\n\t                    return this._applyWithArgs(\"BooleanValue\", indent);\n\t                });\n\t            });\n\t            return \"(\" + bools.join(indent + \"OR \") + \")\";\n\t        },\n\t        Exists: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, comparator, exists, nestedIndent, ruleBody;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Exists\");\n\t                return exists = this._or(function() {\n\t                    nestedIndent = this._applyWithArgs(\"NestedIndent\", indent);\n\t                    ruleBody = this._applyWithArgs(\"SelectQuery\", nestedIndent);\n\t                    return \"EXISTS (\" + nestedIndent + ruleBody + indent + \")\";\n\t                }, function() {\n\t                    comparator = this._applyWithArgs(\"AnyValue\", indent);\n\t                    return comparator + \" IS NOT NULL\";\n\t                });\n\t            });\n\t            return exists;\n\t        },\n\t        NotExists: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, comparator, exists, nestedIndent, ruleBody;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"NotExists\");\n\t                return exists = this._or(function() {\n\t                    nestedIndent = this._applyWithArgs(\"NestedIndent\", indent);\n\t                    ruleBody = this._applyWithArgs(\"SelectQuery\", nestedIndent);\n\t                    return \"NOT EXISTS (\" + nestedIndent + ruleBody + indent + \")\";\n\t                }, function() {\n\t                    comparator = this._applyWithArgs(\"AnyValue\", indent);\n\t                    return comparator + \" IS NULL\";\n\t                });\n\t            });\n\t            return exists;\n\t        },\n\t        Comparison: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, a, b, comparison;\n\t            this._form(function() {\n\t                comparison = function() {\n\t                    switch (this.anything()) {\n\t                      case \"Equals\":\n\t                        return \"Equals\";\n\t\n\t                      case \"GreaterThan\":\n\t                        return \"GreaterThan\";\n\t\n\t                      case \"GreaterThanOrEqual\":\n\t                        return \"GreaterThanOrEqual\";\n\t\n\t                      case \"LessThan\":\n\t                        return \"LessThan\";\n\t\n\t                      case \"LessThanOrEqual\":\n\t                        return \"LessThanOrEqual\";\n\t\n\t                      case \"Like\":\n\t                        return \"Like\";\n\t\n\t                      case \"NotEquals\":\n\t                        return \"NotEquals\";\n\t\n\t                      default:\n\t                        throw this._fail();\n\t                    }\n\t                }.call(this);\n\t                a = this._applyWithArgs(\"AnyValue\", indent);\n\t                return b = this._applyWithArgs(\"AnyValue\", indent);\n\t            });\n\t            return a + comparisons[comparison] + b;\n\t        },\n\t        Between: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, a, b, val;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Between\");\n\t                val = this._applyWithArgs(\"AnyValue\", indent);\n\t                a = this._applyWithArgs(\"AnyValue\", indent);\n\t                return b = this._applyWithArgs(\"AnyValue\", indent);\n\t            });\n\t            return val + \" BETWEEN \" + a + \" AND \" + b;\n\t        },\n\t        In: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, field, vals;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"In\");\n\t                field = this._apply(\"Field\");\n\t                return vals = this._many1(function() {\n\t                    return this._applyWithArgs(\"AnyValue\", indent);\n\t                });\n\t            });\n\t            return field + \" IN (\" + vals.join(\", \") + \")\";\n\t        },\n\t        NotIn: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, field, vals;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"NotIn\");\n\t                field = this._apply(\"Field\");\n\t                return vals = this._many1(function() {\n\t                    return this._applyWithArgs(\"AnyValue\", indent);\n\t                });\n\t            });\n\t            return field + \" NOT IN (\" + vals.join(\", \") + \")\";\n\t        },\n\t        DateValue: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._applyWithArgs(\"UnknownValue\", indent);\n\t            }, function() {\n\t                return this._applyWithArgs(\"Date\", indent);\n\t            }, function() {\n\t                return this._applyWithArgs(\"ToDate\", indent);\n\t            }, function() {\n\t                return this._applyWithArgs(\"ToTime\", indent);\n\t            }, function() {\n\t                return this._applyWithArgs(\"Now\", indent);\n\t            });\n\t        },\n\t        Date: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, date;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Date\");\n\t                return date = this.anything();\n\t            });\n\t            this.fieldOrderings.push([ \"Date\", date ]);\n\t            return \"?\";\n\t        },\n\t        ToDate: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, date;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"ToDate\");\n\t                return date = this._apply(\"DateValue\");\n\t            });\n\t            return \"DATE(\" + date + \")\";\n\t        },\n\t        ToTime: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, date;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"ToTime\");\n\t                return date = this._apply(\"DateValue\");\n\t            });\n\t            return this._or(function() {\n\t                this._pred(\"postgres\" == this.engine);\n\t                return \"CAST(\" + date + \" AS TIME)\";\n\t            }, function() {\n\t                return \"TIME(\" + date + \")\";\n\t            });\n\t        },\n\t        Now: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            this._form(function() {\n\t                return this._applyWithArgs(\"exactly\", \"Now\");\n\t            });\n\t            return \"CURRENT_TIMESTAMP\";\n\t        },\n\t        JSONValue: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._applyWithArgs(\"UnknownValue\", indent);\n\t            }, function() {\n\t                return this._applyWithArgs(\"AggregateJSON\", indent);\n\t            });\n\t        },\n\t        AggregateJSON: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, field, table;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"AggregateJSON\");\n\t                return this._form(function() {\n\t                    table = this.anything();\n\t                    return field = this._or(function() {\n\t                        switch (this.anything()) {\n\t                          case \"*\":\n\t                            return \"*\";\n\t\n\t                          default:\n\t                            throw this._fail();\n\t                        }\n\t                    }, function() {\n\t                        field = this.anything();\n\t                        return '\"' + field + '\"';\n\t                    });\n\t                });\n\t            });\n\t            field = '\"' + table + '\".' + field;\n\t            return this._or(function() {\n\t                this._pred(\"postgres\" == this.engine);\n\t                return \"coalesce(array_to_json(array_agg(\" + field + \")), '[]')\";\n\t            }, function() {\n\t                return function() {\n\t                    throw new Error(\"AggregateJSON not supported on: \" + this.engine);\n\t                }.call(this);\n\t            });\n\t        },\n\t        DurationValue: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._applyWithArgs(\"UnknownValue\", indent);\n\t            }, function() {\n\t                return this._applyWithArgs(\"Duration\", indent);\n\t            });\n\t        },\n\t        Duration: function(indent) {\n\t            var $elf = this, _fromIdx = this.input.idx, duration;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"Duration\");\n\t                return duration = this.anything();\n\t            });\n\t            this._pred(_.isObject(duration));\n\t            duration = _(duration).pick(\"negative\", \"day\", \"hour\", \"minute\", \"second\").omitBy(_.isNil).value();\n\t            this._pred(!_(duration).omit(\"negative\").isEmpty());\n\t            return this._or(function() {\n\t                this._pred(\"websql\" == this.engine);\n\t                return function() {\n\t                    throw new Error(\"Durations not supported on: \" + this.engine);\n\t                }.call(this);\n\t            }, function() {\n\t                return \"INTERVAL '\" + (duration.negative ? \"-\" : \"\") + (duration.day || \"0\") + \" \" + (duration.negative ? \"-\" : \"\") + (duration.hour || \"0\") + \":\" + (duration.minute || \"0\") + \":\" + Number(duration.second).toLocaleString(\"en\", {\n\t                    minimumFractionDigits: 1\n\t                }) + \"'\" + (\"mysql\" == this.engine ? \" DAY_MICROSECOND\" : \"\");\n\t            });\n\t        },\n\t        Process: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, query, value;\n\t            return this._or(function() {\n\t                this.fieldOrderings = [];\n\t                query = this._or(function() {\n\t                    return this._applyWithArgs(\"SelectQuery\", \"\\n\");\n\t                }, function() {\n\t                    return this._applyWithArgs(\"InsertQuery\", \"\\n\");\n\t                }, function() {\n\t                    return this._applyWithArgs(\"UpdateQuery\", \"\\n\");\n\t                }, function() {\n\t                    return this._applyWithArgs(\"DeleteQuery\", \"\\n\");\n\t                });\n\t                return {\n\t                    query: query,\n\t                    bindings: this.fieldOrderings\n\t                };\n\t            }, function() {\n\t                return this._applyWithArgs(\"UpsertQuery\", \"\\n\");\n\t            }, function() {\n\t                value = this._applyWithArgs(\"AnyValue\", \"\\n\");\n\t                return \"SELECT \" + value + ' AS \"result\";';\n\t            });\n\t        }\n\t    });\n\t});\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function() {\n\t  var hasProp = {}.hasOwnProperty;\n\t\n\t  (function(root, factory) {\n\t    if (true) {\n\t      return !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function(_, Promise) {\n\t        return (root.SBVRTypes = factory(_, Promise));\n\t      }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else if (typeof exports === 'object') {\n\t      return module.exports = factory(require('lodash'), require('bluebird'));\n\t    } else {\n\t      return root.SBVRTypes = factory(_, Promise);\n\t    }\n\t  })(this, function(_, Promise) {\n\t    var TypeUtils;\n\t    TypeUtils = (function() {\n\t      var equality;\n\t      equality = function(from, to) {\n\t        return ['Equals', from, to];\n\t      };\n\t      return {\n\t        nativeFactTypeTemplates: {\n\t          equality: {\n\t            'is equal to': equality,\n\t            'equals': equality\n\t          },\n\t          comparison: {\n\t            'is greater than': function(from, to) {\n\t              return ['GreaterThan', from, to];\n\t            },\n\t            'is greater than or equal to': function(from, to) {\n\t              return ['GreaterThanOrEqual', from, to];\n\t            },\n\t            'is less than': function(from, to) {\n\t              return ['LessThan', from, to];\n\t            },\n\t            'is less than or equal to': function(from, to) {\n\t              return ['LessThanOrEqual', from, to];\n\t            },\n\t            'is equal to': equality,\n\t            'equals': equality\n\t          }\n\t        },\n\t        validate: {\n\t          integer: function(value, required, callback) {\n\t            var processedValue;\n\t            processedValue = parseInt(value, 10);\n\t            if (_.isNaN(processedValue)) {\n\t              return callback('is not a number: ' + value);\n\t            } else {\n\t              return callback(null, processedValue);\n\t            }\n\t          },\n\t          text: function(length) {\n\t            return function(value, required, callback) {\n\t              if (!_.isString(value)) {\n\t                return callback('is not a string: ' + value);\n\t              } else if ((length != null) && value.length > length) {\n\t                return callback('longer than ' + length + ' characters (' + value.length + ')');\n\t              } else {\n\t                return callback(null, value);\n\t              }\n\t            };\n\t          },\n\t          date: function(value, required, callback) {\n\t            var processedValue;\n\t            processedValue = Number(value);\n\t            if (_.isNaN(processedValue)) {\n\t              processedValue = value;\n\t            }\n\t            processedValue = new Date(processedValue);\n\t            if (_.isNaN(processedValue.getTime())) {\n\t              return callback('is not a valid date: ' + value);\n\t            } else {\n\t              return callback(null, processedValue);\n\t            }\n\t          }\n\t        }\n\t      };\n\t    })();\n\t    return {\n\t      \"Boolean\": (function() {\n\t        var typeFunc;\n\t        typeFunc = function(necessity, index, defaultValue) {\n\t          if (defaultValue == null) {\n\t            defaultValue = ' DEFAULT 0';\n\t          }\n\t          return 'INTEGER' + defaultValue + necessity + index;\n\t        };\n\t        return {\n\t          types: {\n\t            postgres: typeFunc,\n\t            mysql: typeFunc,\n\t            websql: typeFunc,\n\t            odata: {\n\t              name: 'Edm.Boolean'\n\t            }\n\t          },\n\t          fetchProcessing: function(data, callback) {\n\t            return callback(null, data === 1);\n\t          },\n\t          validate: function(originalValue, required, callback) {\n\t            var value;\n\t            value = Number(originalValue);\n\t            if (_.isNaN(value) || (value !== 0 && value !== 1)) {\n\t              return callback(\"is not a boolean: \" + (JSON.stringify(originalValue)) + \" (\" + (typeof originalValue) + \")\");\n\t            } else {\n\t              return callback(null, value);\n\t            }\n\t          }\n\t        };\n\t      })(),\n\t      \"Color\": {\n\t        types: {\n\t          postgres: 'INTEGER',\n\t          mysql: 'INTEGER',\n\t          websql: 'INTEGER',\n\t          odata: {\n\t            name: 'Self.Color',\n\t            complexType: '<ComplexType Name=\"Color\">\\n\t <Property Name=\"r\" Nullable=\"false\" Type=\"Edm.Int8\"/><Property Name=\"g\" Nullable=\"false\" Type=\"Edm.Int8\"/><Property Name=\"b\" Nullable=\"false\" Type=\"Edm.Int8\"/><Property Name=\"a\" Nullable=\"false\" Type=\"Edm.Int8\"/></ComplexType>'\n\t          }\n\t        },\n\t        nativeProperties: {\n\t          has: {\n\t            'Red Component': function(from) {\n\t              return ['BitwiseAnd', ['BitwiseShiftRight', from, 16], 255];\n\t            },\n\t            'Green Component': function(from) {\n\t              return ['BitwiseAnd', ['BitwiseShiftRight', from, 8], 255];\n\t            },\n\t            'Blue Component': function(from) {\n\t              return ['BitwiseShiftRight', from, 255];\n\t            },\n\t            'Alpha Component': function(from) {\n\t              return ['BitwiseAnd', ['BitwiseShiftRight', from, 24], 255];\n\t            }\n\t          }\n\t        },\n\t        fetchProcessing: function(data, callback) {\n\t          return callback(null, {\n\t            r: (data >> 16) & 0xFF,\n\t            g: (data >> 8) & 0xFF,\n\t            b: data & 0xFF,\n\t            a: (data >> 24) & 0xFF\n\t          });\n\t        },\n\t        validate: function(value, required, callback) {\n\t          var component, componentValue, processedValue;\n\t          if (!_.isObject(value)) {\n\t            processedValue = parseInt(value, 10);\n\t            if (_.isNaN(processedValue)) {\n\t              callback('is neither an integer or color object: ' + value);\n\t              return;\n\t            }\n\t          } else {\n\t            processedValue = 0;\n\t            for (component in value) {\n\t              if (!hasProp.call(value, component)) continue;\n\t              componentValue = value[component];\n\t              if (_.isNaN(componentValue) || componentValue > 255) {\n\t                callback('has invalid component value of ' + componentValue + ' for component ' + component);\n\t                return;\n\t              }\n\t              switch (component.toLowerCase()) {\n\t                case 'r':\n\t                case 'red':\n\t                  processedValue |= componentValue << 16;\n\t                  break;\n\t                case 'g':\n\t                case 'green':\n\t                  processedValue |= componentValue << 8;\n\t                  break;\n\t                case 'b':\n\t                case 'blue':\n\t                  processedValue |= componentValue;\n\t                  break;\n\t                case 'a':\n\t                case 'alpha':\n\t                  processedValue |= componentValue << 24;\n\t                  break;\n\t                default:\n\t                  callback('has an unknown component: ' + component);\n\t                  return;\n\t              }\n\t            }\n\t          }\n\t          return callback(null, processedValue);\n\t        }\n\t      },\n\t      \"ConceptType\": {\n\t        types: {\n\t          postgres: 'INTEGER',\n\t          mysql: 'INTEGER',\n\t          websql: 'INTEGER',\n\t          odata: {\n\t            name: 'Edm.Int64'\n\t          }\n\t        },\n\t        nativeFactTypes: {\n\t          Integer: TypeUtils.nativeFactTypeTemplates.comparison,\n\t          Real: TypeUtils.nativeFactTypeTemplates.comparison\n\t        },\n\t        validate: TypeUtils.validate.integer\n\t      },\n\t      \"Date Time\": {\n\t        types: {\n\t          postgres: 'TIMESTAMP',\n\t          mysql: 'TIMESTAMP',\n\t          websql: 'INTEGER',\n\t          odata: {\n\t            name: 'Edm.DateTime'\n\t          }\n\t        },\n\t        fetchProcessing: function(data, callback) {\n\t          if (data != null) {\n\t            data = new Date(data);\n\t          }\n\t          return callback(null, data);\n\t        },\n\t        validate: TypeUtils.validate.date\n\t      },\n\t      \"Date\": {\n\t        types: {\n\t          postgres: 'DATE',\n\t          mysql: 'DATE',\n\t          websql: 'INTEGER',\n\t          odata: {\n\t            name: 'Edm.DateTime'\n\t          }\n\t        },\n\t        fetchProcessing: function(data, callback) {\n\t          if (data != null) {\n\t            data = new Date(data);\n\t          }\n\t          return callback(null, data);\n\t        },\n\t        validate: TypeUtils.validate.date\n\t      },\n\t      \"File\": {\n\t        types: {\n\t          postgres: 'BYTEA',\n\t          mysql: 'BLOB',\n\t          websql: 'BLOB',\n\t          odata: {\n\t            name: 'Edm.String'\n\t          }\n\t        },\n\t        validate: function(value, required, callback) {\n\t          var e, error;\n\t          if (Buffer.isBuffer(value)) {\n\t            return callback(null, value);\n\t          } else if (_.isString(value)) {\n\t            try {\n\t              value = new Buffer(value, 'hex');\n\t            } catch (error) {\n\t              e = error;\n\t              callback(\"could not be converted to binary: \" + e.message);\n\t              return;\n\t            }\n\t            return callback(null, value);\n\t          } else {\n\t            return callback(\"could not be converted to binary: \" + (typeof value));\n\t          }\n\t        }\n\t      },\n\t      \"ForeignKey\": {\n\t        types: {\n\t          postgres: 'INTEGER',\n\t          mysql: 'INTEGER',\n\t          websql: 'INTEGER',\n\t          odata: {\n\t            name: 'Edm.Int64'\n\t          }\n\t        },\n\t        nativeFactTypes: {\n\t          Integer: TypeUtils.nativeFactTypeTemplates.comparison,\n\t          Real: TypeUtils.nativeFactTypeTemplates.comparison\n\t        },\n\t        validate: TypeUtils.validate.integer\n\t      },\n\t      \"Hashed\": (function() {\n\t        var bcrypt, error;\n\t        try {\n\t          bcrypt = __webpack_require__(37);\n\t        } catch (error) {\n\t          bcrypt = __webpack_require__(38);\n\t        }\n\t        bcrypt = Promise.promisifyAll(bcrypt);\n\t        return {\n\t          types: {\n\t            postgres: 'CHAR(60)',\n\t            mysql: 'CHAR(60)',\n\t            websql: 'CHAR(60)',\n\t            odata: {\n\t              name: 'Edm.String'\n\t            }\n\t          },\n\t          validate: function(value, required, callback) {\n\t            if (!_.isString(value)) {\n\t              return callback('is not a string');\n\t            } else {\n\t              return bcrypt.genSaltAsync().then(function(salt) {\n\t                return bcrypt.hashAsync(value, salt);\n\t              }).asCallback(callback);\n\t            }\n\t          },\n\t          compare: _.bind(bcrypt.compareAsync, bcrypt)\n\t        };\n\t      })(),\n\t      \"Integer\": {\n\t        types: {\n\t          postgres: 'INTEGER',\n\t          mysql: 'INTEGER',\n\t          websql: 'INTEGER',\n\t          odata: {\n\t            name: 'Edm.Int64'\n\t          }\n\t        },\n\t        nativeFactTypes: {\n\t          Integer: TypeUtils.nativeFactTypeTemplates.comparison,\n\t          Real: TypeUtils.nativeFactTypeTemplates.comparison\n\t        },\n\t        validate: TypeUtils.validate.integer\n\t      },\n\t      \"Interval\": {\n\t        types: {\n\t          postgres: 'INTERVAL',\n\t          mysql: 'INTEGER',\n\t          websql: 'INTEGER',\n\t          odata: {\n\t            name: 'Edm.Int64'\n\t          }\n\t        },\n\t        validate: TypeUtils.validate.integer\n\t      },\n\t      \"JSON\": {\n\t        types: {\n\t          postgres: 'TEXT',\n\t          mysql: 'TEXT',\n\t          websql: 'TEXT',\n\t          odata: {\n\t            name: 'Edm.String'\n\t          }\n\t        },\n\t        fetchProcessing: function(data, callback) {\n\t          var e, error;\n\t          try {\n\t            return callback(null, JSON.parse(data));\n\t          } catch (error) {\n\t            e = error;\n\t            return callback(e);\n\t          }\n\t        },\n\t        validate: function(value, required, callback) {\n\t          var e, error;\n\t          try {\n\t            return callback(null, JSON.stringify(value));\n\t          } catch (error) {\n\t            e = error;\n\t            console.error(e);\n\t            return callback('cannot be turned into JSON: ' + value);\n\t          }\n\t        }\n\t      },\n\t      \"Real\": {\n\t        types: {\n\t          postgres: 'REAL',\n\t          mysql: 'REAL',\n\t          websql: 'REAL',\n\t          odata: {\n\t            name: 'Edm.Double'\n\t          }\n\t        },\n\t        nativeFactTypes: {\n\t          Integer: TypeUtils.nativeFactTypeTemplates.comparison,\n\t          Real: TypeUtils.nativeFactTypeTemplates.comparison\n\t        },\n\t        validate: function(value, required, callback) {\n\t          var processedValue;\n\t          processedValue = parseFloat(value);\n\t          if (_.isNaN(processedValue)) {\n\t            return callback('is not a number: ' + value);\n\t          } else {\n\t            return callback(null, processedValue);\n\t          }\n\t        }\n\t      },\n\t      \"Serial\": {\n\t        types: {\n\t          postgres: 'SERIAL',\n\t          mysql: function(necessity, index, defaultValue) {\n\t            if (defaultValue == null) {\n\t              defaultValue = '';\n\t            }\n\t            return 'INTEGER' + defaultValue + necessity + index + ' AUTO_INCREMENT';\n\t          },\n\t          websql: function(necessity, index, defaultValue) {\n\t            if (defaultValue == null) {\n\t              defaultValue = '';\n\t            }\n\t            return 'INTEGER' + defaultValue + necessity + index + ' AUTOINCREMENT';\n\t          },\n\t          odata: {\n\t            name: 'Edm.Int64'\n\t          }\n\t        },\n\t        validate: TypeUtils.validate.integer\n\t      },\n\t      \"Short Text\": {\n\t        types: {\n\t          postgres: 'VARCHAR(255)',\n\t          mysql: 'VARCHAR(255)',\n\t          websql: 'VARCHAR(255)',\n\t          odata: {\n\t            name: 'Edm.String'\n\t          }\n\t        },\n\t        validate: TypeUtils.validate.text(255)\n\t      },\n\t      \"Text\": {\n\t        types: {\n\t          postgres: 'TEXT',\n\t          mysql: 'TEXT',\n\t          websql: 'TEXT',\n\t          odata: {\n\t            name: 'Edm.String'\n\t          }\n\t        },\n\t        nativeProperties: {\n\t          has: {\n\t            Length: function(from) {\n\t              return ['CharacterLength', from];\n\t            }\n\t          }\n\t        },\n\t        nativeFactTypes: {\n\t          Text: TypeUtils.nativeFactTypeTemplates.equality\n\t        },\n\t        validate: TypeUtils.validate.text()\n\t      },\n\t      \"Time\": {\n\t        types: {\n\t          postgres: 'TIME',\n\t          mysql: 'TIME',\n\t          websql: 'TEXT',\n\t          odata: {\n\t            name: 'Edm.DateTime'\n\t          }\n\t        },\n\t        fetchProcessing: function(data, callback) {\n\t          if (data != null) {\n\t            data = new Date('Thu, 01 Jan 1970 ' + data);\n\t          }\n\t          return callback(null, data);\n\t        },\n\t        validate: function(value, required, callback) {\n\t          return TypeUtils.validate.date(value, required, function(err, value) {\n\t            if (err) {\n\t              callback(err);\n\t              return;\n\t            }\n\t            return callback(null, value.toLocaleTimeString());\n\t          });\n\t        }\n\t      }\n\t    };\n\t  });\n\t\n\t}).call(this);\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = require(\"bcrypt\");\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = require(\"bcryptjs\");\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = require(\"pinejs-client/core\");\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar SBVRParser, Types;\n\t\n\tSBVRParser = __webpack_require__(41).SBVRParser;\n\t\n\tTypes = __webpack_require__(43);\n\t\n\tmodule.exports = SBVRParser._extend({\n\t  initialize: function() {\n\t    SBVRParser.initialize.call(this);\n\t    this.AddCustomAttribute('Database ID Field:');\n\t    this.AddCustomAttribute('Database Table Name:');\n\t    this.AddBuiltInVocab(Types);\n\t    return this;\n\t  }\n\t});\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!function(root, factory) {\n\t     true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__, exports, __webpack_require__(28), __webpack_require__(30), __webpack_require__(4), __webpack_require__(42) ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : \"object\" == typeof exports ? factory(require, exports, require(\"ometa-js\").core) : factory(function(moduleName) {\n\t        return root[moduleName];\n\t    }, root, root.OMeta);\n\t}(this, function(require, exports, OMeta) {\n\t    var SBVRLibs = __webpack_require__(30).SBVRLibs, _ = __webpack_require__(4);\n\t    __webpack_require__(42);\n\t    var SBVRParser = exports.SBVRParser = SBVRLibs._extend({\n\t        EOL: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return function() {\n\t                switch (this.anything()) {\n\t                  case \"\\n\":\n\t                    return \"\\n\";\n\t\n\t                  case \"\\r\":\n\t                    return this._opt(function() {\n\t                        return this._applyWithArgs(\"exactly\", \"\\n\");\n\t                    });\n\t\n\t                  default:\n\t                    throw this._fail();\n\t                }\n\t            }.call(this);\n\t        },\n\t        EOLSpaces: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, eol;\n\t            eol = !1;\n\t            this._many(function() {\n\t                return this._or(function() {\n\t                    this._apply(\"EOL\");\n\t                    return eol = !0;\n\t                }, function() {\n\t                    return this._apply(\"space\");\n\t                });\n\t            });\n\t            return this._pred(eol);\n\t        },\n\t        IdentifierKey: function(identifier) {\n\t            var $elf = this, _fromIdx = this.input.idx, index;\n\t            index = this._or(function() {\n\t                this._pred(_.isArray(identifier[3]));\n\t                this._pred(\"Number\" == identifier[3][0]);\n\t                return identifier[3][1];\n\t            }, function() {\n\t                return \"\";\n\t            });\n\t            return identifier[1] + \"|\" + identifier[2] + \"|\" + index;\n\t        },\n\t        Bind: function(identifier, bindings) {\n\t            var $elf = this, _fromIdx = this.input.idx, binding, identifierKey, varNumber;\n\t            identifierKey = this._applyWithArgs(\"IdentifierKey\", identifier);\n\t            varNumber = this.ruleVars[identifierKey];\n\t            this._pred(null != varNumber);\n\t            binding = [ \"RoleBinding\", identifier, varNumber ];\n\t            this._opt(function() {\n\t                this._pred(bindings);\n\t                return bindings.push(binding);\n\t            });\n\t            return binding;\n\t        },\n\t        spaces: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._many(function() {\n\t                this._not(function() {\n\t                    return this._apply(\"EOL\");\n\t                });\n\t                return this._apply(\"space\");\n\t            });\n\t        },\n\t        Number: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, n;\n\t            return this._or(function() {\n\t                this._apply(\"spaces\");\n\t                n = this._consumedBy(function() {\n\t                    return this._many1(function() {\n\t                        return this._apply(\"digit\");\n\t                    });\n\t                });\n\t                return [ \"Number\", parseInt(n, 10) ];\n\t            }, function() {\n\t                this._applyWithArgs(\"token\", \"one\");\n\t                return [ \"Number\", 1 ];\n\t            });\n\t        },\n\t        Real: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, n;\n\t            this._apply(\"spaces\");\n\t            n = this._consumedBy(function() {\n\t                this._many1(function() {\n\t                    return this._apply(\"digit\");\n\t                });\n\t                this._applyWithArgs(\"exactly\", \".\");\n\t                return this._many1(function() {\n\t                    return this._apply(\"digit\");\n\t                });\n\t            });\n\t            return [ \"Real\", Number(n) ];\n\t        },\n\t        Integer: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, n;\n\t            this._apply(\"spaces\");\n\t            n = this._consumedBy(function() {\n\t                return this._many1(function() {\n\t                    return this._apply(\"digit\");\n\t                });\n\t            });\n\t            return [ \"Integer\", Number(n) ];\n\t        },\n\t        Text: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, text;\n\t            this._apply(\"spaces\");\n\t            this._applyWithArgs(\"exactly\", '\"');\n\t            text = this._consumedBy(function() {\n\t                return this._many1(function() {\n\t                    return this._or(function() {\n\t                        switch (this.anything()) {\n\t                          case \"\\\\\":\n\t                            return this._applyWithArgs(\"exactly\", '\"');\n\t\n\t                          default:\n\t                            throw this._fail();\n\t                        }\n\t                    }, function() {\n\t                        this._not(function() {\n\t                            return this._applyWithArgs(\"exactly\", '\"');\n\t                        });\n\t                        return this.anything();\n\t                    });\n\t                });\n\t            });\n\t            this._applyWithArgs(\"exactly\", '\"');\n\t            return [ \"Text\", text ];\n\t        },\n\t        Value: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._apply(\"Real\");\n\t            }, function() {\n\t                return this._apply(\"Integer\");\n\t            }, function() {\n\t                return this._apply(\"Text\");\n\t            });\n\t        },\n\t        toSBVREOL: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            this._apply(\"spaces\");\n\t            return this._consumedBy(function() {\n\t                return this._many(function() {\n\t                    this._apply(\"spaces\");\n\t                    return this._or(function() {\n\t                        return this._apply(\"InformalIdentifier\");\n\t                    }, function() {\n\t                        switch (this.anything()) {\n\t                          case \"'\":\n\t                            this._apply(\"InformalIdentifier\");\n\t                            return this._applyWithArgs(\"exactly\", \"'\");\n\t\n\t                          default:\n\t                            throw this._fail();\n\t                        }\n\t                    }, function() {\n\t                        return this._many1(function() {\n\t                            this._not(function() {\n\t                                return this._apply(\"space\");\n\t                            });\n\t                            return this.anything();\n\t                        });\n\t                    });\n\t                });\n\t            });\n\t        },\n\t        toEOL: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._consumedBy(function() {\n\t                return this._many(function() {\n\t                    this._not(function() {\n\t                        return this._apply(\"EOL\");\n\t                    });\n\t                    return this.anything();\n\t                });\n\t            });\n\t        },\n\t        token: function(x) {\n\t            var $elf = this, _fromIdx = this.input.idx, s;\n\t            this._apply(\"spaces\");\n\t            s = this._applyWithArgs(\"seq\", x);\n\t            this._lookahead(function() {\n\t                return this._or(function() {\n\t                    return this._apply(\"space\");\n\t                }, function() {\n\t                    return this._apply(\"end\");\n\t                });\n\t            });\n\t            return s;\n\t        },\n\t        AddIdentifier: function(identifierType, baseSynonym) {\n\t            var $elf = this, _fromIdx = this.input.idx, identifier, startInput;\n\t            startInput = this.input;\n\t            identifier = this._many1(function() {\n\t                return this._apply(\"IdentifierPart\");\n\t            });\n\t            identifier = identifier.join(\" \");\n\t            this._addToken(startInput, this.input, identifierType, []);\n\t            return function() {\n\t                return $elf._AddIdentifier(identifierType, identifier, baseSynonym);\n\t            };\n\t        },\n\t        InformalIdentifier: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._applyWithArgs(\"Identifier\", void 0, !0);\n\t        },\n\t        Identifier: function(factTypeSoFar, noAutoComplete) {\n\t            var $elf = this, _fromIdx = this.input.idx, name, term;\n\t            this._opt(function() {\n\t                return this._not(function() {\n\t                    return term = this._consumedBy(function() {\n\t                        return this._opt(function() {\n\t                            return this._applyWithArgs(\"Term\", factTypeSoFar);\n\t                        });\n\t                    });\n\t                });\n\t            });\n\t            this._opt(function() {\n\t                return this._not(function() {\n\t                    return name = this._consumedBy(function() {\n\t                        return this._opt(function() {\n\t                            return this._applyWithArgs(\"Name\", factTypeSoFar);\n\t                        });\n\t                    });\n\t                });\n\t            });\n\t            return this._or(function() {\n\t                this._pred(term || name);\n\t                return this._or(function() {\n\t                    this._pred(term.length > name.length);\n\t                    return this._applyWithArgs(\"Term\", factTypeSoFar);\n\t                }, function() {\n\t                    return this._applyWithArgs(\"Name\", factTypeSoFar);\n\t                });\n\t            }, function() {\n\t                this._pred(!noAutoComplete);\n\t                return this._or(function() {\n\t                    return this._applyWithArgs(\"Term\", factTypeSoFar);\n\t                }, function() {\n\t                    return this._applyWithArgs(\"Name\", factTypeSoFar);\n\t                });\n\t            });\n\t        },\n\t        Vocabulary: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, vocabulary;\n\t            vocabulary = this._apply(\"FindVocabulary\");\n\t            return [ \"Vocabulary\", vocabulary ];\n\t        },\n\t        Name: function(factTypeSoFar) {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._applyWithArgs(\"FindIdentifier\", \"Name\", factTypeSoFar);\n\t        },\n\t        Term: function(factTypeSoFar) {\n\t            var $elf = this, _fromIdx = this.input.idx, n, term;\n\t            term = this._applyWithArgs(\"FindIdentifier\", \"Term\", factTypeSoFar);\n\t            this._opt(function() {\n\t                n = this._consumedBy(function() {\n\t                    return this._many1(function() {\n\t                        return this._apply(\"digit\");\n\t                    });\n\t                });\n\t                return term.push([ \"Number\", Number(n) ]);\n\t            });\n\t            return term;\n\t        },\n\t        FindIdentifier: function(identifierType, factTypeSoFar) {\n\t            var $elf = this, _fromIdx = this.input.idx, identifier, quote;\n\t            this._apply(\"spaces\");\n\t            quote = this._opt(function() {\n\t                return this._applyWithArgs(\"exactly\", \"'\");\n\t            });\n\t            identifier = this._applyWithArgs(\"FindIdentifierNest\", identifierType, factTypeSoFar);\n\t            this._or(function() {\n\t                return this._pred(!quote);\n\t            }, function() {\n\t                return this._applyWithArgs(\"seq\", quote);\n\t            });\n\t            return identifier;\n\t        },\n\t        FindIdentifierNest: function(identifierType, factTypeSoFar, identifierSoFar) {\n\t            var $elf = this, _fromIdx = this.input.idx, identifierSoFar, part, vocabulary;\n\t            part = this._apply(\"IdentifierPart\");\n\t            identifierSoFar = this._or(function() {\n\t                this._pred(identifierSoFar);\n\t                return identifierSoFar + \" \" + part;\n\t            }, function() {\n\t                return part;\n\t            });\n\t            this._pred(identifierSoFar.length <= this.longestIdentifier[identifierType]);\n\t            return this._or(function() {\n\t                return this._applyWithArgs(\"FindIdentifierNest\", identifierType, factTypeSoFar, identifierSoFar);\n\t            }, function() {\n\t                vocabulary = this._or(function() {\n\t                    return this._applyWithArgs(\"FindVocabulary\", identifierSoFar);\n\t                }, function() {\n\t                    return this.currentVocabulary;\n\t                });\n\t                return this._applyWithArgs(\"IsFactTypeIdentifier\", [ identifierType, identifierSoFar, vocabulary ], factTypeSoFar);\n\t            });\n\t        },\n\t        FindVocabulary: function(identifier) {\n\t            var $elf = this, _fromIdx = this.input.idx, bracket, vocabulary;\n\t            this._apply(\"spaces\");\n\t            bracket = this._opt(function() {\n\t                return this._applyWithArgs(\"exactly\", \"(\");\n\t            });\n\t            vocabulary = this._apply(\"FindVocabularyNest\");\n\t            this._pred(!identifier || this.vocabularies[vocabulary].IdentifierChildren.hasOwnProperty(identifier));\n\t            this._or(function() {\n\t                return this._pred(!bracket);\n\t            }, function() {\n\t                switch (this.anything()) {\n\t                  case \")\":\n\t                    return \")\";\n\t\n\t                  default:\n\t                    throw this._fail();\n\t                }\n\t            });\n\t            return vocabulary;\n\t        },\n\t        FindVocabularyNest: function(vocabularySoFar) {\n\t            var $elf = this, _fromIdx = this.input.idx, part, vocabularySoFar;\n\t            part = this._apply(\"IdentifierPart\");\n\t            vocabularySoFar = this._or(function() {\n\t                this._pred(vocabularySoFar);\n\t                return vocabularySoFar + \" \" + part;\n\t            }, function() {\n\t                return part;\n\t            });\n\t            this._pred(vocabularySoFar.length <= this.longestIdentifier.Vocabulary);\n\t            return this._or(function() {\n\t                return this._applyWithArgs(\"FindVocabularyNest\", vocabularySoFar);\n\t            }, function() {\n\t                this._pred(this.vocabularies.hasOwnProperty(vocabularySoFar));\n\t                return vocabularySoFar;\n\t            });\n\t        },\n\t        IdentifierPart: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            this._apply(\"spaces\");\n\t            return this._consumedBy(function() {\n\t                return this._many1(function() {\n\t                    return this._or(function() {\n\t                        return this._apply(\"letter\");\n\t                    }, function() {\n\t                        switch (this.anything()) {\n\t                          case \"-\":\n\t                            return \"-\";\n\t\n\t                          default:\n\t                            throw this._fail();\n\t                        }\n\t                    });\n\t                });\n\t            });\n\t        },\n\t        addVerb: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            this._apply(\"ClearSuggestions\");\n\t            return this._applyWithArgs(\"Verb\", !0);\n\t        },\n\t        Verb: function(factTypeSoFar) {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._applyWithArgs(\"FindVerb\", factTypeSoFar);\n\t        },\n\t        FindVerb: function(factTypeSoFar, verbSoFar, negated) {\n\t            var $elf = this, _fromIdx = this.input.idx, negated, part, verb, verbSoFar;\n\t            this._opt(function() {\n\t                this._pred(factTypeSoFar && !verbSoFar);\n\t                this._or(function() {\n\t                    return this._applyWithArgs(\"Keyword\", \"isn't\");\n\t                }, function() {\n\t                    return this._applyWithArgs(\"Keyword\", \"aren't\");\n\t                });\n\t                verbSoFar = \"is\";\n\t                return negated = !0;\n\t            });\n\t            part = this._apply(\"VerbPart\");\n\t            verbSoFar = this._or(function() {\n\t                this._pred(verbSoFar);\n\t                return verbSoFar + \" \" + part;\n\t            }, function() {\n\t                return this._verbForm(part);\n\t            });\n\t            this._opt(function() {\n\t                this._pred(factTypeSoFar && \"is\" === verbSoFar);\n\t                this._apply(\"spaces\");\n\t                this._applyWithArgs(\"Keyword\", \"not\");\n\t                return negated = !0;\n\t            });\n\t            return this._or(function() {\n\t                return this._applyWithArgs(\"FindVerb\", factTypeSoFar, verbSoFar, negated);\n\t            }, function() {\n\t                this._or(function() {\n\t                    return this._pred(factTypeSoFar === !0);\n\t                }, function() {\n\t                    return this._applyWithArgs(\"IsVerb\", factTypeSoFar, verbSoFar);\n\t                });\n\t                verb = [ \"Verb\", verbSoFar ];\n\t                this._or(function() {\n\t                    this._pred(negated);\n\t                    return verb.push(!0);\n\t                }, function() {\n\t                    return verb.push(!1);\n\t                });\n\t                return verb;\n\t            });\n\t        },\n\t        VerbPart: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            this._apply(\"spaces\");\n\t            this._not(function() {\n\t                return this._apply(\"Identifier\");\n\t            });\n\t            return this._apply(\"IdentifierPart\");\n\t        },\n\t        JoiningQuantifier: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._applyWithArgs(\"matchForAll\", \"Keyword\", [ \"and\", \"at\", \"most\" ]);\n\t        },\n\t        Quantifier: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, m, n;\n\t            return this._or(function() {\n\t                this._applyWithArgs(\"Keyword\", \"each\");\n\t                return [ \"UniversalQuantification\" ];\n\t            }, function() {\n\t                this._applyWithArgs(\"matchForAny\", \"Keyword\", [ \"a\", \"an\", \"some\" ]);\n\t                return [ \"ExistentialQuantification\" ];\n\t            }, function() {\n\t                this._applyWithArgs(\"matchForAll\", \"Keyword\", [ \"at\", \"most\" ]);\n\t                n = this._apply(\"Number\");\n\t                return [ \"AtMostNQuantification\", [ \"MaximumCardinality\", n ] ];\n\t            }, function() {\n\t                this._applyWithArgs(\"matchForAll\", \"Keyword\", [ \"at\", \"least\" ]);\n\t                n = this._apply(\"Number\");\n\t                return this._or(function() {\n\t                    this._apply(\"JoiningQuantifier\");\n\t                    m = this._apply(\"Number\");\n\t                    return [ \"NumericalRangeQuantification\", [ \"MinimumCardinality\", n ], [ \"MaximumCardinality\", m ] ];\n\t                }, function() {\n\t                    return [ \"AtLeastNQuantification\", [ \"MinimumCardinality\", n ] ];\n\t                });\n\t            }, function() {\n\t                this._applyWithArgs(\"matchForAll\", \"Keyword\", [ \"more\", \"than\" ]);\n\t                n = this._apply(\"Number\");\n\t                ++n[1];\n\t                return [ \"AtLeastNQuantification\", [ \"MinimumCardinality\", n ] ];\n\t            }, function() {\n\t                this._applyWithArgs(\"Keyword\", \"exactly\");\n\t                n = this._apply(\"Number\");\n\t                return [ \"ExactQuantification\", [ \"Cardinality\", n ] ];\n\t            }, function() {\n\t                this._applyWithArgs(\"Keyword\", \"no\");\n\t                return [ \"ExactQuantification\", [ \"Cardinality\", [ \"Number\", 0 ] ] ];\n\t            });\n\t        },\n\t        Keyword: function(word, noToken) {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                this._pred(noToken === !0);\n\t                return this._applyWithArgs(\"seq\", word);\n\t            }, function() {\n\t                this._pred(noToken !== !0);\n\t                return this._applyWithArgs(\"token\", word);\n\t            });\n\t        },\n\t        addThat: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._applyWithArgs(\"Keyword\", \"that\");\n\t        },\n\t        addThe: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._applyWithArgs(\"Keyword\", \"the\");\n\t        },\n\t        DisableCommas: function(bool) {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this.disableCommas = bool;\n\t        },\n\t        addComma: function(force) {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            this._pred(force || !this.disableCommas);\n\t            return this._applyWithArgs(\"Keyword\", \",\");\n\t        },\n\t        CreateVar: function(identifier) {\n\t            var $elf = this, _fromIdx = this.input.idx, identifierKey, varNumber;\n\t            identifierKey = this._applyWithArgs(\"IdentifierKey\", identifier);\n\t            varNumber = this._or(function() {\n\t                this._pred(\"|\" !== identifierKey.slice(-1));\n\t                this._pred(this.ruleVars[identifierKey]);\n\t                return this.ruleVars[identifierKey];\n\t            }, function() {\n\t                return this.ruleVars[identifierKey] = this.ruleVarsCount++;\n\t            });\n\t            return [ \"Variable\", [ \"Number\", varNumber ], identifier ];\n\t        },\n\t        EmbedVar: function(identifier, data) {\n\t            var $elf = this, _fromIdx = this.input.idx, identifierKey;\n\t            identifierKey = this._applyWithArgs(\"IdentifierKey\", identifier);\n\t            return this.ruleVars[identifierKey] = data;\n\t        },\n\t        IsAtomicFormulation: function(factType, bindings) {\n\t            var $elf = this, _fromIdx = this.input.idx, realFactType;\n\t            realFactType = this._applyWithArgs(\"IsFactType\", factType);\n\t            this._pred(realFactType);\n\t            return [ \"AtomicFormulation\" ].concat([ [ \"FactType\" ].concat(factType) ], bindings);\n\t        },\n\t        ClosedProjection: function(identifier, bind) {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            this._apply(\"addThat\");\n\t            return this._or(function() {\n\t                return this._applyWithArgs(\"Junction\", \"VerbContinuation\", [ [ identifier ], [ bind ] ]);\n\t            }, function() {\n\t                return this._applyWithArgs(\"Junction\", \"RuleBody\", [ [], [], identifier, bind ]);\n\t            });\n\t        },\n\t        TermEntity: function(factType, bindings) {\n\t            var $elf = this, _fromIdx = this.input.idx, bind, term, thatLF, varLF;\n\t            term = this._applyWithArgs(\"Term\", factType);\n\t            varLF = this._applyWithArgs(\"CreateVar\", term);\n\t            bind = this._applyWithArgs(\"Bind\", term, bindings);\n\t            this._opt(function() {\n\t                thatLF = this._applyWithArgs(\"ClosedProjection\", term, bind);\n\t                varLF.push(thatLF);\n\t                return this._opt(function() {\n\t                    this._pred(factType);\n\t                    return this._applyWithArgs(\"addComma\", !1);\n\t                });\n\t            });\n\t            return {\n\t                term: term,\n\t                lf: varLF\n\t            };\n\t        },\n\t        RuleBody: function(factType, bindings, parentIdentifier, parentBind) {\n\t            var $elf = this, _fromIdx = this.input.idx, bind, data, identifier, lf, quant, termEntity;\n\t            this._or(function() {\n\t                quant = this._apply(\"Quantifier\");\n\t                termEntity = this._applyWithArgs(\"TermEntity\", factType, bindings);\n\t                return factType.push(termEntity.term);\n\t            }, function() {\n\t                this._apply(\"addThe\");\n\t                identifier = this._applyWithArgs(\"Identifier\", factType);\n\t                this._or(function() {\n\t                    return this._applyWithArgs(\"Bind\", identifier, bindings);\n\t                }, function() {\n\t                    this._applyWithArgs(\"EmbedVar\", identifier, identifier);\n\t                    return this._applyWithArgs(\"Bind\", identifier, bindings);\n\t                });\n\t                return factType.push(identifier);\n\t            }, function() {\n\t                data = this._apply(\"Value\");\n\t                identifier = this._applyWithArgs(\"IsFactTypeIdentifier\", [ \"Term\", data[0], \"Type\" ], factType);\n\t                identifier.push(data);\n\t                this._applyWithArgs(\"EmbedVar\", identifier, data);\n\t                bind = this._applyWithArgs(\"Bind\", identifier, bindings);\n\t                bind[2] = data;\n\t                return factType.push(identifier);\n\t            });\n\t            lf = this._or(function() {\n\t                return this._applyWithArgs(\"Junction\", \"VerbContinuation\", [ factType, bindings, parentIdentifier, parentBind ]);\n\t            }, function() {\n\t                return this._applyWithArgs(\"IsAtomicFormulation\", factType, bindings);\n\t            });\n\t            return null == quant ? lf : quant.concat([ termEntity.lf, lf ]);\n\t        },\n\t        VerbContinuation: function(factType, bindings, parentIdentifier, parentBind) {\n\t            var $elf = this, _fromIdx = this.input.idx, v;\n\t            v = this._applyWithArgs(\"Verb\", factType);\n\t            factType.push(v);\n\t            (function() {\n\t                if (null != parentIdentifier) {\n\t                    factType.push(parentIdentifier);\n\t                    bindings.push(parentBind);\n\t                }\n\t            }).call(this);\n\t            return this._or(function() {\n\t                return this._applyWithArgs(\"Junction\", \"RuleBody\", [ factType, bindings ]);\n\t            }, function() {\n\t                return this._applyWithArgs(\"IsAtomicFormulation\", factType, bindings);\n\t            });\n\t        },\n\t        Modifier: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, r;\n\t            this._applyWithArgs(\"token\", \"It\");\n\t            this._applyWithArgs(\"token\", \"is\");\n\t            r = this._or(function() {\n\t                this._applyWithArgs(\"token\", \"obligatory\");\n\t                return [ \"ObligationFormulation\" ];\n\t            }, function() {\n\t                this._applyWithArgs(\"token\", \"necessary\");\n\t                return [ \"NecessityFormulation\" ];\n\t            }, function() {\n\t                this._or(function() {\n\t                    return this._applyWithArgs(\"token\", \"prohibited\");\n\t                }, function() {\n\t                    return this._applyWithArgs(\"token\", \"forbidden\");\n\t                });\n\t                return [ \"ObligationFormulation\", [ \"LogicalNegation\" ] ];\n\t            }, function() {\n\t                this._or(function() {\n\t                    return this._applyWithArgs(\"token\", \"impossible\");\n\t                }, function() {\n\t                    this._applyWithArgs(\"token\", \"not\");\n\t                    return this._applyWithArgs(\"token\", \"possible\");\n\t                });\n\t                return [ \"NecessityFormulation\", [ \"LogicalNegation\" ] ];\n\t            }, function() {\n\t                this._applyWithArgs(\"token\", \"possible\");\n\t                return [ \"PossibilityFormulation\" ];\n\t            }, function() {\n\t                this._applyWithArgs(\"token\", \"permitted\");\n\t                return [ \"PermissibilityFormulation\" ];\n\t            });\n\t            this._applyWithArgs(\"token\", \"that\");\n\t            return r;\n\t        },\n\t        Disjunction: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            this._applyWithArgs(\"Keyword\", \"or\");\n\t            return \"Disjunction\";\n\t        },\n\t        Conjunction: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            this._applyWithArgs(\"Keyword\", \"and\");\n\t            return \"Conjunction\";\n\t        },\n\t        JunctionType: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._apply(\"Disjunction\");\n\t            }, function() {\n\t                return this._apply(\"Conjunction\");\n\t            });\n\t        },\n\t        SerialCommaCheck: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            this._applyWithArgs(\"exactly\", \",\");\n\t            return this._or(function() {\n\t                return this._applyWithArgs(\"token\", \"and\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"token\", \"or\");\n\t            });\n\t        },\n\t        UpcomingCommaJunction: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._lookahead(function() {\n\t                return this._or(function() {\n\t                    this._many(function() {\n\t                        this._not(function() {\n\t                            return this._apply(\"EOL\");\n\t                        });\n\t                        this._not(function() {\n\t                            return this._apply(\"SerialCommaCheck\");\n\t                        });\n\t                        return this.anything();\n\t                    });\n\t                    this._apply(\"SerialCommaCheck\");\n\t                    return !0;\n\t                }, function() {\n\t                    return !1;\n\t                });\n\t            });\n\t        },\n\t        SimpleJunction: function(ruleName, args) {\n\t            var $elf = this, _fromIdx = this.input.idx, junctioned, result, type;\n\t            result = this._applyWithArgs.apply(this, [ ruleName ].concat(_.cloneDeep(args)));\n\t            return this._or(function() {\n\t                type = this._apply(\"JunctionType\");\n\t                junctioned = this._applyWithArgs(\"SimpleJunction\", ruleName, args);\n\t                return [ type, result, junctioned ];\n\t            }, function() {\n\t                return result;\n\t            });\n\t        },\n\t        Junction: function(ruleName, args) {\n\t            var $elf = this, _fromIdx = this.input.idx, commaSeparated, junctioned, result, type, upcoming;\n\t            upcoming = this._apply(\"UpcomingCommaJunction\");\n\t            this._applyWithArgs(\"DisableCommas\", upcoming || this.disableCommas);\n\t            result = this._opt(function() {\n\t                result = this._applyWithArgs(\"SimpleJunction\", ruleName, args);\n\t                return this._or(function() {\n\t                    this._pred(upcoming);\n\t                    commaSeparated = this._many(function() {\n\t                        this._applyWithArgs(\"addComma\", !0);\n\t                        return this._applyWithArgs(\"SimpleJunction\", ruleName, args);\n\t                    });\n\t                    this._applyWithArgs(\"addComma\", !0);\n\t                    type = this._apply(\"JunctionType\");\n\t                    junctioned = this._applyWithArgs(\"Junction\", ruleName, args, !0);\n\t                    return [ type, result ].concat(commaSeparated).concat([ junctioned ]);\n\t                }, function() {\n\t                    return result;\n\t                });\n\t            });\n\t            upcoming = this._apply(\"UpcomingCommaJunction\");\n\t            this._applyWithArgs(\"DisableCommas\", upcoming);\n\t            this._pred(result);\n\t            return result;\n\t        },\n\t        StartRule: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._applyWithArgs(\"token\", \"R:\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"token\", \"Rule:\");\n\t            });\n\t        },\n\t        NewRule: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, mod, ruleLF, ruleText;\n\t            this._apply(\"StartRule\");\n\t            this._apply(\"spaces\");\n\t            ruleText = this._lookahead(function() {\n\t                return this._apply(\"toEOL\");\n\t            });\n\t            this.ruleVars = {};\n\t            this.ruleVarsCount = 0;\n\t            mod = this._apply(\"Modifier\");\n\t            ruleLF = this._applyWithArgs(\"Junction\", \"RuleBody\", [ [], [] ]);\n\t            this._apply(\"EOLTerminator\");\n\t            mod = _.cloneDeep(mod);\n\t            2 === mod.length ? mod[1][1] = ruleLF : mod[1] = ruleLF;\n\t            return [ \"Rule\", mod, [ \"StructuredEnglish\", ruleText ] ];\n\t        },\n\t        StartFactType: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._applyWithArgs(\"token\", \"F:\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"token\", \"Fact type:\");\n\t            });\n\t        },\n\t        NewFactType: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, factType, identifier, v;\n\t            this._apply(\"StartFactType\");\n\t            factType = [];\n\t            this._many1(function() {\n\t                identifier = this._apply(\"Identifier\");\n\t                v = this._apply(\"addVerb\");\n\t                return factType.push(identifier, v);\n\t            });\n\t            this._opt(function() {\n\t                identifier = this._apply(\"Identifier\");\n\t                return factType.push(identifier);\n\t            });\n\t            return function() {\n\t                $elf.AddFactType(factType, factType);\n\t                return [ \"FactType\" ].concat(factType).concat([ [ \"Attributes\" ] ]);\n\t            };\n\t        },\n\t        StartVocabulary: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            this._applyWithArgs(\"token\", \"Vocabulary:\");\n\t            return \"Vocabulary\";\n\t        },\n\t        StartTerm: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            this._or(function() {\n\t                return this._applyWithArgs(\"token\", \"T:\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"token\", \"Term:\");\n\t            });\n\t            return \"Term\";\n\t        },\n\t        StartName: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            this._or(function() {\n\t                return this._applyWithArgs(\"token\", \"N:\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"token\", \"Name:\");\n\t            });\n\t            return \"Name\";\n\t        },\n\t        NewIdentifier: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, func, identifierType;\n\t            identifierType = this._or(function() {\n\t                return this._apply(\"StartVocabulary\");\n\t            }, function() {\n\t                return this._apply(\"StartTerm\");\n\t            }, function() {\n\t                return this._apply(\"StartName\");\n\t            });\n\t            this._apply(\"ClearSuggestions\");\n\t            func = this._applyWithArgs(\"AddIdentifier\", identifierType);\n\t            return function() {\n\t                return func().concat([ [ \"Attributes\" ] ]);\n\t            };\n\t        },\n\t        NewAttribute: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, attrName, attrValOrFunc, currentLine;\n\t            currentLine = _.last(this.lines);\n\t            attrName = this._applyWithArgs(\"AllowedAttrs\", currentLine[0]);\n\t            attrName = attrName.replace(/ /g, \"\");\n\t            this._apply(\"spaces\");\n\t            attrValOrFunc = this._applyWithArgs(\"ApplyFirstExisting\", [ \"Attr\" + attrName, \"DefaultAttr\" ]);\n\t            return function() {\n\t                var lastLine = $elf.lines.pop(), attrVal = _.isFunction(attrValOrFunc) ? attrValOrFunc(lastLine) : attrValOrFunc;\n\t                _.last(lastLine).push([ attrName, attrVal ]);\n\t                return lastLine;\n\t            };\n\t        },\n\t        AllowedAttrs: function(termOrFactType) {\n\t            var $elf = this, _fromIdx = this.input.idx, attrName;\n\t            attrName = this._applyWithArgs(\"matchForAny\", \"seq\", this.branches.AllowedAttrs.call(this, termOrFactType));\n\t            return attrName.replace(\":\", \"\");\n\t        },\n\t        DefaultAttr: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._apply(\"toSBVREOL\");\n\t        },\n\t        AttrConceptType: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, term;\n\t            term = this._apply(\"Term\");\n\t            return function(currentLine) {\n\t                var identifier;\n\t                if (\"FactType\" === currentLine[0]) {\n\t                    var attributes = _.last(currentLine), termForm = _.find(attributes, [ 0, \"TermForm\" ]);\n\t                    if (!termForm) throw new Error(\"Cannot have a concept type for a fact type that does not have a term-form.\");\n\t                    identifier = termForm[1];\n\t                } else identifier = currentLine.slice(0, 3);\n\t                var identifierName = identifier[1], identifierVocab = identifier[2];\n\t                if ($elf.vocabularies[identifierVocab].ConceptTypes.hasOwnProperty(identifier)) throw new Error(\"Two concept type attributes\");\n\t                if (\"FactType\" !== identifier[0]) {\n\t                    if ($elf.IdentifiersEqual(identifier, term)) throw new Error(\"A term cannot have itself as its concept type\");\n\t                    var termName = term[1], termVocab = term[2];\n\t                    $elf.vocabularies[identifierVocab].ConceptTypes[identifier] = term;\n\t                    $elf.vocabularies[termVocab].IdentifierChildren[termName].push(identifier.slice(1));\n\t                }\n\t                return term;\n\t            };\n\t        },\n\t        AttrDefinition: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, moreValues, termEntity, value, values;\n\t            return this._or(function() {\n\t                this._opt(function() {\n\t                    return this._apply(\"addThe\");\n\t                });\n\t                this.ruleVars = {};\n\t                this.ruleVarsCount = 0;\n\t                termEntity = this._apply(\"TermEntity\");\n\t                this._apply(\"EOLTerminator\");\n\t                return function(currentLine) {\n\t                    if (\"FactType\" !== currentLine[0]) {\n\t                        $elf.vocabularies[currentLine[2]].ConceptTypes[currentLine.slice(0, 3)] = termEntity.term;\n\t                        $elf.vocabularies[currentLine[2]].IdentifierChildren[termEntity.term[1]].push([ currentLine[1], currentLine[2] ]);\n\t                    }\n\t                    return termEntity.lf;\n\t                };\n\t            }, function() {\n\t                value = this._apply(\"Value\");\n\t                values = this._many(function() {\n\t                    this._apply(\"addComma\");\n\t                    return this._apply(\"Value\");\n\t                });\n\t                this._or(function() {\n\t                    return moreValues = this._many1(function() {\n\t                        this._opt(function() {\n\t                            return this._apply(\"addComma\");\n\t                        });\n\t                        this._apply(\"Disjunction\");\n\t                        return this._apply(\"Value\");\n\t                    });\n\t                }, function() {\n\t                    return this._pred(0 === values.length);\n\t                });\n\t                return [ \"Enum\", value ].concat(values, moreValues);\n\t            });\n\t        },\n\t        AttrGuidanceType: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._applyWithArgs(\"matchForAny\", \"seq\", this.branches.AttrGuidanceType);\n\t        },\n\t        AttrNecessity: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, lf, ruleText;\n\t            return this._or(function() {\n\t                ruleText = this._lookahead(function() {\n\t                    return this._apply(\"toEOL\");\n\t                });\n\t                this.ruleVars = {};\n\t                this.ruleVarsCount = 0;\n\t                lf = this._applyWithArgs(\"RuleBody\", [], []);\n\t                this._apply(\"EOLTerminator\");\n\t                return [ \"Rule\", [ \"NecessityFormulation\", lf ], [ \"StructuredEnglish\", \"It is necessary that \" + ruleText ] ];\n\t            }, function() {\n\t                return this._apply(\"toSBVREOL\");\n\t            });\n\t        },\n\t        AttrReferenceScheme: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, t;\n\t            return this._or(function() {\n\t                t = this._apply(\"Term\");\n\t                this._apply(\"EOLTerminator\");\n\t                return t;\n\t            }, function() {\n\t                return this._apply(\"toSBVREOL\");\n\t            });\n\t        },\n\t        AttrSynonym: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, currentLine;\n\t            currentLine = _.last(this.lines);\n\t            return this._applyWithArgs(\"AddIdentifier\", currentLine[0], currentLine[1]);\n\t        },\n\t        AttrSynonymousForm: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, factType, identifier, v;\n\t            factType = [];\n\t            this._many1(function() {\n\t                identifier = this._apply(\"Identifier\");\n\t                v = this._apply(\"addVerb\");\n\t                return factType.push(identifier, v);\n\t            });\n\t            this._opt(function() {\n\t                identifier = this._apply(\"Identifier\");\n\t                return factType.push(identifier);\n\t            });\n\t            return function(currentLine) {\n\t                $elf.AddFactType(factType, currentLine.slice(1, -1));\n\t                return factType;\n\t            };\n\t        },\n\t        AttrTermForm: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, func;\n\t            func = this._applyWithArgs(\"AddIdentifier\", \"Term\");\n\t            return function(currentLine) {\n\t                for (var term = func(), i = 0; i < currentLine.length; i++) if (\"Term\" === currentLine[i][0]) {\n\t                    var factType = [ term, [ \"Verb\", \"has\", !1 ], currentLine[i] ];\n\t                    $elf.AddFactType(factType, factType);\n\t                }\n\t                return term;\n\t            };\n\t        },\n\t        StartComment: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            this._applyWithArgs(\"exactly\", \"-\");\n\t            this._applyWithArgs(\"exactly\", \"-\");\n\t            return \"--\";\n\t        },\n\t        NewComment: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            this._apply(\"StartComment\");\n\t            return this._apply(\"toEOL\");\n\t        },\n\t        EOLTerminator: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            this._opt(function() {\n\t                return this._apply(\"Terminator\");\n\t            });\n\t            this._apply(\"spaces\");\n\t            return this._lookahead(function() {\n\t                return this._or(function() {\n\t                    return this._apply(\"EOL\");\n\t                }, function() {\n\t                    return this._apply(\"end\");\n\t                });\n\t            });\n\t        },\n\t        Terminator: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            this._apply(\"spaces\");\n\t            return this._applyWithArgs(\"Keyword\", \".\", !0);\n\t        },\n\t        space: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return SBVRLibs._superApplyWithArgs(this, \"space\");\n\t            }, function() {\n\t                return this._apply(\"NewComment\");\n\t            });\n\t        },\n\t        Line: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, func, l;\n\t            this._apply(\"spaces\");\n\t            l = this._or(function() {\n\t                func = this._or(function() {\n\t                    return this._apply(\"NewIdentifier\");\n\t                }, function() {\n\t                    return this._apply(\"NewFactType\");\n\t                }, function() {\n\t                    return this._apply(\"NewAttribute\");\n\t                });\n\t                return func();\n\t            }, function() {\n\t                return this._apply(\"NewRule\");\n\t            });\n\t            this._apply(\"ClearSuggestions\");\n\t            this.lines.push(l);\n\t            return l;\n\t        },\n\t        Process: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            this._opt(function() {\n\t                return this._apply(\"EOLSpaces\");\n\t            });\n\t            this._opt(function() {\n\t                return this._apply(\"Line\");\n\t            });\n\t            this._many(function() {\n\t                this._apply(\"EOLSpaces\");\n\t                return this._apply(\"Line\");\n\t            });\n\t            this._many(function() {\n\t                return this._apply(\"space\");\n\t            });\n\t            this._apply(\"end\");\n\t            return this.lines;\n\t        }\n\t    });\n\t    SBVRParser.ClearSuggestions = function() {};\n\t    SBVRParser.initialize = function() {\n\t        this.builtInVocab = \"\";\n\t        this.builtInVocabInputHead = \"\";\n\t        this.allowedAttrLists = _.cloneDeep(defaultAllowedAttrLists);\n\t        this.reset();\n\t    };\n\t    SBVRParser._enableTokens = function() {\n\t        SBVRLibs._enableTokens.call(this, [ \"StartVocabulary\", \"StartTerm\", \"StartName\", \"StartFactType\", \"StartRule\", \"NewComment\", \"Vocabulary\", \"Term\", \"Name\", \"Modifier\", \"Verb\", \"Keyword\", \"AllowedAttrs\", \"AttrGuidanceType\", \"Number\", \"Value\" ]);\n\t    };\n\t    SBVRParser._sideEffectingRules = [ \"Process\", \"Line\" ];\n\t    SBVRParser._AddIdentifier = function(identifierType, identifier, baseSynonym) {\n\t        null == baseSynonym && (baseSynonym = identifier);\n\t        if (\"Vocabulary\" === identifierType) this.AddVocabulary(identifier, baseSynonym); else {\n\t            var vocabulary = this.vocabularies[this.currentVocabulary];\n\t            vocabulary.IdentifierChildren.hasOwnProperty(identifier) && this._pred(!1);\n\t            baseSynonym === identifier ? vocabulary.IdentifierChildren[baseSynonym] = [] : vocabulary.IdentifierChildren[identifier] = vocabulary.IdentifierChildren[baseSynonym];\n\t            vocabulary[identifierType][identifier] = baseSynonym;\n\t        }\n\t        this.longestIdentifier[identifierType] = Math.max(identifier.length, identifier.pluralize().length, this.longestIdentifier[identifierType]);\n\t        return \"Vocabulary\" === identifierType ? [ identifierType, identifier ] : [ identifierType, identifier, this.currentVocabulary ];\n\t    };\n\t    SBVRParser.BaseSynonym = function(identifier) {\n\t        var identifierType = identifier[0], identifierName = identifier[1], vocabulary = identifier[2], identifiers = this.vocabularies[vocabulary][identifierType];\n\t        if (identifiers.hasOwnProperty(identifierName)) identifierName = identifiers[identifierName]; else {\n\t            identifierName = identifierName.singularize();\n\t            this._pred(identifiers.hasOwnProperty(identifierName));\n\t            identifierName = identifiers[identifierName];\n\t        }\n\t        return [ identifierType, identifierName, vocabulary ];\n\t    };\n\t    SBVRParser.IsFactTypeIdentifier = function(identifier, factTypeSoFar) {\n\t        var identifierType = identifier[0], vocabulary = identifier[2], baseIdentifier = this.BaseSynonym(identifier), identifiers = this.branches[identifierType].call(this, factTypeSoFar, vocabulary);\n\t        this._pred(identifiers.indexOf(baseIdentifier[1]) !== -1);\n\t        return baseIdentifier;\n\t    };\n\t    SBVRParser.IsVerb = function(factTypeSoFar, verb) {\n\t        verb = [ \"Verb\", verb ];\n\t        var currentLevel = this._traverseFactType(factTypeSoFar);\n\t        this._pred(currentLevel !== !1);\n\t        if (!currentLevel.hasOwnProperty(verb)) {\n\t            this._pred(currentLevel.hasOwnProperty(\"__valid\"));\n\t            return this.IsVerb([], verb);\n\t        }\n\t    };\n\t    SBVRParser._verbForm = function(verb) {\n\t        return \"are\" === verb ? \"is\" : \"have\" === verb ? \"has\" : \"are \" === verb.slice(0, 4) ? \"is \" + verb.slice(4) : verb;\n\t    };\n\t    SBVRParser.IsFactType = function(factType) {\n\t        var currentLevel = this._traverseFactType(factType);\n\t        return currentLevel !== !1 && currentLevel.__valid;\n\t    };\n\t    var removeRegex = new RegExp(\"^(?:\" + [ [ \"Term\", \"\" ].toString(), [ \"Name\", \"\" ].toString(), [ \"Verb\", \"\" ].toString() ].join(\"|\") + \")(.*?)(?:,(.*))?$\"), defaultAllowedAttrLists = [ \"Concept Type:\", \"Definition:\", \"Definition (Informal):\", \"Description:\", \"Dictionary Basis:\", \"Example:\", \"General Concept:\", \"Namespace URI:\", \"Necessity:\", \"Note:\", \"Possibility:\", \"Reference Scheme:\", \"See:\", \"Source:\", \"Subject Field:\" ];\n\t    defaultAllowedAttrLists = {\n\t        Term: [ \"Synonym:\" ].concat(defaultAllowedAttrLists),\n\t        Name: [ \"Synonym:\" ].concat(defaultAllowedAttrLists),\n\t        FactType: [ \"Synonymous Form:\", \"Term Form:\" ].concat(defaultAllowedAttrLists),\n\t        Rule: [ \"Rule Name:\", \"Guidance Type:\", \"Source:\", \"Synonymous Statement:\", \"Note:\", \"Example:\", \"Enforcement Level:\" ]\n\t    };\n\t    var getValidFactTypeParts = function getValidFactTypeParts(vocabulary, identifierType, factTypeSoFar) {\n\t        var vocabularies = this.vocabularies;\n\t        if (null == factTypeSoFar || 0 === factTypeSoFar.length) {\n\t            var identifiers;\n\t            identifiers = null == vocabulary ? vocabularies[this.currentVocabulary][identifierType] : vocabularies[vocabulary][identifierType];\n\t            return _.keys(identifiers);\n\t        }\n\t        var factTypePart, currentLevel = this._traverseFactType(factTypeSoFar), factTypeParts = {}, followChildrenChain = function(vocabulary, identifier) {\n\t            vocabulary = vocabularies[vocabulary];\n\t            var identifiers = vocabulary[identifierType];\n\t            identifiers.hasOwnProperty(identifier) && (factTypeParts[identifiers[identifier]] = !0);\n\t            for (var i = 0; i < vocabulary.IdentifierChildren[identifier].length; i++) {\n\t                var child = vocabulary.IdentifierChildren[identifier][i];\n\t                followChildrenChain(child[1], child[0]);\n\t            }\n\t        };\n\t        for (factTypePart in currentLevel) if (currentLevel.hasOwnProperty(factTypePart)) {\n\t            var matches = removeRegex.exec(factTypePart), factTypePartVocabulary;\n\t            if (null != matches) {\n\t                factTypePart = matches[1];\n\t                if (matches[2]) {\n\t                    factTypePartVocabulary = matches[2];\n\t                    followChildrenChain(factTypePartVocabulary, factTypePart);\n\t                } else factTypeParts[factTypePart] = !0;\n\t            }\n\t        }\n\t        return _.keys(factTypeParts);\n\t    };\n\t    SBVRParser.reset = function() {\n\t        SBVRLibs.initialize.call(this);\n\t        this.branches = {\n\t            ClearSuggestions: [],\n\t            StartVocabulary: [ \"Vocabulary:\" ],\n\t            StartTerm: [ \"Term:      \" ],\n\t            StartName: [ \"Name:      \" ],\n\t            StartFactType: [ \"Fact type: \" ],\n\t            StartRule: [ \"Rule:      \" ],\n\t            Vocabulary: function(factTypeSoFar) {\n\t                return _.keys(this.vocabularies);\n\t            },\n\t            Term: function(factTypeSoFar, vocabulary) {\n\t                return getValidFactTypeParts.call(this, vocabulary, \"Term\", factTypeSoFar);\n\t            },\n\t            Name: function(factTypeSoFar, vocabulary) {\n\t                return getValidFactTypeParts.call(this, vocabulary, \"Name\", factTypeSoFar);\n\t            },\n\t            Verb: function(factTypeSoFar, vocabulary) {\n\t                return factTypeSoFar === !0 ? [] : getValidFactTypeParts.call(this, vocabulary, \"Verb\", factTypeSoFar);\n\t            },\n\t            AllowedAttrs: function(termOrFactType) {\n\t                return this.allowedAttrLists.hasOwnProperty(termOrFactType) ? this.allowedAttrLists[termOrFactType] : null == termOrFactType ? this.allowedAttrLists.Term.concat(this.allowedAttrLists.Name, this.allowedAttrLists.FactType) : [];\n\t            },\n\t            AttrGuidanceType: [ \"operative business rule\", \"structural business rule\", \"advice of permission\", \"advice of possibility\", \"advice of optionality\", \"advice of contingency\" ],\n\t            Modifier: [ \"It is obligatory that\", \"It is necessary that\", \"It is prohibited that\", \"It is forbidden that\", \"It is impossible that\", \"It is not possible that\", \"It is possible that\", \"It is permitted that\" ],\n\t            Quantifier: [ \"each\", \"a\", \"an\", \"some\", \"at most\", \"at least\", \"more than\", \"exactly\", \"no\" ],\n\t            JoiningQuantifier: [ \"and at most\" ],\n\t            Number: [ \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"one\" ],\n\t            addThat: [ \"that\", \"that the\" ],\n\t            addThe: [ \"the\" ],\n\t            addComma: [ \",\" ],\n\t            Disjunction: [ \"or\" ],\n\t            Conjunction: [ \"and\" ],\n\t            Terminator: [ \".\" ]\n\t        };\n\t        this.longestIdentifier = {\n\t            Vocabulary: 0,\n\t            Term: 0,\n\t            Name: 0\n\t        };\n\t        this.ruleVars = {};\n\t        this.ruleVarsCount = 0;\n\t        this.lines = [ \"Model\" ];\n\t        this.disableCommas = !1;\n\t        var origInputHead = this.inputHead;\n\t        if (\"\" !== this.builtInVocab) {\n\t            this.inputHead = this.builtInVocabInputHead;\n\t            this.matchAll(this.builtInVocab, \"Process\");\n\t            this.builtInVocabInputHead = this.inputHead;\n\t        }\n\t        this.inputHead = null;\n\t        this.inputHead = null;\n\t        this.matchAll(\"Vocabulary: Default\", \"Process\");\n\t        this.inputHead = origInputHead;\n\t    };\n\t    SBVRParser.AddBuiltInVocab = function(vocabulary) {\n\t        try {\n\t            var origInputHead = this.inputHead;\n\t            vocabulary += \"\\n\";\n\t            this.matchAll(vocabulary, \"Process\");\n\t            this.inputHead = origInputHead;\n\t            this.builtInVocab += vocabulary;\n\t        } catch (e) {\n\t            throw e;\n\t        } finally {\n\t            this.reset();\n\t        }\n\t    };\n\t    SBVRParser.AddCustomAttribute = function(attributeName, attachedTo) {\n\t        if (null == attachedTo) for (attachedTo in this.allowedAttrLists) this.allowedAttrLists.hasOwnProperty(attachedTo) && this.allowedAttrLists[attachedTo].push(attributeName); else {\n\t            if (!this.allowedAttrLists.hasOwnProperty(attachedTo)) throw new Error(\"Unknown attachment\");\n\t            this.allowedAttrLists[attachedTo].push(attributeName);\n\t        }\n\t    };\n\t    SBVRParser.matchForAny = function(rule, arr) {\n\t        for (var $elf = this, origInput = this.input, ref = {}, result = ref, idx = 0; idx < arr.length; idx++) {\n\t            try {\n\t                $elf.input = origInput;\n\t                result = $elf._applyWithArgs.call($elf, rule, arr[idx]);\n\t            } catch (e) {\n\t                if (!(e instanceof SyntaxError)) throw e;\n\t            } finally {}\n\t            if (result !== ref) return result;\n\t        }\n\t        throw this._fail();\n\t    };\n\t    SBVRParser.matchForAll = function(rule, arr) {\n\t        for (var idx = 0; idx < arr.length; idx++) this._applyWithArgs.call(this, rule, arr[idx]);\n\t    };\n\t    SBVRParser.exactly = function(wanted) {\n\t        if (wanted.toLowerCase() === this._apply(\"lowerCaseAnything\")) return wanted;\n\t        throw this._fail();\n\t    };\n\t    SBVRParser._disablePrependingInput();\n\t});\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports) {\n\n\t/*\n\tCopyright (c) 2010 Ryan Schuft (ryan.schuft@gmail.com)\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE.\n\t*/\n\t\n\t/*\n\t  This code is based in part on the work done in Ruby to support\n\t  infection as part of Ruby on Rails in the ActiveSupport's Inflector\n\t  and Inflections classes.  It was initally ported to Javascript by\n\t  Ryan Schuft (ryan.schuft@gmail.com) in 2007.\n\t\n\t  The code is available at http://code.google.com/p/inflection-js/\n\t\n\t  The basic usage is:\n\t    1. Include this script on your web page.\n\t    2. Call functions on any String object in Javascript\n\t\n\t  Currently implemented functions:\n\t\n\t    String.pluralize(plural) == String\n\t      renders a singular English language noun into its plural form\n\t      normal results can be overridden by passing in an alternative\n\t\n\t    String.singularize(singular) == String\n\t      renders a plural English language noun into its singular form\n\t      normal results can be overridden by passing in an alterative\n\t\n\t    String.camelize(lowFirstLetter) == String\n\t      renders a lower case underscored word into camel case\n\t      the first letter of the result will be upper case unless you pass true\n\t      also translates \"/\" into \"::\" (underscore does the opposite)\n\t\n\t    String.underscore() == String\n\t      renders a camel cased word into words seperated by underscores\n\t      also translates \"::\" back into \"/\" (camelize does the opposite)\n\t\n\t    String.humanize(lowFirstLetter) == String\n\t      renders a lower case and underscored word into human readable form\n\t      defaults to making the first letter capitalized unless you pass true\n\t\n\t    String.capitalize() == String\n\t      renders all characters to lower case and then makes the first upper\n\t\n\t    String.dasherize() == String\n\t      renders all underbars and spaces as dashes\n\t\n\t    String.titleize() == String\n\t      renders words into title casing (as for book titles)\n\t\n\t    String.demodulize() == String\n\t      renders class names that are prepended by modules into just the class\n\t\n\t    String.tableize() == String\n\t      renders camel cased singular words into their underscored plural form\n\t\n\t    String.classify() == String\n\t      renders an underscored plural word into its camel cased singular form\n\t\n\t    String.foreign_key(dropIdUbar) == String\n\t      renders a class name (camel cased singular noun) into a foreign key\n\t      defaults to seperating the class from the id with an underbar unless\n\t      you pass true\n\t\n\t    String.ordinalize() == String\n\t      renders all numbers found in the string into their sequence like \"22nd\"\n\t*/\n\t\n\t/*\n\t  This sets up a container for some constants in its own namespace\n\t  We use the window (if available) to enable dynamic loading of this script\n\t  Window won't necessarily exist for non-browsers.\n\t*/\n\tif (typeof window !== \"undefined\" && !window.InflectionJS)\n\t{\n\t    window.InflectionJS = null;\n\t}\n\t\n\t/*\n\t  This sets up some constants for later use\n\t  This should use the window namespace variable if available\n\t*/\n\tInflectionJS =\n\t{\n\t    /*\n\t      This is a list of nouns that use the same form for both singular and plural.\n\t      This list should remain entirely in lower case to correctly match Strings.\n\t    */\n\t    uncountable_words: [\n\t        'equipment', 'information', 'rice', 'money', 'species', 'series',\n\t        'fish', 'sheep', 'moose', 'deer', 'news'\n\t    ],\n\t\n\t    /*\n\t      These rules translate from the singular form of a noun to its plural form.\n\t    */\n\t    plural_rules: [\n\t        [new RegExp('(m)an$', 'gi'),                 '$1en'],\n\t        [new RegExp('(pe)rson$', 'gi'),              '$1ople'],\n\t        [new RegExp('(child)$', 'gi'),               '$1ren'],\n\t        [new RegExp('^(ox)$', 'gi'),                 '$1en'],\n\t        [new RegExp('(ax|test)is$', 'gi'),           '$1es'],\n\t        [new RegExp('(octop|vir)us$', 'gi'),         '$1i'],\n\t        [new RegExp('(alias|status)$', 'gi'),        '$1es'],\n\t        [new RegExp('(bu)s$', 'gi'),                 '$1ses'],\n\t        [new RegExp('(buffal|tomat|potat)o$', 'gi'), '$1oes'],\n\t        [new RegExp('([ti])um$', 'gi'),              '$1a'],\n\t        [new RegExp('sis$', 'gi'),                   'ses'],\n\t        [new RegExp('(?:([^f])fe|([lr])f)$', 'gi'),  '$1$2ves'],\n\t        [new RegExp('(hive)$', 'gi'),                '$1s'],\n\t        [new RegExp('([^aeiouy]|qu)y$', 'gi'),       '$1ies'],\n\t        [new RegExp('(x|ch|ss|sh)$', 'gi'),          '$1es'],\n\t        [new RegExp('(matr|vert|ind)ix|ex$', 'gi'),  '$1ices'],\n\t        [new RegExp('([m|l])ouse$', 'gi'),           '$1ice'],\n\t        [new RegExp('(quiz)$', 'gi'),                '$1zes'],\n\t        [new RegExp('s$', 'gi'),                     's'],\n\t        [new RegExp('$', 'gi'),                      's']\n\t    ],\n\t\n\t    /*\n\t      These rules translate from the plural form of a noun to its singular form.\n\t    */\n\t    singular_rules: [\n\t        [new RegExp('(m)en$', 'gi'),                                                       '$1an'],\n\t        [new RegExp('(pe)ople$', 'gi'),                                                    '$1rson'],\n\t        [new RegExp('(child)ren$', 'gi'),                                                  '$1'],\n\t        [new RegExp('([ti])a$', 'gi'),                                                     '$1um'],\n\t        [new RegExp('((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$','gi'), '$1$2sis'],\n\t        [new RegExp('(hive)s$', 'gi'),                                                     '$1'],\n\t        [new RegExp('(tive)s$', 'gi'),                                                     '$1'],\n\t        [new RegExp('(curve)s$', 'gi'),                                                    '$1'],\n\t        [new RegExp('([lr])ves$', 'gi'),                                                   '$1f'],\n\t        [new RegExp('([^fo])ves$', 'gi'),                                                  '$1fe'],\n\t        [new RegExp('([^aeiouy]|qu)ies$', 'gi'),                                           '$1y'],\n\t        [new RegExp('(s)eries$', 'gi'),                                                    '$1eries'],\n\t        [new RegExp('(m)ovies$', 'gi'),                                                    '$1ovie'],\n\t        [new RegExp('(x|ch|ss|sh)es$', 'gi'),                                              '$1'],\n\t        [new RegExp('([m|l])ice$', 'gi'),                                                  '$1ouse'],\n\t        [new RegExp('(bus)es$', 'gi'),                                                     '$1'],\n\t        [new RegExp('(o)es$', 'gi'),                                                       '$1'],\n\t        [new RegExp('(shoe)s$', 'gi'),                                                     '$1'],\n\t        [new RegExp('(cris|ax|test)es$', 'gi'),                                            '$1is'],\n\t        [new RegExp('(octop|vir)i$', 'gi'),                                                '$1us'],\n\t        [new RegExp('(alias|status)es$', 'gi'),                                            '$1'],\n\t        [new RegExp('^(ox)en', 'gi'),                                                      '$1'],\n\t        [new RegExp('(vert|ind)ices$', 'gi'),                                              '$1ex'],\n\t        [new RegExp('(matr)ices$', 'gi'),                                                  '$1ix'],\n\t        [new RegExp('(quiz)zes$', 'gi'),                                                   '$1'],\n\t        [new RegExp('s$', 'gi'),                                                           '']\n\t    ],\n\t\n\t    /*\n\t      This is a list of words that should not be capitalized for title case\n\t    */\n\t    non_titlecased_words: [\n\t        'and', 'or', 'nor', 'a', 'an', 'the', 'so', 'but', 'to', 'of', 'at',\n\t        'by', 'from', 'into', 'on', 'onto', 'off', 'out', 'in', 'over',\n\t        'with', 'for'\n\t    ],\n\t\n\t    /*\n\t      These are regular expressions used for converting between String formats\n\t    */\n\t    id_suffix: new RegExp('(_ids|_id)$', 'g'),\n\t    underbar: new RegExp('_', 'g'),\n\t    space_or_underbar: new RegExp('[ _]', 'g'),\n\t    uppercase: new RegExp('([A-Z])', 'g'),\n\t    underbar_prefix: new RegExp('^_'),\n\t    \n\t    /*\n\t      This is a helper method that applies rules based replacement to a String\n\t      Signature:\n\t        InflectionJS.apply_rules(str, rules, skip, override) == String\n\t      Arguments:\n\t        str - String - String to modify and return based on the passed rules\n\t        rules - Array: [RegExp, String] - Regexp to match paired with String to use for replacement\n\t        skip - Array: [String] - Strings to skip if they match\n\t      Returns:\n\t        String - passed String modified by passed rules\n\t      Examples:\n\t        InflectionJS.apply_rules(\"cows\", InflectionJs.singular_rules) === 'cow'\n\t    */\n\t    apply_rules: function(str, rules, skip) {\n\t        if (skip.indexOf(str.toLowerCase()) === -1) {\n\t            for (var x = 0, l = rules.length; x < l; x++) {\n\t                if (rules[x][0].test(str)) {\n\t                    return str.replace(rules[x][0], rules[x][1]);\n\t                }\n\t            }\n\t        }\n\t        return str;\n\t    }\n\t};\n\t\n\t/*\n\t  This lets us detect if an Array contains a given element\n\t  Signature:\n\t    Array.indexOf(item, fromIndex, compareFunc) == Integer\n\t  Arguments:\n\t    item - Object - object to locate in the Array\n\t    fromIndex - Integer (optional) - starts checking from this position in the Array\n\t    compareFunc - Function (optional) - function used to compare Array item vs passed item\n\t  Returns:\n\t    Integer - index position in the Array of the passed item\n\t  Examples:\n\t    ['hi','there'].indexOf(\"guys\") === -1\n\t    ['hi','there'].indexOf(\"hi\") === 0\n\t*/\n\tif (!Array.prototype.indexOf)\n\t{\n\t    Array.prototype.indexOf = function(item, fromIndex, compareFunc)\n\t    {\n\t        if (!fromIndex)\n\t        {\n\t            fromIndex = -1;\n\t        }\n\t        var index = -1;\n\t        for (var i = fromIndex; i < this.length; i++)\n\t        {\n\t            if (this[i] === item || compareFunc && compareFunc(this[i], item))\n\t            {\n\t                index = i;\n\t                break;\n\t            }\n\t        }\n\t        return index;\n\t    };\n\t}\n\t\n\t/*\n\t  You can override this list for all Strings or just one depending on if you\n\t  set the new values on prototype or on a given String instance.\n\t*/\n\tif (!String.prototype._uncountable_words)\n\t{\n\t    String.prototype._uncountable_words = InflectionJS.uncountable_words;\n\t}\n\t\n\t/*\n\t  You can override this list for all Strings or just one depending on if you\n\t  set the new values on prototype or on a given String instance.\n\t*/\n\tif (!String.prototype._plural_rules)\n\t{\n\t    String.prototype._plural_rules = InflectionJS.plural_rules;\n\t}\n\t\n\t/*\n\t  You can override this list for all Strings or just one depending on if you\n\t  set the new values on prototype or on a given String instance.\n\t*/\n\tif (!String.prototype._singular_rules)\n\t{\n\t    String.prototype._singular_rules = InflectionJS.singular_rules;\n\t}\n\t\n\t/*\n\t  You can override this list for all Strings or just one depending on if you\n\t  set the new values on prototype or on a given String instance.\n\t*/\n\tif (!String.prototype._non_titlecased_words)\n\t{\n\t    String.prototype._non_titlecased_words = InflectionJS.non_titlecased_words;\n\t}\n\t\n\t/*\n\t  This function adds plurilization support to every String object\n\t    Signature:\n\t      String.pluralize(plural) == String\n\t    Arguments:\n\t      plural - String (optional) - overrides normal output with said String\n\t    Returns:\n\t      String - singular English language nouns are returned in plural form\n\t    Examples:\n\t      \"person\".pluralize() == \"people\"\n\t      \"octopus\".pluralize() == \"octopi\"\n\t      \"Hat\".pluralize() == \"Hats\"\n\t      \"person\".pluralize(\"guys\") == \"guys\"\n\t*/\n\tif (!String.prototype.pluralize) {\n\t    (function() {\n\t        var memo = {};\n\t        String.prototype.pluralize = function(plural) {\n\t            if(plural) {\n\t                return plural;\n\t            }\n\t            var thisString = this.toString();\n\t            if(!memo.hasOwnProperty(thisString)) {\n\t                memo[thisString] = InflectionJS.apply_rules(\n\t                    this.toString(),\n\t                    this._plural_rules,\n\t                    this._uncountable_words\n\t                );\n\t            }\n\t            return memo[thisString];\n\t        };\n\t    })();\n\t}\n\t\n\t/*\n\t  This function adds singularization support to every String object\n\t    Signature:\n\t      String.singularize(singular) == String\n\t    Arguments:\n\t      singular - String (optional) - overrides normal output with said String\n\t    Returns:\n\t      String - plural English language nouns are returned in singular form\n\t    Examples:\n\t      \"people\".singularize() == \"person\"\n\t      \"octopi\".singularize() == \"octopus\"\n\t      \"Hats\".singularize() == \"Hat\"\n\t      \"guys\".singularize(\"person\") == \"person\"\n\t*/\n\tif (!String.prototype.singularize) {\n\t    (function() {\n\t        var memo = {};\n\t        String.prototype.singularize = function(singular) {\n\t            if(singular) {\n\t                return singular;\n\t            }\n\t            var thisString = this.toString();\n\t            if(!memo.hasOwnProperty(thisString)) {\n\t                memo[thisString] = InflectionJS.apply_rules(\n\t                    thisString,\n\t                    this._singular_rules,\n\t                    this._uncountable_words\n\t                );\n\t            }\n\t            return memo[thisString];\n\t        };\n\t    })();\n\t}\n\t\n\t/*\n\t  This function adds camelization support to every String object\n\t    Signature:\n\t      String.camelize(lowFirstLetter) == String\n\t    Arguments:\n\t      lowFirstLetter - boolean (optional) - default is to capitalize the first\n\t        letter of the results... passing true will lowercase it\n\t    Returns:\n\t      String - lower case underscored words will be returned in camel case\n\t        additionally '/' is translated to '::'\n\t    Examples:\n\t      \"message_properties\".camelize() == \"MessageProperties\"\n\t      \"message_properties\".camelize(true) == \"messageProperties\"\n\t*/\n\tif (!String.prototype.camelize)\n\t{\n\t     String.prototype.camelize = function(lowFirstLetter)\n\t     {\n\t        var str = this.toLowerCase();\n\t        var str_path = str.split('/');\n\t        for (var i = 0; i < str_path.length; i++)\n\t        {\n\t            var str_arr = str_path[i].split('_');\n\t            var initX = ((lowFirstLetter && i + 1 === str_path.length) ? (1) : (0));\n\t            for (var x = initX; x < str_arr.length; x++)\n\t            {\n\t                str_arr[x] = str_arr[x].charAt(0).toUpperCase() + str_arr[x].substring(1);\n\t            }\n\t            str_path[i] = str_arr.join('');\n\t        }\n\t        str = str_path.join('::');\n\t        return str;\n\t    };\n\t}\n\t\n\t/*\n\t  This function adds underscore support to every String object\n\t    Signature:\n\t      String.underscore() == String\n\t    Arguments:\n\t      N/A\n\t    Returns:\n\t      String - camel cased words are returned as lower cased and underscored\n\t        additionally '::' is translated to '/'\n\t    Examples:\n\t      \"MessageProperties\".camelize() == \"message_properties\"\n\t      \"messageProperties\".underscore() == \"message_properties\"\n\t*/\n\tif (!String.prototype.underscore)\n\t{\n\t     String.prototype.underscore = function()\n\t     {\n\t        var str = this;\n\t        var str_path = str.split('::');\n\t        for (var i = 0; i < str_path.length; i++)\n\t        {\n\t            str_path[i] = str_path[i].replace(InflectionJS.uppercase, '_$1');\n\t            str_path[i] = str_path[i].replace(InflectionJS.underbar_prefix, '');\n\t        }\n\t        str = str_path.join('/').toLowerCase();\n\t        return str;\n\t    };\n\t}\n\t\n\t/*\n\t  This function adds humanize support to every String object\n\t    Signature:\n\t      String.humanize(lowFirstLetter) == String\n\t    Arguments:\n\t      lowFirstLetter - boolean (optional) - default is to capitalize the first\n\t        letter of the results... passing true will lowercase it\n\t    Returns:\n\t      String - lower case underscored words will be returned in humanized form\n\t    Examples:\n\t      \"message_properties\".humanize() == \"Message properties\"\n\t      \"message_properties\".humanize(true) == \"message properties\"\n\t*/\n\tif (!String.prototype.humanize)\n\t{\n\t    String.prototype.humanize = function(lowFirstLetter)\n\t    {\n\t        var str = this.toLowerCase();\n\t        str = str.replace(InflectionJS.id_suffix, '');\n\t        str = str.replace(InflectionJS.underbar, ' ');\n\t        if (!lowFirstLetter)\n\t        {\n\t            str = str.capitalize();\n\t        }\n\t        return str;\n\t    };\n\t}\n\t\n\t/*\n\t  This function adds capitalization support to every String object\n\t    Signature:\n\t      String.capitalize() == String\n\t    Arguments:\n\t      N/A\n\t    Returns:\n\t      String - all characters will be lower case and the first will be upper\n\t    Examples:\n\t      \"message_properties\".capitalize() == \"Message_properties\"\n\t      \"message properties\".capitalize() == \"Message properties\"\n\t*/\n\tif (!String.prototype.capitalize)\n\t{\n\t    String.prototype.capitalize = function()\n\t    {\n\t        var str = this.toLowerCase();\n\t        str = str.substring(0, 1).toUpperCase() + str.substring(1);\n\t        return str;\n\t    };\n\t}\n\t\n\t/*\n\t  This function adds dasherization support to every String object\n\t    Signature:\n\t      String.dasherize() == String\n\t    Arguments:\n\t      N/A\n\t    Returns:\n\t      String - replaces all spaces or underbars with dashes\n\t    Examples:\n\t      \"message_properties\".capitalize() == \"message-properties\"\n\t      \"Message Properties\".capitalize() == \"Message-Properties\"\n\t*/\n\tif (!String.prototype.dasherize)\n\t{\n\t    String.prototype.dasherize = function()\n\t    {\n\t        var str = this;\n\t        str = str.replace(InflectionJS.space_or_underbar, '-');\n\t        return str;\n\t    };\n\t}\n\t\n\t/*\n\t  This function adds titleize support to every String object\n\t    Signature:\n\t      String.titleize() == String\n\t    Arguments:\n\t      N/A\n\t    Returns:\n\t      String - capitalizes words as you would for a book title\n\t    Examples:\n\t      \"message_properties\".titleize() == \"Message Properties\"\n\t      \"message properties to keep\".titleize() == \"Message Properties to Keep\"\n\t*/\n\tif (!String.prototype.titleize)\n\t{\n\t    String.prototype.titleize = function()\n\t    {\n\t        var str = this.toLowerCase();\n\t        str = str.replace(InflectionJS.underbar, ' ');\n\t        var str_arr = str.split(' ');\n\t        for (var x = 0; x < str_arr.length; x++)\n\t        {\n\t            var d = str_arr[x].split('-');\n\t            for (var i = 0; i < d.length; i++)\n\t            {\n\t                if (this._non_titlecased_words.indexOf(d[i].toLowerCase()) < 0)\n\t                {\n\t                    d[i] = d[i].capitalize();\n\t                }\n\t            }\n\t            str_arr[x] = d.join('-');\n\t        }\n\t        str = str_arr.join(' ');\n\t        str = str.substring(0, 1).toUpperCase() + str.substring(1);\n\t        return str;\n\t    };\n\t}\n\t\n\t/*\n\t  This function adds demodulize support to every String object\n\t    Signature:\n\t      String.demodulize() == String\n\t    Arguments:\n\t      N/A\n\t    Returns:\n\t      String - removes module names leaving only class names (Ruby style)\n\t    Examples:\n\t      \"Message::Bus::Properties\".demodulize() == \"Properties\"\n\t*/\n\tif (!String.prototype.demodulize)\n\t{\n\t    String.prototype.demodulize = function()\n\t    {\n\t        var str = this;\n\t        var str_arr = str.split('::');\n\t        str = str_arr[str_arr.length - 1];\n\t        return str;\n\t    };\n\t}\n\t\n\t/*\n\t  This function adds tableize support to every String object\n\t    Signature:\n\t      String.tableize() == String\n\t    Arguments:\n\t      N/A\n\t    Returns:\n\t      String - renders camel cased words into their underscored plural form\n\t    Examples:\n\t      \"MessageBusProperty\".tableize() == \"message_bus_properties\"\n\t*/\n\tif (!String.prototype.tableize)\n\t{\n\t    String.prototype.tableize = function()\n\t    {\n\t        var str = this;\n\t        str = str.underscore().pluralize();\n\t        return str;\n\t    };\n\t}\n\t\n\t/*\n\t  This function adds classification support to every String object\n\t    Signature:\n\t      String.classify() == String\n\t    Arguments:\n\t      N/A\n\t    Returns:\n\t      String - underscored plural nouns become the camel cased singular form\n\t    Examples:\n\t      \"message_bus_properties\".classify() == \"MessageBusProperty\"\n\t*/\n\tif (!String.prototype.classify)\n\t{\n\t    String.prototype.classify = function()\n\t    {\n\t        var str = this;\n\t        str = str.camelize().singularize();\n\t        return str;\n\t    };\n\t}\n\t\n\t/*\n\t  This function adds foreign key support to every String object\n\t    Signature:\n\t      String.foreign_key(dropIdUbar) == String\n\t    Arguments:\n\t      dropIdUbar - boolean (optional) - default is to seperate id with an\n\t        underbar at the end of the class name, you can pass true to skip it\n\t    Returns:\n\t      String - camel cased singular class names become underscored with id\n\t    Examples:\n\t      \"MessageBusProperty\".foreign_key() == \"message_bus_property_id\"\n\t      \"MessageBusProperty\".foreign_key(true) == \"message_bus_propertyid\"\n\t*/\n\tif (!String.prototype.foreign_key)\n\t{\n\t    String.prototype.foreign_key = function(dropIdUbar)\n\t    {\n\t        var str = this;\n\t        str = str.demodulize().underscore() + ((dropIdUbar) ? ('') : ('_')) + 'id';\n\t        return str;\n\t    };\n\t}\n\t\n\t/*\n\t  This function adds ordinalize support to every String object\n\t    Signature:\n\t      String.ordinalize() == String\n\t    Arguments:\n\t      N/A\n\t    Returns:\n\t      String - renders all found numbers their sequence like \"22nd\"\n\t    Examples:\n\t      \"the 1 pitch\".ordinalize() == \"the 1st pitch\"\n\t*/\n\tif (!String.prototype.ordinalize)\n\t{\n\t    String.prototype.ordinalize = function()\n\t    {\n\t        var str = this;\n\t        var str_arr = str.split(' ');\n\t        for (var x = 0; x < str_arr.length; x++)\n\t        {\n\t            var i = parseInt(str_arr[x], 10);\n\t            if (i === NaN)\n\t            {\n\t                var ltd = str_arr[x].substring(str_arr[x].length - 2);\n\t                var ld = str_arr[x].substring(str_arr[x].length - 1);\n\t                var suf = \"th\";\n\t                if (ltd != \"11\" && ltd != \"12\" && ltd != \"13\")\n\t                {\n\t                    if (ld === \"1\")\n\t                    {\n\t                        suf = \"st\";\n\t                    }\n\t                    else if (ld === \"2\")\n\t                    {\n\t                        suf = \"nd\";\n\t                    }\n\t                    else if (ld === \"3\")\n\t                    {\n\t                        suf = \"rd\";\n\t                    }\n\t                }\n\t                str_arr[x] += suf;\n\t            }\n\t        }\n\t        str = str_arr.join(' ');\n\t        return str;\n\t    };\n\t}\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"Vocabulary: Type\\nTerm:       Integer\\nTerm:       Real\\nTerm:       Text\\nTerm:       Date\\nTerm:       Date Time\\nTerm:       Time\\nTerm:       Interval\\nTerm:       File\\n\\nTerm:       Serial\\n\\tConcept Type: Integer\\n\\tNote: An auto-incrementing 'Integer'.\\nTerm:       JSON\\n\\tConcept Type: Text\\n\\tNote: A 'Text' type that will only allow valid JSON.\\nTerm:       Hashed\\n\\tConcept Type: Text\\n\\tNote: A 'Text' type that will automatically be converted to a hash.\\n\\nTerm:       Length\\n\\tConcept Type: Integer\\n\\nFact type:  Text has Length\\n\\tNote: Length in characters\\n\\tNecessity: Each Text has exactly one Length\\n\\nFact type:  Integer1 is less than Integer2\\n\\tSynonymous Form: Integer2 is greater than Integer1\\nFact type: Integer1 is less than or equal to Integer2\\n\\tSynonymous Form: Integer2 is greater than or equal to Integer1\\nFact type:  Integer1 is equal to Integer2\\n\\tSynonymous Form: Integer2 is equal to Integer1\\n\\tSynonymous Form: Integer1 equals Integer2\\n\\tSynonymous Form: Integer2 equals Integer1\\n\\nFact type:  Real1 is less than Real2\\n\\tSynonymous Form: Real2 is greater than Real1\\nFact type: Real1 is less than or equal to Real2\\n\\tSynonymous Form: Real2 is greater than or equal to Real1\\nFact type:  Real1 is equal to Real2\\n\\tSynonymous Form: Real2 is equal to Real1\\n\\tSynonymous Form: Real1 equals Real2\\n\\tSynonymous Form: Real2 equals Real1\\n\\n\\nFact type:  Real is less than Integer\\n\\tSynonymous Form: Integer is greater than Real\\nFact type:  Integer is less than Real\\n\\tSynonymous Form: Real is greater than Integer\\n\\nFact type: Real is less than or equal to Integer\\n\\tSynonymous Form: Integer is greater than or equal to Real\\nFact type: Integer is less than or equal to Real\\n\\tSynonymous Form: Real is greater than or equal to Integer\\n\\nFact type:  Integer is equal to Real\\n\\tSynonymous Form: Real is equal to Integer\\n\\tSynonymous Form: Real equals Integer\\n\\tSynonymous Form: Integer equals Real\\n\\n\\nFact type:  Text1 is equal to Text2\\n\\tSynonymous Form: Text2 is equal to Text1\\n\\tSynonymous Form: Text1 equals Text2\\n\\tSynonymous Form: Text2 equals Text1\\n\\nTerm:       Short Text\\n\\tConcept Type: Text\\n\\t--Necessity: each Short Text has a Length that is less than or equal to 255.\\n\\nTerm:       Red Component\\n\\tConcept Type: Integer\\nTerm:       Green Component\\n\\tConcept Type: Integer\\nTerm:       Blue Component\\n\\tConcept Type: Integer\\nTerm:       Alpha Component\\n\\tConcept Type: Integer\\nTerm:       Color\\n\\tConcept Type: Integer\\nFact type:  Color has Red Component\\n\\tNecessity: Each Color has exactly one Red Component\\nFact type:  Color has Green Component\\n\\tNecessity: Each Color has exactly one Green Component\\nFact type:  Color has Blue Component\\n\\tNecessity: Each Color has exactly one Blue Component\\nFact type:  Color has Alpha Component\\n\\tNecessity: Each Color has exactly one Alpha Component\"\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar MigrationError, Promise, TypedError, _, modelText, permissions,\n\t  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n\t  hasProp = {}.hasOwnProperty,\n\t  slice = [].slice;\n\t\n\t_ = __webpack_require__(4);\n\t\n\tPromise = __webpack_require__(2);\n\t\n\tTypedError = __webpack_require__(6);\n\t\n\tmodelText = __webpack_require__(45);\n\t\n\tpermissions = __webpack_require__(46);\n\t\n\texports.MigrationError = MigrationError = (function(superClass) {\n\t  extend(MigrationError, superClass);\n\t\n\t  function MigrationError() {\n\t    return MigrationError.__super__.constructor.apply(this, arguments);\n\t  }\n\t\n\t  return MigrationError;\n\t\n\t})(TypedError);\n\t\n\texports.run = function(tx, model) {\n\t  var modelName;\n\t  if (!_.some(model.migrations)) {\n\t    return Promise.fulfilled();\n\t  }\n\t  modelName = model.apiRoot;\n\t  return this.checkModelAlreadyExists(tx, modelName).then((function(_this) {\n\t    return function(exists) {\n\t      if (!exists) {\n\t        _this.logger.info('First time model has executed, skipping migrations');\n\t        return _this.setExecutedMigrations(tx, modelName, _.keys(model.migrations));\n\t      }\n\t      return _this.getExecutedMigrations(tx, modelName).then(function(executedMigrations) {\n\t        var pendingMigrations;\n\t        pendingMigrations = _this.filterAndSortPendingMigrations(model.migrations, executedMigrations);\n\t        if (!_.some(pendingMigrations)) {\n\t          return;\n\t        }\n\t        return _this.executeMigrations(tx, pendingMigrations).then(function(newlyExecutedMigrations) {\n\t          return _this.setExecutedMigrations(tx, modelName, slice.call(executedMigrations).concat(slice.call(newlyExecutedMigrations)));\n\t        });\n\t      });\n\t    };\n\t  })(this));\n\t};\n\t\n\texports.checkModelAlreadyExists = function(tx, modelName) {\n\t  return this.sbvrUtils.api.dev.get({\n\t    resource: 'model',\n\t    passthrough: {\n\t      tx: tx,\n\t      req: permissions.rootRead\n\t    },\n\t    options: {\n\t      select: ['vocabulary'],\n\t      top: '1',\n\t      filter: {\n\t        vocabulary: modelName\n\t      }\n\t    }\n\t  }).then(function(results) {\n\t    return _.some(results);\n\t  });\n\t};\n\t\n\texports.getExecutedMigrations = function(tx, modelName) {\n\t  return this.migrationsApi.get({\n\t    resource: 'migration',\n\t    id: modelName,\n\t    passthrough: {\n\t      tx: tx,\n\t      req: permissions.rootRead\n\t    },\n\t    options: {\n\t      select: ['executed_migrations']\n\t    }\n\t  }).then(function(data) {\n\t    return (data != null ? data.executed_migrations : void 0) || [];\n\t  });\n\t};\n\t\n\texports.setExecutedMigrations = function(tx, modelName, executedMigrations) {\n\t  return this.migrationsApi.put({\n\t    resource: 'migration',\n\t    id: modelName,\n\t    passthrough: {\n\t      tx: tx,\n\t      req: permissions.root\n\t    },\n\t    body: {\n\t      model_name: modelName,\n\t      executed_migrations: executedMigrations\n\t    }\n\t  });\n\t};\n\t\n\texports.filterAndSortPendingMigrations = function(migrations, executedMigrations) {\n\t  return _(migrations).omit(executedMigrations).toPairs().sortBy(_.head).value();\n\t};\n\t\n\texports.executeMigrations = function(tx, migrations) {\n\t  if (migrations == null) {\n\t    migrations = [];\n\t  }\n\t  return Promise.map(migrations, this.executeMigration.bind(this, tx), {\n\t    concurrency: 1\n\t  })[\"catch\"]((function(_this) {\n\t    return function(err) {\n\t      _this.logger.error('Error while executing migrations, rolled back');\n\t      throw new MigrationError(err);\n\t    };\n\t  })(this))[\"return\"](_.map(migrations, _.head));\n\t};\n\t\n\texports.executeMigration = function(tx, arg) {\n\t  var key, migration;\n\t  key = arg[0], migration = arg[1];\n\t  this.logger.info(\"Running migration \" + (JSON.stringify(key)));\n\t  switch (typeof migration) {\n\t    case 'function':\n\t      return migration(tx, this.sbvrUtils);\n\t    case 'string':\n\t      return tx.executeSql(migration);\n\t  }\n\t};\n\t\n\texports.config = {\n\t  models: [\n\t    {\n\t      modelName: 'migrations',\n\t      apiRoot: 'migrations',\n\t      modelText: modelText,\n\t      customServerCode: exports\n\t    }\n\t  ]\n\t};\n\t\n\texports.setup = function(app, sbvrUtils, db, callback) {\n\t  this.sbvrUtils = sbvrUtils;\n\t  this.migrationsApi = this.sbvrUtils.api.migrations;\n\t  this.logger = this.migrationsApi.logger;\n\t  return callback();\n\t};\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"Vocabulary: migrations\\n\\nTerm:       model name\\n\\tConcept Type: Short Text (Type)\\nTerm:       executed migrations\\n\\tConcept Type: JSON (Type)\\n\\nTerm:       migration\\n\\tReference Scheme:   model name\\n\\tDatabase ID Field:  model name\\nFact Type:  migration has model name\\n\\tNecessity: each migration has exactly one model name\\nFact Type:  migration has executed migrations\\n\\tNecessity: each migration has exactly one executed migrations\\n\"\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar BluebirdLRU, ODataParser, PermissionError, PermissionParsingError, Promise, TypedError, _, collapsePermissionFilters, env, memoize, metadataEndpoints, methodPermissions, nestedCheck, parsePermissions, rootRead, userModel,\n\t  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n\t  hasProp = {}.hasOwnProperty,\n\t  slice = [].slice,\n\t  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\t\n\t_ = __webpack_require__(4);\n\t\n\tPromise = __webpack_require__(2);\n\t\n\tBluebirdLRU = __webpack_require__(47);\n\t\n\tenv = __webpack_require__(48);\n\t\n\tuserModel = __webpack_require__(49);\n\t\n\tmetadataEndpoints = __webpack_require__(50).metadataEndpoints;\n\t\n\tODataParser = __webpack_require__(51).ODataParser;\n\t\n\tmemoize = __webpack_require__(115);\n\t\n\tTypedError = __webpack_require__(6);\n\t\n\texports.PermissionError = PermissionError = (function(superClass) {\n\t  extend(PermissionError, superClass);\n\t\n\t  function PermissionError() {\n\t    return PermissionError.__super__.constructor.apply(this, arguments);\n\t  }\n\t\n\t  return PermissionError;\n\t\n\t})(TypedError);\n\t\n\texports.PermissionParsingError = PermissionParsingError = (function(superClass) {\n\t  extend(PermissionParsingError, superClass);\n\t\n\t  function PermissionParsingError() {\n\t    return PermissionParsingError.__super__.constructor.apply(this, arguments);\n\t  }\n\t\n\t  return PermissionParsingError;\n\t\n\t})(TypedError);\n\t\n\texports.root = {\n\t  user: {\n\t    permissions: ['resource.all']\n\t  }\n\t};\n\t\n\texports.rootRead = rootRead = {\n\t  user: {\n\t    permissions: ['resource.get']\n\t  }\n\t};\n\t\n\tmethodPermissions = {\n\t  GET: {\n\t    or: ['get', 'read']\n\t  },\n\t  PUT: {\n\t    or: [\n\t      'set', {\n\t        and: ['create', 'update']\n\t      }\n\t    ]\n\t  },\n\t  POST: {\n\t    or: ['set', 'create']\n\t  },\n\t  PATCH: {\n\t    or: ['set', 'update']\n\t  },\n\t  MERGE: {\n\t    or: ['set', 'update']\n\t  },\n\t  DELETE: 'delete'\n\t};\n\t\n\tparsePermissions = (function() {\n\t  var _parsePermissions, odataParser;\n\t  odataParser = ODataParser.createInstance();\n\t  _parsePermissions = memoize(function(filter, bindsLength) {\n\t    var tree;\n\t    odataParser.binds = new Array(bindsLength);\n\t    tree = odataParser.matchAll(['FilterByExpression', filter], 'ProcessRule');\n\t    return {\n\t      tree: tree,\n\t      extraBinds: odataParser.binds.slice(bindsLength)\n\t    };\n\t  }, {\n\t    primitive: true\n\t  });\n\t  return function(filter, odataBinds) {\n\t    var extraBinds, ref, tree;\n\t    ref = _parsePermissions(filter, odataBinds.length), tree = ref.tree, extraBinds = ref.extraBinds;\n\t    odataBinds.push.apply(odataBinds, extraBinds);\n\t    return tree;\n\t  };\n\t})();\n\t\n\texports.nestedCheck = nestedCheck = function(check, stringCallback) {\n\t  var checkType, checkTypes, i, j, len, len1, ref, result, results, subcheck;\n\t  if (_.isString(check)) {\n\t    return stringCallback(check);\n\t  } else if (_.isBoolean(check)) {\n\t    return check;\n\t  } else if (_.isArray(check)) {\n\t    results = [];\n\t    for (i = 0, len = check.length; i < len; i++) {\n\t      subcheck = check[i];\n\t      result = nestedCheck(subcheck, stringCallback);\n\t      if (result === false) {\n\t        return false;\n\t      } else if (result !== true) {\n\t        results = results.concat(result);\n\t      }\n\t    }\n\t    if (results.length === 1) {\n\t      return results[0];\n\t    } else if (results.length > 1) {\n\t      return _.uniq(results);\n\t    } else {\n\t      return true;\n\t    }\n\t  } else if (_.isObject(check)) {\n\t    checkTypes = _.keys(check);\n\t    if (checkTypes.length > 1) {\n\t      throw new Error('More than one check type: ' + checkTypes);\n\t    }\n\t    checkType = checkTypes[0];\n\t    switch (checkType.toUpperCase()) {\n\t      case 'AND':\n\t        return nestedCheck(check[checkType], stringCallback);\n\t      case 'OR':\n\t        results = [];\n\t        ref = check[checkType];\n\t        for (j = 0, len1 = ref.length; j < len1; j++) {\n\t          subcheck = ref[j];\n\t          result = nestedCheck(subcheck, stringCallback);\n\t          if (result === true) {\n\t            return true;\n\t          } else if (result !== false) {\n\t            results = results.concat(result);\n\t          }\n\t        }\n\t        if (results.length === 1) {\n\t          return results[0];\n\t        } else if (results.length > 1) {\n\t          return _.uniq(results);\n\t        } else {\n\t          return false;\n\t        }\n\t        break;\n\t      default:\n\t        throw new Error('Cannot parse required checking logic: ' + checkType);\n\t    }\n\t  } else {\n\t    throw new Error('Cannot parse required checks: ' + check);\n\t  }\n\t};\n\t\n\tcollapsePermissionFilters = function(v) {\n\t  if (_.isArray(v)) {\n\t    return collapsePermissionFilters({\n\t      or: v\n\t    });\n\t  } else if (_.isObject(v)) {\n\t    if (v.hasOwnProperty('filter')) {\n\t      return v.filter;\n\t    } else {\n\t      return _(v).toPairs().flattenDeep().map(collapsePermissionFilters).value();\n\t    }\n\t  } else {\n\t    return v;\n\t  }\n\t};\n\t\n\texports.config = {\n\t  models: [\n\t    {\n\t      apiRoot: 'Auth',\n\t      modelText: userModel,\n\t      customServerCode: exports\n\t    }\n\t  ]\n\t};\n\t\n\texports.setup = function(app, sbvrUtils) {\n\t  var addPermissions, apiKeyMiddleware, checkApiKey, checkPermissions, customApiKeyMiddleware, customAuthorizationMiddleware, getApiKeyPermissions, getPermissions, getUserPermissions;\n\t  sbvrUtils.addHook('all', 'all', 'all', {\n\t    PREPARSE: function(arg) {\n\t      var req;\n\t      req = arg.req;\n\t      return apiKeyMiddleware(req);\n\t    },\n\t    POSTPARSE: function(arg) {\n\t      var req, request;\n\t      req = arg.req, request = arg.request;\n\t      return addPermissions(req, request);\n\t    }\n\t  });\n\t  sbvrUtils.addHook('POST', 'Auth', 'user', {\n\t    POSTPARSE: function(arg) {\n\t      var api, request;\n\t      request = arg.request, api = arg.api;\n\t      return api.post({\n\t        resource: 'actor'\n\t      }).then(function(result) {\n\t        return request.values.actor = result.id;\n\t      });\n\t    }\n\t  });\n\t  sbvrUtils.addHook('DELETE', 'Auth', 'user', {\n\t    POSTRUN: function(arg) {\n\t      var api, request;\n\t      request = arg.request, api = arg.api;\n\t      return api[\"delete\"]({\n\t        resource: 'actor',\n\t        id: request.values.actor\n\t      });\n\t    }\n\t  });\n\t  exports.checkPassword = function(username, password, callback) {\n\t    var authApi;\n\t    authApi = sbvrUtils.api.Auth;\n\t    return authApi.get({\n\t      resource: 'user',\n\t      passthrough: {\n\t        req: rootRead\n\t      },\n\t      options: {\n\t        select: ['id', 'actor', 'password'],\n\t        filter: {\n\t          username: username\n\t        }\n\t      }\n\t    }).then(function(result) {\n\t      var actorId, hash, userId;\n\t      if (result.length === 0) {\n\t        throw new Error('User not found');\n\t      }\n\t      hash = result[0].password;\n\t      userId = result[0].id;\n\t      actorId = result[0].actor;\n\t      return sbvrUtils.sbvrTypes.Hashed.compare(password, hash).then(function(res) {\n\t        if (!res) {\n\t          throw new Error('Passwords do not match');\n\t        }\n\t        return getUserPermissions(userId).then(function(permissions) {\n\t          return {\n\t            id: userId,\n\t            actor: actorId,\n\t            username: username,\n\t            permissions: permissions\n\t          };\n\t        });\n\t      });\n\t    }).nodeify(callback);\n\t  };\n\t  getPermissions = function(permsFilter, callback) {\n\t    var authApi;\n\t    authApi = sbvrUtils.api.Auth;\n\t    return authApi.get({\n\t      resource: 'permission',\n\t      passthrough: {\n\t        req: rootRead\n\t      },\n\t      options: {\n\t        select: 'name',\n\t        filter: permsFilter\n\t      }\n\t    }).map(function(permission) {\n\t      return permission.name;\n\t    })[\"catch\"](function(err) {\n\t      authApi.logger.error('Error loading permissions', err, err.stack);\n\t      throw err;\n\t    }).nodeify(callback);\n\t  };\n\t  exports.getUserPermissions = getUserPermissions = function(userId, callback) {\n\t    var permsFilter;\n\t    if (_.isString(userId)) {\n\t      userId = _.parseInt(userId);\n\t    }\n\t    if (!_.isFinite(userId)) {\n\t      return Promise.rejected(new Error('User ID has to be numeric, got: ' + typeof userId));\n\t    }\n\t    permsFilter = {\n\t      $or: {\n\t        user__has__permission: {\n\t          $any: {\n\t            $alias: 'uhp',\n\t            $expr: {\n\t              uhp: {\n\t                user: userId\n\t              },\n\t              $or: [\n\t                {\n\t                  uhp: {\n\t                    expiry_date: null\n\t                  }\n\t                }, {\n\t                  uhp: {\n\t                    expiry_date: {\n\t                      $gt: {\n\t                        $now: null\n\t                      }\n\t                    }\n\t                  }\n\t                }\n\t              ]\n\t            }\n\t          }\n\t        },\n\t        role__has__permission: {\n\t          $any: {\n\t            $alias: 'rhp',\n\t            $expr: {\n\t              rhp: {\n\t                role: {\n\t                  $any: {\n\t                    $alias: 'r',\n\t                    $expr: {\n\t                      r: {\n\t                        user__has__role: {\n\t                          $any: {\n\t                            $alias: 'uhr',\n\t                            $expr: {\n\t                              uhr: {\n\t                                user: userId\n\t                              },\n\t                              $or: [\n\t                                {\n\t                                  uhr: {\n\t                                    expiry_date: null\n\t                                  }\n\t                                }, {\n\t                                  uhr: {\n\t                                    expiry_date: {\n\t                                      $gt: {\n\t                                        $now: null\n\t                                      }\n\t                                    }\n\t                                  }\n\t                                }\n\t                              ]\n\t                            }\n\t                          }\n\t                        }\n\t                      }\n\t                    }\n\t                  }\n\t                }\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\t    };\n\t    return getPermissions(permsFilter, callback);\n\t  };\n\t  exports.getApiKeyPermissions = getApiKeyPermissions = (function() {\n\t    var cache;\n\t    cache = new BluebirdLRU({\n\t      max: env.apiKeys.permissionsCache.max,\n\t      maxAge: env.apiKeys.permissionsCache.maxAge,\n\t      fetchFn: function(apiKey) {\n\t        var permsFilter;\n\t        permsFilter = {\n\t          $or: {\n\t            api_key__has__permission: {\n\t              $any: {\n\t                $alias: 'khp',\n\t                $expr: {\n\t                  khp: {\n\t                    api_key: {\n\t                      $any: {\n\t                        $alias: 'k',\n\t                        $expr: {\n\t                          k: {\n\t                            key: apiKey\n\t                          }\n\t                        }\n\t                      }\n\t                    }\n\t                  }\n\t                }\n\t              }\n\t            },\n\t            role__has__permission: {\n\t              $any: {\n\t                $alias: 'rhp',\n\t                $expr: {\n\t                  'rhp': {\n\t                    role: {\n\t                      $any: {\n\t                        $alias: 'r',\n\t                        $expr: {\n\t                          r: {\n\t                            api_key__has__role: {\n\t                              $any: {\n\t                                $alias: 'khr',\n\t                                $expr: {\n\t                                  khr: {\n\t                                    api_key: {\n\t                                      $any: {\n\t                                        $alias: 'k',\n\t                                        $expr: {\n\t                                          k: {\n\t                                            key: apiKey\n\t                                          }\n\t                                        }\n\t                                      }\n\t                                    }\n\t                                  }\n\t                                }\n\t                              }\n\t                            }\n\t                          }\n\t                        }\n\t                      }\n\t                    }\n\t                  }\n\t                }\n\t              }\n\t            }\n\t          }\n\t        };\n\t        return getPermissions(permsFilter);\n\t      }\n\t    });\n\t    return function(apiKey, callback) {\n\t      var promise;\n\t      promise = _.isString(apiKey) ? cache.get(apiKey) : Promise.rejected(new Error('API key has to be a string, got: ' + typeof apiKey));\n\t      return promise.nodeify(callback);\n\t    };\n\t  })();\n\t  checkApiKey = function(req, apiKey) {\n\t    return Promise[\"try\"](function() {\n\t      if ((apiKey == null) || (req.apiKey != null)) {\n\t        return;\n\t      }\n\t      return getApiKeyPermissions(apiKey)[\"catch\"](function(err) {\n\t        console.warn('Error with API key:', err);\n\t        return [];\n\t      }).then(function(permissions) {\n\t        return req.apiKey = {\n\t          key: apiKey,\n\t          permissions: permissions\n\t        };\n\t      });\n\t    });\n\t  };\n\t  exports.customAuthorizationMiddleware = customAuthorizationMiddleware = function(expectedScheme) {\n\t    if (expectedScheme == null) {\n\t      expectedScheme = 'Bearer';\n\t    }\n\t    expectedScheme = expectedScheme.toLowerCase();\n\t    return function(req, res, next) {\n\t      return Promise[\"try\"](function() {\n\t        var apiKey, auth, parts, scheme;\n\t        auth = req.header('Authorization');\n\t        if (!auth) {\n\t          return;\n\t        }\n\t        parts = auth.split(' ');\n\t        if (parts.length !== 2) {\n\t          return;\n\t        }\n\t        scheme = parts[0], apiKey = parts[1];\n\t        if (scheme.toLowerCase() !== expectedScheme) {\n\t          return;\n\t        }\n\t        return checkApiKey(req, apiKey);\n\t      }).then(function() {\n\t        if (typeof next === \"function\") {\n\t          next();\n\t        }\n\t      });\n\t    };\n\t  };\n\t  exports.authorizationMiddleware = customAuthorizationMiddleware();\n\t  exports.customApiKeyMiddleware = customApiKeyMiddleware = function(paramName) {\n\t    if (paramName == null) {\n\t      paramName = 'apikey';\n\t    }\n\t    return function(req, res, next) {\n\t      var apiKey, ref, ref1;\n\t      apiKey = (ref = (ref1 = req.params[paramName]) != null ? ref1 : req.body[paramName]) != null ? ref : req.query[paramName];\n\t      return checkApiKey(req, apiKey).then(function() {\n\t        if (typeof next === \"function\") {\n\t          next();\n\t        }\n\t      });\n\t    };\n\t  };\n\t  exports.apiKeyMiddleware = apiKeyMiddleware = customApiKeyMiddleware();\n\t  exports.checkPermissions = checkPermissions = (function() {\n\t    var _getGuestPermissions;\n\t    _getGuestPermissions = (function() {\n\t      var _guestPermissions;\n\t      _guestPermissions = null;\n\t      return function(callback) {\n\t        if ((_guestPermissions == null) || _guestPermissions.isRejected()) {\n\t          _guestPermissions = sbvrUtils.api.Auth.get({\n\t            resource: 'user',\n\t            passthrough: {\n\t              req: rootRead\n\t            },\n\t            options: {\n\t              select: 'id',\n\t              filter: {\n\t                username: 'guest'\n\t              }\n\t            }\n\t          }).then(function(result) {\n\t            if (result.length === 0) {\n\t              throw new Error('No guest permissions');\n\t            }\n\t            return getUserPermissions(result[0].id);\n\t          });\n\t        }\n\t        return _guestPermissions.nodeify(callback);\n\t      };\n\t    })();\n\t    return function() {\n\t      var _checkPermissions, actionList, actorID, apiKeyActorID, args, authApi, callback, callbackArg, ref, ref1, req, resourceName, vocabulary;\n\t      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n\t      callbackArg = Math.max(3, Math.min(6, args.length - 1));\n\t      if (_.isFunction(args[callbackArg])) {\n\t        callback = args[callbackArg];\n\t        args[callbackArg] = null;\n\t      }\n\t      req = args[0], actionList = args[1], resourceName = args[2], vocabulary = args[3];\n\t      authApi = sbvrUtils.api.Auth;\n\t      _checkPermissions = function(permissions, actorID) {\n\t        var checkObject;\n\t        if (actorID == null) {\n\t          throw new Error('Actor ID cannot be null for _checkPermissions.');\n\t        }\n\t        checkObject = {\n\t          or: ['all', actionList]\n\t        };\n\t        return nestedCheck(checkObject, function(permissionCheck) {\n\t          var conditionalPermissions, resourcePermission, vocabularyPermission, vocabularyResourcePermission;\n\t          resourcePermission = 'resource.' + permissionCheck;\n\t          if (_.includes(permissions, resourcePermission)) {\n\t            return true;\n\t          }\n\t          if (vocabulary != null) {\n\t            vocabularyPermission = vocabulary + '.' + permissionCheck;\n\t            if (_.includes(permissions, vocabularyPermission)) {\n\t              return true;\n\t            }\n\t            if (resourceName != null) {\n\t              vocabularyResourcePermission = vocabulary + '.' + resourceName + '.' + permissionCheck;\n\t              if (_.includes(permissions, vocabularyResourcePermission)) {\n\t                return true;\n\t              }\n\t            }\n\t          }\n\t          conditionalPermissions = _.map(permissions, function(permissionName) {\n\t            var condition, i, len, permission, ref;\n\t            ref = [resourcePermission, vocabularyPermission, vocabularyResourcePermission];\n\t            for (i = 0, len = ref.length; i < len; i++) {\n\t              permission = ref[i];\n\t              if (!(permission != null)) {\n\t                continue;\n\t              }\n\t              permission = permission + '?';\n\t              if (permissionName.slice(0, permission.length) === permission) {\n\t                condition = permissionName.slice(permission.length);\n\t                if (_.isArray(actorID)) {\n\t                  return _.map(actorID, function(id) {\n\t                    return condition.replace(/\\$ACTOR\\.ID/g, id);\n\t                  });\n\t                }\n\t                return condition.replace(/\\$ACTOR\\.ID/g, actorID);\n\t              }\n\t            }\n\t            return false;\n\t          });\n\t          conditionalPermissions = _.filter(conditionalPermissions);\n\t          if (conditionalPermissions.length === 1) {\n\t            return conditionalPermissions[0];\n\t          } else if (conditionalPermissions.length > 1) {\n\t            return {\n\t              or: conditionalPermissions\n\t            };\n\t          }\n\t          return false;\n\t        });\n\t      };\n\t      actorID = (ref = (ref1 = req.user) != null ? ref1.actor : void 0) != null ? ref : 0;\n\t      apiKeyActorID = false;\n\t      return Promise[\"try\"](function() {\n\t        if (req.user != null) {\n\t          return _checkPermissions(req.user.permissions, actorID);\n\t        }\n\t        return false;\n\t      })[\"catch\"](function(err) {\n\t        authApi.logger.error('Error checking user permissions', req.user, err, err.stack);\n\t        return false;\n\t      }).then(function(allowed) {\n\t        var apiKeyPermissions, ref2;\n\t        apiKeyPermissions = (ref2 = req.apiKey) != null ? ref2.permissions : void 0;\n\t        if (allowed === true || (apiKeyPermissions == null) || apiKeyPermissions.length === 0) {\n\t          return allowed;\n\t        }\n\t        return authApi.get({\n\t          resource: 'api_key',\n\t          passthrough: {\n\t            req: rootRead\n\t          },\n\t          options: {\n\t            select: 'actor',\n\t            filter: {\n\t              key: req.apiKey.key\n\t            }\n\t          }\n\t        }).then(function(apiKeys) {\n\t          if (apiKeys.length === 0) {\n\t            throw new Error('API key is not linked to a actor?!');\n\t          }\n\t          apiKeyActorID = apiKeys[0].actor.__id;\n\t          return _checkPermissions(apiKeyPermissions, apiKeyActorID);\n\t        })[\"catch\"](function(err) {\n\t          return authApi.logger.error('Error checking api key permissions', req.apiKey.key, err, err.stack);\n\t        }).then(function(apiKeyAllowed) {\n\t          if (apiKeyAllowed === true) {\n\t            return true;\n\t          }\n\t          return {\n\t            or: [allowed, apiKeyAllowed]\n\t          };\n\t        });\n\t      }).then(function(allowed) {\n\t        if (allowed === true) {\n\t          return allowed;\n\t        }\n\t        return _getGuestPermissions().then(function(permissions) {\n\t          var actorIDs;\n\t          actorIDs = apiKeyActorID !== false ? [actorID, apiKeyActorID] : actorID;\n\t          return _checkPermissions(permissions, actorIDs);\n\t        })[\"catch\"](function(err) {\n\t          authApi.logger.error('Error checking guest permissions', err, err.stack);\n\t          return false;\n\t        }).then(function(guestAllowed) {\n\t          return {\n\t            or: [allowed, guestAllowed]\n\t          };\n\t        });\n\t      }).then(function(permissions) {\n\t        return nestedCheck(permissions, _.identity);\n\t      }).nodeify(callback);\n\t    };\n\t  })();\n\t  exports.checkPermissionsMiddleware = function(action) {\n\t    return function(req, res, next) {\n\t      return checkPermissions(req, action).then(function(allowed) {\n\t        switch (allowed) {\n\t          case false:\n\t            return res.sendStatus(401);\n\t          case true:\n\t            return next();\n\t          default:\n\t            throw new Error('checkPermissionsMiddleware returned a conditional permission');\n\t        }\n\t      })[\"catch\"](function(err) {\n\t        sbvrUtils.api.Auth.logger.error('Error checking permissions', err, err.stack);\n\t        return res.sendStatus(503);\n\t      });\n\t    };\n\t  };\n\t  return addPermissions = (function() {\n\t    var _addPermissions;\n\t    _addPermissions = function(req, permissionType, vocabulary, resourceName, odataQuery, odataBinds) {\n\t      return checkPermissions(req, permissionType, resourceName, vocabulary).then(function(conditionalPerms) {\n\t        var permissionFilters, ref, ref1;\n\t        if (conditionalPerms === false) {\n\t          throw new PermissionError();\n\t        }\n\t        if (conditionalPerms !== true) {\n\t          permissionFilters = nestedCheck(conditionalPerms, function(permissionCheck) {\n\t            var e;\n\t            try {\n\t              permissionCheck = parsePermissions(permissionCheck, odataBinds);\n\t              return {\n\t                filter: permissionCheck\n\t              };\n\t            } catch (error) {\n\t              e = error;\n\t              console.warn('Failed to parse conditional permissions: ', permissionCheck);\n\t              throw new PermissionParsingError(e);\n\t            }\n\t          });\n\t          if (permissionFilters === false) {\n\t            throw new PermissionError();\n\t          }\n\t          if (permissionFilters !== true) {\n\t            permissionFilters = collapsePermissionFilters(permissionFilters);\n\t            if (odataQuery.options == null) {\n\t              odataQuery.options = {};\n\t            }\n\t            if (odataQuery.options.$filter != null) {\n\t              odataQuery.options.$filter = ['and', odataQuery.options.$filter, permissionFilters];\n\t            } else {\n\t              odataQuery.options.$filter = permissionFilters;\n\t            }\n\t          }\n\t        }\n\t        if (((ref = odataQuery.options) != null ? (ref1 = ref.$expand) != null ? ref1.properties : void 0 : void 0) != null) {\n\t          return Promise.map(odataQuery.options.$expand.properties, function(expand) {\n\t            return _addPermissions(req, methodPermissions.GET, vocabulary, expand.name, expand, odataBinds);\n\t          });\n\t        }\n\t      });\n\t    };\n\t    return function(req, arg) {\n\t      var custom, isMetadataEndpoint, method, odataBinds, odataQuery, permissionType, resourceName, values, vocabulary;\n\t      method = arg.method, vocabulary = arg.vocabulary, resourceName = arg.resourceName, odataQuery = arg.odataQuery, odataBinds = arg.odataBinds, values = arg.values, custom = arg.custom;\n\t      method = method.toUpperCase();\n\t      isMetadataEndpoint = indexOf.call(metadataEndpoints, resourceName) >= 0 || method === 'OPTIONS';\n\t      permissionType = isMetadataEndpoint ? 'model' : methodPermissions[method] != null ? methodPermissions[method] : (console.warn('Unknown method for permissions type check: ', method), 'all');\n\t      return _addPermissions(req, permissionType, vocabulary, odataQuery.resource, odataQuery, odataBinds);\n\t    };\n\t  })();\n\t};\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = require(\"bluebird-lru-cache\");\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports) {\n\n\texports.apiKeys = {\n\t  permissionsCache: {\n\t    max: 500,\n\t    maxAge: 5 * 60 * 1000\n\t  }\n\t};\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"Vocabulary: Auth\\n\\nTerm:       username\\n\\tConcept Type: Short Text (Type)\\nTerm:       password\\n\\tConcept Type: Hashed (Type)\\nTerm:       name\\n\\tConcept Type: Short Text (Type)\\nTerm:       key\\n\\tConcept Type: Short Text (Type)\\nTerm:       expiry date\\n\\tConcept Type: Date Time (Type)\\n\\nTerm:       permission\\n\\tReference Scheme: name\\nFact type:  permission has name\\n\\tNecessity: Each permission has exactly one name.\\n\\tNecessity: Each name is of exactly one permission.\\n\\nTerm:       role\\n\\tReference Scheme: name\\nFact type:  role has name\\n\\tNecessity: Each role has exactly one name.\\n\\tNecessity: Each name is of exactly one role.\\nFact type:  role has permission\\n\\nTerm:       actor\\n\\nTerm:       user\\n\\tReference Scheme: username\\n\\tConcept Type: actor\\nFact type:  user has username\\n\\tNecessity: Each user has exactly one username.\\n\\tNecessity: Each username is of exactly one user.\\nFact type:  user has password\\n\\tNecessity: Each user has exactly one password.\\nFact type:  user has role\\n\\tNote: A 'user' will inherit all the 'permissions' that the 'role' has.\\n\\tTerm Form: user role\\n\\tFact type: user role has expiry date\\n\\t\\tNecessity: Each user role has at most one expiry date.\\nFact type:  user has permission\\n\\tTerm Form: user permission\\n\\tFact type: user permission has expiry date\\n\\t\\tNecessity: Each user permission has at most one expiry date.\\n\\nTerm:       api key\\n\\tReference Scheme: key\\nFact type:  api key has key\\n\\tNecessity: each api key has exactly one key\\n\\tNecessity: each key is of exactly one api key\\nFact type:  api key has role\\n\\tNote: An 'api key' will inherit all the 'permissions' that the 'role' has.\\nFact type:  api key has permission\\nFact type:  api key is of actor\\n\\tNecessity: each api key is of exactly one actor\\n\"\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar BadRequestError, OData2AbstractSQL, ODataParser, ParsingError, Promise, TranslationError, TypedError, _, memoize, memoizedOdata2AbstractSQL, metadataEndpoints, notParsingError, odata2AbstractSQL, odataParser,\n\t  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n\t  hasProp = {}.hasOwnProperty,\n\t  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\t\n\tPromise = __webpack_require__(2);\n\t\n\tTypedError = __webpack_require__(6);\n\t\n\tODataParser = __webpack_require__(51).ODataParser;\n\t\n\tOData2AbstractSQL = __webpack_require__(52).OData2AbstractSQL;\n\t\n\tmemoize = __webpack_require__(115);\n\t\n\t_ = __webpack_require__(4);\n\t\n\texports.TranslationError = TranslationError = (function(superClass) {\n\t  extend(TranslationError, superClass);\n\t\n\t  function TranslationError() {\n\t    return TranslationError.__super__.constructor.apply(this, arguments);\n\t  }\n\t\n\t  return TranslationError;\n\t\n\t})(TypedError);\n\t\n\texports.ParsingError = ParsingError = (function(superClass) {\n\t  extend(ParsingError, superClass);\n\t\n\t  function ParsingError() {\n\t    return ParsingError.__super__.constructor.apply(this, arguments);\n\t  }\n\t\n\t  return ParsingError;\n\t\n\t})(TypedError);\n\t\n\texports.BadRequestError = BadRequestError = (function(superClass) {\n\t  extend(BadRequestError, superClass);\n\t\n\t  function BadRequestError() {\n\t    return BadRequestError.__super__.constructor.apply(this, arguments);\n\t  }\n\t\n\t  return BadRequestError;\n\t\n\t})(TypedError);\n\t\n\todataParser = ODataParser.createInstance();\n\t\n\todata2AbstractSQL = {};\n\t\n\tmemoizedOdata2AbstractSQL = (function() {\n\t  var _memoizedOdata2AbstractSQL;\n\t  _memoizedOdata2AbstractSQL = memoize(function(vocabulary, odataQuery, method, bodyKeys) {\n\t    var e;\n\t    try {\n\t      return odata2AbstractSQL[vocabulary].match(odataQuery, 'Process', [method, bodyKeys]);\n\t    } catch (error) {\n\t      e = error;\n\t      console.error('Failed to translate url: ', JSON.stringify(odataQuery, null, '\\t'), method, e, e.stack);\n\t      throw new TranslationError('Failed to translate url');\n\t    }\n\t  }, {\n\t    normalizer: JSON.stringify\n\t  });\n\t  return function(vocabulary, odataQuery, method, body) {\n\t    var extraBodyVars, ref, tree;\n\t    ref = _memoizedOdata2AbstractSQL(vocabulary, odataQuery, method, _.keys(body).sort()), tree = ref.tree, extraBodyVars = ref.extraBodyVars;\n\t    _.assign(body, extraBodyVars);\n\t    return tree;\n\t  };\n\t})();\n\t\n\texports.metadataEndpoints = metadataEndpoints = ['$metadata', '$serviceroot'];\n\t\n\tnotParsingError = function(e) {\n\t  return !(e instanceof ParsingError);\n\t};\n\t\n\texports.parseODataURI = function(req) {\n\t  return Promise[\"try\"](function() {\n\t    var apiRoot, body, method, odata, url;\n\t    method = req.method, url = req.url, body = req.body;\n\t    url = url.split('/');\n\t    apiRoot = url[1];\n\t    if ((apiRoot == null) || (odata2AbstractSQL[apiRoot] == null)) {\n\t      throw new ParsingError(\"No such api root: '\" + apiRoot + \"'\");\n\t    }\n\t    url = '/' + url.slice(2).join('/');\n\t    odata = odataParser.matchAll(url, 'Process');\n\t    return [\n\t      {\n\t        method: method,\n\t        vocabulary: apiRoot,\n\t        resourceName: odata.tree.resource,\n\t        odataBinds: odata.binds,\n\t        odataQuery: odata.tree,\n\t        values: body,\n\t        custom: {}\n\t      }\n\t    ];\n\t  })[\"catch\"](SyntaxError, function() {\n\t    throw new BadRequestError(\"Malformed url: '\" + url + \"'\");\n\t  })[\"catch\"](notParsingError, function(e) {\n\t    console.error('Failed to parse url: ', method, url, e, e.stack);\n\t    throw new ParsingError(\"Failed to parse url: '\" + url + \"'\");\n\t  });\n\t};\n\t\n\texports.translateUri = function(arg) {\n\t  var abstractSqlQuery, custom, isMetadataEndpoint, method, odataBinds, odataQuery, resourceName, values, vocabulary;\n\t  method = arg.method, vocabulary = arg.vocabulary, resourceName = arg.resourceName, odataBinds = arg.odataBinds, odataQuery = arg.odataQuery, values = arg.values, custom = arg.custom;\n\t  isMetadataEndpoint = indexOf.call(metadataEndpoints, resourceName) >= 0 || method === 'OPTIONS';\n\t  if (!isMetadataEndpoint) {\n\t    abstractSqlQuery = memoizedOdata2AbstractSQL(vocabulary, odataQuery, method, values);\n\t    return {\n\t      method: method,\n\t      vocabulary: vocabulary,\n\t      resourceName: resourceName,\n\t      odataBinds: odataBinds,\n\t      odataQuery: odataQuery,\n\t      abstractSqlQuery: abstractSqlQuery,\n\t      values: values,\n\t      custom: custom\n\t    };\n\t  }\n\t  return {\n\t    method: method,\n\t    vocabulary: vocabulary,\n\t    resourceName: resourceName,\n\t    custom: custom\n\t  };\n\t};\n\t\n\texports.addClientModel = function(vocab, clientModel) {\n\t  odata2AbstractSQL[vocab] = OData2AbstractSQL.createInstance();\n\t  return odata2AbstractSQL[vocab].setClientModel(clientModel);\n\t};\n\t\n\texports.deleteClientModel = function(vocab, clientModel) {\n\t  return delete odata2AbstractSQL[vocab];\n\t};\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!function(root, factory) {\n\t     true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__, exports, __webpack_require__(28) ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : \"object\" == typeof exports ? factory(require, exports, require(\"ometa-js\").core) : factory(function(moduleName) {\n\t        return root[moduleName];\n\t    }, root, root.OMeta);\n\t}(this, function(require, exports, OMeta) {\n\t    var ODataParser = exports.ODataParser = OMeta._extend({\n\t        Process: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, tree;\n\t            this.reset();\n\t            tree = this._apply(\"OData\");\n\t            return {\n\t                tree: tree,\n\t                binds: this.binds\n\t            };\n\t        },\n\t        ProcessRule: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, result, rule;\n\t            rule = this.anything();\n\t            this._form(function() {\n\t                return result = this._applyWithArgs(\"apply\", rule);\n\t            });\n\t            this._apply(\"end\");\n\t            return result;\n\t        },\n\t        OData: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, model;\n\t            return this._or(function() {\n\t                model = this._apply(\"PathSegment\");\n\t                this._apply(\"end\");\n\t                return model;\n\t            }, function() {\n\t                switch (this.anything()) {\n\t                  case \"/\":\n\t                    return this._or(function() {\n\t                        switch (this.anything()) {\n\t                          case \"$\":\n\t                            this._applyWithArgs(\"exactly\", \"m\");\n\t                            this._applyWithArgs(\"exactly\", \"e\");\n\t                            this._applyWithArgs(\"exactly\", \"t\");\n\t                            this._applyWithArgs(\"exactly\", \"a\");\n\t                            this._applyWithArgs(\"exactly\", \"d\");\n\t                            this._applyWithArgs(\"exactly\", \"a\");\n\t                            this._applyWithArgs(\"exactly\", \"t\");\n\t                            this._applyWithArgs(\"exactly\", \"a\");\n\t                            return {\n\t                                resource: \"$metadata\"\n\t                            };\n\t\n\t                          default:\n\t                            throw this._fail();\n\t                        }\n\t                    }, function() {\n\t                        this._apply(\"end\");\n\t                        return {\n\t                            resource: \"$serviceroot\"\n\t                        };\n\t                    });\n\t\n\t                  default:\n\t                    throw this._fail();\n\t                }\n\t            });\n\t        },\n\t        QueryOptions: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, options;\n\t            this._applyWithArgs(\"exactly\", \"?\");\n\t            options = this._applyWithArgs(\"listOf\", \"QueryOption\", \"&\");\n\t            return this._applyWithArgs(\"ParseOptionsObject\", options);\n\t        },\n\t        QueryOption: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._apply(\"SortOption\");\n\t            }, function() {\n\t                return this._apply(\"TopOption\");\n\t            }, function() {\n\t                return this._apply(\"SkipOption\");\n\t            }, function() {\n\t                return this._apply(\"ExpandOption\");\n\t            }, function() {\n\t                return this._apply(\"InlineCountOption\");\n\t            }, function() {\n\t                return this._apply(\"CountOption\");\n\t            }, function() {\n\t                return this._apply(\"FilterByOption\");\n\t            }, function() {\n\t                return this._apply(\"FormatOption\");\n\t            }, function() {\n\t                return this._apply(\"SelectOption\");\n\t            }, function() {\n\t                return this._apply(\"OperationParam\");\n\t            });\n\t        },\n\t        OperationParam: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, name, value;\n\t            name = this._apply(\"Text\");\n\t            this._applyWithArgs(\"exactly\", \"=\");\n\t            value = this._apply(\"Text\");\n\t            return {\n\t                name: name,\n\t                value: value\n\t            };\n\t        },\n\t        SortOption: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, properties;\n\t            this._applyWithArgs(\"RecognisedOption\", \"$orderby=\");\n\t            properties = this._applyWithArgs(\"listOf\", \"SortProperty\", \",\");\n\t            return {\n\t                name: \"$orderby\",\n\t                value: {\n\t                    properties: properties\n\t                }\n\t            };\n\t        },\n\t        SortProperty: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, order, property;\n\t            property = this._apply(\"PropertyPath\");\n\t            this._apply(\"spaces\");\n\t            order = this._or(function() {\n\t                switch (this.anything()) {\n\t                  case \"a\":\n\t                    this._applyWithArgs(\"exactly\", \"s\");\n\t                    this._applyWithArgs(\"exactly\", \"c\");\n\t                    return \"asc\";\n\t\n\t                  case \"d\":\n\t                    this._applyWithArgs(\"exactly\", \"e\");\n\t                    this._applyWithArgs(\"exactly\", \"s\");\n\t                    this._applyWithArgs(\"exactly\", \"c\");\n\t                    return \"desc\";\n\t\n\t                  default:\n\t                    throw this._fail();\n\t                }\n\t            }, function() {\n\t                return \"desc\";\n\t            });\n\t            property.order = order;\n\t            return property;\n\t        },\n\t        TopOption: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, value;\n\t            this._applyWithArgs(\"RecognisedOption\", \"$top=\");\n\t            value = this._apply(\"UnsignedInteger\");\n\t            return {\n\t                name: \"$top\",\n\t                value: value\n\t            };\n\t        },\n\t        SkipOption: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, value;\n\t            this._applyWithArgs(\"RecognisedOption\", \"$skip=\");\n\t            value = this._apply(\"UnsignedInteger\");\n\t            return {\n\t                name: \"$skip\",\n\t                value: value\n\t            };\n\t        },\n\t        InlineCountOption: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, value;\n\t            this._applyWithArgs(\"RecognisedOption\", \"$inlinecount=\");\n\t            value = this._or(function() {\n\t                switch (this.anything()) {\n\t                  case \"a\":\n\t                    this._applyWithArgs(\"exactly\", \"l\");\n\t                    this._applyWithArgs(\"exactly\", \"l\");\n\t                    this._applyWithArgs(\"exactly\", \"p\");\n\t                    this._applyWithArgs(\"exactly\", \"a\");\n\t                    this._applyWithArgs(\"exactly\", \"g\");\n\t                    this._applyWithArgs(\"exactly\", \"e\");\n\t                    this._applyWithArgs(\"exactly\", \"s\");\n\t                    return \"allpages\";\n\t\n\t                  case \"n\":\n\t                    this._applyWithArgs(\"exactly\", \"o\");\n\t                    this._applyWithArgs(\"exactly\", \"n\");\n\t                    this._applyWithArgs(\"exactly\", \"e\");\n\t                    return \"none\";\n\t\n\t                  default:\n\t                    throw this._fail();\n\t                }\n\t            }, function() {\n\t                this._apply(\"Text\");\n\t                return \"\";\n\t            });\n\t            return {\n\t                name: \"$inlinecount\",\n\t                value: value\n\t            };\n\t        },\n\t        CountOption: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, value;\n\t            this._applyWithArgs(\"RecognisedOption\", \"$count=\");\n\t            value = this._apply(\"Boolean\");\n\t            return {\n\t                name: \"$count\",\n\t                value: value\n\t            };\n\t        },\n\t        ExpandOption: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, properties;\n\t            this._applyWithArgs(\"RecognisedOption\", \"$expand=\");\n\t            properties = this._apply(\"ExpandPropertyPathList\");\n\t            return {\n\t                name: \"$expand\",\n\t                value: {\n\t                    properties: properties\n\t                }\n\t            };\n\t        },\n\t        SelectOption: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, properties, value;\n\t            this._applyWithArgs(\"RecognisedOption\", \"$select=\");\n\t            value = this._or(function() {\n\t                switch (this.anything()) {\n\t                  case \"*\":\n\t                    return \"*\";\n\t\n\t                  default:\n\t                    throw this._fail();\n\t                }\n\t            }, function() {\n\t                properties = this._apply(\"PropertyPathList\");\n\t                return {\n\t                    properties: properties\n\t                };\n\t            });\n\t            return {\n\t                name: \"$select\",\n\t                value: value\n\t            };\n\t        },\n\t        FilterByOption: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, expr;\n\t            this._applyWithArgs(\"RecognisedOption\", \"$filter=\");\n\t            expr = this._apply(\"FilterByExpression\");\n\t            return {\n\t                name: \"$filter\",\n\t                value: expr\n\t            };\n\t        },\n\t        FormatOption: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, type;\n\t            this._applyWithArgs(\"RecognisedOption\", \"$format=\");\n\t            type = this._apply(\"ContentType\");\n\t            return {\n\t                name: \"$format\",\n\t                value: type\n\t            };\n\t        },\n\t        RecognisedOption: function(name) {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._applyWithArgs(\"seq\", name);\n\t        },\n\t        FilterByExpression: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._apply(\"FilterAndExpression\");\n\t        },\n\t        FilterAndExpression: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, lhs, op, rhs;\n\t            return this._or(function() {\n\t                lhs = this._apply(\"FilterAndExpression\");\n\t                op = this._apply(\"FilterAndOperand\");\n\t                rhs = this._apply(\"FilterLogicalExpression\");\n\t                return this._or(function() {\n\t                    this._pred(op == lhs[0]);\n\t                    return [ op ].concat(lhs.slice(1), [ rhs ]);\n\t                }, function() {\n\t                    return [ op, lhs, rhs ];\n\t                });\n\t            }, function() {\n\t                return this._apply(\"FilterLogicalExpression\");\n\t            });\n\t        },\n\t        FilterLogicalExpression: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, lhs, op, rhs;\n\t            return this._or(function() {\n\t                lhs = this._apply(\"FilterLogicalExpression\");\n\t                op = this._apply(\"FilterByOperand\");\n\t                rhs = this._apply(\"FilterSubExpression\");\n\t                return [ op, lhs, rhs ];\n\t            }, function() {\n\t                return this._apply(\"FilterSubExpression\");\n\t            });\n\t        },\n\t        FilterSubExpression: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, lhs, op, rhs;\n\t            return this._or(function() {\n\t                lhs = this._apply(\"FilterSubExpression\");\n\t                this._apply(\"spaces\");\n\t                op = this._applyWithArgs(\"FilterRecognisedMathOperand\", \"sub\");\n\t                this._apply(\"spaces\");\n\t                rhs = this._apply(\"FilterAddExpression\");\n\t                return [ op, lhs, rhs ];\n\t            }, function() {\n\t                return this._apply(\"FilterAddExpression\");\n\t            });\n\t        },\n\t        FilterAddExpression: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, lhs, op, rhs;\n\t            return this._or(function() {\n\t                lhs = this._apply(\"FilterAddExpression\");\n\t                this._apply(\"spaces\");\n\t                op = this._applyWithArgs(\"FilterRecognisedMathOperand\", \"add\");\n\t                this._apply(\"spaces\");\n\t                rhs = this._apply(\"FilterModExpression\");\n\t                return [ op, lhs, rhs ];\n\t            }, function() {\n\t                return this._apply(\"FilterModExpression\");\n\t            });\n\t        },\n\t        FilterModExpression: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, lhs, op, rhs;\n\t            return this._or(function() {\n\t                lhs = this._apply(\"FilterModExpression\");\n\t                this._apply(\"spaces\");\n\t                op = this._applyWithArgs(\"FilterRecognisedMathOperand\", \"mod\");\n\t                this._apply(\"spaces\");\n\t                rhs = this._apply(\"FilterDivExpression\");\n\t                return [ op, lhs, rhs ];\n\t            }, function() {\n\t                return this._apply(\"FilterDivExpression\");\n\t            });\n\t        },\n\t        FilterDivExpression: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, lhs, op, rhs;\n\t            return this._or(function() {\n\t                lhs = this._apply(\"FilterDivExpression\");\n\t                this._apply(\"spaces\");\n\t                op = this._applyWithArgs(\"FilterRecognisedMathOperand\", \"div\");\n\t                this._apply(\"spaces\");\n\t                rhs = this._apply(\"FilterMulExpression\");\n\t                return [ op, lhs, rhs ];\n\t            }, function() {\n\t                return this._apply(\"FilterMulExpression\");\n\t            });\n\t        },\n\t        FilterMulExpression: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, lhs, op, rhs;\n\t            return this._or(function() {\n\t                lhs = this._apply(\"FilterMulExpression\");\n\t                this._apply(\"spaces\");\n\t                op = this._applyWithArgs(\"FilterRecognisedMathOperand\", \"mul\");\n\t                this._apply(\"spaces\");\n\t                rhs = this._apply(\"FilterByValue\");\n\t                return [ op, lhs, rhs ];\n\t            }, function() {\n\t                return this._apply(\"FilterByValue\");\n\t            });\n\t        },\n\t        FilterByValue: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._apply(\"FilterMethodCallExpression\");\n\t            }, function() {\n\t                return this._apply(\"FilterNegateExpression\");\n\t            }, function() {\n\t                return this._apply(\"NumberBind\");\n\t            }, function() {\n\t                return this._apply(\"Null\");\n\t            }, function() {\n\t                return this._apply(\"BooleanBind\");\n\t            }, function() {\n\t                return this._apply(\"QuotedTextBind\");\n\t            }, function() {\n\t                return this._apply(\"DateBind\");\n\t            }, function() {\n\t                return this._apply(\"Duration\");\n\t            }, function() {\n\t                return this._apply(\"LambdaPropertyPath\");\n\t            }, function() {\n\t                return this._apply(\"PropertyPath\");\n\t            }, function() {\n\t                return this._apply(\"GroupedPrecedenceExpression\");\n\t            });\n\t        },\n\t        GroupedPrecedenceExpression: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, expr;\n\t            this._applyWithArgs(\"exactly\", \"(\");\n\t            this._apply(\"spaces\");\n\t            expr = this._apply(\"FilterByExpression\");\n\t            this._apply(\"spaces\");\n\t            this._applyWithArgs(\"exactly\", \")\");\n\t            return expr;\n\t        },\n\t        FilterRecognisedMathOperand: function(name) {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._applyWithArgs(\"seq\", name);\n\t        },\n\t        FilterAndOperand: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, op;\n\t            this._apply(\"spaces\");\n\t            op = function() {\n\t                switch (this.anything()) {\n\t                  case \"a\":\n\t                    this._applyWithArgs(\"exactly\", \"n\");\n\t                    this._applyWithArgs(\"exactly\", \"d\");\n\t                    return \"and\";\n\t\n\t                  case \"o\":\n\t                    this._applyWithArgs(\"exactly\", \"r\");\n\t                    return \"or\";\n\t\n\t                  default:\n\t                    throw this._fail();\n\t                }\n\t            }.call(this);\n\t            this._apply(\"spaces\");\n\t            return op;\n\t        },\n\t        FilterByOperand: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, op;\n\t            this._apply(\"spaces\");\n\t            op = function() {\n\t                switch (this.anything()) {\n\t                  case \"e\":\n\t                    this._applyWithArgs(\"exactly\", \"q\");\n\t                    return \"eq\";\n\t\n\t                  case \"g\":\n\t                    switch (this.anything()) {\n\t                      case \"e\":\n\t                        return \"ge\";\n\t\n\t                      case \"t\":\n\t                        return \"gt\";\n\t\n\t                      default:\n\t                        throw this._fail();\n\t                    }\n\t\n\t                  case \"l\":\n\t                    switch (this.anything()) {\n\t                      case \"e\":\n\t                        return \"le\";\n\t\n\t                      case \"t\":\n\t                        return \"lt\";\n\t\n\t                      default:\n\t                        throw this._fail();\n\t                    }\n\t\n\t                  case \"n\":\n\t                    this._applyWithArgs(\"exactly\", \"e\");\n\t                    return \"ne\";\n\t\n\t                  default:\n\t                    throw this._fail();\n\t                }\n\t            }.call(this);\n\t            this._apply(\"spaces\");\n\t            return op;\n\t        },\n\t        FilterNegateExpression: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, expr, value;\n\t            this._apply(\"spaces\");\n\t            this._applyWithArgs(\"exactly\", \"n\");\n\t            this._applyWithArgs(\"exactly\", \"o\");\n\t            this._applyWithArgs(\"exactly\", \"t\");\n\t            this._apply(\"spaces\");\n\t            value = this._or(function() {\n\t                return this._apply(\"FilterByValue\");\n\t            }, function() {\n\t                switch (this.anything()) {\n\t                  case \"(\":\n\t                    this._apply(\"spaces\");\n\t                    expr = this._apply(\"FilterByExpression\");\n\t                    this._apply(\"spaces\");\n\t                    this._applyWithArgs(\"exactly\", \")\");\n\t                    return expr;\n\t\n\t                  default:\n\t                    throw this._fail();\n\t                }\n\t            });\n\t            return [ \"not\", value ];\n\t        },\n\t        FilterMethodCallExpression: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, method;\n\t            method = this._or(function() {\n\t                return this._apply(\"ContainsMethodCall\");\n\t            }, function() {\n\t                return this._apply(\"EndsWithMethodCall\");\n\t            }, function() {\n\t                return this._apply(\"StartsWithMethodCall\");\n\t            }, function() {\n\t                return this._apply(\"LengthMethodCall\");\n\t            }, function() {\n\t                return this._apply(\"IndexOfMethodCall\");\n\t            }, function() {\n\t                return this._apply(\"SubstringMethodCall\");\n\t            }, function() {\n\t                return this._apply(\"ToLowerMethodCall\");\n\t            }, function() {\n\t                return this._apply(\"ToUpperMethodCall\");\n\t            }, function() {\n\t                return this._apply(\"TrimMethodCall\");\n\t            }, function() {\n\t                return this._apply(\"ConcatMethodCall\");\n\t            }, function() {\n\t                return this._apply(\"YearMethodCall\");\n\t            }, function() {\n\t                return this._apply(\"MonthMethodCall\");\n\t            }, function() {\n\t                return this._apply(\"DayMethodCall\");\n\t            }, function() {\n\t                return this._apply(\"HourMethodCall\");\n\t            }, function() {\n\t                return this._apply(\"MinuteMethodCall\");\n\t            }, function() {\n\t                return this._apply(\"SecondMethodCall\");\n\t            }, function() {\n\t                return this._apply(\"FractionalSecondsMethodCall\");\n\t            }, function() {\n\t                return this._apply(\"DateMethodCall\");\n\t            }, function() {\n\t                return this._apply(\"TimeMethodCall\");\n\t            }, function() {\n\t                return this._apply(\"TotalOffsetMinutesMethodCall\");\n\t            }, function() {\n\t                return this._apply(\"NowMethodCall\");\n\t            }, function() {\n\t                return this._apply(\"MaxDateTimeMethodCall\");\n\t            }, function() {\n\t                return this._apply(\"MinDateTimeMethodCall\");\n\t            }, function() {\n\t                return this._apply(\"TotalSecondsMethodCall\");\n\t            }, function() {\n\t                return this._apply(\"RoundMethodCall\");\n\t            }, function() {\n\t                return this._apply(\"FloorMethodCall\");\n\t            }, function() {\n\t                return this._apply(\"CeilingMethodCall\");\n\t            }, function() {\n\t                return this._apply(\"IsOfMethodCall\");\n\t            }, function() {\n\t                return this._apply(\"CastMethodCall\");\n\t            }, function() {\n\t                return this._apply(\"SubstringOfMethodCall\");\n\t            }, function() {\n\t                return this._apply(\"ReplaceMethodCall\");\n\t            });\n\t            return [ \"call\", method ];\n\t        },\n\t        ContainsMethodCall: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._applyWithArgs(\"MethodCall\", \"contains\", 2);\n\t        },\n\t        EndsWithMethodCall: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._applyWithArgs(\"MethodCall\", \"endswith\", 2);\n\t        },\n\t        StartsWithMethodCall: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._applyWithArgs(\"MethodCall\", \"startswith\", 2);\n\t        },\n\t        LengthMethodCall: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._applyWithArgs(\"MethodCall\", \"length\", 1);\n\t        },\n\t        IndexOfMethodCall: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._applyWithArgs(\"MethodCall\", \"indexof\", 2);\n\t        },\n\t        SubstringMethodCall: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._applyWithArgs(\"MethodCall\", \"substring\", 2);\n\t            }, function() {\n\t                return this._applyWithArgs(\"MethodCall\", \"substring\", 3);\n\t            });\n\t        },\n\t        ToLowerMethodCall: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._applyWithArgs(\"MethodCall\", \"tolower\", 1);\n\t        },\n\t        ToUpperMethodCall: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._applyWithArgs(\"MethodCall\", \"toupper\", 1);\n\t        },\n\t        TrimMethodCall: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._applyWithArgs(\"MethodCall\", \"trim\", 1);\n\t        },\n\t        ConcatMethodCall: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._applyWithArgs(\"MethodCall\", \"concat\", 2);\n\t        },\n\t        YearMethodCall: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._applyWithArgs(\"MethodCall\", \"year\", 1);\n\t        },\n\t        MonthMethodCall: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._applyWithArgs(\"MethodCall\", \"month\", 1);\n\t        },\n\t        DayMethodCall: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._applyWithArgs(\"MethodCall\", \"day\", 1);\n\t        },\n\t        HourMethodCall: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._applyWithArgs(\"MethodCall\", \"hour\", 1);\n\t        },\n\t        MinuteMethodCall: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._applyWithArgs(\"MethodCall\", \"minute\", 1);\n\t        },\n\t        SecondMethodCall: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._applyWithArgs(\"MethodCall\", \"second\", 1);\n\t        },\n\t        FractionalSecondsMethodCall: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._applyWithArgs(\"MethodCall\", \"fractionalseconds\", 1);\n\t        },\n\t        DateMethodCall: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._applyWithArgs(\"MethodCall\", \"date\", 1);\n\t        },\n\t        TimeMethodCall: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._applyWithArgs(\"MethodCall\", \"time\", 1);\n\t        },\n\t        TotalOffsetMinutesMethodCall: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._applyWithArgs(\"MethodCall\", \"totaloffsetminutes\", 1);\n\t        },\n\t        NowMethodCall: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._applyWithArgs(\"MethodCall\", \"now\", 0);\n\t        },\n\t        MaxDateTimeMethodCall: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._applyWithArgs(\"MethodCall\", \"maxdatetime\", 0);\n\t        },\n\t        MinDateTimeMethodCall: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._applyWithArgs(\"MethodCall\", \"mindatetime\", 0);\n\t        },\n\t        TotalSecondsMethodCall: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._applyWithArgs(\"MethodCall\", \"totalseconds\", 1);\n\t        },\n\t        RoundMethodCall: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._applyWithArgs(\"MethodCall\", \"round\", 1);\n\t        },\n\t        FloorMethodCall: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._applyWithArgs(\"MethodCall\", \"floor\", 1);\n\t        },\n\t        CeilingMethodCall: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._applyWithArgs(\"MethodCall\", \"ceiling\", 1);\n\t        },\n\t        IsOfMethodCall: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._applyWithArgs(\"MethodCall\", \"isof\", 1);\n\t            }, function() {\n\t                return this._applyWithArgs(\"MethodCall\", \"isof\", 2);\n\t            });\n\t        },\n\t        CastMethodCall: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._applyWithArgs(\"MethodCall\", \"cast\", 1);\n\t            }, function() {\n\t                return this._applyWithArgs(\"MethodCall\", \"cast\", 2);\n\t            });\n\t        },\n\t        SubstringOfMethodCall: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._applyWithArgs(\"MethodCall\", \"substringof\", 2);\n\t        },\n\t        ReplaceMethodCall: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._applyWithArgs(\"MethodCall\", \"replace\", 3);\n\t        },\n\t        MethodCall: function(name, arity) {\n\t            var $elf = this, _fromIdx = this.input.idx, args;\n\t            this._applyWithArgs(\"seq\", name);\n\t            this._applyWithArgs(\"exactly\", \"(\");\n\t            this._apply(\"spaces\");\n\t            args = this._applyWithArgs(\"numberOf\", \"FilterByExpression\", arity, \",\");\n\t            this._apply(\"spaces\");\n\t            this._applyWithArgs(\"exactly\", \")\");\n\t            return {\n\t                args: args,\n\t                method: name\n\t            };\n\t        },\n\t        LambdaMethodCall: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, expression, identifier, name;\n\t            name = function() {\n\t                switch (this.anything()) {\n\t                  case \"a\":\n\t                    switch (this.anything()) {\n\t                      case \"l\":\n\t                        this._applyWithArgs(\"exactly\", \"l\");\n\t                        return \"all\";\n\t\n\t                      case \"n\":\n\t                        this._applyWithArgs(\"exactly\", \"y\");\n\t                        return \"any\";\n\t\n\t                      default:\n\t                        throw this._fail();\n\t                    }\n\t\n\t                  default:\n\t                    throw this._fail();\n\t                }\n\t            }.call(this);\n\t            this._applyWithArgs(\"exactly\", \"(\");\n\t            this._apply(\"spaces\");\n\t            identifier = this._apply(\"ResourceName\");\n\t            this._applyWithArgs(\"exactly\", \":\");\n\t            expression = this._apply(\"FilterByExpression\");\n\t            this._apply(\"spaces\");\n\t            this._applyWithArgs(\"exactly\", \")\");\n\t            return {\n\t                expression: expression,\n\t                identifier: identifier,\n\t                method: name\n\t            };\n\t        },\n\t        PropertyPathList: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._applyWithArgs(\"listOf\", \"PropertyPath\", \",\");\n\t        },\n\t        PropertyPath: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, next, resource;\n\t            resource = this._apply(\"ResourceName\");\n\t            this._opt(function() {\n\t                this._applyWithArgs(\"exactly\", \"/\");\n\t                return next = this._apply(\"PropertyPath\");\n\t            });\n\t            return {\n\t                name: resource,\n\t                property: next\n\t            };\n\t        },\n\t        ExpandPropertyPathList: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._applyWithArgs(\"listOf\", \"ExpandPropertyPath\", \",\");\n\t        },\n\t        ExpandPropertyPath: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, count, next, options, optionsObj, resource;\n\t            resource = this._apply(\"ResourceName\");\n\t            count = this._opt(function() {\n\t                this._applyWithArgs(\"exactly\", \"/\");\n\t                this._applyWithArgs(\"exactly\", \"$\");\n\t                this._applyWithArgs(\"exactly\", \"c\");\n\t                this._applyWithArgs(\"exactly\", \"o\");\n\t                this._applyWithArgs(\"exactly\", \"u\");\n\t                this._applyWithArgs(\"exactly\", \"n\");\n\t                this._applyWithArgs(\"exactly\", \"t\");\n\t                return !0;\n\t            });\n\t            this._opt(function() {\n\t                this._applyWithArgs(\"exactly\", \"(\");\n\t                options = this._applyWithArgs(\"listOf\", \"ExpandPathOption\", \"&\");\n\t                optionsObj = this._applyWithArgs(\"ParseOptionsObject\", options);\n\t                return this._applyWithArgs(\"exactly\", \")\");\n\t            });\n\t            this._opt(function() {\n\t                this._applyWithArgs(\"exactly\", \"/\");\n\t                return next = this._apply(\"PropertyPath\");\n\t            });\n\t            return {\n\t                name: resource,\n\t                property: next,\n\t                count: count,\n\t                options: optionsObj\n\t            };\n\t        },\n\t        ExpandPathOption: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._apply(\"SortOption\");\n\t            }, function() {\n\t                return this._apply(\"TopOption\");\n\t            }, function() {\n\t                return this._apply(\"SkipOption\");\n\t            }, function() {\n\t                return this._apply(\"ExpandOption\");\n\t            }, function() {\n\t                return this._apply(\"InlineCountOption\");\n\t            }, function() {\n\t                return this._apply(\"CountOption\");\n\t            }, function() {\n\t                return this._apply(\"FilterByOption\");\n\t            }, function() {\n\t                return this._apply(\"FormatOption\");\n\t            }, function() {\n\t                return this._apply(\"SelectOption\");\n\t            }, function() {\n\t                return this._apply(\"OperationParam\");\n\t            });\n\t        },\n\t        LambdaPropertyPath: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, lambda, next, resource;\n\t            resource = this._apply(\"ResourceName\");\n\t            this._applyWithArgs(\"exactly\", \"/\");\n\t            return this._or(function() {\n\t                next = this._apply(\"LambdaPropertyPath\");\n\t                return {\n\t                    name: resource,\n\t                    property: next\n\t                };\n\t            }, function() {\n\t                lambda = this._apply(\"LambdaMethodCall\");\n\t                return {\n\t                    name: resource,\n\t                    lambda: lambda\n\t                };\n\t            });\n\t        },\n\t        Key: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, key;\n\t            this._applyWithArgs(\"exactly\", \"(\");\n\t            key = this._or(function() {\n\t                return this._apply(\"NumberBind\");\n\t            }, function() {\n\t                return this._apply(\"QuotedTextBind\");\n\t            });\n\t            this._applyWithArgs(\"exactly\", \")\");\n\t            return key;\n\t        },\n\t        PathSegment: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, count, key, link, next, options, resource;\n\t            this._applyWithArgs(\"exactly\", \"/\");\n\t            resource = this._apply(\"ResourceName\");\n\t            this._opt(function() {\n\t                return this._or(function() {\n\t                    key = this._apply(\"Key\");\n\t                    return this._opt(function() {\n\t                        return this._or(function() {\n\t                            switch (this.anything()) {\n\t                              case \"/\":\n\t                                this._applyWithArgs(\"exactly\", \"$\");\n\t                                this._applyWithArgs(\"exactly\", \"l\");\n\t                                this._applyWithArgs(\"exactly\", \"i\");\n\t                                this._applyWithArgs(\"exactly\", \"n\");\n\t                                this._applyWithArgs(\"exactly\", \"k\");\n\t                                this._applyWithArgs(\"exactly\", \"s\");\n\t                                return link = this._apply(\"SubPathSegment\");\n\t\n\t                              default:\n\t                                throw this._fail();\n\t                            }\n\t                        }, function() {\n\t                            return next = this._apply(\"SubPathSegment\");\n\t                        });\n\t                    });\n\t                }, function() {\n\t                    return count = this._opt(function() {\n\t                        this._applyWithArgs(\"exactly\", \"/\");\n\t                        this._applyWithArgs(\"exactly\", \"$\");\n\t                        this._applyWithArgs(\"exactly\", \"c\");\n\t                        this._applyWithArgs(\"exactly\", \"o\");\n\t                        this._applyWithArgs(\"exactly\", \"u\");\n\t                        this._applyWithArgs(\"exactly\", \"n\");\n\t                        this._applyWithArgs(\"exactly\", \"t\");\n\t                        return !0;\n\t                    });\n\t                });\n\t            });\n\t            options = this._opt(function() {\n\t                return this._apply(\"QueryOptions\");\n\t            });\n\t            return {\n\t                resource: resource,\n\t                key: key,\n\t                link: link,\n\t                property: next,\n\t                count: count,\n\t                options: options\n\t            };\n\t        },\n\t        SubPathSegment: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, count, key, link, next, options, resource;\n\t            this._applyWithArgs(\"exactly\", \"/\");\n\t            resource = this._apply(\"ResourceName\");\n\t            key = this._opt(function() {\n\t                return this._apply(\"Key\");\n\t            });\n\t            this._opt(function() {\n\t                return this._or(function() {\n\t                    switch (this.anything()) {\n\t                      case \"/\":\n\t                        this._applyWithArgs(\"exactly\", \"$\");\n\t                        this._applyWithArgs(\"exactly\", \"l\");\n\t                        this._applyWithArgs(\"exactly\", \"i\");\n\t                        this._applyWithArgs(\"exactly\", \"n\");\n\t                        this._applyWithArgs(\"exactly\", \"k\");\n\t                        this._applyWithArgs(\"exactly\", \"s\");\n\t                        return link = this._apply(\"SubPathSegment\");\n\t\n\t                      default:\n\t                        throw this._fail();\n\t                    }\n\t                }, function() {\n\t                    return next = this._apply(\"SubPathSegment\");\n\t                });\n\t            });\n\t            count = this._opt(function() {\n\t                this._applyWithArgs(\"exactly\", \"/\");\n\t                this._applyWithArgs(\"exactly\", \"$\");\n\t                this._applyWithArgs(\"exactly\", \"c\");\n\t                this._applyWithArgs(\"exactly\", \"o\");\n\t                this._applyWithArgs(\"exactly\", \"u\");\n\t                this._applyWithArgs(\"exactly\", \"n\");\n\t                this._applyWithArgs(\"exactly\", \"t\");\n\t                return !0;\n\t            });\n\t            options = this._opt(function() {\n\t                return this._apply(\"QueryOptions\");\n\t            });\n\t            return {\n\t                resource: resource,\n\t                key: key,\n\t                link: link,\n\t                property: next,\n\t                count: count,\n\t                options: options\n\t            };\n\t        },\n\t        ContentType: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._consumedBy(function() {\n\t                this._many1(function() {\n\t                    return this._apply(\"letter\");\n\t                });\n\t                this._applyWithArgs(\"exactly\", \"/\");\n\t                this._many1(function() {\n\t                    return this._apply(\"letter\");\n\t                });\n\t                return this._opt(function() {\n\t                    this._applyWithArgs(\"exactly\", \"+\");\n\t                    return this._many1(function() {\n\t                        return this._apply(\"letter\");\n\t                    });\n\t                });\n\t            });\n\t        },\n\t        ResourceName: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, resourceName;\n\t            resourceName = this._consumedBy(function() {\n\t                return this._many1(function() {\n\t                    this._not(function() {\n\t                        return this._or(function() {\n\t                            return this._apply(\"ReservedUriComponent\");\n\t                        }, function() {\n\t                            return this._apply(\"space\");\n\t                        });\n\t                    });\n\t                    return this.anything();\n\t                });\n\t            });\n\t            return decodeURIComponent(resourceName);\n\t        },\n\t        Number: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._apply(\"Decimal\");\n\t            }, function() {\n\t                return this._apply(\"Integer\");\n\t            });\n\t        },\n\t        Decimal: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, d, sign;\n\t            sign = this._apply(\"Sign\");\n\t            d = this._consumedBy(function() {\n\t                this._many1(function() {\n\t                    return this._apply(\"digit\");\n\t                });\n\t                this._applyWithArgs(\"exactly\", \".\");\n\t                return this._many1(function() {\n\t                    return this._apply(\"digit\");\n\t                });\n\t            });\n\t            return Number(sign + d);\n\t        },\n\t        Integer: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, d, sign;\n\t            sign = this._apply(\"Sign\");\n\t            d = this._consumedBy(function() {\n\t                return this._many1(function() {\n\t                    return this._apply(\"digit\");\n\t                });\n\t            });\n\t            return parseInt(sign + d, 10);\n\t        },\n\t        UnsignedInteger: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, d;\n\t            d = this._consumedBy(function() {\n\t                return this._many1(function() {\n\t                    return this._apply(\"digit\");\n\t                });\n\t            });\n\t            return parseInt(d, 10);\n\t        },\n\t        Null: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            this._applyWithArgs(\"exactly\", \"n\");\n\t            this._applyWithArgs(\"exactly\", \"u\");\n\t            this._applyWithArgs(\"exactly\", \"l\");\n\t            this._applyWithArgs(\"exactly\", \"l\");\n\t            return null;\n\t        },\n\t        Boolean: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._apply(\"True\");\n\t            }, function() {\n\t                return this._apply(\"False\");\n\t            });\n\t        },\n\t        True: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            this._applyWithArgs(\"exactly\", \"t\");\n\t            this._applyWithArgs(\"exactly\", \"r\");\n\t            this._applyWithArgs(\"exactly\", \"u\");\n\t            this._applyWithArgs(\"exactly\", \"e\");\n\t            return !0;\n\t        },\n\t        False: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            this._applyWithArgs(\"exactly\", \"f\");\n\t            this._applyWithArgs(\"exactly\", \"a\");\n\t            this._applyWithArgs(\"exactly\", \"l\");\n\t            this._applyWithArgs(\"exactly\", \"s\");\n\t            this._applyWithArgs(\"exactly\", \"e\");\n\t            return !1;\n\t        },\n\t        Duration: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, day, hour, minute, second, sign, timeExists;\n\t            this._applyWithArgs(\"exactly\", \"d\");\n\t            this._applyWithArgs(\"exactly\", \"u\");\n\t            this._applyWithArgs(\"exactly\", \"r\");\n\t            this._applyWithArgs(\"exactly\", \"a\");\n\t            this._applyWithArgs(\"exactly\", \"t\");\n\t            this._applyWithArgs(\"exactly\", \"i\");\n\t            this._applyWithArgs(\"exactly\", \"o\");\n\t            this._applyWithArgs(\"exactly\", \"n\");\n\t            this._apply(\"Apostrophe\");\n\t            sign = this._apply(\"Sign\");\n\t            this._applyWithArgs(\"exactly\", \"P\");\n\t            day = this._opt(function() {\n\t                return this._applyWithArgs(\"DurationInteger\", \"D\");\n\t            });\n\t            timeExists = this._opt(function() {\n\t                this._applyWithArgs(\"exactly\", \"T\");\n\t                hour = this._opt(function() {\n\t                    return this._applyWithArgs(\"DurationInteger\", \"H\");\n\t                });\n\t                minute = this._opt(function() {\n\t                    return this._applyWithArgs(\"DurationInteger\", \"M\");\n\t                });\n\t                second = this._opt(function() {\n\t                    return this._applyWithArgs(\"DurationNumber\", \"S\");\n\t                });\n\t                return this._pred(hour || minute || second);\n\t            });\n\t            this._pred(day || timeExists);\n\t            this._apply(\"Apostrophe\");\n\t            return {\n\t                negative: \"-\" == sign,\n\t                day: day,\n\t                hour: hour,\n\t                minute: minute,\n\t                second: second\n\t            };\n\t        },\n\t        DurationInteger: function(letter) {\n\t            var $elf = this, _fromIdx = this.input.idx, n;\n\t            n = this._apply(\"UnsignedInteger\");\n\t            this._applyWithArgs(\"exactly\", letter);\n\t            return n;\n\t        },\n\t        DurationNumber: function(letter) {\n\t            var $elf = this, _fromIdx = this.input.idx, d;\n\t            return this._or(function() {\n\t                return this._applyWithArgs(\"DurationInteger\", letter);\n\t            }, function() {\n\t                d = this._consumedBy(function() {\n\t                    this._many1(function() {\n\t                        return this._apply(\"digit\");\n\t                    });\n\t                    this._applyWithArgs(\"exactly\", \".\");\n\t                    return this._many1(function() {\n\t                        return this._apply(\"digit\");\n\t                    });\n\t                });\n\t                this._applyWithArgs(\"exactly\", letter);\n\t                return Number(d);\n\t            });\n\t        },\n\t        ReservedUriComponent: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._apply(\"GenDelim\");\n\t            }, function() {\n\t                return this._apply(\"SubDelim\");\n\t            });\n\t        },\n\t        GenDelim: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return function() {\n\t                switch (this.anything()) {\n\t                  case \"#\":\n\t                    return \"#\";\n\t\n\t                  case \"/\":\n\t                    return \"/\";\n\t\n\t                  case \":\":\n\t                    return \":\";\n\t\n\t                  case \"?\":\n\t                    return \"?\";\n\t\n\t                  case \"@\":\n\t                    return \"@\";\n\t\n\t                  case \"[\":\n\t                    return \"[\";\n\t\n\t                  case \"]\":\n\t                    return \"]\";\n\t\n\t                  default:\n\t                    throw this._fail();\n\t                }\n\t            }.call(this);\n\t        },\n\t        SubDelim: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                switch (this.anything()) {\n\t                  case \"!\":\n\t                    return \"!\";\n\t\n\t                  case \"$\":\n\t                    return \"$\";\n\t\n\t                  case \"*\":\n\t                    return \"*\";\n\t\n\t                  default:\n\t                    throw this._fail();\n\t                }\n\t            }, function() {\n\t                return this._apply(\"Apostrophe\");\n\t            }, function() {\n\t                switch (this.anything()) {\n\t                  case \"&\":\n\t                    return \"&\";\n\t\n\t                  case \"(\":\n\t                    return \"(\";\n\t\n\t                  case \")\":\n\t                    return \")\";\n\t\n\t                  case \"+\":\n\t                    return \"+\";\n\t\n\t                  case \",\":\n\t                    return \",\";\n\t\n\t                  case \";\":\n\t                    return \";\";\n\t\n\t                  case \"=\":\n\t                    return \"=\";\n\t\n\t                  default:\n\t                    throw this._fail();\n\t                }\n\t            });\n\t        },\n\t        Text: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, text;\n\t            text = this._consumedBy(function() {\n\t                return this._many(function() {\n\t                    this._not(function() {\n\t                        return this._apply(\"ReservedUriComponent\");\n\t                    });\n\t                    return this.anything();\n\t                });\n\t            });\n\t            return decodeURIComponent(text);\n\t        },\n\t        Sign: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                switch (this.anything()) {\n\t                  case \"%\":\n\t                    this._applyWithArgs(\"exactly\", \"2\");\n\t                    this._applyWithArgs(\"exactly\", \"B\");\n\t                    return \"+\";\n\t\n\t                  case \"+\":\n\t                    return \"+\";\n\t\n\t                  case \"-\":\n\t                    return \"-\";\n\t\n\t                  default:\n\t                    throw this._fail();\n\t                }\n\t            }, function() {\n\t                return \"\";\n\t            });\n\t        },\n\t        Apostrophe: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return function() {\n\t                switch (this.anything()) {\n\t                  case \"%\":\n\t                    this._applyWithArgs(\"exactly\", \"2\");\n\t                    this._applyWithArgs(\"exactly\", \"7\");\n\t                    return \"'\";\n\t\n\t                  case \"'\":\n\t                    return \"'\";\n\t\n\t                  default:\n\t                    throw this._fail();\n\t                }\n\t            }.call(this);\n\t        },\n\t        QuotedText: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, text;\n\t            this._apply(\"Apostrophe\");\n\t            text = this._many(function() {\n\t                return this._or(function() {\n\t                    this._apply(\"Apostrophe\");\n\t                    return this._apply(\"Apostrophe\");\n\t                }, function() {\n\t                    this._not(function() {\n\t                        return this._apply(\"Apostrophe\");\n\t                    });\n\t                    return this.anything();\n\t                });\n\t            });\n\t            this._apply(\"Apostrophe\");\n\t            return decodeURIComponent(text.join(\"\"));\n\t        },\n\t        space: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return OMeta._superApplyWithArgs(this, \"space\");\n\t            }, function() {\n\t                switch (this.anything()) {\n\t                  case \"%\":\n\t                    this._applyWithArgs(\"exactly\", \"2\");\n\t                    this._applyWithArgs(\"exactly\", \"0\");\n\t                    return \" \";\n\t\n\t                  default:\n\t                    throw this._fail();\n\t                }\n\t            });\n\t        },\n\t        Bind: function(type, value) {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            this.binds.push([ type, value ]);\n\t            return {\n\t                bind: this.binds.length - 1\n\t            };\n\t        },\n\t        NumberBind: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, n;\n\t            n = this._apply(\"Number\");\n\t            return this._applyWithArgs(\"Bind\", \"Real\", n);\n\t        },\n\t        DateBind: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, date, type;\n\t            type = function() {\n\t                switch (this.anything()) {\n\t                  case \"d\":\n\t                    switch (this.anything()) {\n\t                      case \"a\":\n\t                        switch (this.anything()) {\n\t                          case \"t\":\n\t                            switch (this.anything()) {\n\t                              case \"e\":\n\t                                return this._or(function() {\n\t                                    switch (this.anything()) {\n\t                                      case \"t\":\n\t                                        this._applyWithArgs(\"exactly\", \"i\");\n\t                                        this._applyWithArgs(\"exactly\", \"m\");\n\t                                        this._applyWithArgs(\"exactly\", \"e\");\n\t                                        return \"Date Time\";\n\t\n\t                                      default:\n\t                                        throw this._fail();\n\t                                    }\n\t                                }, function() {\n\t                                    \"date\";\n\t                                    return \"Date\";\n\t                                });\n\t\n\t                              default:\n\t                                throw this._fail();\n\t                            }\n\t\n\t                          default:\n\t                            throw this._fail();\n\t                        }\n\t\n\t                      default:\n\t                        throw this._fail();\n\t                    }\n\t\n\t                  default:\n\t                    throw this._fail();\n\t                }\n\t            }.call(this);\n\t            date = this._apply(\"QuotedText\");\n\t            date = Date.parse(date);\n\t            this._pred(!isNaN(date));\n\t            return this._applyWithArgs(\"Bind\", type, date);\n\t        },\n\t        BooleanBind: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, b;\n\t            b = this._apply(\"Boolean\");\n\t            return this._applyWithArgs(\"Bind\", \"Boolean\", b);\n\t        },\n\t        QuotedTextBind: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, t;\n\t            t = this._apply(\"QuotedText\");\n\t            return this._applyWithArgs(\"Bind\", \"Text\", t);\n\t        }\n\t    });\n\t    ODataParser.initialize = ODataParser.reset = function() {\n\t        this.binds = [];\n\t    };\n\t    ODataParser.ParseOptionsObject = function(options) {\n\t        var optionsObj = {};\n\t        for (var i in options) optionsObj[options[i].name] = options[i].value;\n\t        return optionsObj;\n\t    };\n\t    ODataParser.numberOf = function(rule, count, separator) {\n\t        if (0 === count) return [];\n\t        for (var ret = [], i = 1; count > i; i++) {\n\t            ret.push(this._apply(rule));\n\t            this._apply(\"spaces\");\n\t            this._applyWithArgs(\"exactly\", separator);\n\t            this._apply(\"spaces\");\n\t        }\n\t        ret.push(this._apply(rule));\n\t        return ret;\n\t    };\n\t    ODataParser._enableTokens = function() {\n\t        OMeta._enableTokens.call(this, [ \"Text\", \"ResourceName\", \"Number\", \"RecognisedOption\", \"FilterAndOperand\", \"FilterByOperand\", \"FilterRecognisedMathOperand\" ]);\n\t    };\n\t});\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!function(root, factory) {\n\t     true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__, exports, __webpack_require__(28), __webpack_require__(4), __webpack_require__(53) ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : \"object\" == typeof exports ? factory(require, exports, require(\"ometa-js\").core) : factory(function(moduleName) {\n\t        return root[moduleName];\n\t    }, root, root.OMeta);\n\t}(this, function(require, exports, OMeta) {\n\t    var _ = __webpack_require__(4), memoize = __webpack_require__(53), Query = function() {\n\t        _.extend(this, {\n\t            select: [],\n\t            from: [],\n\t            where: [],\n\t            extras: []\n\t        });\n\t    };\n\t    Query.prototype.merge = function(otherQuery) {\n\t        this.select = this.select.concat(otherQuery.select);\n\t        this.from = this.from.concat(otherQuery.from);\n\t        this.where = this.where.concat(otherQuery.where);\n\t        this.extras = this.extras.concat(otherQuery.extras);\n\t    };\n\t    Query.prototype.fromResource = function(resource) {\n\t        resource.tableName !== resource.tableAlias ? this.from.push([ resource.tableName, resource.tableAlias ]) : this.from.push(resource.tableName);\n\t    };\n\t    Query.prototype.compile = function(queryType) {\n\t        var compiled = [ queryType ], where = this.where;\n\t        \"SelectQuery\" === queryType && compiled.push([ \"Select\", this.select ]);\n\t        _.each(this.from, function(tableName) {\n\t            compiled.push([ \"From\", tableName ]);\n\t        });\n\t        if (where.length > 0) {\n\t            where.length > 1 && (where = [ [ \"And\" ].concat(where) ]);\n\t            compiled.push([ \"Where\" ].concat(where));\n\t        }\n\t        return compiled.concat(this.extras);\n\t    };\n\t    var OData2AbstractSQL = exports.OData2AbstractSQL = OMeta._extend({\n\t        Process: function(method, bodyKeys) {\n\t            var $elf = this, _fromIdx = this.input.idx, insertQuery, path, query, queryType, tree;\n\t            path = this.anything();\n\t            this._apply(\"end\");\n\t            tree = this._or(function() {\n\t                this._pred(_.isEmpty(path));\n\t                return [ \"$serviceroot\" ];\n\t            }, function() {\n\t                this._pred(_.includes([ \"$metadata\", \"$serviceroot\" ], path.resource));\n\t                return [ path.resource ];\n\t            }, function() {\n\t                this.reset();\n\t                query = this._applyWithArgs(\"PathSegment\", method, bodyKeys, path);\n\t                return this._or(function() {\n\t                    this._pred(\"PUT\" == method);\n\t                    this.reset();\n\t                    insertQuery = this._applyWithArgs(\"PathSegment\", \"PUT-INSERT\", bodyKeys, path);\n\t                    return [ \"UpsertQuery\", insertQuery.compile(\"InsertQuery\"), query.compile(\"UpdateQuery\") ];\n\t                }, function() {\n\t                    queryType = this._or(function() {\n\t                        this._pred(\"GET\" == method);\n\t                        return \"SelectQuery\";\n\t                    }, function() {\n\t                        this._pred(\"PATCH\" == method || \"MERGE\" == method);\n\t                        return \"UpdateQuery\";\n\t                    }, function() {\n\t                        this._pred(\"POST\" == method);\n\t                        return \"InsertQuery\";\n\t                    }, function() {\n\t                        this._pred(\"DELETE\" == method);\n\t                        return \"DeleteQuery\";\n\t                    });\n\t                    return query.compile(queryType);\n\t                });\n\t            });\n\t            return {\n\t                tree: tree,\n\t                extraBodyVars: this.extraBodyVars\n\t            };\n\t        },\n\t        PathSegment: function(method, bodyKeys, path) {\n\t            var $elf = this, _fromIdx = this.input.idx, aliasedField, bindVars, childQuery, linkResource, navigationWhere, propertyResource, query, referencedField, referencedIdField, resource, resourceMapping, subQuery, valuesIndex;\n\t            this._pred(path.resource);\n\t            resource = this._applyWithArgs(\"Resource\", path.resource, this.defaultResource);\n\t            this.defaultResource = resource;\n\t            query = new Query();\n\t            query.fromResource(resource);\n\t            referencedIdField = [ \"ReferencedField\", resource.tableAlias, resource.idField ];\n\t            this._applyWithArgs(\"PathKey\", path, query, resource, referencedIdField, bodyKeys);\n\t            this._or(function() {\n\t                return this._pred(!path.options);\n\t            }, function() {\n\t                return this._pred(!path.options.$expand);\n\t            }, function() {\n\t                return this._applyWithArgs(\"Expands\", resource, query, path.options.$expand.properties);\n\t            });\n\t            this._or(function() {\n\t                this._pred(path.property);\n\t                childQuery = this._applyWithArgs(\"PathSegment\", method, bodyKeys, path.property);\n\t                query.merge(childQuery);\n\t                this._or(function() {\n\t                    return this._pred(path.property.resource);\n\t                }, function() {\n\t                    return function() {\n\t                        throw new Error(\"PathSegment has a property without a resource?\");\n\t                    }.call(this);\n\t                });\n\t                propertyResource = this._applyWithArgs(\"Resource\", path.property.resource, resource);\n\t                navigationWhere = this._applyWithArgs(\"NavigateResources\", resource, propertyResource);\n\t                return query.where.push(navigationWhere);\n\t            }, function() {\n\t                this._pred(path.link);\n\t                this._or(function() {\n\t                    return this._pred(path.link.resource);\n\t                }, function() {\n\t                    return function() {\n\t                        throw new Error(\"PathSegment has a link without a resource?\");\n\t                    }.call(this);\n\t                });\n\t                linkResource = this._applyWithArgs(\"Resource\", path.link.resource, resource);\n\t                aliasedField = this._or(function() {\n\t                    this._applyWithArgs(\"FieldContainedIn\", linkResource.resourceName, resource);\n\t                    referencedField = this._applyWithArgs(\"ReferencedField\", resource, linkResource.resourceName);\n\t                    return [ referencedField, linkResource.resourceName ];\n\t                }, function() {\n\t                    this._applyWithArgs(\"FieldContainedIn\", resource.resourceName, linkResource);\n\t                    referencedField = this._applyWithArgs(\"ReferencedField\", linkResource, resource.resourceName);\n\t                    return [ referencedField, resource.resourceName ];\n\t                }, function() {\n\t                    return function() {\n\t                        throw new Error(\"Cannot navigate links\");\n\t                    }.call(this);\n\t                });\n\t                this._applyWithArgs(\"PathKey\", path.link, query, linkResource, referencedField, bodyKeys);\n\t                return query.select.push(aliasedField);\n\t            }, function() {\n\t                this._pred(\"PUT\" == method || \"PUT-INSERT\" == method || \"POST\" == method || \"PATCH\" == method || \"MERGE\" == method);\n\t                resourceMapping = this._applyWithArgs(\"ResourceMapping\", resource);\n\t                bindVars = this._applyWithArgs(\"BindVars\", method, bodyKeys, resource.resourceName, _.toPairs(resourceMapping));\n\t                query.extras.push([ \"Fields\", _.map(bindVars, 0) ]);\n\t                return query.extras.push([ \"Values\", _.map(bindVars, 1) ]);\n\t            }, function() {\n\t                return this._applyWithArgs(\"AddCountField\", path, query, resource);\n\t            }, function() {\n\t                return this._applyWithArgs(\"AddSelectFields\", path, query, resource);\n\t            });\n\t            this._or(function() {\n\t                return this._pred(!path.options);\n\t            }, function() {\n\t                this._or(function() {\n\t                    return this._pred(!path.options.$filter);\n\t                }, function() {\n\t                    this._pred(\"POST\" == method || \"PUT-INSERT\" == method);\n\t                    subQuery = this._applyWithArgs(\"InsertFilter\", path.options.$filter, resource, bindVars);\n\t                    valuesIndex = _.findIndex(query.extras, {\n\t                        0: \"Values\"\n\t                    });\n\t                    return query.extras[valuesIndex] = [ \"Values\", subQuery.compile(\"SelectQuery\") ];\n\t                }, function() {\n\t                    this._pred(\"PUT\" == method || \"PATCH\" == method || \"MERGE\" == method || \"DELETE\" == method);\n\t                    subQuery = this._applyWithArgs(\"UpdateFilter\", path.options.$filter, resource, referencedIdField);\n\t                    return query.where.push([ \"In\", referencedIdField, subQuery.compile(\"SelectQuery\") ]);\n\t                }, function() {\n\t                    return this._applyWithArgs(\"SelectFilter\", path.options.$filter, query, resource);\n\t                });\n\t                return this._applyWithArgs(\"AddExtraQueryOptions\", resource, path, query);\n\t            });\n\t            return query;\n\t        },\n\t        PathKey: function(path, query, resource, referencedField, bodyKeys) {\n\t            var $elf = this, _fromIdx = this.input.idx, key, qualifiedIDField;\n\t            return this._or(function() {\n\t                return this._pred(null == path.key);\n\t            }, function() {\n\t                qualifiedIDField = resource.resourceName + \".\" + resource.idField;\n\t                this._opt(function() {\n\t                    this._pred(!_.includes(bodyKeys, qualifiedIDField) && !_.includes(bodyKeys, resource.idField));\n\t                    bodyKeys.push(qualifiedIDField);\n\t                    return this.extraBodyVars[qualifiedIDField] = path.key;\n\t                });\n\t                key = this._or(function() {\n\t                    return this._applyWithArgs(\"Bind\", path.key);\n\t                }, function() {\n\t                    return this._applyWithArgs(\"Number\", path.key);\n\t                }, function() {\n\t                    return this._applyWithArgs(\"Text\", path.key);\n\t                });\n\t                return query.where.push([ \"Equals\", referencedField, key ]);\n\t            });\n\t        },\n\t        Bind: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, bind;\n\t            bind = this.anything();\n\t            this._pred(null != bind);\n\t            this._pred(null != bind.bind);\n\t            return [ \"Bind\", bind.bind ];\n\t        },\n\t        SelectFilter: function(filter, query, resource) {\n\t            var $elf = this, _fromIdx = this.input.idx, filter;\n\t            this._applyWithArgs(\"AddExtraFroms\", filter, query, resource);\n\t            filter = this._applyWithArgs(\"Boolean\", filter);\n\t            return query.where.push(filter);\n\t        },\n\t        InsertFilter: function(filter, resource, bindVars) {\n\t            var $elf = this, _fromIdx = this.input.idx, query, where;\n\t            query = new Query();\n\t            this._applyWithArgs(\"AddExtraFroms\", filter, query, resource);\n\t            where = this._applyWithArgs(\"Boolean\", filter);\n\t            (function() {\n\t                query.select = _.map(bindVars, function(bindVar) {\n\t                    return [ \"ReferencedField\", resource.tableAlias, bindVar[0] ];\n\t                });\n\t                query.from.push([ [ \"SelectQuery\", [ \"Select\", _.map($elf.clientModel.resources[resource.resourceName].fields, function(field) {\n\t                    var cast, alias = field.fieldName, bindVar = _.find(bindVars, {\n\t                        0: alias\n\t                    });\n\t                    cast = bindVar ? [ \"Cast\", bindVar[1], field.dataType ] : \"Null\";\n\t                    return [ cast, alias ];\n\t                }) ] ], resource.tableAlias ]);\n\t                return query.where.push(where);\n\t            }).call(this);\n\t            return query;\n\t        },\n\t        UpdateFilter: function(filter, resource, referencedIdField) {\n\t            var $elf = this, _fromIdx = this.input.idx, query, where;\n\t            query = new Query();\n\t            this._applyWithArgs(\"AddExtraFroms\", filter, query, resource);\n\t            where = this._applyWithArgs(\"Boolean\", filter);\n\t            (function() {\n\t                query.select.push(referencedIdField);\n\t                query.fromResource(resource);\n\t                return query.where.push(where);\n\t            }).call(this);\n\t            return query;\n\t        },\n\t        OrderBy: function(orderby, query, resource) {\n\t            var $elf = this, _fromIdx = this.input.idx, orderby;\n\t            this._applyWithArgs(\"AddExtraFroms\", orderby.properties, query, resource);\n\t            orderby = this._applyWithArgs(\"OrderByProperties\", orderby.properties);\n\t            return query.extras.push([ \"OrderBy\" ].concat(orderby));\n\t        },\n\t        OrderByProperties: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, field, orderby, ordering;\n\t            this._form(function() {\n\t                return orderby = this._many1(function() {\n\t                    ordering = this.anything();\n\t                    field = this._applyWithArgs(\"ReferencedProperty\", ordering);\n\t                    return [ ordering.order.toUpperCase(), field ];\n\t                });\n\t            });\n\t            return orderby;\n\t        },\n\t        BindVars: function(method, bodyKeys, resourceName) {\n\t            var $elf = this, _fromIdx = this.input.idx, fieldName, fields, mappedFieldName, mappedTableName;\n\t            this._form(function() {\n\t                return fields = this._many(function() {\n\t                    return this._or(function() {\n\t                        this._form(function() {\n\t                            this._applyWithArgs(\"exactly\", \"_name\");\n\t                            return this.anything();\n\t                        });\n\t                        return null;\n\t                    }, function() {\n\t                        this._form(function() {\n\t                            fieldName = this.anything();\n\t                            return this._form(function() {\n\t                                mappedTableName = this.anything();\n\t                                return mappedFieldName = this.anything();\n\t                            });\n\t                        });\n\t                        return this._or(function() {\n\t                            this._pred(!_.includes(bodyKeys, fieldName) && !_.includes(bodyKeys, resourceName + \".\" + fieldName));\n\t                            return this._or(function() {\n\t                                this._pred(\"PUT\" === method);\n\t                                return [ mappedFieldName, \"Default\" ];\n\t                            }, function() {\n\t                                return null;\n\t                            });\n\t                        }, function() {\n\t                            return [ mappedFieldName, [ \"Bind\", resourceName, fieldName ] ];\n\t                        });\n\t                    });\n\t                });\n\t            });\n\t            return _.compact(fields);\n\t        },\n\t        ResolveResourceAlias: function(aliasName) {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            this._pred(this.resourceAliases[aliasName]);\n\t            return this.resourceAliases[aliasName];\n\t        },\n\t        Resource: function(resourceName, parentResource) {\n\t            var $elf = this, _fromIdx = this.input.idx, resource, resourceMapping, tableAlias;\n\t            return this._or(function() {\n\t                return this._applyWithArgs(\"ResolveResourceAlias\", resourceName);\n\t            }, function() {\n\t                resource = this.clientModel.resources[resourceName];\n\t                this._pred(resource);\n\t                resource = _.clone(resource);\n\t                this._or(function() {\n\t                    return this._pred(resource.tableName);\n\t                }, function() {\n\t                    resourceMapping = this._applyWithArgs(\"ResourceMapping\", resource);\n\t                    return resource.tableName = resourceMapping._name;\n\t                });\n\t                tableAlias = this._or(function() {\n\t                    this._pred(parentResource);\n\t                    return parentResource.tableAlias + \".\" + resource.tableName;\n\t                }, function() {\n\t                    return resource.tableName;\n\t                });\n\t                resource.tableAlias = this.checkAlias(tableAlias);\n\t                return resource;\n\t            }, function() {\n\t                return function() {\n\t                    throw new Error(\"Unknown resource: \" + resourceName);\n\t                }.call(this);\n\t            });\n\t        },\n\t        FieldContainedIn: function(fieldName, resource) {\n\t            var $elf = this, _fromIdx = this.input.idx, mappedField, mapping;\n\t            mapping = this._applyWithArgs(\"ResourceMapping\", resource);\n\t            mappedField = mapping[fieldName];\n\t            this._pred(mappedField);\n\t            this._pred(mappedField[0] == resource.tableAlias);\n\t            return this._pred(_.some(resource.fields, {\n\t                fieldName: mappedField[1]\n\t            }));\n\t        },\n\t        ResourceMapping: function(resource) {\n\t            var $elf = this, _fromIdx = this.input.idx, resourceMapping;\n\t            return this._or(function() {\n\t                this._pred(this.clientModel.resourceToSQLMappings[resource.resourceName]);\n\t                resourceMapping = this.clientModel.resourceToSQLMappings[resource.resourceName];\n\t                this._opt(function() {\n\t                    this._pred(resource.tableAlias);\n\t                    this._pred(resource.tableAlias != resourceMapping._name);\n\t                    return resourceMapping = _.mapValues(resourceMapping, function(mapping) {\n\t                        return _.isArray(mapping) ? [ resource.tableAlias, mapping[1] ] : resource.tableAlias;\n\t                    });\n\t                });\n\t                return resourceMapping;\n\t            }, function() {\n\t                return function() {\n\t                    throw new Error(\"Unknown resource: \" + resource.resourceName);\n\t                }.call(this);\n\t            });\n\t        },\n\t        AddCountField: function(path, query, resource) {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            this._pred(path.count);\n\t            return query.select.push([ [ \"Count\", \"*\" ], \"$count\" ]);\n\t        },\n\t        AddSelectFields: function(path, query, resource) {\n\t            var $elf = this, _fromIdx = this.input.idx, fields, resourceMapping;\n\t            fields = this._or(function() {\n\t                this._pred(path.options);\n\t                this._pred(path.options.$select);\n\t                this._applyWithArgs(\"AddExtraFroms\", path.options.$select.properties, query, resource);\n\t                fields = this._applyWithArgs(\"Properties\", path.options.$select.properties);\n\t                return _(fields).reject(function(field) {\n\t                    return _.some(query.select, function(existingField) {\n\t                        return _.last(existingField) == field.name;\n\t                    });\n\t                }).map(function(field) {\n\t                    return $elf.AliasSelectField(field.resource, field.name);\n\t                }).value();\n\t            }, function() {\n\t                resourceMapping = this._applyWithArgs(\"ResourceMapping\", resource);\n\t                return _(resourceMapping).keys().reject(function(fieldName) {\n\t                    return \"_name\" === fieldName || _.some(query.select, function(existingField) {\n\t                        return _.last(existingField) == fieldName;\n\t                    });\n\t                }).map(_.bind(this.AliasSelectField, this, resource)).value();\n\t            });\n\t            return query.select = query.select.concat(fields);\n\t        },\n\t        AliasSelectField: function(resource, fieldName) {\n\t            var $elf = this, _fromIdx = this.input.idx, referencedField;\n\t            referencedField = this._applyWithArgs(\"ReferencedField\", resource, fieldName);\n\t            return this._or(function() {\n\t                this._pred(referencedField[2] === fieldName);\n\t                return referencedField;\n\t            }, function() {\n\t                return [ referencedField, fieldName ];\n\t            });\n\t        },\n\t        ReferencedField: function(resource, resourceField) {\n\t            var $elf = this, _fromIdx = this.input.idx, mapping;\n\t            mapping = this._applyWithArgs(\"ResourceMapping\", resource);\n\t            return this._or(function() {\n\t                this._pred(mapping[resourceField]);\n\t                return [ \"ReferencedField\" ].concat(mapping[resourceField]);\n\t            }, function() {\n\t                console.error(\"Unknown mapping: \", mapping, resource.resourceName, resourceField);\n\t                return function() {\n\t                    throw new Error(\"Unknown mapping: \" + resource.resourceName + \" : \" + resourceField);\n\t                }.call(this);\n\t            });\n\t        },\n\t        Boolean: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, bool, op1, op2, operation;\n\t            return this._or(function() {\n\t                return this._apply(\"True\");\n\t            }, function() {\n\t                return this._apply(\"False\");\n\t            }, function() {\n\t                this._form(function() {\n\t                    return bool = this._or(function() {\n\t                        operation = function() {\n\t                            switch (this.anything()) {\n\t                              case \"eq\":\n\t                                return \"Equals\";\n\t\n\t                              case \"ge\":\n\t                                return \"GreaterThanOrEqual\";\n\t\n\t                              case \"gt\":\n\t                                return \"GreaterThan\";\n\t\n\t                              case \"le\":\n\t                                return \"LessThanOrEqual\";\n\t\n\t                              case \"lt\":\n\t                                return \"LessThan\";\n\t\n\t                              case \"ne\":\n\t                                return \"NotEquals\";\n\t\n\t                              default:\n\t                                throw this._fail();\n\t                            }\n\t                        }.call(this);\n\t                        op1 = this._apply(\"Operand\");\n\t                        op2 = this._apply(\"Operand\");\n\t                        return [ operation, op1, op2 ];\n\t                    }, function() {\n\t                        operation = function() {\n\t                            switch (this.anything()) {\n\t                              case \"and\":\n\t                                return \"And\";\n\t\n\t                              case \"or\":\n\t                                return \"Or\";\n\t\n\t                              default:\n\t                                throw this._fail();\n\t                            }\n\t                        }.call(this);\n\t                        op1 = this._apply(\"Boolean\");\n\t                        op2 = this._many1(function() {\n\t                            return this._apply(\"Boolean\");\n\t                        });\n\t                        return [ operation, op1 ].concat(op2);\n\t                    });\n\t                });\n\t                return bool;\n\t            }, function() {\n\t                this._form(function() {\n\t                    this._applyWithArgs(\"exactly\", \"not\");\n\t                    return bool = this._apply(\"Boolean\");\n\t                });\n\t                return [ \"Not\", bool ];\n\t            }, function() {\n\t                return this._apply(\"ReferencedProperty\");\n\t            }, function() {\n\t                return this._apply(\"BooleanFunction\");\n\t            });\n\t        },\n\t        True: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            this._apply(\"true\");\n\t            return [ \"Boolean\", !0 ];\n\t        },\n\t        False: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            this._apply(\"false\");\n\t            return [ \"Boolean\", !1 ];\n\t        },\n\t        BooleanFunction: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._applyWithArgs(\"Function\", \"contains\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"Function\", \"endswith\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"Function\", \"startswith\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"Function\", \"isof\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"Function\", \"substringof\");\n\t            });\n\t        },\n\t        NumberFunction: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._applyWithArgs(\"AliasedFunction\", \"length\", \"CharacterLength\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"Function\", \"indexof\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"Function\", \"year\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"Function\", \"month\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"Function\", \"day\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"Function\", \"day\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"Function\", \"hour\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"Function\", \"minute\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"Function\", \"second\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"Function\", \"fractionalseconds\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"Function\", \"totaloffsetminutes\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"Function\", \"totalseconds\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"Function\", \"round\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"Function\", \"floor\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"Function\", \"ceiling\");\n\t            });\n\t        },\n\t        TextFunction: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, fn;\n\t            return this._or(function() {\n\t                fn = this._applyWithArgs(\"Function\", \"substring\");\n\t                fn[2] = [ \"Add\", fn[2], [ \"Number\", 1 ] ];\n\t                return fn;\n\t            }, function() {\n\t                return this._applyWithArgs(\"Function\", \"tolower\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"Function\", \"toupper\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"Function\", \"trim\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"Function\", \"concat\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"AliasedFunction\", \"date\", \"ToDate\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"AliasedFunction\", \"time\", \"ToTime\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"Function\", \"replace\");\n\t            });\n\t        },\n\t        DateFunction: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._applyWithArgs(\"Function\", \"now\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"Function\", \"maxdatetime\");\n\t            }, function() {\n\t                return this._applyWithArgs(\"Function\", \"mindatetime\");\n\t            });\n\t        },\n\t        AliasedFunction: function(odataName, sqlName) {\n\t            var $elf = this, _fromIdx = this.input.idx, fn;\n\t            fn = this._applyWithArgs(\"Function\", odataName);\n\t            return [ sqlName ].concat(fn.slice(1));\n\t        },\n\t        Function: function(name) {\n\t            var $elf = this, _fromIdx = this.input.idx, args, properties;\n\t            this._form(function() {\n\t                this._applyWithArgs(\"exactly\", \"call\");\n\t                properties = this.anything();\n\t                this._pred(properties.method == name);\n\t                return args = this._applyWithArgs(\"Arguments\", properties.args);\n\t            });\n\t            return [ _.capitalize(name) ].concat(args);\n\t        },\n\t        Arguments: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, args;\n\t            this._form(function() {\n\t                return args = this._many(function() {\n\t                    return this._apply(\"Operand\");\n\t                });\n\t            });\n\t            return args;\n\t        },\n\t        Operand: function() {\n\t            var $elf = this, _fromIdx = this.input.idx;\n\t            return this._or(function() {\n\t                return this._apply(\"Bind\");\n\t            }, function() {\n\t                return this._apply(\"Null\");\n\t            }, function() {\n\t                return this._apply(\"Boolean\");\n\t            }, function() {\n\t                return this._apply(\"Number\");\n\t            }, function() {\n\t                return this._apply(\"Text\");\n\t            }, function() {\n\t                return this._apply(\"Date\");\n\t            }, function() {\n\t                return this._apply(\"Duration\");\n\t            }, function() {\n\t                return this._apply(\"Math\");\n\t            });\n\t        },\n\t        Math: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, op1, op2, operation;\n\t            this._form(function() {\n\t                operation = function() {\n\t                    switch (this.anything()) {\n\t                      case \"add\":\n\t                        return \"Add\";\n\t\n\t                      case \"div\":\n\t                        return \"Divide\";\n\t\n\t                      case \"mul\":\n\t                        return \"Multiply\";\n\t\n\t                      case \"sub\":\n\t                        return \"Subtract\";\n\t\n\t                      default:\n\t                        throw this._fail();\n\t                    }\n\t                }.call(this);\n\t                op1 = this._apply(\"Operand\");\n\t                return op2 = this._apply(\"Operand\");\n\t            });\n\t            return [ operation, op1, op2 ];\n\t        },\n\t        Lambda: function(resource, lambda) {\n\t            var $elf = this, _fromIdx = this.input.idx, defaultResource, filter, query, resourceAliases, result;\n\t            resourceAliases = this.resourceAliases;\n\t            defaultResource = this.defaultResource;\n\t            (function() {\n\t                this.resourceAliases = _.clone(this.resourceAliases);\n\t                return this.resourceAliases[lambda.identifier] = resource;\n\t            }).call(this);\n\t            this._or(function() {\n\t                query = new Query();\n\t                this._applyWithArgs(\"AddNavigation\", query, this.defaultResource, resource);\n\t                this.defaultResource = resource;\n\t                this._applyWithArgs(\"AddExtraFroms\", lambda.expression, query, resource);\n\t                filter = this._applyWithArgs(\"Boolean\", lambda.expression);\n\t                query.where.push(filter);\n\t                query = query.compile(\"SelectQuery\");\n\t                result = this._or(function() {\n\t                    this._pred(\"any\" == lambda.method);\n\t                    return [ \"Exists\", query ];\n\t                }, function() {\n\t                    this._pred(\"all\" == lambda.method);\n\t                    return [ \"Not\", [ \"Exists\", _.map(query, function(queryPart) {\n\t                        return \"Where\" == queryPart[0] ? [ queryPart[0], [ \"Not\", queryPart[1] ] ] : queryPart;\n\t                    }) ] ];\n\t                });\n\t                this.resourceAliases = resourceAliases;\n\t                return this.defaultResource = defaultResource;\n\t            }, function() {\n\t                this.resourceAliases = resourceAliases;\n\t                this.defaultResource = defaultResource;\n\t                return this._pred(!1);\n\t            });\n\t            return result;\n\t        },\n\t        Properties: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, props;\n\t            this._form(function() {\n\t                return props = this._many(function() {\n\t                    return this._apply(\"Property\");\n\t                });\n\t            });\n\t            return props;\n\t        },\n\t        ReferencedProperty: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, prop;\n\t            prop = this._apply(\"Property\");\n\t            return this._or(function() {\n\t                this._pred(_.isArray(prop));\n\t                return prop;\n\t            }, function() {\n\t                return this._applyWithArgs(\"ReferencedField\", prop.resource, prop.name);\n\t            });\n\t        },\n\t        Property: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, defaultResource, prop, propResource, resource, result;\n\t            prop = this.anything();\n\t            this._pred(prop.name);\n\t            return this._or(function() {\n\t                this._pred(prop.property);\n\t                defaultResource = this.defaultResource;\n\t                return this._or(function() {\n\t                    propResource = function() {\n\t                        try {\n\t                            return $elf.Resource(prop.name, this.defaultResource);\n\t                        } catch (e) {} finally {}\n\t                    }.call(this);\n\t                    this._pred(propResource);\n\t                    this.defaultResource = propResource;\n\t                    result = this._applyWithArgs(\"Property\", prop.property);\n\t                    this.defaultResource = defaultResource;\n\t                    return result;\n\t                }, function() {\n\t                    this.defaultResource = defaultResource;\n\t                    return this._applyWithArgs(\"Property\", prop.property);\n\t                });\n\t            }, function() {\n\t                this._pred(!prop.property);\n\t                this._pred(prop.lambda);\n\t                resource = this._applyWithArgs(\"Resource\", prop.name, this.defaultResource);\n\t                return this._applyWithArgs(\"Lambda\", resource, prop.lambda);\n\t            }, function() {\n\t                this._pred(!prop.property);\n\t                this._pred(!prop.lambda);\n\t                return {\n\t                    resource: this.defaultResource,\n\t                    name: prop.name\n\t                };\n\t            });\n\t        },\n\t        Number: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, num;\n\t            return this._or(function() {\n\t                num = this._apply(\"number\");\n\t                return [ \"Number\", num ];\n\t            }, function() {\n\t                return this._apply(\"NumberFunction\");\n\t            });\n\t        },\n\t        Null: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, x;\n\t            x = this.anything();\n\t            this._pred(null === x);\n\t            return \"Null\";\n\t        },\n\t        Text: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, text;\n\t            return this._or(function() {\n\t                text = this._apply(\"string\");\n\t                return [ \"Text\", text ];\n\t            }, function() {\n\t                return this._apply(\"TextFunction\");\n\t            });\n\t        },\n\t        Date: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, date;\n\t            return this._or(function() {\n\t                date = this.anything();\n\t                this._pred(_.isDate(date));\n\t                return [ \"Date\", date ];\n\t            }, function() {\n\t                return this._apply(\"DateFunction\");\n\t            });\n\t        },\n\t        Duration: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, duration;\n\t            duration = this.anything();\n\t            this._pred(_.isObject(duration));\n\t            duration = _(duration).pick(\"negative\", \"day\", \"hour\", \"minute\", \"second\").omitBy(_.isNil).value();\n\t            this._pred(!_(duration).omit(\"negative\").isEmpty());\n\t            return [ \"Duration\", duration ];\n\t        },\n\t        Expands: function(resource, query) {\n\t            var $elf = this, _fromIdx = this.input.idx, defaultResource, expand, expandQuery, expandResource, navigationWhere, nestedExpandQuery;\n\t            defaultResource = this.defaultResource;\n\t            return this._form(function() {\n\t                return this._many1(function() {\n\t                    expand = this.anything();\n\t                    expandResource = this._applyWithArgs(\"Resource\", expand.name, defaultResource);\n\t                    this.defaultResource = expandResource;\n\t                    nestedExpandQuery = new Query();\n\t                    this._or(function() {\n\t                        return this._pred(!expand.property);\n\t                    }, function() {\n\t                        return this._applyWithArgs(\"Expands\", expandResource, nestedExpandQuery, [ expand.property ]);\n\t                    });\n\t                    this._or(function() {\n\t                        return this._pred(!expand.options);\n\t                    }, function() {\n\t                        return this._pred(!expand.options.$expand);\n\t                    }, function() {\n\t                        return this._applyWithArgs(\"Expands\", expandResource, nestedExpandQuery, expand.options.$expand.properties);\n\t                    });\n\t                    nestedExpandQuery.fromResource(expandResource);\n\t                    this._or(function() {\n\t                        return this._applyWithArgs(\"AddCountField\", expand, nestedExpandQuery, expandResource);\n\t                    }, function() {\n\t                        return this._applyWithArgs(\"AddSelectFields\", expand, nestedExpandQuery, expandResource);\n\t                    });\n\t                    this._or(function() {\n\t                        return this._pred(!expand.options);\n\t                    }, function() {\n\t                        this._or(function() {\n\t                            return this._pred(!expand.options.$filter);\n\t                        }, function() {\n\t                            return this._applyWithArgs(\"SelectFilter\", expand.options.$filter, nestedExpandQuery, expandResource);\n\t                        });\n\t                        return this._applyWithArgs(\"AddExtraQueryOptions\", expandResource, expand, nestedExpandQuery);\n\t                    });\n\t                    this.defaultResource = defaultResource;\n\t                    navigationWhere = this._applyWithArgs(\"NavigateResources\", resource, expandResource);\n\t                    nestedExpandQuery.where.push(navigationWhere);\n\t                    expandQuery = new Query();\n\t                    expandQuery.select.push([ [ \"AggregateJSON\", [ expandResource.tableAlias, \"*\" ] ], expandResource.resourceName ]);\n\t                    expandQuery.from.push([ nestedExpandQuery.compile(\"SelectQuery\"), expandResource.tableAlias ]);\n\t                    return query.select.push([ expandQuery.compile(\"SelectQuery\"), expandResource.resourceName ]);\n\t                });\n\t            });\n\t        },\n\t        AddExtraQueryOptions: function(resource, path, query) {\n\t            var $elf = this, _fromIdx = this.input.idx, limit, offset;\n\t            return this._or(function() {\n\t                return this._pred(path.count);\n\t            }, function() {\n\t                this._or(function() {\n\t                    return this._pred(!path.options.$orderby);\n\t                }, function() {\n\t                    return this._applyWithArgs(\"OrderBy\", path.options.$orderby, query, resource);\n\t                });\n\t                this._or(function() {\n\t                    return this._pred(!path.options.$top);\n\t                }, function() {\n\t                    limit = this._applyWithArgs(\"Number\", path.options.$top);\n\t                    return query.extras.push([ \"Limit\", limit ]);\n\t                });\n\t                return this._or(function() {\n\t                    return this._pred(!path.options.$skip);\n\t                }, function() {\n\t                    offset = this._applyWithArgs(\"Number\", path.options.$skip);\n\t                    return query.extras.push([ \"Offset\", offset ]);\n\t                });\n\t            });\n\t        },\n\t        NavigateResources: function(resource1, resource2) {\n\t            var $elf = this, _fromIdx = this.input.idx, fkField;\n\t            return this._or(function() {\n\t                this._applyWithArgs(\"FieldContainedIn\", resource1.resourceName, resource2);\n\t                fkField = this._applyWithArgs(\"ReferencedField\", resource2, resource1.resourceName);\n\t                return [ \"Equals\", [ \"ReferencedField\", resource1.tableAlias, resource1.idField ], fkField ];\n\t            }, function() {\n\t                this._applyWithArgs(\"FieldContainedIn\", resource2.resourceName, resource1);\n\t                fkField = this._applyWithArgs(\"ReferencedField\", resource1, resource2.resourceName);\n\t                return [ \"Equals\", [ \"ReferencedField\", resource2.tableAlias, resource2.idField ], fkField ];\n\t            }, function() {\n\t                return function() {\n\t                    throw new Error(\"Cannot navigate resources \" + resource1.tableName + \" and \" + resource2.tableName);\n\t                }.call(this);\n\t            });\n\t        },\n\t        AddExtraFroms: function(searchPoint, query, resource) {\n\t            var $elf = this, _fromIdx = this.input.idx, extraFroms;\n\t            extraFroms = this._applyWithArgs(\"ExtraFroms\", searchPoint);\n\t            return _.each(extraFroms, function(extraResource) {\n\t                var currentResource = resource;\n\t                _.isArray(extraResource) ? _.each(extraResource, function(extraResource) {\n\t                    $elf.AddNavigation(query, currentResource, extraResource);\n\t                    currentResource = extraResource;\n\t                }) : $elf.AddNavigation(query, currentResource, extraResource);\n\t            });\n\t        },\n\t        ExtraFroms: function() {\n\t            var $elf = this, _fromIdx = this.input.idx, extraFroms, froms, nextProp, parentResource, prop;\n\t            froms = [];\n\t            this._or(function() {\n\t                this._pred(_.isArray(this.input.hd));\n\t                return this._form(function() {\n\t                    return this._many(function() {\n\t                        extraFroms = this._apply(\"ExtraFroms\");\n\t                        return froms = froms.concat(extraFroms);\n\t                    });\n\t                });\n\t            }, function() {\n\t                nextProp = this.anything();\n\t                parentResource = this.defaultResource;\n\t                extraFroms = this._many1(function() {\n\t                    prop = nextProp;\n\t                    this._pred(prop);\n\t                    this._pred(prop.name);\n\t                    this._pred(prop.property);\n\t                    this._pred(prop.property.name);\n\t                    nextProp = prop.property;\n\t                    return parentResource = this._applyWithArgs(\"Resource\", prop.name, parentResource);\n\t                });\n\t                return this._or(function() {\n\t                    this._pred(1 == extraFroms.length);\n\t                    return froms.push(extraFroms[0]);\n\t                }, function() {\n\t                    return froms.push(extraFroms);\n\t                });\n\t            }, function() {\n\t                return this.anything();\n\t            });\n\t            return froms;\n\t        },\n\t        AddNavigation: function(query, resource, extraResource) {\n\t            var $elf = this, _fromIdx = this.input.idx, nagivationWhere;\n\t            return this._opt(function() {\n\t                this._pred(!_.some(query.from, function(from) {\n\t                    return from === extraResource.tableAlias || _.isArray(from) && from[1] === extraResource.tableAlias;\n\t                }));\n\t                nagivationWhere = this._applyWithArgs(\"NavigateResources\", resource, extraResource);\n\t                query.fromResource(extraResource);\n\t                return query.where.push(nagivationWhere);\n\t            });\n\t        }\n\t    });\n\t    OData2AbstractSQL.initialize = function() {\n\t        this.reset();\n\t    };\n\t    OData2AbstractSQL.reset = function() {\n\t        this.resourceAliases = {};\n\t        this.defaultResource = null;\n\t        this.extraBodyVars = {};\n\t    };\n\t    OData2AbstractSQL.checkAlias = _.identity;\n\t    var generateShortAliases = function(clientModel) {\n\t        var trie = {}, resourceNames = _.map(clientModel.resources, \"resourceName\");\n\t        _(resourceNames).reject(function(part) {\n\t            return _.includes(part, \"__\");\n\t        }).invokeMap(\"toLowerCase\").sort().each(function(resourceName) {\n\t            var node = trie;\n\t            _.each(resourceName, function(c, i) {\n\t                if (node.$suffix) {\n\t                    node[node.$suffix[0]] = {\n\t                        $suffix: node.$suffix.slice(1)\n\t                    };\n\t                    delete node.$suffix;\n\t                }\n\t                if (!node[c]) {\n\t                    node[c] = {\n\t                        $suffix: resourceName.slice(i + 1)\n\t                    };\n\t                    return !1;\n\t                }\n\t                node = node[c];\n\t            });\n\t        });\n\t        var shortAliases = {}, traverseNodes = function(str, node) {\n\t            _.each(node, function(value, key) {\n\t                if (\"$suffix\" === key) {\n\t                    var lowerCaseResourceName = str + value, origResourceName = _.find(resourceNames, function(resourceName) {\n\t                        return resourceName.toLowerCase() === lowerCaseResourceName;\n\t                    });\n\t                    shortAliases[origResourceName] = origResourceName.slice(0, str.length);\n\t                } else traverseNodes(str + key, value);\n\t            });\n\t        };\n\t        traverseNodes(\"\", trie);\n\t        _(resourceNames).invokeMap(\"split\", \"__\").filter(function(resource) {\n\t            return resource.length > 1;\n\t        }).each(function(factType) {\n\t            shortAliases[factType.join(\"__\")] = _.map(factType, function(part) {\n\t                return shortAliases[part] ? shortAliases[part] : part;\n\t            }).join(\"__\");\n\t        });\n\t        return shortAliases;\n\t    };\n\t    OData2AbstractSQL.setClientModel = function(clientModel) {\n\t        this.clientModel = clientModel;\n\t        var shortAliases = generateShortAliases(clientModel);\n\t        this.checkAlias = memoize(function(alias) {\n\t            var aliasLength = alias.length;\n\t            return aliasLength < 64 ? alias : _(alias).split(\".\").map(function(part) {\n\t                if (aliasLength < 64) return part;\n\t                aliasLength -= part.length;\n\t                var shortPart = shortAliases[part];\n\t                if (shortPart) {\n\t                    aliasLength += shortPart.length;\n\t                    return shortPart;\n\t                }\n\t                aliasLength += 1;\n\t                return part[0];\n\t            }).join(\".\");\n\t        });\n\t    };\n\t});\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar normalizeOpts = __webpack_require__(54)\n\t  , resolveLength = __webpack_require__(55)\n\t  , plain         = __webpack_require__(61);\n\t\n\tmodule.exports = function (fn/*, options*/) {\n\t\tvar options = normalizeOpts(arguments[1]), length;\n\t\n\t\tif (!options.normalizer) {\n\t\t\tlength = options.length = resolveLength(options.length, fn.length, options.async);\n\t\t\tif (length !== 0) {\n\t\t\t\tif (options.primitive) {\n\t\t\t\t\tif (length === false) {\n\t\t\t\t\t\toptions.normalizer = __webpack_require__(100);\n\t\t\t\t\t} else if (length > 1) {\n\t\t\t\t\t\toptions.normalizer = __webpack_require__(101)(length);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (length === false) options.normalizer = __webpack_require__(102)();\n\t\t\t\t\telse if (length === 1) options.normalizer = __webpack_require__(104)();\n\t\t\t\t\telse options.normalizer = __webpack_require__(105)(length);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// Assure extensions\n\t\tif (options.async) __webpack_require__(106);\n\t\tif (options.dispose) __webpack_require__(108);\n\t\tif (options.maxAge) __webpack_require__(109);\n\t\tif (options.max) __webpack_require__(112);\n\t\tif (options.refCounter) __webpack_require__(114);\n\t\n\t\treturn plain(fn, options);\n\t};\n\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tvar forEach = Array.prototype.forEach, create = Object.create;\n\t\n\tvar process = function (src, obj) {\n\t\tvar key;\n\t\tfor (key in src) obj[key] = src[key];\n\t};\n\t\n\tmodule.exports = function (options/*, …options*/) {\n\t\tvar result = create(null);\n\t\tforEach.call(arguments, function (options) {\n\t\t\tif (options == null) return;\n\t\t\tprocess(Object(options), result);\n\t\t});\n\t\treturn result;\n\t};\n\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar toPosInt = __webpack_require__(56);\n\t\n\tmodule.exports = function (optsLength, fnLength, isAsync) {\n\t\tvar length;\n\t\tif (isNaN(optsLength)) {\n\t\t\tlength = fnLength;\n\t\t\tif (!(length >= 0)) return 1;\n\t\t\tif (isAsync && length) return length - 1;\n\t\t\treturn length;\n\t\t}\n\t\tif (optsLength === false) return false;\n\t\treturn toPosInt(optsLength);\n\t};\n\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar toInteger = __webpack_require__(57)\n\t\n\t  , max = Math.max;\n\t\n\tmodule.exports = function (value) { return max(0, toInteger(value)); };\n\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar sign = __webpack_require__(58)\n\t\n\t  , abs = Math.abs, floor = Math.floor;\n\t\n\tmodule.exports = function (value) {\n\t\tif (isNaN(value)) return 0;\n\t\tvalue = Number(value);\n\t\tif ((value === 0) || !isFinite(value)) return value;\n\t\treturn sign(value) * floor(abs(value));\n\t};\n\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(59)()\n\t\t? Math.sign\n\t\t: __webpack_require__(60);\n\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function () {\n\t\tvar sign = Math.sign;\n\t\tif (typeof sign !== 'function') return false;\n\t\treturn ((sign(10) === 1) && (sign(-20) === -1));\n\t};\n\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function (value) {\n\t\tvalue = Number(value);\n\t\tif (isNaN(value) || (value === 0)) return value;\n\t\treturn (value > 0) ? 1 : -1;\n\t};\n\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar callable      = __webpack_require__(62)\n\t  , forEach       = __webpack_require__(63)\n\t  , extensions    = __webpack_require__(66)\n\t  , configure     = __webpack_require__(67)\n\t  , resolveLength = __webpack_require__(55)\n\t\n\t  , hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\n\tmodule.exports = function self(fn/*, options */) {\n\t\tvar options, length, conf;\n\t\n\t\tcallable(fn);\n\t\toptions = Object(arguments[1]);\n\t\n\t\t// Do not memoize already memoized function\n\t\tif (hasOwnProperty.call(fn, '__memoized__') && !options.force) return fn;\n\t\n\t\t// Resolve length;\n\t\tlength = resolveLength(options.length, fn.length, options.async && extensions.async);\n\t\n\t\t// Configure cache map\n\t\tconf = configure(fn, length, options);\n\t\n\t\t// Bind eventual extensions\n\t\tforEach(extensions, function (fn, name) {\n\t\t\tif (options[name]) fn(options[name], conf, options);\n\t\t});\n\t\n\t\tif (self.__profiler__) self.__profiler__(conf);\n\t\n\t\tconf.updateEnv();\n\t\treturn conf.memoized;\n\t};\n\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function (fn) {\n\t\tif (typeof fn !== 'function') throw new TypeError(fn + \" is not a function\");\n\t\treturn fn;\n\t};\n\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(64)('forEach');\n\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Internal method, used by iteration functions.\n\t// Calls a function for each key-value pair found in object\n\t// Optionally takes compareFn to iterate object in specific order\n\t\n\t'use strict';\n\t\n\tvar callable = __webpack_require__(62)\n\t  , value    = __webpack_require__(65)\n\t\n\t  , bind = Function.prototype.bind, call = Function.prototype.call, keys = Object.keys\n\t  , propertyIsEnumerable = Object.prototype.propertyIsEnumerable;\n\t\n\tmodule.exports = function (method, defVal) {\n\t\treturn function (obj, cb/*, thisArg, compareFn*/) {\n\t\t\tvar list, thisArg = arguments[2], compareFn = arguments[3];\n\t\t\tobj = Object(value(obj));\n\t\t\tcallable(cb);\n\t\n\t\t\tlist = keys(obj);\n\t\t\tif (compareFn) {\n\t\t\t\tlist.sort((typeof compareFn === 'function') ? bind.call(compareFn, obj) : undefined);\n\t\t\t}\n\t\t\tif (typeof method !== 'function') method = list[method];\n\t\t\treturn call.call(method, list, function (key, index) {\n\t\t\t\tif (!propertyIsEnumerable.call(obj, key)) return defVal;\n\t\t\t\treturn call.call(cb, thisArg, obj[key], key, obj, index);\n\t\t\t});\n\t\t};\n\t};\n\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function (value) {\n\t\tif (value == null) throw new TypeError(\"Cannot use null or undefined\");\n\t\treturn value;\n\t};\n\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar customError      = __webpack_require__(68)\n\t  , defineLength     = __webpack_require__(75)\n\t  , d                = __webpack_require__(77)\n\t  , ee               = __webpack_require__(82).methods\n\t  , resolveResolve   = __webpack_require__(84)\n\t  , resolveNormalize = __webpack_require__(99)\n\t\n\t  , apply = Function.prototype.apply, call = Function.prototype.call\n\t  , create = Object.create, hasOwnProperty = Object.prototype.hasOwnProperty\n\t  , defineProperties = Object.defineProperties\n\t  , on = ee.on, emit = ee.emit;\n\t\n\tmodule.exports = function (original, length, options) {\n\t\tvar cache = create(null), conf, memLength, get, set, del, clear, extDel, normalizer\n\t\t  , getListeners, setListeners, deleteListeners, memoized, resolve;\n\t\tif (length !== false) memLength = length;\n\t\telse if (isNaN(original.length)) memLength = 1;\n\t\telse memLength = original.length;\n\t\n\t\tif (options.normalizer) {\n\t\t\tnormalizer = resolveNormalize(options.normalizer);\n\t\t\tget = normalizer.get;\n\t\t\tset = normalizer.set;\n\t\t\tdel = normalizer.delete;\n\t\t\tclear = normalizer.clear;\n\t\t}\n\t\tif (options.resolvers != null) resolve = resolveResolve(options.resolvers);\n\t\n\t\tif (get) {\n\t\t\tmemoized = defineLength(function (arg) {\n\t\t\t\tvar id, result, args = arguments;\n\t\t\t\tif (resolve) args = resolve(args);\n\t\t\t\tid = get(args);\n\t\t\t\tif (id !== null) {\n\t\t\t\t\tif (hasOwnProperty.call(cache, id)) {\n\t\t\t\t\t\tif (getListeners) conf.emit('get', id, args, this);\n\t\t\t\t\t\treturn cache[id];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (args.length === 1) result = call.call(original, this, args[0]);\n\t\t\t\telse result = apply.call(original, this, args);\n\t\t\t\tif (id === null) {\n\t\t\t\t\tid = get(args);\n\t\t\t\t\tif (id !== null) throw customError(\"Circular invocation\", 'CIRCULAR_INVOCATION');\n\t\t\t\t\tid = set(args);\n\t\t\t\t} else if (hasOwnProperty.call(cache, id)) {\n\t\t\t\t\tthrow customError(\"Circular invocation\", 'CIRCULAR_INVOCATION');\n\t\t\t\t}\n\t\t\t\tcache[id] = result;\n\t\t\t\tif (setListeners) conf.emit('set', id);\n\t\t\t\treturn result;\n\t\t\t}, memLength);\n\t\t} else if (length === 0) {\n\t\t\tmemoized = function () {\n\t\t\t\tvar result;\n\t\t\t\tif (hasOwnProperty.call(cache, 'data')) {\n\t\t\t\t\tif (getListeners) conf.emit('get', 'data', arguments, this);\n\t\t\t\t\treturn cache.data;\n\t\t\t\t}\n\t\t\t\tif (!arguments.length) result = call.call(original, this);\n\t\t\t\telse result = apply.call(original, this, arguments);\n\t\t\t\tif (hasOwnProperty.call(cache, 'data')) {\n\t\t\t\t\tthrow customError(\"Circular invocation\", 'CIRCULAR_INVOCATION');\n\t\t\t\t}\n\t\t\t\tcache.data = result;\n\t\t\t\tif (setListeners) conf.emit('set', 'data');\n\t\t\t\treturn result;\n\t\t\t};\n\t\t} else {\n\t\t\tmemoized = function (arg) {\n\t\t\t\tvar result, args = arguments, id;\n\t\t\t\tif (resolve) args = resolve(arguments);\n\t\t\t\tid = String(args[0]);\n\t\t\t\tif (hasOwnProperty.call(cache, id)) {\n\t\t\t\t\tif (getListeners) conf.emit('get', id, args, this);\n\t\t\t\t\treturn cache[id];\n\t\t\t\t}\n\t\t\t\tif (args.length === 1) result = call.call(original, this, args[0]);\n\t\t\t\telse result = apply.call(original, this, args);\n\t\t\t\tif (hasOwnProperty.call(cache, id)) {\n\t\t\t\t\tthrow customError(\"Circular invocation\", 'CIRCULAR_INVOCATION');\n\t\t\t\t}\n\t\t\t\tcache[id] = result;\n\t\t\t\tif (setListeners) conf.emit('set', id);\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\tconf = {\n\t\t\toriginal: original,\n\t\t\tmemoized: memoized,\n\t\t\tget: function (args) {\n\t\t\t\tif (resolve) args = resolve(args);\n\t\t\t\tif (get) return get(args);\n\t\t\t\treturn String(args[0]);\n\t\t\t},\n\t\t\thas: function (id) { return hasOwnProperty.call(cache, id); },\n\t\t\tdelete: function (id) {\n\t\t\t\tvar result;\n\t\t\t\tif (!hasOwnProperty.call(cache, id)) return;\n\t\t\t\tif (del) del(id);\n\t\t\t\tresult = cache[id];\n\t\t\t\tdelete cache[id];\n\t\t\t\tif (deleteListeners) conf.emit('delete', id, result);\n\t\t\t},\n\t\t\tclear: function () {\n\t\t\t\tvar oldCache = cache;\n\t\t\t\tif (clear) clear();\n\t\t\t\tcache = create(null);\n\t\t\t\tconf.emit('clear', oldCache);\n\t\t\t},\n\t\t\ton: function (type, listener) {\n\t\t\t\tif (type === 'get') getListeners = true;\n\t\t\t\telse if (type === 'set') setListeners = true;\n\t\t\t\telse if (type === 'delete') deleteListeners = true;\n\t\t\t\treturn on.call(this, type, listener);\n\t\t\t},\n\t\t\temit: emit,\n\t\t\tupdateEnv: function () { original = conf.original; }\n\t\t};\n\t\tif (get) {\n\t\t\textDel = defineLength(function (arg) {\n\t\t\t\tvar id, args = arguments;\n\t\t\t\tif (resolve) args = resolve(args);\n\t\t\t\tid = get(args);\n\t\t\t\tif (id === null) return;\n\t\t\t\tconf.delete(id);\n\t\t\t}, memLength);\n\t\t} else if (length === 0) {\n\t\t\textDel = function () { return conf.delete('data'); };\n\t\t} else {\n\t\t\textDel = function (arg) {\n\t\t\t\tif (resolve) arg = resolve(arguments)[0];\n\t\t\t\treturn conf.delete(arg);\n\t\t\t};\n\t\t}\n\t\tdefineProperties(memoized, {\n\t\t\t__memoized__: d(true),\n\t\t\tdelete: d(extDel),\n\t\t\tclear: d(conf.clear)\n\t\t});\n\t\treturn conf;\n\t};\n\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar assign = __webpack_require__(69)\n\t\n\t  , captureStackTrace = Error.captureStackTrace;\n\t\n\texports = module.exports = function (message/*, code, ext*/) {\n\t\tvar err = new Error(message), code = arguments[1], ext = arguments[2];\n\t\tif (ext == null) {\n\t\t\tif (code && (typeof code === 'object')) {\n\t\t\t\text = code;\n\t\t\t\tcode = null;\n\t\t\t}\n\t\t}\n\t\tif (ext != null) assign(err, ext);\n\t\tif (code != null) err.code = String(code);\n\t\tif (captureStackTrace) captureStackTrace(err, exports);\n\t\treturn err;\n\t};\n\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(70)()\n\t\t? Object.assign\n\t\t: __webpack_require__(71);\n\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function () {\n\t\tvar assign = Object.assign, obj;\n\t\tif (typeof assign !== 'function') return false;\n\t\tobj = { foo: 'raz' };\n\t\tassign(obj, { bar: 'dwa' }, { trzy: 'trzy' });\n\t\treturn (obj.foo + obj.bar + obj.trzy) === 'razdwatrzy';\n\t};\n\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar keys  = __webpack_require__(72)\n\t  , value = __webpack_require__(65)\n\t\n\t  , max = Math.max;\n\t\n\tmodule.exports = function (dest, src/*, …srcn*/) {\n\t\tvar error, i, l = max(arguments.length, 2), assign;\n\t\tdest = Object(value(dest));\n\t\tassign = function (key) {\n\t\t\ttry { dest[key] = src[key]; } catch (e) {\n\t\t\t\tif (!error) error = e;\n\t\t\t}\n\t\t};\n\t\tfor (i = 1; i < l; ++i) {\n\t\t\tsrc = arguments[i];\n\t\t\tkeys(src).forEach(assign);\n\t\t}\n\t\tif (error !== undefined) throw error;\n\t\treturn dest;\n\t};\n\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(73)()\n\t\t? Object.keys\n\t\t: __webpack_require__(74);\n\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function () {\n\t\ttry {\n\t\t\tObject.keys('primitive');\n\t\t\treturn true;\n\t\t} catch (e) { return false; }\n\t};\n\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tvar keys = Object.keys;\n\t\n\tmodule.exports = function (object) {\n\t\treturn keys(object == null ? object : Object(object));\n\t};\n\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar toPosInt = __webpack_require__(56)\n\t\n\t  , test = function (a, b) {}, desc, defineProperty\n\t  , generate, mixin;\n\t\n\ttry {\n\t\tObject.defineProperty(test, 'length', { configurable: true, writable: false,\n\t\t\tenumerable: false, value: 1 });\n\t} catch (ignore) {}\n\t\n\tif (test.length === 1) {\n\t\t// ES6\n\t\tdesc = { configurable: true, writable: false, enumerable: false };\n\t\tdefineProperty = Object.defineProperty;\n\t\tmodule.exports = function (fn, length) {\n\t\t\tlength = toPosInt(length);\n\t\t\tif (fn.length === length) return fn;\n\t\t\tdesc.value = length;\n\t\t\treturn defineProperty(fn, 'length', desc);\n\t\t};\n\t} else {\n\t\tmixin = __webpack_require__(76);\n\t\tgenerate = (function () {\n\t\t\tvar cache = [];\n\t\t\treturn function (l) {\n\t\t\t\tvar args, i = 0;\n\t\t\t\tif (cache[l]) return cache[l];\n\t\t\t\targs = [];\n\t\t\t\twhile (l--) args.push('a' + (++i).toString(36));\n\t\t\t\treturn new Function('fn', 'return function (' + args.join(', ') +\n\t\t\t\t\t') { return fn.apply(this, arguments); };');\n\t\t\t};\n\t\t}());\n\t\tmodule.exports = function (src, length) {\n\t\t\tvar target;\n\t\t\tlength = toPosInt(length);\n\t\t\tif (src.length === length) return src;\n\t\t\ttarget = generate(length)(src);\n\t\t\ttry { mixin(target, src); } catch (ignore) {}\n\t\t\treturn target;\n\t\t};\n\t}\n\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar value = __webpack_require__(65)\n\t\n\t  , defineProperty = Object.defineProperty\n\t  , getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor\n\t  , getOwnPropertyNames = Object.getOwnPropertyNames\n\t  , getOwnPropertySymbols = Object.getOwnPropertySymbols;\n\t\n\tmodule.exports = function (target, source) {\n\t\tvar error, sourceObject = Object(value(source));\n\t\ttarget = Object(value(target));\n\t\tgetOwnPropertyNames(sourceObject).forEach(function (name) {\n\t\t\ttry {\n\t\t\t\tdefineProperty(target, name, getOwnPropertyDescriptor(source, name));\n\t\t\t} catch (e) { error = e; }\n\t\t});\n\t\tif (typeof getOwnPropertySymbols === 'function') {\n\t\t\tgetOwnPropertySymbols(sourceObject).forEach(function (symbol) {\n\t\t\t\ttry {\n\t\t\t\t\tdefineProperty(target, symbol, getOwnPropertyDescriptor(source, symbol));\n\t\t\t\t} catch (e) { error = e; }\n\t\t\t});\n\t\t}\n\t\tif (error !== undefined) throw error;\n\t\treturn target;\n\t};\n\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar assign        = __webpack_require__(69)\n\t  , normalizeOpts = __webpack_require__(54)\n\t  , isCallable    = __webpack_require__(78)\n\t  , contains      = __webpack_require__(79)\n\t\n\t  , d;\n\t\n\td = module.exports = function (dscr, value/*, options*/) {\n\t\tvar c, e, w, options, desc;\n\t\tif ((arguments.length < 2) || (typeof dscr !== 'string')) {\n\t\t\toptions = value;\n\t\t\tvalue = dscr;\n\t\t\tdscr = null;\n\t\t} else {\n\t\t\toptions = arguments[2];\n\t\t}\n\t\tif (dscr == null) {\n\t\t\tc = w = true;\n\t\t\te = false;\n\t\t} else {\n\t\t\tc = contains.call(dscr, 'c');\n\t\t\te = contains.call(dscr, 'e');\n\t\t\tw = contains.call(dscr, 'w');\n\t\t}\n\t\n\t\tdesc = { value: value, configurable: c, enumerable: e, writable: w };\n\t\treturn !options ? desc : assign(normalizeOpts(options), desc);\n\t};\n\t\n\td.gs = function (dscr, get, set/*, options*/) {\n\t\tvar c, e, options, desc;\n\t\tif (typeof dscr !== 'string') {\n\t\t\toptions = set;\n\t\t\tset = get;\n\t\t\tget = dscr;\n\t\t\tdscr = null;\n\t\t} else {\n\t\t\toptions = arguments[3];\n\t\t}\n\t\tif (get == null) {\n\t\t\tget = undefined;\n\t\t} else if (!isCallable(get)) {\n\t\t\toptions = get;\n\t\t\tget = set = undefined;\n\t\t} else if (set == null) {\n\t\t\tset = undefined;\n\t\t} else if (!isCallable(set)) {\n\t\t\toptions = set;\n\t\t\tset = undefined;\n\t\t}\n\t\tif (dscr == null) {\n\t\t\tc = true;\n\t\t\te = false;\n\t\t} else {\n\t\t\tc = contains.call(dscr, 'c');\n\t\t\te = contains.call(dscr, 'e');\n\t\t}\n\t\n\t\tdesc = { get: get, set: set, configurable: c, enumerable: e };\n\t\treturn !options ? desc : assign(normalizeOpts(options), desc);\n\t};\n\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports) {\n\n\t// Deprecated\n\t\n\t'use strict';\n\t\n\tmodule.exports = function (obj) { return typeof obj === 'function'; };\n\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(80)()\n\t\t? String.prototype.contains\n\t\t: __webpack_require__(81);\n\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tvar str = 'razdwatrzy';\n\t\n\tmodule.exports = function () {\n\t\tif (typeof str.contains !== 'function') return false;\n\t\treturn ((str.contains('dwa') === true) && (str.contains('foo') === false));\n\t};\n\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tvar indexOf = String.prototype.indexOf;\n\t\n\tmodule.exports = function (searchString/*, position*/) {\n\t\treturn indexOf.call(this, searchString, arguments[1]) > -1;\n\t};\n\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar d        = __webpack_require__(83)\n\t  , callable = __webpack_require__(62)\n\t\n\t  , apply = Function.prototype.apply, call = Function.prototype.call\n\t  , create = Object.create, defineProperty = Object.defineProperty\n\t  , defineProperties = Object.defineProperties\n\t  , hasOwnProperty = Object.prototype.hasOwnProperty\n\t  , descriptor = { configurable: true, enumerable: false, writable: true }\n\t\n\t  , on, once, off, emit, methods, descriptors, base;\n\t\n\ton = function (type, listener) {\n\t\tvar data;\n\t\n\t\tcallable(listener);\n\t\n\t\tif (!hasOwnProperty.call(this, '__ee__')) {\n\t\t\tdata = descriptor.value = create(null);\n\t\t\tdefineProperty(this, '__ee__', descriptor);\n\t\t\tdescriptor.value = null;\n\t\t} else {\n\t\t\tdata = this.__ee__;\n\t\t}\n\t\tif (!data[type]) data[type] = listener;\n\t\telse if (typeof data[type] === 'object') data[type].push(listener);\n\t\telse data[type] = [data[type], listener];\n\t\n\t\treturn this;\n\t};\n\t\n\tonce = function (type, listener) {\n\t\tvar once, self;\n\t\n\t\tcallable(listener);\n\t\tself = this;\n\t\ton.call(this, type, once = function () {\n\t\t\toff.call(self, type, once);\n\t\t\tapply.call(listener, this, arguments);\n\t\t});\n\t\n\t\tonce.__eeOnceListener__ = listener;\n\t\treturn this;\n\t};\n\t\n\toff = function (type, listener) {\n\t\tvar data, listeners, candidate, i;\n\t\n\t\tcallable(listener);\n\t\n\t\tif (!hasOwnProperty.call(this, '__ee__')) return this;\n\t\tdata = this.__ee__;\n\t\tif (!data[type]) return this;\n\t\tlisteners = data[type];\n\t\n\t\tif (typeof listeners === 'object') {\n\t\t\tfor (i = 0; (candidate = listeners[i]); ++i) {\n\t\t\t\tif ((candidate === listener) ||\n\t\t\t\t\t\t(candidate.__eeOnceListener__ === listener)) {\n\t\t\t\t\tif (listeners.length === 2) data[type] = listeners[i ? 0 : 1];\n\t\t\t\t\telse listeners.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif ((listeners === listener) ||\n\t\t\t\t\t(listeners.__eeOnceListener__ === listener)) {\n\t\t\t\tdelete data[type];\n\t\t\t}\n\t\t}\n\t\n\t\treturn this;\n\t};\n\t\n\temit = function (type) {\n\t\tvar i, l, listener, listeners, args;\n\t\n\t\tif (!hasOwnProperty.call(this, '__ee__')) return;\n\t\tlisteners = this.__ee__[type];\n\t\tif (!listeners) return;\n\t\n\t\tif (typeof listeners === 'object') {\n\t\t\tl = arguments.length;\n\t\t\targs = new Array(l - 1);\n\t\t\tfor (i = 1; i < l; ++i) args[i - 1] = arguments[i];\n\t\n\t\t\tlisteners = listeners.slice();\n\t\t\tfor (i = 0; (listener = listeners[i]); ++i) {\n\t\t\t\tapply.call(listener, this, args);\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (arguments.length) {\n\t\t\tcase 1:\n\t\t\t\tcall.call(listeners, this);\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tcall.call(listeners, this, arguments[1]);\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tcall.call(listeners, this, arguments[1], arguments[2]);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tl = arguments.length;\n\t\t\t\targs = new Array(l - 1);\n\t\t\t\tfor (i = 1; i < l; ++i) {\n\t\t\t\t\targs[i - 1] = arguments[i];\n\t\t\t\t}\n\t\t\t\tapply.call(listeners, this, args);\n\t\t\t}\n\t\t}\n\t};\n\t\n\tmethods = {\n\t\ton: on,\n\t\tonce: once,\n\t\toff: off,\n\t\temit: emit\n\t};\n\t\n\tdescriptors = {\n\t\ton: d(on),\n\t\tonce: d(once),\n\t\toff: d(off),\n\t\temit: d(emit)\n\t};\n\t\n\tbase = defineProperties({}, descriptors);\n\t\n\tmodule.exports = exports = function (o) {\n\t\treturn (o == null) ? create(base) : defineProperties(Object(o), descriptors);\n\t};\n\texports.methods = methods;\n\n\n/***/ }),\n/* 83 */\n77,\n/* 84 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar toArray  = __webpack_require__(85)\n\t  , callable = __webpack_require__(62)\n\t\n\t  , slice = Array.prototype.slice\n\t  , resolveArgs;\n\t\n\tresolveArgs = function (args) {\n\t\treturn this.map(function (r, i) {\n\t\t\treturn r ? r(args[i]) : args[i];\n\t\t}).concat(slice.call(args, this.length));\n\t};\n\t\n\tmodule.exports = function (resolvers) {\n\t\tresolvers = toArray(resolvers);\n\t\tresolvers.forEach(function (r) {\n\t\t\tif (r != null) callable(r);\n\t\t});\n\t\treturn resolveArgs.bind(resolvers);\n\t};\n\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar from = __webpack_require__(86)\n\t\n\t  , isArray = Array.isArray;\n\t\n\tmodule.exports = function (arrayLike) {\n\t\treturn isArray(arrayLike) ? arrayLike : from(arrayLike);\n\t};\n\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(87)()\n\t\t? Array.from\n\t\t: __webpack_require__(88);\n\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function () {\n\t\tvar from = Array.from, arr, result;\n\t\tif (typeof from !== 'function') return false;\n\t\tarr = ['raz', 'dwa'];\n\t\tresult = from(arr);\n\t\treturn Boolean(result && (result !== arr) && (result[1] === 'dwa'));\n\t};\n\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar iteratorSymbol = __webpack_require__(89).iterator\n\t  , isArguments    = __webpack_require__(95)\n\t  , isFunction     = __webpack_require__(96)\n\t  , toPosInt       = __webpack_require__(56)\n\t  , callable       = __webpack_require__(62)\n\t  , validValue     = __webpack_require__(65)\n\t  , isString       = __webpack_require__(98)\n\t\n\t  , isArray = Array.isArray, call = Function.prototype.call\n\t  , desc = { configurable: true, enumerable: true, writable: true, value: null }\n\t  , defineProperty = Object.defineProperty;\n\t\n\tmodule.exports = function (arrayLike/*, mapFn, thisArg*/) {\n\t\tvar mapFn = arguments[1], thisArg = arguments[2], Constructor, i, j, arr, l, code, iterator\n\t\t  , result, getIterator, value;\n\t\n\t\tarrayLike = Object(validValue(arrayLike));\n\t\n\t\tif (mapFn != null) callable(mapFn);\n\t\tif (!this || (this === Array) || !isFunction(this)) {\n\t\t\t// Result: Plain array\n\t\t\tif (!mapFn) {\n\t\t\t\tif (isArguments(arrayLike)) {\n\t\t\t\t\t// Source: Arguments\n\t\t\t\t\tl = arrayLike.length;\n\t\t\t\t\tif (l !== 1) return Array.apply(null, arrayLike);\n\t\t\t\t\tarr = new Array(1);\n\t\t\t\t\tarr[0] = arrayLike[0];\n\t\t\t\t\treturn arr;\n\t\t\t\t}\n\t\t\t\tif (isArray(arrayLike)) {\n\t\t\t\t\t// Source: Array\n\t\t\t\t\tarr = new Array(l = arrayLike.length);\n\t\t\t\t\tfor (i = 0; i < l; ++i) arr[i] = arrayLike[i];\n\t\t\t\t\treturn arr;\n\t\t\t\t}\n\t\t\t}\n\t\t\tarr = [];\n\t\t} else {\n\t\t\t// Result: Non plain array\n\t\t\tConstructor = this;\n\t\t}\n\t\n\t\tif (!isArray(arrayLike)) {\n\t\t\tif ((getIterator = arrayLike[iteratorSymbol]) !== undefined) {\n\t\t\t\t// Source: Iterator\n\t\t\t\titerator = callable(getIterator).call(arrayLike);\n\t\t\t\tif (Constructor) arr = new Constructor();\n\t\t\t\tresult = iterator.next();\n\t\t\t\ti = 0;\n\t\t\t\twhile (!result.done) {\n\t\t\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, result.value, i) : result.value;\n\t\t\t\t\tif (!Constructor) {\n\t\t\t\t\t\tarr[i] = value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdesc.value = value;\n\t\t\t\t\t\tdefineProperty(arr, i, desc);\n\t\t\t\t\t}\n\t\t\t\t\tresult = iterator.next();\n\t\t\t\t\t++i;\n\t\t\t\t}\n\t\t\t\tl = i;\n\t\t\t} else if (isString(arrayLike)) {\n\t\t\t\t// Source: String\n\t\t\t\tl = arrayLike.length;\n\t\t\t\tif (Constructor) arr = new Constructor();\n\t\t\t\tfor (i = 0, j = 0; i < l; ++i) {\n\t\t\t\t\tvalue = arrayLike[i];\n\t\t\t\t\tif ((i + 1) < l) {\n\t\t\t\t\t\tcode = value.charCodeAt(0);\n\t\t\t\t\t\tif ((code >= 0xD800) && (code <= 0xDBFF)) value += arrayLike[++i];\n\t\t\t\t\t}\n\t\t\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, value, j) : value;\n\t\t\t\t\tif (!Constructor) {\n\t\t\t\t\t\tarr[j] = value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdesc.value = value;\n\t\t\t\t\t\tdefineProperty(arr, j, desc);\n\t\t\t\t\t}\n\t\t\t\t\t++j;\n\t\t\t\t}\n\t\t\t\tl = j;\n\t\t\t}\n\t\t}\n\t\tif (l === undefined) {\n\t\t\t// Source: array or array-like\n\t\t\tl = toPosInt(arrayLike.length);\n\t\t\tif (Constructor) arr = new Constructor(l);\n\t\t\tfor (i = 0; i < l; ++i) {\n\t\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, arrayLike[i], i) : arrayLike[i];\n\t\t\t\tif (!Constructor) {\n\t\t\t\t\tarr[i] = value;\n\t\t\t\t} else {\n\t\t\t\t\tdesc.value = value;\n\t\t\t\t\tdefineProperty(arr, i, desc);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (Constructor) {\n\t\t\tdesc.value = null;\n\t\t\tarr.length = l;\n\t\t}\n\t\treturn arr;\n\t};\n\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(90)() ? Symbol : __webpack_require__(91);\n\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tvar validTypes = { object: true, symbol: true };\n\t\n\tmodule.exports = function () {\n\t\tvar symbol;\n\t\tif (typeof Symbol !== 'function') return false;\n\t\tsymbol = Symbol('test symbol');\n\t\ttry { String(symbol); } catch (e) { return false; }\n\t\n\t\t// Return 'true' also for polyfills\n\t\tif (!validTypes[typeof Symbol.iterator]) return false;\n\t\tif (!validTypes[typeof Symbol.toPrimitive]) return false;\n\t\tif (!validTypes[typeof Symbol.toStringTag]) return false;\n\t\n\t\treturn true;\n\t};\n\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// ES2015 Symbol polyfill for environments that do not (or partially) support it\n\t\n\t'use strict';\n\t\n\tvar d              = __webpack_require__(92)\n\t  , validateSymbol = __webpack_require__(93)\n\t\n\t  , create = Object.create, defineProperties = Object.defineProperties\n\t  , defineProperty = Object.defineProperty, objPrototype = Object.prototype\n\t  , NativeSymbol, SymbolPolyfill, HiddenSymbol, globalSymbols = create(null)\n\t  , isNativeSafe;\n\t\n\tif (typeof Symbol === 'function') {\n\t\tNativeSymbol = Symbol;\n\t\ttry {\n\t\t\tString(NativeSymbol());\n\t\t\tisNativeSafe = true;\n\t\t} catch (ignore) {}\n\t}\n\t\n\tvar generateName = (function () {\n\t\tvar created = create(null);\n\t\treturn function (desc) {\n\t\t\tvar postfix = 0, name, ie11BugWorkaround;\n\t\t\twhile (created[desc + (postfix || '')]) ++postfix;\n\t\t\tdesc += (postfix || '');\n\t\t\tcreated[desc] = true;\n\t\t\tname = '@@' + desc;\n\t\t\tdefineProperty(objPrototype, name, d.gs(null, function (value) {\n\t\t\t\t// For IE11 issue see:\n\t\t\t\t// https://connect.microsoft.com/IE/feedbackdetail/view/1928508/\n\t\t\t\t//    ie11-broken-getters-on-dom-objects\n\t\t\t\t// https://github.com/medikoo/es6-symbol/issues/12\n\t\t\t\tif (ie11BugWorkaround) return;\n\t\t\t\tie11BugWorkaround = true;\n\t\t\t\tdefineProperty(this, name, d(value));\n\t\t\t\tie11BugWorkaround = false;\n\t\t\t}));\n\t\t\treturn name;\n\t\t};\n\t}());\n\t\n\t// Internal constructor (not one exposed) for creating Symbol instances.\n\t// This one is used to ensure that `someSymbol instanceof Symbol` always return false\n\tHiddenSymbol = function Symbol(description) {\n\t\tif (this instanceof HiddenSymbol) throw new TypeError('Symbol is not a constructor');\n\t\treturn SymbolPolyfill(description);\n\t};\n\t\n\t// Exposed `Symbol` constructor\n\t// (returns instances of HiddenSymbol)\n\tmodule.exports = SymbolPolyfill = function Symbol(description) {\n\t\tvar symbol;\n\t\tif (this instanceof Symbol) throw new TypeError('Symbol is not a constructor');\n\t\tif (isNativeSafe) return NativeSymbol(description);\n\t\tsymbol = create(HiddenSymbol.prototype);\n\t\tdescription = (description === undefined ? '' : String(description));\n\t\treturn defineProperties(symbol, {\n\t\t\t__description__: d('', description),\n\t\t\t__name__: d('', generateName(description))\n\t\t});\n\t};\n\tdefineProperties(SymbolPolyfill, {\n\t\tfor: d(function (key) {\n\t\t\tif (globalSymbols[key]) return globalSymbols[key];\n\t\t\treturn (globalSymbols[key] = SymbolPolyfill(String(key)));\n\t\t}),\n\t\tkeyFor: d(function (s) {\n\t\t\tvar key;\n\t\t\tvalidateSymbol(s);\n\t\t\tfor (key in globalSymbols) if (globalSymbols[key] === s) return key;\n\t\t}),\n\t\n\t\t// To ensure proper interoperability with other native functions (e.g. Array.from)\n\t\t// fallback to eventual native implementation of given symbol\n\t\thasInstance: d('', (NativeSymbol && NativeSymbol.hasInstance) || SymbolPolyfill('hasInstance')),\n\t\tisConcatSpreadable: d('', (NativeSymbol && NativeSymbol.isConcatSpreadable) ||\n\t\t\tSymbolPolyfill('isConcatSpreadable')),\n\t\titerator: d('', (NativeSymbol && NativeSymbol.iterator) || SymbolPolyfill('iterator')),\n\t\tmatch: d('', (NativeSymbol && NativeSymbol.match) || SymbolPolyfill('match')),\n\t\treplace: d('', (NativeSymbol && NativeSymbol.replace) || SymbolPolyfill('replace')),\n\t\tsearch: d('', (NativeSymbol && NativeSymbol.search) || SymbolPolyfill('search')),\n\t\tspecies: d('', (NativeSymbol && NativeSymbol.species) || SymbolPolyfill('species')),\n\t\tsplit: d('', (NativeSymbol && NativeSymbol.split) || SymbolPolyfill('split')),\n\t\ttoPrimitive: d('', (NativeSymbol && NativeSymbol.toPrimitive) || SymbolPolyfill('toPrimitive')),\n\t\ttoStringTag: d('', (NativeSymbol && NativeSymbol.toStringTag) || SymbolPolyfill('toStringTag')),\n\t\tunscopables: d('', (NativeSymbol && NativeSymbol.unscopables) || SymbolPolyfill('unscopables'))\n\t});\n\t\n\t// Internal tweaks for real symbol producer\n\tdefineProperties(HiddenSymbol.prototype, {\n\t\tconstructor: d(SymbolPolyfill),\n\t\ttoString: d('', function () { return this.__name__; })\n\t});\n\t\n\t// Proper implementation of methods exposed on Symbol.prototype\n\t// They won't be accessible on produced symbol instances as they derive from HiddenSymbol.prototype\n\tdefineProperties(SymbolPolyfill.prototype, {\n\t\ttoString: d(function () { return 'Symbol (' + validateSymbol(this).__description__ + ')'; }),\n\t\tvalueOf: d(function () { return validateSymbol(this); })\n\t});\n\tdefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toPrimitive, d('', function () {\n\t\tvar symbol = validateSymbol(this);\n\t\tif (typeof symbol === 'symbol') return symbol;\n\t\treturn symbol.toString();\n\t}));\n\tdefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d('c', 'Symbol'));\n\t\n\t// Proper implementaton of toPrimitive and toStringTag for returned symbol instances\n\tdefineProperty(HiddenSymbol.prototype, SymbolPolyfill.toStringTag,\n\t\td('c', SymbolPolyfill.prototype[SymbolPolyfill.toStringTag]));\n\t\n\t// Note: It's important to define `toPrimitive` as last one, as some implementations\n\t// implement `toPrimitive` natively without implementing `toStringTag` (or other specified symbols)\n\t// And that may invoke error in definition flow:\n\t// See: https://github.com/medikoo/es6-symbol/issues/13#issuecomment-164146149\n\tdefineProperty(HiddenSymbol.prototype, SymbolPolyfill.toPrimitive,\n\t\td('c', SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive]));\n\n\n/***/ }),\n/* 92 */\n77,\n/* 93 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar isSymbol = __webpack_require__(94);\n\t\n\tmodule.exports = function (value) {\n\t\tif (!isSymbol(value)) throw new TypeError(value + \" is not a symbol\");\n\t\treturn value;\n\t};\n\n\n/***/ }),\n/* 94 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function (x) {\n\t\tif (!x) return false;\n\t\tif (typeof x === 'symbol') return true;\n\t\tif (!x.constructor) return false;\n\t\tif (x.constructor.name !== 'Symbol') return false;\n\t\treturn (x[x.constructor.toStringTag] === 'Symbol');\n\t};\n\n\n/***/ }),\n/* 95 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tvar toString = Object.prototype.toString\n\t\n\t  , id = toString.call((function () { return arguments; }()));\n\t\n\tmodule.exports = function (x) { return (toString.call(x) === id); };\n\n\n/***/ }),\n/* 96 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar toString = Object.prototype.toString\n\t\n\t  , id = toString.call(__webpack_require__(97));\n\t\n\tmodule.exports = function (f) {\n\t\treturn (typeof f === \"function\") && (toString.call(f) === id);\n\t};\n\n\n/***/ }),\n/* 97 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function () {};\n\n\n/***/ }),\n/* 98 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tvar toString = Object.prototype.toString\n\t\n\t  , id = toString.call('');\n\t\n\tmodule.exports = function (x) {\n\t\treturn (typeof x === 'string') || (x && (typeof x === 'object') &&\n\t\t\t((x instanceof String) || (toString.call(x) === id))) || false;\n\t};\n\n\n/***/ }),\n/* 99 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar callable = __webpack_require__(62);\n\t\n\tmodule.exports = function (userNormalizer) {\n\t\tvar normalizer;\n\t\tif (typeof userNormalizer === 'function') return { set: userNormalizer, get: userNormalizer };\n\t\tnormalizer = { get: callable(userNormalizer.get) };\n\t\tif (userNormalizer.set !== undefined) {\n\t\t\tnormalizer.set = callable(userNormalizer.set);\n\t\t\tnormalizer.delete = callable(userNormalizer.delete);\n\t\t\tnormalizer.clear = callable(userNormalizer.clear);\n\t\t\treturn normalizer;\n\t\t}\n\t\tnormalizer.set = normalizer.get;\n\t\treturn normalizer;\n\t};\n\n\n/***/ }),\n/* 100 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function (args) {\n\t\tvar id, i, length = args.length;\n\t\tif (!length) return '\\u0002';\n\t\tid = String(args[i = 0]);\n\t\twhile (--length) id += '\\u0001' + args[++i];\n\t\treturn id;\n\t};\n\n\n/***/ }),\n/* 101 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function (length) {\n\t\tif (!length) {\n\t\t\treturn function () { return ''; };\n\t\t}\n\t\treturn function (args) {\n\t\t\tvar id = String(args[0]), i = 0, l = length;\n\t\t\twhile (--l) { id += '\\u0001' + args[++i]; }\n\t\t\treturn id;\n\t\t};\n\t};\n\n\n/***/ }),\n/* 102 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar indexOf = __webpack_require__(103)\n\t  , create = Object.create;\n\t\n\tmodule.exports = function () {\n\t\tvar lastId = 0, map = [], cache = create(null);\n\t\treturn {\n\t\t\tget: function (args) {\n\t\t\t\tvar index = 0, set = map, i, length = args.length;\n\t\t\t\tif (length === 0) return set[length] || null;\n\t\t\t\tif ((set = set[length])) {\n\t\t\t\t\twhile (index < (length - 1)) {\n\t\t\t\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\t\t\t\tif (i === -1) return null;\n\t\t\t\t\t\tset = set[1][i];\n\t\t\t\t\t\t++index;\n\t\t\t\t\t}\n\t\t\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\t\t\tif (i === -1) return null;\n\t\t\t\t\treturn set[1][i] || null;\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t},\n\t\t\tset: function (args) {\n\t\t\t\tvar index = 0, set = map, i, length = args.length;\n\t\t\t\tif (length === 0) {\n\t\t\t\t\tset[length] = ++lastId;\n\t\t\t\t} else {\n\t\t\t\t\tif (!set[length]) {\n\t\t\t\t\t\tset[length] = [[], []];\n\t\t\t\t\t}\n\t\t\t\t\tset = set[length];\n\t\t\t\t\twhile (index < (length - 1)) {\n\t\t\t\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\t\t\t\tif (i === -1) {\n\t\t\t\t\t\t\ti = set[0].push(args[index]) - 1;\n\t\t\t\t\t\t\tset[1].push([[], []]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tset = set[1][i];\n\t\t\t\t\t\t++index;\n\t\t\t\t\t}\n\t\t\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\t\t\tif (i === -1) {\n\t\t\t\t\t\ti = set[0].push(args[index]) - 1;\n\t\t\t\t\t}\n\t\t\t\t\tset[1][i] = ++lastId;\n\t\t\t\t}\n\t\t\t\tcache[lastId] = args;\n\t\t\t\treturn lastId;\n\t\t\t},\n\t\t\tdelete: function (id) {\n\t\t\t\tvar index = 0, set = map, i, args = cache[id], length = args.length\n\t\t\t\t  , path = [];\n\t\t\t\tif (length === 0) {\n\t\t\t\t\tdelete set[length];\n\t\t\t\t} else if ((set = set[length])) {\n\t\t\t\t\twhile (index < (length - 1)) {\n\t\t\t\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\t\t\t\tif (i === -1) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpath.push(set, i);\n\t\t\t\t\t\tset = set[1][i];\n\t\t\t\t\t\t++index;\n\t\t\t\t\t}\n\t\t\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\t\t\tif (i === -1) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tid = set[1][i];\n\t\t\t\t\tset[0].splice(i, 1);\n\t\t\t\t\tset[1].splice(i, 1);\n\t\t\t\t\twhile (!set[0].length && path.length) {\n\t\t\t\t\t\ti = path.pop();\n\t\t\t\t\t\tset = path.pop();\n\t\t\t\t\t\tset[0].splice(i, 1);\n\t\t\t\t\t\tset[1].splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdelete cache[id];\n\t\t\t},\n\t\t\tclear: function () {\n\t\t\t\tmap = [];\n\t\t\t\tcache = create(null);\n\t\t\t}\n\t\t};\n\t};\n\n\n/***/ }),\n/* 103 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar toPosInt = __webpack_require__(56)\n\t  , value    = __webpack_require__(65)\n\t\n\t  , indexOf = Array.prototype.indexOf\n\t  , hasOwnProperty = Object.prototype.hasOwnProperty\n\t  , abs = Math.abs, floor = Math.floor;\n\t\n\tmodule.exports = function (searchElement/*, fromIndex*/) {\n\t\tvar i, l, fromIndex, val;\n\t\tif (searchElement === searchElement) { //jslint: ignore\n\t\t\treturn indexOf.apply(this, arguments);\n\t\t}\n\t\n\t\tl = toPosInt(value(this).length);\n\t\tfromIndex = arguments[1];\n\t\tif (isNaN(fromIndex)) fromIndex = 0;\n\t\telse if (fromIndex >= 0) fromIndex = floor(fromIndex);\n\t\telse fromIndex = toPosInt(this.length) - floor(abs(fromIndex));\n\t\n\t\tfor (i = fromIndex; i < l; ++i) {\n\t\t\tif (hasOwnProperty.call(this, i)) {\n\t\t\t\tval = this[i];\n\t\t\t\tif (val !== val) return i; //jslint: ignore\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t};\n\n\n/***/ }),\n/* 104 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar indexOf = __webpack_require__(103);\n\t\n\tmodule.exports = function () {\n\t\tvar lastId = 0, argsMap = [], cache = [];\n\t\treturn {\n\t\t\tget: function (args) {\n\t\t\t\tvar index = indexOf.call(argsMap, args[0]);\n\t\t\t\treturn (index === -1) ? null : cache[index];\n\t\t\t},\n\t\t\tset: function (args) {\n\t\t\t\targsMap.push(args[0]);\n\t\t\t\tcache.push(++lastId);\n\t\t\t\treturn lastId;\n\t\t\t},\n\t\t\tdelete: function (id) {\n\t\t\t\tvar index = indexOf.call(cache, id);\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\targsMap.splice(index, 1);\n\t\t\t\t\tcache.splice(index, 1);\n\t\t\t\t}\n\t\t\t},\n\t\t\tclear: function () {\n\t\t\t\targsMap = [];\n\t\t\t\tcache = [];\n\t\t\t}\n\t\t};\n\t};\n\n\n/***/ }),\n/* 105 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar indexOf = __webpack_require__(103)\n\t  , create = Object.create;\n\t\n\tmodule.exports = function (length) {\n\t\tvar lastId = 0, map = [[], []], cache = create(null);\n\t\treturn {\n\t\t\tget: function (args) {\n\t\t\t\tvar index = 0, set = map, i;\n\t\t\t\twhile (index < (length - 1)) {\n\t\t\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\t\t\tif (i === -1) return null;\n\t\t\t\t\tset = set[1][i];\n\t\t\t\t\t++index;\n\t\t\t\t}\n\t\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\t\tif (i === -1) return null;\n\t\t\t\treturn set[1][i] || null;\n\t\t\t},\n\t\t\tset: function (args) {\n\t\t\t\tvar index = 0, set = map, i;\n\t\t\t\twhile (index < (length - 1)) {\n\t\t\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\t\t\tif (i === -1) {\n\t\t\t\t\t\ti = set[0].push(args[index]) - 1;\n\t\t\t\t\t\tset[1].push([[], []]);\n\t\t\t\t\t}\n\t\t\t\t\tset = set[1][i];\n\t\t\t\t\t++index;\n\t\t\t\t}\n\t\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\t\tif (i === -1) {\n\t\t\t\t\ti = set[0].push(args[index]) - 1;\n\t\t\t\t}\n\t\t\t\tset[1][i] = ++lastId;\n\t\t\t\tcache[lastId] = args;\n\t\t\t\treturn lastId;\n\t\t\t},\n\t\t\tdelete: function (id) {\n\t\t\t\tvar index = 0, set = map, i, path = [], args = cache[id];\n\t\t\t\twhile (index < (length - 1)) {\n\t\t\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\t\t\tif (i === -1) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tpath.push(set, i);\n\t\t\t\t\tset = set[1][i];\n\t\t\t\t\t++index;\n\t\t\t\t}\n\t\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\t\tif (i === -1) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tid = set[1][i];\n\t\t\t\tset[0].splice(i, 1);\n\t\t\t\tset[1].splice(i, 1);\n\t\t\t\twhile (!set[0].length && path.length) {\n\t\t\t\t\ti = path.pop();\n\t\t\t\t\tset = path.pop();\n\t\t\t\t\tset[0].splice(i, 1);\n\t\t\t\t\tset[1].splice(i, 1);\n\t\t\t\t}\n\t\t\t\tdelete cache[id];\n\t\t\t},\n\t\t\tclear: function () {\n\t\t\t\tmap = [[], []];\n\t\t\t\tcache = create(null);\n\t\t\t}\n\t\t};\n\t};\n\n\n/***/ }),\n/* 106 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Support for asynchronous functions\n\t\n\t'use strict';\n\t\n\tvar aFrom        = __webpack_require__(86)\n\t  , mixin        = __webpack_require__(76)\n\t  , defineLength = __webpack_require__(75)\n\t  , nextTick     = __webpack_require__(107)\n\t\n\t  , slice = Array.prototype.slice\n\t  , apply = Function.prototype.apply, create = Object.create\n\t  , hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\n\t__webpack_require__(66).async = function (tbi, conf) {\n\t\tvar waiting = create(null), cache = create(null)\n\t\t  , base = conf.memoized, original = conf.original\n\t\t  , currentCallback, currentContext, currentArgs;\n\t\n\t\t// Initial\n\t\tconf.memoized = defineLength(function (arg) {\n\t\t\tvar args = arguments, last = args[args.length - 1];\n\t\t\tif (typeof last === 'function') {\n\t\t\t\tcurrentCallback = last;\n\t\t\t\targs = slice.call(args, 0, -1);\n\t\t\t}\n\t\t\treturn base.apply(currentContext = this, currentArgs = args);\n\t\t}, base);\n\t\ttry { mixin(conf.memoized, base); } catch (ignore) {}\n\t\n\t\t// From cache (sync)\n\t\tconf.on('get', function (id) {\n\t\t\tvar cb, context, args;\n\t\t\tif (!currentCallback) return;\n\t\n\t\t\t// Unresolved\n\t\t\tif (waiting[id]) {\n\t\t\t\tif (typeof waiting[id] === 'function') waiting[id] = [waiting[id], currentCallback];\n\t\t\t\telse waiting[id].push(currentCallback);\n\t\t\t\tcurrentCallback = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Resolved, assure next tick invocation\n\t\t\tcb = currentCallback;\n\t\t\tcontext = currentContext;\n\t\t\targs = currentArgs;\n\t\t\tcurrentCallback = currentContext = currentArgs = null;\n\t\t\tnextTick(function () {\n\t\t\t\tvar data;\n\t\t\t\tif (hasOwnProperty.call(cache, id)) {\n\t\t\t\t\tdata = cache[id];\n\t\t\t\t\tconf.emit('getasync', id, args, context);\n\t\t\t\t\tapply.call(cb, data.context, data.args);\n\t\t\t\t} else {\n\t\t\t\t\t// Purged in a meantime, we shouldn't rely on cached value, recall\n\t\t\t\t\tcurrentCallback = cb;\n\t\t\t\t\tcurrentContext = context;\n\t\t\t\t\tcurrentArgs = args;\n\t\t\t\t\tbase.apply(context, args);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\n\t\t// Not from cache\n\t\tconf.original = function () {\n\t\t\tvar args, cb, origCb, result;\n\t\t\tif (!currentCallback) return apply.call(original, this, arguments);\n\t\t\targs = aFrom(arguments);\n\t\t\tcb = function self(err) {\n\t\t\t\tvar cb, args, id = self.id;\n\t\t\t\tif (id == null) {\n\t\t\t\t\t// Shouldn't happen, means async callback was called sync way\n\t\t\t\t\tnextTick(apply.bind(self, this, arguments));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tdelete self.id;\n\t\t\t\tcb = waiting[id];\n\t\t\t\tdelete waiting[id];\n\t\t\t\tif (!cb) {\n\t\t\t\t\t// Already processed,\n\t\t\t\t\t// outcome of race condition: asyncFn(1, cb), asyncFn.clear(), asyncFn(1, cb)\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\targs = aFrom(arguments);\n\t\t\t\tif (conf.has(id)) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tconf.delete(id);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcache[id] = { context: this, args: args };\n\t\t\t\t\t\tconf.emit('setasync', id, (typeof cb === 'function') ? 1 : cb.length);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (typeof cb === 'function') {\n\t\t\t\t\tresult = apply.call(cb, this, args);\n\t\t\t\t} else {\n\t\t\t\t\tcb.forEach(function (cb) { result = apply.call(cb, this, args); }, this);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t};\n\t\t\torigCb = currentCallback;\n\t\t\tcurrentCallback = currentContext = currentArgs = null;\n\t\t\targs.push(cb);\n\t\t\tresult = apply.call(original, this, args);\n\t\t\tcb.cb = origCb;\n\t\t\tcurrentCallback = cb;\n\t\t\treturn result;\n\t\t};\n\t\n\t\t// After not from cache call\n\t\tconf.on('set', function (id) {\n\t\t\tif (!currentCallback) {\n\t\t\t\tconf.delete(id);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (waiting[id]) {\n\t\t\t\t// Race condition: asyncFn(1, cb), asyncFn.clear(), asyncFn(1, cb)\n\t\t\t\tif (typeof waiting[id] === 'function') waiting[id] = [waiting[id], currentCallback.cb];\n\t\t\t\telse waiting[id].push(currentCallback.cb);\n\t\t\t} else {\n\t\t\t\twaiting[id] = currentCallback.cb;\n\t\t\t}\n\t\t\tdelete currentCallback.cb;\n\t\t\tcurrentCallback.id = id;\n\t\t\tcurrentCallback = null;\n\t\t});\n\t\n\t\t// On delete\n\t\tconf.on('delete', function (id) {\n\t\t\tvar result;\n\t\t\t// If false, we don't have value yet, so we assume that intention is not\n\t\t\t// to memoize this call. After value is obtained we don't cache it but\n\t\t\t// gracefully pass to callback\n\t\t\tif (hasOwnProperty.call(waiting, id)) return;\n\t\t\tif (!cache[id]) return;\n\t\t\tresult = cache[id];\n\t\t\tdelete cache[id];\n\t\t\tconf.emit('deleteasync', id, result);\n\t\t});\n\t\n\t\t// On clear\n\t\tconf.on('clear', function () {\n\t\t\tvar oldCache = cache;\n\t\t\tcache = create(null);\n\t\t\tconf.emit('clearasync', oldCache);\n\t\t});\n\t};\n\n\n/***/ }),\n/* 107 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tvar callable, byObserver;\n\t\n\tcallable = function (fn) {\n\t\tif (typeof fn !== 'function') throw new TypeError(fn + \" is not a function\");\n\t\treturn fn;\n\t};\n\t\n\tbyObserver = function (Observer) {\n\t\tvar node = document.createTextNode(''), queue, i = 0;\n\t\tnew Observer(function () {\n\t\t\tvar data;\n\t\t\tif (!queue) return;\n\t\t\tdata = queue;\n\t\t\tqueue = null;\n\t\t\tif (typeof data === 'function') {\n\t\t\t\tdata();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tdata.forEach(function (fn) { fn(); });\n\t\t}).observe(node, { characterData: true });\n\t\treturn function (fn) {\n\t\t\tcallable(fn);\n\t\t\tif (queue) {\n\t\t\t\tif (typeof queue === 'function') queue = [queue, fn];\n\t\t\t\telse queue.push(fn);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tqueue = fn;\n\t\t\tnode.data = (i = ++i % 2);\n\t\t};\n\t};\n\t\n\tmodule.exports = (function () {\n\t\t// Node.js\n\t\tif ((typeof process !== 'undefined') && process &&\n\t\t\t\t(typeof process.nextTick === 'function')) {\n\t\t\treturn process.nextTick;\n\t\t}\n\t\n\t\t// MutationObserver=\n\t\tif ((typeof document === 'object') && document) {\n\t\t\tif (typeof MutationObserver === 'function') {\n\t\t\t\treturn byObserver(MutationObserver);\n\t\t\t}\n\t\t\tif (typeof WebKitMutationObserver === 'function') {\n\t\t\t\treturn byObserver(WebKitMutationObserver);\n\t\t\t}\n\t\t}\n\t\n\t\t// W3C Draft\n\t\t// http://dvcs.w3.org/hg/webperf/raw-file/tip/specs/setImmediate/Overview.html\n\t\tif (typeof setImmediate === 'function') {\n\t\t\treturn function (cb) { setImmediate(callable(cb)); };\n\t\t}\n\t\n\t\t// Wide available standard\n\t\tif (typeof setTimeout === 'function') {\n\t\t\treturn function (cb) { setTimeout(callable(cb), 0); };\n\t\t}\n\t\n\t\treturn null;\n\t}());\n\n\n/***/ }),\n/* 108 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Call dispose callback on each cache purge\n\t\n\t'use strict';\n\t\n\tvar callable   = __webpack_require__(62)\n\t  , forEach    = __webpack_require__(63)\n\t  , extensions = __webpack_require__(66)\n\t\n\t  , slice = Array.prototype.slice, apply = Function.prototype.apply;\n\t\n\textensions.dispose = function (dispose, conf, options) {\n\t\tvar del;\n\t\tcallable(dispose);\n\t\tif (options.async && extensions.async) {\n\t\t\tconf.on('deleteasync', del = function (id, result) {\n\t\t\t\tapply.call(dispose, null, slice.call(result.args, 1));\n\t\t\t});\n\t\t\tconf.on('clearasync', function (cache) {\n\t\t\t\tforEach(cache, function (result, id) { del(id, result); });\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tconf.on('delete', del = function (id, result) { dispose(result); });\n\t\tconf.on('clear', function (cache) {\n\t\t\tforEach(cache, function (result, id) { del(id, result); });\n\t\t});\n\t};\n\n\n/***/ }),\n/* 109 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Timeout cached values\n\t\n\t'use strict';\n\t\n\tvar aFrom      = __webpack_require__(86)\n\t  , noop       = __webpack_require__(97)\n\t  , forEach    = __webpack_require__(63)\n\t  , timeout    = __webpack_require__(110)\n\t  , extensions = __webpack_require__(66)\n\t\n\t  , max = Math.max, min = Math.min, create = Object.create;\n\t\n\textensions.maxAge = function (maxAge, conf, options) {\n\t\tvar timeouts, postfix, preFetchAge, preFetchTimeouts;\n\t\n\t\tmaxAge = timeout(maxAge);\n\t\tif (!maxAge) return;\n\t\n\t\ttimeouts = create(null);\n\t\tpostfix = (options.async && extensions.async) ? 'async' : '';\n\t\tconf.on('set' + postfix, function (id) {\n\t\t\ttimeouts[id] = setTimeout(function () { conf.delete(id); }, maxAge);\n\t\t\tif (!preFetchTimeouts) return;\n\t\t\tif (preFetchTimeouts[id]) clearTimeout(preFetchTimeouts[id]);\n\t\t\tpreFetchTimeouts[id] = setTimeout(function () {\n\t\t\t\tdelete preFetchTimeouts[id];\n\t\t\t}, preFetchAge);\n\t\t});\n\t\tconf.on('delete' + postfix, function (id) {\n\t\t\tclearTimeout(timeouts[id]);\n\t\t\tdelete timeouts[id];\n\t\t\tif (!preFetchTimeouts) return;\n\t\t\tclearTimeout(preFetchTimeouts[id]);\n\t\t\tdelete preFetchTimeouts[id];\n\t\t});\n\t\n\t\tif (options.preFetch) {\n\t\t\tif ((options.preFetch === true) || isNaN(options.preFetch)) {\n\t\t\t\tpreFetchAge = 0.333;\n\t\t\t} else {\n\t\t\t\tpreFetchAge = max(min(Number(options.preFetch), 1), 0);\n\t\t\t}\n\t\t\tif (preFetchAge) {\n\t\t\t\tpreFetchTimeouts = {};\n\t\t\t\tpreFetchAge = (1 - preFetchAge) * maxAge;\n\t\t\t\tconf.on('get' + postfix, function (id, args, context) {\n\t\t\t\t\tif (!preFetchTimeouts[id]) {\n\t\t\t\t\t\tpreFetchTimeouts[id] =  setTimeout(function () {\n\t\t\t\t\t\t\tdelete preFetchTimeouts[id];\n\t\t\t\t\t\t\tconf.delete(id);\n\t\t\t\t\t\t\tif (options.async) {\n\t\t\t\t\t\t\t\targs = aFrom(args);\n\t\t\t\t\t\t\t\targs.push(noop);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconf.memoized.apply(context, args);\n\t\t\t\t\t\t}, 0);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\n\t\tconf.on('clear' + postfix, function () {\n\t\t\tforEach(timeouts, function (id) { clearTimeout(id); });\n\t\t\ttimeouts = {};\n\t\t\tif (preFetchTimeouts) {\n\t\t\t\tforEach(preFetchTimeouts, function (id) { clearTimeout(id); });\n\t\t\t\tpreFetchTimeouts = {};\n\t\t\t}\n\t\t});\n\t};\n\n\n/***/ }),\n/* 110 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar toPosInt   = __webpack_require__(56)\n\t  , maxTimeout = __webpack_require__(111);\n\t\n\tmodule.exports = function (value) {\n\t\tvalue = toPosInt(value);\n\t\tif (value > maxTimeout) throw new TypeError(value + \" exceeds maximum possible timeout\");\n\t\treturn value;\n\t};\n\n\n/***/ }),\n/* 111 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = 2147483647;\n\n\n/***/ }),\n/* 112 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Limit cache size, LRU (least recently used) algorithm.\n\t\n\t'use strict';\n\t\n\tvar toPosInteger = __webpack_require__(56)\n\t  , lruQueue     = __webpack_require__(113)\n\t  , extensions   = __webpack_require__(66);\n\t\n\textensions.max = function (max, conf, options) {\n\t\tvar postfix, queue, hit;\n\t\n\t\tmax = toPosInteger(max);\n\t\tif (!max) return;\n\t\n\t\tqueue = lruQueue(max);\n\t\tpostfix = (options.async && extensions.async) ? 'async' : '';\n\t\n\t\tconf.on('set' + postfix, hit = function (id) {\n\t\t\tid = queue.hit(id);\n\t\t\tif (id === undefined) return;\n\t\t\tconf.delete(id);\n\t\t});\n\t\tconf.on('get' + postfix, hit);\n\t\tconf.on('delete' + postfix, queue.delete);\n\t\tconf.on('clear' + postfix, queue.clear);\n\t};\n\n\n/***/ }),\n/* 113 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar toPosInt = __webpack_require__(56)\n\t\n\t  , create = Object.create, hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\n\tmodule.exports = function (limit) {\n\t\tvar size = 0, base = 1, queue = create(null), map = create(null), index = 0, del;\n\t\tlimit = toPosInt(limit);\n\t\treturn {\n\t\t\thit: function (id) {\n\t\t\t\tvar oldIndex = map[id], nuIndex = ++index;\n\t\t\t\tqueue[nuIndex] = id;\n\t\t\t\tmap[id] = nuIndex;\n\t\t\t\tif (!oldIndex) {\n\t\t\t\t\t++size;\n\t\t\t\t\tif (size <= limit) return;\n\t\t\t\t\tid = queue[base];\n\t\t\t\t\tdel(id);\n\t\t\t\t\treturn id;\n\t\t\t\t}\n\t\t\t\tdelete queue[oldIndex];\n\t\t\t\tif (base !== oldIndex) return;\n\t\t\t\twhile (!hasOwnProperty.call(queue, ++base)) continue; //jslint: skip\n\t\t\t},\n\t\t\tdelete: del = function (id) {\n\t\t\t\tvar oldIndex = map[id];\n\t\t\t\tif (!oldIndex) return;\n\t\t\t\tdelete queue[oldIndex];\n\t\t\t\tdelete map[id];\n\t\t\t\t--size;\n\t\t\t\tif (base !== oldIndex) return;\n\t\t\t\tif (!size) {\n\t\t\t\t\tindex = 0;\n\t\t\t\t\tbase = 1;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\twhile (!hasOwnProperty.call(queue, ++base)) continue; //jslint: skip\n\t\t\t},\n\t\t\tclear: function () {\n\t\t\t\tsize = 0;\n\t\t\t\tbase = 1;\n\t\t\t\tqueue = create(null);\n\t\t\t\tmap = create(null);\n\t\t\t\tindex = 0;\n\t\t\t}\n\t\t};\n\t};\n\n\n/***/ }),\n/* 114 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Reference counter, useful for garbage collector like functionality\n\t\n\t'use strict';\n\t\n\tvar d          = __webpack_require__(77)\n\t  , extensions = __webpack_require__(66)\n\t\n\t  , create = Object.create, defineProperties = Object.defineProperties;\n\t\n\textensions.refCounter = function (ignore, conf, options) {\n\t\tvar cache, postfix;\n\t\n\t\tcache = create(null);\n\t\tpostfix = (options.async && extensions.async) ? 'async' : '';\n\t\n\t\tconf.on('set' + postfix, function (id, length) { cache[id] = length || 1; });\n\t\tconf.on('get' + postfix, function (id) { ++cache[id]; });\n\t\tconf.on('delete' + postfix, function (id) { delete cache[id]; });\n\t\tconf.on('clear' + postfix, function () { cache = {}; });\n\t\n\t\tdefineProperties(conf.memoized, {\n\t\t\tdeleteRef: d(function () {\n\t\t\t\tvar id = conf.get(arguments);\n\t\t\t\tif (id === null) return null;\n\t\t\t\tif (!cache[id]) return null;\n\t\t\t\tif (!--cache[id]) {\n\t\t\t\t\tconf.delete(id);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}),\n\t\t\tgetRefCount: d(function () {\n\t\t\t\tvar id = conf.get(arguments);\n\t\t\t\tif (id === null) return 0;\n\t\t\t\tif (!cache[id]) return 0;\n\t\t\t\treturn cache[id];\n\t\t\t})\n\t\t});\n\t};\n\n\n/***/ }),\n/* 115 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar normalizeOpts = __webpack_require__(54)\n\t  , resolveLength = __webpack_require__(116)\n\t  , plain         = __webpack_require__(117);\n\t\n\tmodule.exports = function (fn/*, options*/) {\n\t\tvar options = normalizeOpts(arguments[1]), length;\n\t\n\t\tif (!options.normalizer) {\n\t\t\tlength = options.length = resolveLength(options.length, fn.length, options.async);\n\t\t\tif (length !== 0) {\n\t\t\t\tif (options.primitive) {\n\t\t\t\t\tif (length === false) {\n\t\t\t\t\t\toptions.normalizer = __webpack_require__(123);\n\t\t\t\t\t} else if (length > 1) {\n\t\t\t\t\t\toptions.normalizer = __webpack_require__(124)(length);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (length === false) options.normalizer = __webpack_require__(125)();\n\t\t\t\t\telse if (length === 1) options.normalizer = __webpack_require__(126)();\n\t\t\t\t\telse options.normalizer = __webpack_require__(127)(length);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// Assure extensions\n\t\tif (options.async) __webpack_require__(128);\n\t\tif (options.promise) __webpack_require__(131);\n\t\tif (options.dispose) __webpack_require__(133);\n\t\tif (options.maxAge) __webpack_require__(134);\n\t\tif (options.max) __webpack_require__(135);\n\t\tif (options.refCounter) __webpack_require__(136);\n\t\n\t\treturn plain(fn, options);\n\t};\n\n\n/***/ }),\n/* 116 */\n55,\n/* 117 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar callable      = __webpack_require__(62)\n\t  , forEach       = __webpack_require__(63)\n\t  , extensions    = __webpack_require__(118)\n\t  , configure     = __webpack_require__(119)\n\t  , resolveLength = __webpack_require__(116)\n\t\n\t  , hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\n\tmodule.exports = function self(fn/*, options */) {\n\t\tvar options, length, conf;\n\t\n\t\tcallable(fn);\n\t\toptions = Object(arguments[1]);\n\t\n\t\tif (options.async && options.promise) {\n\t\t\tthrow new Error(\"Options 'async' and 'promise' cannot be used together\");\n\t\t}\n\t\n\t\t// Do not memoize already memoized function\n\t\tif (hasOwnProperty.call(fn, '__memoized__') && !options.force) return fn;\n\t\n\t\t// Resolve length;\n\t\tlength = resolveLength(options.length, fn.length, options.async && extensions.async);\n\t\n\t\t// Configure cache map\n\t\tconf = configure(fn, length, options);\n\t\n\t\t// Bind eventual extensions\n\t\tforEach(extensions, function (fn, name) {\n\t\t\tif (options[name]) fn(options[name], conf, options);\n\t\t});\n\t\n\t\tif (self.__profiler__) self.__profiler__(conf);\n\t\n\t\tconf.updateEnv();\n\t\treturn conf.memoized;\n\t};\n\n\n/***/ }),\n/* 118 */\n66,\n/* 119 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar customError      = __webpack_require__(68)\n\t  , defineLength     = __webpack_require__(75)\n\t  , d                = __webpack_require__(120)\n\t  , ee               = __webpack_require__(82).methods\n\t  , resolveResolve   = __webpack_require__(121)\n\t  , resolveNormalize = __webpack_require__(122)\n\t\n\t  , apply = Function.prototype.apply, call = Function.prototype.call\n\t  , create = Object.create, hasOwnProperty = Object.prototype.hasOwnProperty\n\t  , defineProperties = Object.defineProperties\n\t  , on = ee.on, emit = ee.emit;\n\t\n\tmodule.exports = function (original, length, options) {\n\t\tvar cache = create(null), conf, memLength, get, set, del, clear, extDel,\n\t\t\textGet, extHas, normalizer, getListeners, setListeners, deleteListeners, memoized, resolve;\n\t\tif (length !== false) memLength = length;\n\t\telse if (isNaN(original.length)) memLength = 1;\n\t\telse memLength = original.length;\n\t\n\t\tif (options.normalizer) {\n\t\t\tnormalizer = resolveNormalize(options.normalizer);\n\t\t\tget = normalizer.get;\n\t\t\tset = normalizer.set;\n\t\t\tdel = normalizer.delete;\n\t\t\tclear = normalizer.clear;\n\t\t}\n\t\tif (options.resolvers != null) resolve = resolveResolve(options.resolvers);\n\t\n\t\tif (get) {\n\t\t\tmemoized = defineLength(function (arg) {\n\t\t\t\tvar id, result, args = arguments;\n\t\t\t\tif (resolve) args = resolve(args);\n\t\t\t\tid = get(args);\n\t\t\t\tif (id !== null) {\n\t\t\t\t\tif (hasOwnProperty.call(cache, id)) {\n\t\t\t\t\t\tif (getListeners) conf.emit('get', id, args, this);\n\t\t\t\t\t\treturn cache[id];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (args.length === 1) result = call.call(original, this, args[0]);\n\t\t\t\telse result = apply.call(original, this, args);\n\t\t\t\tif (id === null) {\n\t\t\t\t\tid = get(args);\n\t\t\t\t\tif (id !== null) throw customError(\"Circular invocation\", 'CIRCULAR_INVOCATION');\n\t\t\t\t\tid = set(args);\n\t\t\t\t} else if (hasOwnProperty.call(cache, id)) {\n\t\t\t\t\tthrow customError(\"Circular invocation\", 'CIRCULAR_INVOCATION');\n\t\t\t\t}\n\t\t\t\tcache[id] = result;\n\t\t\t\tif (setListeners) conf.emit('set', id, null, result);\n\t\t\t\treturn result;\n\t\t\t}, memLength);\n\t\t} else if (length === 0) {\n\t\t\tmemoized = function () {\n\t\t\t\tvar result;\n\t\t\t\tif (hasOwnProperty.call(cache, 'data')) {\n\t\t\t\t\tif (getListeners) conf.emit('get', 'data', arguments, this);\n\t\t\t\t\treturn cache.data;\n\t\t\t\t}\n\t\t\t\tif (!arguments.length) result = call.call(original, this);\n\t\t\t\telse result = apply.call(original, this, arguments);\n\t\t\t\tif (hasOwnProperty.call(cache, 'data')) {\n\t\t\t\t\tthrow customError(\"Circular invocation\", 'CIRCULAR_INVOCATION');\n\t\t\t\t}\n\t\t\t\tcache.data = result;\n\t\t\t\tif (setListeners) conf.emit('set', 'data', null, result);\n\t\t\t\treturn result;\n\t\t\t};\n\t\t} else {\n\t\t\tmemoized = function (arg) {\n\t\t\t\tvar result, args = arguments, id;\n\t\t\t\tif (resolve) args = resolve(arguments);\n\t\t\t\tid = String(args[0]);\n\t\t\t\tif (hasOwnProperty.call(cache, id)) {\n\t\t\t\t\tif (getListeners) conf.emit('get', id, args, this);\n\t\t\t\t\treturn cache[id];\n\t\t\t\t}\n\t\t\t\tif (args.length === 1) result = call.call(original, this, args[0]);\n\t\t\t\telse result = apply.call(original, this, args);\n\t\t\t\tif (hasOwnProperty.call(cache, id)) {\n\t\t\t\t\tthrow customError(\"Circular invocation\", 'CIRCULAR_INVOCATION');\n\t\t\t\t}\n\t\t\t\tcache[id] = result;\n\t\t\t\tif (setListeners) conf.emit('set', id, null, result);\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\tconf = {\n\t\t\toriginal: original,\n\t\t\tmemoized: memoized,\n\t\t\tget: function (args) {\n\t\t\t\tif (resolve) args = resolve(args);\n\t\t\t\tif (get) return get(args);\n\t\t\t\treturn String(args[0]);\n\t\t\t},\n\t\t\thas: function (id) { return hasOwnProperty.call(cache, id); },\n\t\t\tdelete: function (id) {\n\t\t\t\tvar result;\n\t\t\t\tif (!hasOwnProperty.call(cache, id)) return;\n\t\t\t\tif (del) del(id);\n\t\t\t\tresult = cache[id];\n\t\t\t\tdelete cache[id];\n\t\t\t\tif (deleteListeners) conf.emit('delete', id, result);\n\t\t\t},\n\t\t\tclear: function () {\n\t\t\t\tvar oldCache = cache;\n\t\t\t\tif (clear) clear();\n\t\t\t\tcache = create(null);\n\t\t\t\tconf.emit('clear', oldCache);\n\t\t\t},\n\t\t\ton: function (type, listener) {\n\t\t\t\tif (type === 'get') getListeners = true;\n\t\t\t\telse if (type === 'set') setListeners = true;\n\t\t\t\telse if (type === 'delete') deleteListeners = true;\n\t\t\t\treturn on.call(this, type, listener);\n\t\t\t},\n\t\t\temit: emit,\n\t\t\tupdateEnv: function () { original = conf.original; }\n\t\t};\n\t\tif (get) {\n\t\t\textDel = defineLength(function (arg) {\n\t\t\t\tvar id, args = arguments;\n\t\t\t\tif (resolve) args = resolve(args);\n\t\t\t\tid = get(args);\n\t\t\t\tif (id === null) return;\n\t\t\t\tconf.delete(id);\n\t\t\t}, memLength);\n\t\t} else if (length === 0) {\n\t\t\textDel = function () { return conf.delete('data'); };\n\t\t} else {\n\t\t\textDel = function (arg) {\n\t\t\t\tif (resolve) arg = resolve(arguments)[0];\n\t\t\t\treturn conf.delete(arg);\n\t\t\t};\n\t\t}\n\t\textGet = defineLength(function () {\n\t\t\tvar id, args = arguments;\n\t\t\tif (resolve) args = resolve(args);\n\t\t\tid = get(args);\n\t\t\treturn cache[id];\n\t\t});\n\t\textHas = defineLength(function () {\n\t\t\tvar id, args = arguments;\n\t\t\tif (resolve) args = resolve(args);\n\t\t\tid = get(args);\n\t\t\tif (id === null) return false;\n\t\t\treturn conf.has(id);\n\t\t});\n\t\tdefineProperties(memoized, {\n\t\t\t__memoized__: d(true),\n\t\t\tdelete: d(extDel),\n\t\t\tclear: d(conf.clear),\n\t\t\t_get: d(extGet),\n\t\t\t_has: d(extHas)\n\t\t});\n\t\treturn conf;\n\t};\n\n\n/***/ }),\n/* 120 */\n77,\n/* 121 */\n84,\n/* 122 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar callable = __webpack_require__(62);\n\t\n\tmodule.exports = function (userNormalizer) {\n\t\tvar normalizer;\n\t\tif (typeof userNormalizer === 'function') return { set: userNormalizer, get: userNormalizer };\n\t\tnormalizer = { get: callable(userNormalizer.get) };\n\t\tif (userNormalizer.set !== undefined) {\n\t\t\tnormalizer.set = callable(userNormalizer.set);\n\t\t\tif (userNormalizer.delete) normalizer.delete = callable(userNormalizer.delete);\n\t\t\tif (userNormalizer.clear) normalizer.clear = callable(userNormalizer.clear);\n\t\t\treturn normalizer;\n\t\t}\n\t\tnormalizer.set = normalizer.get;\n\t\treturn normalizer;\n\t};\n\n\n/***/ }),\n/* 123 */\n100,\n/* 124 */\n101,\n/* 125 */\n102,\n/* 126 */\n104,\n/* 127 */\n105,\n/* 128 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Support for asynchronous functions\n\t\n\t'use strict';\n\t\n\tvar aFrom        = __webpack_require__(86)\n\t  , objectMap    = __webpack_require__(129)\n\t  , mixin        = __webpack_require__(76)\n\t  , defineLength = __webpack_require__(75)\n\t  , nextTick     = __webpack_require__(130)\n\t\n\t  , slice = Array.prototype.slice\n\t  , apply = Function.prototype.apply, create = Object.create\n\t  , hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\n\t__webpack_require__(118).async = function (tbi, conf) {\n\t\tvar waiting = create(null), cache = create(null)\n\t\t  , base = conf.memoized, original = conf.original\n\t\t  , currentCallback, currentContext, currentArgs;\n\t\n\t\t// Initial\n\t\tconf.memoized = defineLength(function (arg) {\n\t\t\tvar args = arguments, last = args[args.length - 1];\n\t\t\tif (typeof last === 'function') {\n\t\t\t\tcurrentCallback = last;\n\t\t\t\targs = slice.call(args, 0, -1);\n\t\t\t}\n\t\t\treturn base.apply(currentContext = this, currentArgs = args);\n\t\t}, base);\n\t\ttry { mixin(conf.memoized, base); } catch (ignore) {}\n\t\n\t\t// From cache (sync)\n\t\tconf.on('get', function (id) {\n\t\t\tvar cb, context, args;\n\t\t\tif (!currentCallback) return;\n\t\n\t\t\t// Unresolved\n\t\t\tif (waiting[id]) {\n\t\t\t\tif (typeof waiting[id] === 'function') waiting[id] = [waiting[id], currentCallback];\n\t\t\t\telse waiting[id].push(currentCallback);\n\t\t\t\tcurrentCallback = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Resolved, assure next tick invocation\n\t\t\tcb = currentCallback;\n\t\t\tcontext = currentContext;\n\t\t\targs = currentArgs;\n\t\t\tcurrentCallback = currentContext = currentArgs = null;\n\t\t\tnextTick(function () {\n\t\t\t\tvar data;\n\t\t\t\tif (hasOwnProperty.call(cache, id)) {\n\t\t\t\t\tdata = cache[id];\n\t\t\t\t\tconf.emit('getasync', id, args, context);\n\t\t\t\t\tapply.call(cb, data.context, data.args);\n\t\t\t\t} else {\n\t\t\t\t\t// Purged in a meantime, we shouldn't rely on cached value, recall\n\t\t\t\t\tcurrentCallback = cb;\n\t\t\t\t\tcurrentContext = context;\n\t\t\t\t\tcurrentArgs = args;\n\t\t\t\t\tbase.apply(context, args);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\n\t\t// Not from cache\n\t\tconf.original = function () {\n\t\t\tvar args, cb, origCb, result;\n\t\t\tif (!currentCallback) return apply.call(original, this, arguments);\n\t\t\targs = aFrom(arguments);\n\t\t\tcb = function self(err) {\n\t\t\t\tvar cb, args, id = self.id;\n\t\t\t\tif (id == null) {\n\t\t\t\t\t// Shouldn't happen, means async callback was called sync way\n\t\t\t\t\tnextTick(apply.bind(self, this, arguments));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tdelete self.id;\n\t\t\t\tcb = waiting[id];\n\t\t\t\tdelete waiting[id];\n\t\t\t\tif (!cb) {\n\t\t\t\t\t// Already processed,\n\t\t\t\t\t// outcome of race condition: asyncFn(1, cb), asyncFn.clear(), asyncFn(1, cb)\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\targs = aFrom(arguments);\n\t\t\t\tif (conf.has(id)) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tconf.delete(id);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcache[id] = { context: this, args: args };\n\t\t\t\t\t\tconf.emit('setasync', id, (typeof cb === 'function') ? 1 : cb.length);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (typeof cb === 'function') {\n\t\t\t\t\tresult = apply.call(cb, this, args);\n\t\t\t\t} else {\n\t\t\t\t\tcb.forEach(function (cb) { result = apply.call(cb, this, args); }, this);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t};\n\t\t\torigCb = currentCallback;\n\t\t\tcurrentCallback = currentContext = currentArgs = null;\n\t\t\targs.push(cb);\n\t\t\tresult = apply.call(original, this, args);\n\t\t\tcb.cb = origCb;\n\t\t\tcurrentCallback = cb;\n\t\t\treturn result;\n\t\t};\n\t\n\t\t// After not from cache call\n\t\tconf.on('set', function (id) {\n\t\t\tif (!currentCallback) {\n\t\t\t\tconf.delete(id);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (waiting[id]) {\n\t\t\t\t// Race condition: asyncFn(1, cb), asyncFn.clear(), asyncFn(1, cb)\n\t\t\t\tif (typeof waiting[id] === 'function') waiting[id] = [waiting[id], currentCallback.cb];\n\t\t\t\telse waiting[id].push(currentCallback.cb);\n\t\t\t} else {\n\t\t\t\twaiting[id] = currentCallback.cb;\n\t\t\t}\n\t\t\tdelete currentCallback.cb;\n\t\t\tcurrentCallback.id = id;\n\t\t\tcurrentCallback = null;\n\t\t});\n\t\n\t\t// On delete\n\t\tconf.on('delete', function (id) {\n\t\t\tvar result;\n\t\t\t// If false, we don't have value yet, so we assume that intention is not\n\t\t\t// to memoize this call. After value is obtained we don't cache it but\n\t\t\t// gracefully pass to callback\n\t\t\tif (hasOwnProperty.call(waiting, id)) return;\n\t\t\tif (!cache[id]) return;\n\t\t\tresult = cache[id];\n\t\t\tdelete cache[id];\n\t\t\tconf.emit('deleteasync', id, slice.call(result.args, 1));\n\t\t});\n\t\n\t\t// On clear\n\t\tconf.on('clear', function () {\n\t\t\tvar oldCache = cache;\n\t\t\tcache = create(null);\n\t\t\tconf.emit('clearasync', objectMap(oldCache, function (data) {\n\t\t\t\treturn slice.call(data.args, 1);\n\t\t\t}));\n\t\t});\n\t};\n\n\n/***/ }),\n/* 129 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar callable = __webpack_require__(62)\n\t  , forEach  = __webpack_require__(63)\n\t\n\t  , call = Function.prototype.call;\n\t\n\tmodule.exports = function (obj, cb/*, thisArg*/) {\n\t\tvar o = {}, thisArg = arguments[2];\n\t\tcallable(cb);\n\t\tforEach(obj, function (value, key, obj, index) {\n\t\t\to[key] = call.call(cb, thisArg, value, key, obj, index);\n\t\t});\n\t\treturn o;\n\t};\n\n\n/***/ }),\n/* 130 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tvar callable, byObserver;\n\t\n\tcallable = function (fn) {\n\t\tif (typeof fn !== 'function') throw new TypeError(fn + \" is not a function\");\n\t\treturn fn;\n\t};\n\t\n\tbyObserver = function (Observer) {\n\t\tvar node = document.createTextNode(''), queue, currentQueue, i = 0;\n\t\tnew Observer(function () {\n\t\t\tvar callback;\n\t\t\tif (!queue) {\n\t\t\t\tif (!currentQueue) return;\n\t\t\t\tqueue = currentQueue;\n\t\t\t} else if (currentQueue) {\n\t\t\t\tqueue = currentQueue.concat(queue);\n\t\t\t}\n\t\t\tcurrentQueue = queue;\n\t\t\tqueue = null;\n\t\t\tif (typeof currentQueue === 'function') {\n\t\t\t\tcallback = currentQueue;\n\t\t\t\tcurrentQueue = null;\n\t\t\t\tcallback();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tnode.data = (i = ++i % 2); // Invoke other batch, to handle leftover callbacks in case of crash\n\t\t\twhile (currentQueue) {\n\t\t\t\tcallback = currentQueue.shift();\n\t\t\t\tif (!currentQueue.length) currentQueue = null;\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}).observe(node, { characterData: true });\n\t\treturn function (fn) {\n\t\t\tcallable(fn);\n\t\t\tif (queue) {\n\t\t\t\tif (typeof queue === 'function') queue = [queue, fn];\n\t\t\t\telse queue.push(fn);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tqueue = fn;\n\t\t\tnode.data = (i = ++i % 2);\n\t\t};\n\t};\n\t\n\tmodule.exports = (function () {\n\t\t// Node.js\n\t\tif ((typeof process === 'object') && process && (typeof process.nextTick === 'function')) {\n\t\t\treturn process.nextTick;\n\t\t}\n\t\n\t\t// MutationObserver\n\t\tif ((typeof document === 'object') && document) {\n\t\t\tif (typeof MutationObserver === 'function') return byObserver(MutationObserver);\n\t\t\tif (typeof WebKitMutationObserver === 'function') return byObserver(WebKitMutationObserver);\n\t\t}\n\t\n\t\t// W3C Draft\n\t\t// http://dvcs.w3.org/hg/webperf/raw-file/tip/specs/setImmediate/Overview.html\n\t\tif (typeof setImmediate === 'function') {\n\t\t\treturn function (cb) { setImmediate(callable(cb)); };\n\t\t}\n\t\n\t\t// Wide available standard\n\t\tif ((typeof setTimeout === 'function') || (typeof setTimeout === 'object')) {\n\t\t\treturn function (cb) { setTimeout(callable(cb), 0); };\n\t\t}\n\t\n\t\treturn null;\n\t}());\n\n\n/***/ }),\n/* 131 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Support for functions returning promise\n\t\n\t'use strict';\n\t\n\tvar objectMap = __webpack_require__(129)\n\t  , isPromise = __webpack_require__(132)\n\t  , nextTick  = __webpack_require__(130)\n\t\n\t  , create = Object.create, hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\n\t__webpack_require__(118).promise = function (mode, conf) {\n\t\tvar waiting = create(null), cache = create(null), promises = create(null);\n\t\n\t\t// After not from cache call\n\t\tconf.on('set', function (id, ignore, promise) {\n\t\t\tvar isFailed = false;\n\t\n\t\t\tif (!isPromise(promise)) {\n\t\t\t\t// Non promise result\n\t\t\t\tcache[id] = promise;\n\t\t\t\tconf.emit('setasync', id, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\twaiting[id] = 1;\n\t\t\tpromises[id] = promise;\n\t\t\tvar onSuccess = function (result) {\n\t\t\t\tvar count = waiting[id];\n\t\t\t\tif (isFailed) {\n\t\t\t\t\tthrow new Error(\"Memoizee error: Promise resolved with both failure and success,\" +\n\t\t\t\t\t\t\" this can be result of unordered done & finally resolution.\\n\" +\n\t\t\t\t\t\t\"Instead of `promise: true` consider configuring memoization via `promise: 'then'` or \" +\n\t\t\t\t\t\t\"`promise: 'done'\");\n\t\t\t\t}\n\t\t\t\tif (!count) return; // deleted from cache before resolved\n\t\t\t\tdelete waiting[id];\n\t\t\t\tcache[id] = result;\n\t\t\t\tconf.emit('setasync', id, count);\n\t\t\t};\n\t\t\tvar onFailure = function () {\n\t\t\t\tisFailed = true;\n\t\t\t\tif (!waiting[id]) return; // deleted from cache (or succeed in case of finally)\n\t\t\t\tdelete waiting[id];\n\t\t\t\tdelete promises[id];\n\t\t\t\tconf.delete(id);\n\t\t\t};\n\t\n\t\t\tif ((mode !== 'then') && (typeof promise.done === 'function')) {\n\t\t\t\t// Optimal promise resolution\n\t\t\t\tif ((mode !== 'done') && (typeof promise.finally === 'function')) {\n\t\t\t\t\t// Use 'finally' to not register error handling (still proper behavior is subject to\n\t\t\t\t\t// used implementation, if library throws unconditionally even on handled errors\n\t\t\t\t\t// switch to 'then' mode)\n\t\t\t\t\tpromise.done(onSuccess);\n\t\t\t\t\tpromise.finally(onFailure);\n\t\t\t\t} else {\n\t\t\t\t\t// With no `finally` side effect is that it mutes any eventual\n\t\t\t\t\t// \"Unhandled error\" events on returned promise\n\t\t\t\t\tpromise.done(onSuccess, onFailure);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// With no `done` it's best we can do.\n\t\t\t\t// Side effect is that it mutes any eventual \"Unhandled error\" events on returned promise\n\t\t\t\tpromise.then(function (result) {\n\t\t\t\t\tnextTick(onSuccess.bind(this, result));\n\t\t\t\t}, function () {\n\t\t\t\t\tnextTick(onFailure);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\n\t\t// From cache (sync)\n\t\tconf.on('get', function (id, args, context) {\n\t\t\tvar promise;\n\t\t\tif (waiting[id]) {\n\t\t\t\t++waiting[id]; // Still waiting\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tpromise = promises[id];\n\t\t\tvar emit = function () { conf.emit('getasync', id, args, context); };\n\t\t\tif (isPromise(promise)) {\n\t\t\t\tif (typeof promise.done === 'function') promise.done(emit);\n\t\t\t\telse promise.then(function () { nextTick(emit); });\n\t\t\t} else {\n\t\t\t\temit();\n\t\t\t}\n\t\t});\n\t\n\t\t// On delete\n\t\tconf.on('delete', function (id) {\n\t\t\tdelete promises[id];\n\t\t\tif (waiting[id]) {\n\t\t\t\tdelete waiting[id];\n\t\t\t\treturn; // Not yet resolved\n\t\t\t}\n\t\t\tif (!hasOwnProperty.call(cache, id)) return;\n\t\t\tvar result = cache[id];\n\t\t\tdelete cache[id];\n\t\t\tconf.emit('deleteasync', id, [result]);\n\t\t});\n\t\n\t\t// On clear\n\t\tconf.on('clear', function () {\n\t\t\tvar oldCache = cache;\n\t\t\tcache = create(null);\n\t\t\twaiting = create(null);\n\t\t\tpromises = create(null);\n\t\t\tconf.emit('clearasync', objectMap(oldCache, function (data) { return [data]; }));\n\t\t});\n\t};\n\n\n/***/ }),\n/* 132 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = isPromise;\n\t\n\tfunction isPromise(obj) {\n\t  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n\t}\n\n\n/***/ }),\n/* 133 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Call dispose callback on each cache purge\n\t\n\t'use strict';\n\t\n\tvar callable   = __webpack_require__(62)\n\t  , forEach    = __webpack_require__(63)\n\t  , extensions = __webpack_require__(118)\n\t\n\t  , apply = Function.prototype.apply;\n\t\n\textensions.dispose = function (dispose, conf, options) {\n\t\tvar del;\n\t\tcallable(dispose);\n\t\tif ((options.async && extensions.async) || (options.promise && extensions.promise)) {\n\t\t\tconf.on('deleteasync', del = function (id, resultArray) {\n\t\t\t\tapply.call(dispose, null, resultArray);\n\t\t\t});\n\t\t\tconf.on('clearasync', function (cache) {\n\t\t\t\tforEach(cache, function (result, id) { del(id, result); });\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tconf.on('delete', del = function (id, result) { dispose(result); });\n\t\tconf.on('clear', function (cache) {\n\t\t\tforEach(cache, function (result, id) { del(id, result); });\n\t\t});\n\t};\n\n\n/***/ }),\n/* 134 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Timeout cached values\n\t\n\t'use strict';\n\t\n\tvar aFrom      = __webpack_require__(86)\n\t  , forEach    = __webpack_require__(63)\n\t  , nextTick   = __webpack_require__(130)\n\t  , isPromise  = __webpack_require__(132)\n\t  , timeout    = __webpack_require__(110)\n\t  , extensions = __webpack_require__(118)\n\t\n\t  , noop = Function.prototype\n\t  , max = Math.max, min = Math.min, create = Object.create;\n\t\n\textensions.maxAge = function (maxAge, conf, options) {\n\t\tvar timeouts, postfix, preFetchAge, preFetchTimeouts;\n\t\n\t\tmaxAge = timeout(maxAge);\n\t\tif (!maxAge) return;\n\t\n\t\ttimeouts = create(null);\n\t\tpostfix = ((options.async && extensions.async) || (options.promise && extensions.promise))\n\t\t\t? 'async' : '';\n\t\tconf.on('set' + postfix, function (id) {\n\t\t\ttimeouts[id] = setTimeout(function () { conf.delete(id); }, maxAge);\n\t\t\tif (!preFetchTimeouts) return;\n\t\t\tif (preFetchTimeouts[id]) {\n\t\t\t\tif (preFetchTimeouts[id] !== 'nextTick') clearTimeout(preFetchTimeouts[id]);\n\t\t\t}\n\t\t\tpreFetchTimeouts[id] = setTimeout(function () {\n\t\t\t\tdelete preFetchTimeouts[id];\n\t\t\t}, preFetchAge);\n\t\t});\n\t\tconf.on('delete' + postfix, function (id) {\n\t\t\tclearTimeout(timeouts[id]);\n\t\t\tdelete timeouts[id];\n\t\t\tif (!preFetchTimeouts) return;\n\t\t\tif (preFetchTimeouts[id] !== 'nextTick') clearTimeout(preFetchTimeouts[id]);\n\t\t\tdelete preFetchTimeouts[id];\n\t\t});\n\t\n\t\tif (options.preFetch) {\n\t\t\tif ((options.preFetch === true) || isNaN(options.preFetch)) {\n\t\t\t\tpreFetchAge = 0.333;\n\t\t\t} else {\n\t\t\t\tpreFetchAge = max(min(Number(options.preFetch), 1), 0);\n\t\t\t}\n\t\t\tif (preFetchAge) {\n\t\t\t\tpreFetchTimeouts = {};\n\t\t\t\tpreFetchAge = (1 - preFetchAge) * maxAge;\n\t\t\t\tconf.on('get' + postfix, function (id, args, context) {\n\t\t\t\t\tif (!preFetchTimeouts[id]) {\n\t\t\t\t\t\tpreFetchTimeouts[id] = 'nextTick';\n\t\t\t\t\t\tnextTick(function () {\n\t\t\t\t\t\t\tvar result;\n\t\t\t\t\t\t\tif (preFetchTimeouts[id] !== 'nextTick') return;\n\t\t\t\t\t\t\tdelete preFetchTimeouts[id];\n\t\t\t\t\t\t\tconf.delete(id);\n\t\t\t\t\t\t\tif (options.async) {\n\t\t\t\t\t\t\t\targs = aFrom(args);\n\t\t\t\t\t\t\t\targs.push(noop);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tresult = conf.memoized.apply(context, args);\n\t\t\t\t\t\t\tif (options.promise) {\n\t\t\t\t\t\t\t\t// Supress eventual error warnings\n\t\t\t\t\t\t\t\tif (isPromise(result)) {\n\t\t\t\t\t\t\t\t\tif (typeof result.done === 'function') result.done(noop, noop);\n\t\t\t\t\t\t\t\t\telse result.then(noop, noop);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\n\t\tconf.on('clear' + postfix, function () {\n\t\t\tforEach(timeouts, function (id) { clearTimeout(id); });\n\t\t\ttimeouts = {};\n\t\t\tif (preFetchTimeouts) {\n\t\t\t\tforEach(preFetchTimeouts, function (id) {\n\t\t\t\t\tif (id !== 'nextTick') clearTimeout(id);\n\t\t\t\t});\n\t\t\t\tpreFetchTimeouts = {};\n\t\t\t}\n\t\t});\n\t};\n\n\n/***/ }),\n/* 135 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Limit cache size, LRU (least recently used) algorithm.\n\t\n\t'use strict';\n\t\n\tvar toPosInteger = __webpack_require__(56)\n\t  , lruQueue     = __webpack_require__(113)\n\t  , extensions   = __webpack_require__(118);\n\t\n\textensions.max = function (max, conf, options) {\n\t\tvar postfix, queue, hit;\n\t\n\t\tmax = toPosInteger(max);\n\t\tif (!max) return;\n\t\n\t\tqueue = lruQueue(max);\n\t\tpostfix = ((options.async && extensions.async) || (options.promise && extensions.promise))\n\t\t\t? 'async' : '';\n\t\n\t\tconf.on('set' + postfix, hit = function (id) {\n\t\t\tid = queue.hit(id);\n\t\t\tif (id === undefined) return;\n\t\t\tconf.delete(id);\n\t\t});\n\t\tconf.on('get' + postfix, hit);\n\t\tconf.on('delete' + postfix, queue.delete);\n\t\tconf.on('clear' + postfix, queue.clear);\n\t};\n\n\n/***/ }),\n/* 136 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Reference counter, useful for garbage collector like functionality\n\t\n\t'use strict';\n\t\n\tvar d          = __webpack_require__(120)\n\t  , extensions = __webpack_require__(118)\n\t\n\t  , create = Object.create, defineProperties = Object.defineProperties;\n\t\n\textensions.refCounter = function (ignore, conf, options) {\n\t\tvar cache, postfix;\n\t\n\t\tcache = create(null);\n\t\tpostfix = ((options.async && extensions.async) || (options.promise && extensions.promise))\n\t\t\t? 'async' : '';\n\t\n\t\tconf.on('set' + postfix, function (id, length) { cache[id] = length || 1; });\n\t\tconf.on('get' + postfix, function (id) { ++cache[id]; });\n\t\tconf.on('delete' + postfix, function (id) { delete cache[id]; });\n\t\tconf.on('clear' + postfix, function () { cache = {}; });\n\t\n\t\tdefineProperties(conf.memoized, {\n\t\t\tdeleteRef: d(function () {\n\t\t\t\tvar id = conf.get(arguments);\n\t\t\t\tif (id === null) return null;\n\t\t\t\tif (!cache[id]) return null;\n\t\t\t\tif (!--cache[id]) {\n\t\t\t\t\tconf.delete(id);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}),\n\t\t\tgetRefCount: d(function () {\n\t\t\t\tvar id = conf.get(arguments);\n\t\t\t\tif (id === null) return 0;\n\t\t\t\tif (!cache[id]) return 0;\n\t\t\t\treturn cache[id];\n\t\t\t})\n\t\t});\n\t};\n\n\n/***/ }),\n/* 137 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.10.0\n\t(function() {\n\t  var _, getField;\n\t\n\t  _ = __webpack_require__(4);\n\t\n\t  getField = function(table, fieldName) {\n\t    var i, len, tableField, tableFields;\n\t    fieldName = fieldName.replace(/_/g, ' ');\n\t    tableFields = table.fields;\n\t    for (i = 0, len = tableFields.length; i < len; i++) {\n\t      tableField = tableFields[i];\n\t      if (tableField.fieldName === fieldName) {\n\t        return tableField;\n\t      }\n\t    }\n\t    console.error('Cannot find field', table, fieldName);\n\t    throw new Error('Cannot find field: ' + table.name + ' : ' + fieldName);\n\t  };\n\t\n\t  module.exports = function(sqlModel) {\n\t    var addMapping, fieldName, i, idPart, idParts, len, part, ref, resourceField, resourceName, resourceToSQLMappings, resources, sqlFieldName, sqlTable, sqlTableName, table, tables;\n\t    tables = sqlModel.tables;\n\t    resources = {};\n\t    resourceToSQLMappings = {};\n\t\n\t    /**\n\t    \t*\tresourceToSQLMappings =\n\t    \t*\t\t[resourceName][resourceField] = [sqlTableName, sqlFieldName]\n\t     */\n\t    addMapping = function(resourceName, resourceField, sqlTableName, sqlFieldName) {\n\t      return resourceToSQLMappings[resourceName][resourceField] = [sqlTableName, sqlFieldName];\n\t    };\n\t    for (resourceName in tables) {\n\t      table = tables[resourceName];\n\t      if (!(table.exists !== false)) {\n\t        continue;\n\t      }\n\t      idParts = resourceName.split('-');\n\t      resourceName = ((function() {\n\t        var i, len, results;\n\t        results = [];\n\t        for (i = 0, len = idParts.length; i < len; i++) {\n\t          idPart = idParts[i];\n\t          results.push(idPart.split(/[ -]/).join('_'));\n\t        }\n\t        return results;\n\t      })()).join('__');\n\t      resourceToSQLMappings[resourceName] = {};\n\t      if (_.isString(table)) {\n\t        sqlTable = tables[idParts[0]];\n\t        resourceToSQLMappings[resourceName]._name = sqlTable.name;\n\t        sqlFieldName = sqlTable.idField;\n\t        resourceField = sqlTableName = sqlTable.name;\n\t        addMapping(resourceName, resourceField, sqlTableName, sqlFieldName);\n\t        resources[resourceName] = {\n\t          resourceName: resourceName,\n\t          modelName: ((function() {\n\t            var i, len, results;\n\t            results = [];\n\t            for (i = 0, len = idParts.length; i < len; i++) {\n\t              part = idParts[i];\n\t              results.push(part.replace(/_/g, ' '));\n\t            }\n\t            return results;\n\t          })()).join(' '),\n\t          topLevel: idParts.length === 1,\n\t          fields: [\n\t            {\n\t              dataType: 'ForeignKey',\n\t              fieldName: resourceField,\n\t              required: true,\n\t              index: null,\n\t              references: {\n\t                tableName: sqlTableName,\n\t                fieldName: sqlFieldName\n\t              }\n\t            }\n\t          ],\n\t          idField: resourceField,\n\t          referenceScheme: resourceField,\n\t          actions: ['view', 'add', 'delete']\n\t        };\n\t        switch (table) {\n\t          case 'Attribute':\n\t          case 'ForeignKey':\n\t            resourceField = sqlFieldName = idParts[2].replace(/_/g, ' ');\n\t            sqlTableName = sqlTable.name;\n\t            addMapping(resourceName, resourceField, sqlTableName, sqlFieldName);\n\t            resources[resourceName].fields.push(getField(sqlTable, sqlFieldName));\n\t            resources[resourceName].referenceScheme = resourceField;\n\t            break;\n\t          case 'BooleanAttribute':\n\t            resourceField = sqlFieldName = idParts[1].replace(/_/g, ' ');\n\t            sqlTableName = sqlTable.name;\n\t            addMapping(resourceName, resourceField, sqlTableName, sqlFieldName);\n\t            resources[resourceName].fields.push(getField(sqlTable, sqlFieldName));\n\t            resources[resourceName].referenceScheme = resourceField;\n\t            break;\n\t          default:\n\t            throw new Error('Unrecognised table type');\n\t        }\n\t      } else {\n\t        resourceToSQLMappings[resourceName]._name = table.name;\n\t        resources[resourceName] = {\n\t          resourceName: resourceName,\n\t          modelName: ((function() {\n\t            var i, len, results;\n\t            results = [];\n\t            for (i = 0, len = idParts.length; i < len; i++) {\n\t              part = idParts[i];\n\t              results.push(part.replace(/_/g, ' '));\n\t            }\n\t            return results;\n\t          })()).join(' '),\n\t          topLevel: idParts.length === 1,\n\t          fields: table.fields,\n\t          idField: table.idField,\n\t          actions: ['view', 'add', 'edit', 'delete']\n\t        };\n\t        if (table.referenceScheme != null) {\n\t          resources[resourceName].referenceScheme = table.referenceScheme;\n\t        }\n\t        ref = table.fields;\n\t        for (i = 0, len = ref.length; i < len; i++) {\n\t          fieldName = ref[i].fieldName;\n\t          addMapping(resourceName, fieldName.replace(/\\ /g, '_'), table.name, fieldName);\n\t        }\n\t      }\n\t    }\n\t    return {\n\t      resources: resources,\n\t      resourceToSQLMappings: resourceToSQLMappings\n\t    };\n\t  };\n\t\n\t}).call(this);\n\n\n/***/ }),\n/* 138 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _, forEachUniqueTable, getResourceName, sbvrTypes;\n\t\n\t_ = __webpack_require__(4);\n\t\n\tsbvrTypes = __webpack_require__(36);\n\t\n\tgetResourceName = function(resourceName) {\n\t  var idPart, idParts;\n\t  idParts = resourceName.split('-');\n\t  return ((function() {\n\t    var j, len, results;\n\t    results = [];\n\t    for (j = 0, len = idParts.length; j < len; j++) {\n\t      idPart = idParts[j];\n\t      results.push(idPart.split(/[ -]/).join('_'));\n\t    }\n\t    return results;\n\t  })()).join('__');\n\t};\n\t\n\tforEachUniqueTable = function(model, callback) {\n\t  var key, results, table, usedTableNames;\n\t  usedTableNames = {};\n\t  results = [];\n\t  for (key in model) {\n\t    table = model[key];\n\t    if (!(!_.isString(model[key]) && !table.primitive && !usedTableNames[table.name])) {\n\t      continue;\n\t    }\n\t    usedTableNames[table.name] = true;\n\t    results.push(callback(key, table));\n\t  }\n\t  return results;\n\t};\n\t\n\tmodule.exports = function(vocabulary, sqlModel) {\n\t  var associations, cardinality, complexType, complexTypes, ends, model, name, resolveDataType, resourceName, typeName;\n\t  complexTypes = {};\n\t  resolveDataType = function(fieldType) {\n\t    if (sbvrTypes[fieldType] != null) {\n\t      if (sbvrTypes[fieldType].types.odata.complexType != null) {\n\t        complexTypes[fieldType] = sbvrTypes[fieldType].types.odata.complexType;\n\t      }\n\t      return sbvrTypes[fieldType].types.odata.name;\n\t    } else {\n\t      console.error('Could not resolve type', fieldType);\n\t      throw new Error('Could not resolve type' + fieldType);\n\t    }\n\t  };\n\t  model = sqlModel.tables;\n\t  associations = [];\n\t  forEachUniqueTable(model, function(key, arg) {\n\t    var dataType, fields, i, j, len, ref, referencedResource, references, required, resourceName, results;\n\t    resourceName = arg.name, fields = arg.fields;\n\t    resourceName = getResourceName(resourceName);\n\t    results = [];\n\t    for (i = j = 0, len = fields.length; j < len; i = ++j) {\n\t      ref = fields[i], dataType = ref.dataType, required = ref.required, references = ref.references;\n\t      if (!(dataType === 'ForeignKey')) {\n\t        continue;\n\t      }\n\t      referencedResource = references.tableName;\n\t      referencedResource = getResourceName(referencedResource);\n\t      results.push(associations.push({\n\t        name: resourceName + referencedResource,\n\t        ends: [\n\t          {\n\t            resourceName: resourceName,\n\t            cardinality: required ? '1' : '0..1'\n\t          }, {\n\t            resourceName: referencedResource,\n\t            cardinality: '*'\n\t          }\n\t        ]\n\t      }));\n\t    }\n\t    return results;\n\t  });\n\t  return (\"<?xml version=\\\"1.0\\\" encoding=\\\"iso-8859-1\\\" standalone=\\\"yes\\\"?>\\n<edmx:Edmx Version=\\\"1.0\\\" xmlns:edmx=\\\"http://schemas.microsoft.com/ado/2007/06/edmx\\\">\\n\t<edmx:DataServices xmlns:m=\\\"http://schemas.microsoft.com/ado/2007/08/dataservices/metadata\\\" m:DataServiceVersion=\\\"2.0\\\">\\n\t\t<Schema Namespace=\\\"\" + vocabulary + \"\\\"\\n\t\t\txmlns:d=\\\"http://schemas.microsoft.com/ado/2007/08/dataservices\\\"\\n\t\t\txmlns:m=\\\"http://schemas.microsoft.com/ado/2007/08/dataservices/metadata\\\"\\n\t\t\txmlns=\\\"http://schemas.microsoft.com/ado/2008/09/edm\\\">\\n\") + forEachUniqueTable(model, function(key, arg) {\n\t    var dataType, fieldName, fields, idField, referencedResource, references, required, resourceName;\n\t    idField = arg.idField, resourceName = arg.name, fields = arg.fields;\n\t    resourceName = getResourceName(resourceName);\n\t    return (\"<EntityType Name=\\\"\" + resourceName + \"\\\">\\n\t<Key>\\n\t\t<PropertyRef Name=\\\"\" + idField + \"\\\" />\\n\t</Key>\\n\") + ((function() {\n\t      var j, len, ref, results;\n\t      results = [];\n\t      for (j = 0, len = fields.length; j < len; j++) {\n\t        ref = fields[j], dataType = ref.dataType, fieldName = ref.fieldName, required = ref.required;\n\t        if (!(dataType !== 'ForeignKey')) {\n\t          continue;\n\t        }\n\t        dataType = resolveDataType(dataType);\n\t        fieldName = getResourceName(fieldName);\n\t        results.push(\"<Property Name=\\\"\" + fieldName + \"\\\" Type=\\\"\" + dataType + \"\\\" Nullable=\\\"\" + (!required) + \"\\\" />\");\n\t      }\n\t      return results;\n\t    })()).join('\\n') + '\\n' + ((function() {\n\t      var j, len, ref, results;\n\t      results = [];\n\t      for (j = 0, len = fields.length; j < len; j++) {\n\t        ref = fields[j], dataType = ref.dataType, fieldName = ref.fieldName, references = ref.references;\n\t        if (!(dataType === 'ForeignKey')) {\n\t          continue;\n\t        }\n\t        referencedResource = references.tableName;\n\t        fieldName = getResourceName(fieldName);\n\t        referencedResource = getResourceName(referencedResource);\n\t        results.push(\"<NavigationProperty Name=\\\"\" + fieldName + \"\\\" Relationship=\\\"\" + vocabulary + \".\" + (resourceName + referencedResource) + \"\\\" FromRole=\\\"\" + resourceName + \"\\\" ToRole=\\\"\" + referencedResource + \"\\\" />\");\n\t      }\n\t      return results;\n\t    })()).join('\\n') + '\\n' + '</EntityType>';\n\t  }).join('\\n\\n') + ((function() {\n\t    var j, len, ref, results;\n\t    results = [];\n\t    for (j = 0, len = associations.length; j < len; j++) {\n\t      ref = associations[j], name = ref.name, ends = ref.ends;\n\t      name = getResourceName(name);\n\t      results.push((\"<Association Name=\\\"\" + name + \"\\\">\") + '\\n\\t' + ((function() {\n\t        var k, len1, ref1, results1;\n\t        results1 = [];\n\t        for (k = 0, len1 = ends.length; k < len1; k++) {\n\t          ref1 = ends[k], resourceName = ref1.resourceName, cardinality = ref1.cardinality;\n\t          results1.push(\"<End Role=\\\"\" + resourceName + \"\\\" Type=\\\"\" + vocabulary + \".\" + resourceName + \"\\\" Multiplicity=\\\"\" + cardinality + \"\\\" />\");\n\t        }\n\t        return results1;\n\t      })()).join('\\n\\t') + '\\n' + '</Association>');\n\t    }\n\t    return results;\n\t  })()).join('\\n') + (\"<EntityContainer Name=\\\"\" + vocabulary + \"Service\\\" m:IsDefaultEntityContainer=\\\"true\\\">\\n\") + forEachUniqueTable(model, function(key, arg) {\n\t    var resourceName;\n\t    resourceName = arg.name;\n\t    resourceName = getResourceName(resourceName);\n\t    return \"<EntitySet Name=\\\"\" + resourceName + \"\\\" EntityType=\\\"\" + vocabulary + \".\" + resourceName + \"\\\" />\";\n\t  }).join('\\n') + '\\n' + ((function() {\n\t    var j, len, ref, results;\n\t    results = [];\n\t    for (j = 0, len = associations.length; j < len; j++) {\n\t      ref = associations[j], name = ref.name, ends = ref.ends;\n\t      name = getResourceName(name);\n\t      results.push((\"<AssociationSet Name=\\\"\" + name + \"\\\" Association=\\\"\" + vocabulary + \".\" + name + \"\\\">\") + '\\n\\t' + ((function() {\n\t        var k, len1, ref1, results1;\n\t        results1 = [];\n\t        for (k = 0, len1 = ends.length; k < len1; k++) {\n\t          ref1 = ends[k], resourceName = ref1.resourceName, cardinality = ref1.cardinality;\n\t          results1.push(\"<End Role=\\\"\" + resourceName + \"\\\" EntitySet=\\\"\" + vocabulary + \".\" + resourceName + \"\\\" />\");\n\t        }\n\t        return results1;\n\t      })()).join('\\n\\t') + '</AssociationSet>');\n\t    }\n\t    return results;\n\t  })()).join('\\n') + '</EntityContainer>' + ((function() {\n\t    var results;\n\t    results = [];\n\t    for (typeName in complexTypes) {\n\t      complexType = complexTypes[typeName];\n\t      results.push(complexType);\n\t    }\n\t    return results;\n\t  })()).join('\\n') + '\t\t</Schema>\\n\t</edmx:DataServices>\\n</edmx:Edmx>';\n\t};\n\n\n/***/ }),\n/* 139 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"Vocabulary: dev\\n\\nTerm:       model value\\n\\tConcept Type: JSON (Type)\\nTerm:       model\\n\\tReference Scheme: model value\\nTerm:       vocabulary\\n\\tConcept Type: Short Text (Type)\\nTerm:       model type\\n\\tConcept Type: Short Text (Type)\\n\\nFact Type: model is of vocabulary\\n\\tNecessity: Each model is of exactly one vocabulary\\nFact Type: model has model type\\n\\tNecessity: Each model has exactly one model type\\nFact Type: model has model value\\n\\tNecessity: Each model has exactly one model value\\n\"\n\n/***/ }),\n/* 140 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Promise, _, fs, permissions, sbvrUtils;\n\t\n\t_ = __webpack_require__(4);\n\t\n\tPromise = __webpack_require__(2);\n\t\n\tsbvrUtils = __webpack_require__(24);\n\t\n\tpermissions = __webpack_require__(46);\n\t\n\tfs = Promise.promisifyAll(__webpack_require__(141));\n\t\n\texports.setup = function(app) {\n\t  var loadApplicationConfig, loadConfig, loadJSON;\n\t  loadConfig = function(data) {\n\t    return sbvrUtils.db.transaction().then(function(tx) {\n\t      return Promise.map(data.models, function(model) {\n\t        if (model.modelText != null) {\n\t          return sbvrUtils.executeModel(tx, model).then(function() {\n\t            return console.info('Sucessfully executed ' + model.modelName + ' model.');\n\t          })[\"catch\"](function(err) {\n\t            throw new Error(['Failed to execute ' + model.modelName + ' model from ' + model.modelFile, err, err.stack]);\n\t          });\n\t        }\n\t      }).then(function() {\n\t        var authApiTx, i, len, ref, user;\n\t        authApiTx = sbvrUtils.api.Auth.clone({\n\t          passthrough: {\n\t            tx: tx,\n\t            req: permissions.root\n\t          }\n\t        });\n\t        if (data.users != null) {\n\t          permissions = {};\n\t          ref = data.users;\n\t          for (i = 0, len = ref.length; i < len; i++) {\n\t            user = ref[i];\n\t            if (user.permissions != null) {\n\t              _.each(user.permissions, function(permissionName) {\n\t                return permissions[permissionName] != null ? permissions[permissionName] : permissions[permissionName] = authApiTx.get({\n\t                  resource: 'permission',\n\t                  options: {\n\t                    select: 'id',\n\t                    filter: {\n\t                      name: permissionName\n\t                    }\n\t                  }\n\t                }).then(function(result) {\n\t                  if (result.length === 0) {\n\t                    return authApiTx.post({\n\t                      resource: 'permission',\n\t                      body: {\n\t                        name: permissionName\n\t                      }\n\t                    }).get('id');\n\t                  } else {\n\t                    return result[0].id;\n\t                  }\n\t                })[\"catch\"](function(e) {\n\t                  e.message = 'Could not create or find permission \"' + permissionName + '\": ' + e.message;\n\t                  throw e;\n\t                });\n\t              });\n\t            }\n\t          }\n\t          return Promise.map(data.users, function(user) {\n\t            return authApiTx.get({\n\t              resource: 'user',\n\t              options: {\n\t                select: 'id',\n\t                filter: {\n\t                  username: user.username\n\t                }\n\t              }\n\t            }).then(function(result) {\n\t              if (result.length === 0) {\n\t                return authApiTx.post({\n\t                  resource: 'user',\n\t                  body: {\n\t                    username: user.username,\n\t                    password: user.password\n\t                  }\n\t                }).get('id');\n\t              } else {\n\t                return result[0].id;\n\t              }\n\t            }).then(function(userID) {\n\t              if (user.permissions != null) {\n\t                return Promise.map(user.permissions, function(permissionName) {\n\t                  return permissions[permissionName].then(function(permissionID) {\n\t                    return authApiTx.get({\n\t                      resource: 'user__has__permission',\n\t                      options: {\n\t                        select: 'id',\n\t                        filter: {\n\t                          user: userID,\n\t                          permission: permissionID\n\t                        }\n\t                      }\n\t                    }).then(function(result) {\n\t                      if (result.length === 0) {\n\t                        return authApiTx.post({\n\t                          resource: 'user__has__permission',\n\t                          body: {\n\t                            user: userID,\n\t                            permission: permissionID\n\t                          }\n\t                        });\n\t                      }\n\t                    });\n\t                  });\n\t                });\n\t              }\n\t            })[\"catch\"](function(e) {\n\t              e.message = 'Could not create or find user \"' + user.username + '\": ' + e.message;\n\t              throw e;\n\t            });\n\t          });\n\t        }\n\t      })[\"catch\"](function(err) {\n\t        tx.rollback();\n\t        throw err;\n\t      }).then(function() {\n\t        tx.end();\n\t        return Promise.map(data.models, function(model) {\n\t          var apiRoute, customCode, e;\n\t          if (model.modelText != null) {\n\t            apiRoute = '/' + model.apiRoot + '/*';\n\t            app.options(apiRoute, function(req, res) {\n\t              return res.sendStatus(200);\n\t            });\n\t            app.all(apiRoute, sbvrUtils.handleODataRequest);\n\t          }\n\t          if (model.customServerCode != null) {\n\t            if (_.isObject(model.customServerCode)) {\n\t              customCode = model.customServerCode;\n\t            } else {\n\t              try {\n\t                customCode = nodeRequire(model.customServerCode);\n\t              } catch (error) {\n\t                e = error;\n\t                e.message = 'Error loading custom server code: ' + e.message;\n\t                throw e;\n\t              }\n\t            }\n\t            if (!_.isFunction(customCode.setup)) {\n\t              return;\n\t            }\n\t            try {\n\t              return new Promise(function(resolve, reject) {\n\t                var promise;\n\t                promise = customCode.setup(app, sbvrUtils, sbvrUtils.db, function(err) {\n\t                  if (err) {\n\t                    return reject(err);\n\t                  } else {\n\t                    return resolve();\n\t                  }\n\t                });\n\t                if (Promise.is(promise)) {\n\t                  return resolve(promise);\n\t                }\n\t              });\n\t            } catch (error) {\n\t              e = error;\n\t              e.message = 'Error running custom server code: ' + e.message;\n\t              throw e;\n\t            }\n\t          }\n\t        });\n\t      });\n\t    });\n\t  };\n\t  loadJSON = function(path) {\n\t    var json;\n\t    console.info('Loading JSON:', path);\n\t    json = fs.readFileSync(path, 'utf8');\n\t    return JSON.parse(json);\n\t  };\n\t  loadApplicationConfig = function(config) {\n\t    var path, root;\n\t    try {\n\t      __webpack_require__(142);\n\t    } catch (error) {}\n\t    path = __webpack_require__(143);\n\t    console.info('Loading application config');\n\t    switch (typeof config) {\n\t      case 'undefined':\n\t        root = process.argv[2] || __dirname;\n\t        config = loadJSON(path.join(root, 'config.json'));\n\t        break;\n\t      case 'string':\n\t        root = path.dirname(config);\n\t        config = loadJSON(config);\n\t        break;\n\t      case 'object':\n\t        root = process.cwd();\n\t    }\n\t    return Promise.map(config.models, function(model) {\n\t      return fs.readFileAsync(path.join(root, model.modelFile), 'utf8').then(function(modelText) {\n\t        model.modelText = modelText;\n\t        if (model.customServerCode != null) {\n\t          return model.customServerCode = root + '/' + model.customServerCode;\n\t        }\n\t      }).then(function() {\n\t        var migrationsPath;\n\t        model.migrations || (model.migrations = {});\n\t        if (model.migrationsPath) {\n\t          migrationsPath = path.join(root, model.migrationsPath);\n\t          delete model.migrationsPath;\n\t          return fs.readdirAsync(migrationsPath).map(function(filename) {\n\t            var filePath, fn, migrationKey;\n\t            filePath = path.join(migrationsPath, filename);\n\t            migrationKey = filename.split('-')[0];\n\t            switch (path.extname(filename)) {\n\t              case '.coffee':\n\t              case '.js':\n\t                fn = nodeRequire(filePath);\n\t                return model.migrations[migrationKey] = fn;\n\t              case '.sql':\n\t                return fs.readFileAsync(filePath).then(function(sqlBuffer) {\n\t                  return model.migrations[migrationKey] = sqlBuffer.toString();\n\t                });\n\t              default:\n\t                return console.error(\"Unrecognised migration file extension, skipping: \" + (path.extname(filename)));\n\t            }\n\t          });\n\t        }\n\t      });\n\t    }).then(function() {\n\t      return loadConfig(config);\n\t    })[\"catch\"](function(err) {\n\t      console.error('Error loading application config', err, err.stack);\n\t      return process.exit();\n\t    });\n\t  };\n\t  return {\n\t    loadConfig: loadConfig,\n\t    loadApplicationConfig: loadApplicationConfig\n\t  };\n\t};\n\n\n/***/ }),\n/* 141 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = require(\"fs\");\n\n/***/ }),\n/* 142 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = require(\"coffee-script/register\");\n\n/***/ }),\n/* 143 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = require(\"path\");\n\n/***/ }),\n/* 144 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar PinejsSessionStore, _, expressSession, permissions, sessionAPI, sessionModel,\n\t  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n\t  hasProp = {}.hasOwnProperty;\n\t\n\t_ = __webpack_require__(4);\n\t\n\texpressSession = __webpack_require__(145);\n\t\n\tpermissions = __webpack_require__(46);\n\t\n\tsessionAPI = null;\n\t\n\tsessionModel = 'Vocabulary: session\\n\\nTerm:       session id\\n\tConcept Type: Short Text (Type)\\nTerm:       data\\n\tConcept Type: JSON (Type)\\nTerm:       expiry time\\n\tConcept type: Date Time (Type)\\n\\nTerm:       session\\n\tDatabase ID Field: session id\\n\tReference Scheme: session id\\n\\nFact type:  session has data\\n\tNecessity: Each session has exactly 1 data\\nFact type:  session has session id\\n\tNecessity: Each session has exactly 1 session id\\n\tNecessity: Each session id is of exactly 1 session\\nFact type:  session has expiry time\\n\tNecessity: Each session has at most 1 expiry time';\n\t\n\tPinejsSessionStore = (function(superClass) {\n\t  extend(PinejsSessionStore, superClass);\n\t\n\t  function PinejsSessionStore() {}\n\t\n\t  PinejsSessionStore.prototype.get = function(sid, callback) {\n\t    return sessionAPI.get({\n\t      resource: 'session',\n\t      id: sid,\n\t      passthrough: {\n\t        req: permissions.rootRead\n\t      },\n\t      options: {\n\t        select: 'data'\n\t      }\n\t    }).then(function(session) {\n\t      return session != null ? session.data : void 0;\n\t    }).nodeify(callback);\n\t  };\n\t\n\t  PinejsSessionStore.prototype.set = function(sid, data, callback) {\n\t    var body, ref, ref1;\n\t    body = {\n\t      session_id: sid,\n\t      data: data,\n\t      expiry_time: (ref = data != null ? (ref1 = data.cookie) != null ? ref1.expires : void 0 : void 0) != null ? ref : null\n\t    };\n\t    return sessionAPI.put({\n\t      resource: 'session',\n\t      id: sid,\n\t      passthrough: {\n\t        req: permissions.root\n\t      },\n\t      body: body\n\t    }).nodeify(callback);\n\t  };\n\t\n\t  PinejsSessionStore.prototype.destroy = function(sid, callback) {\n\t    return sessionAPI[\"delete\"]({\n\t      resource: 'session',\n\t      id: sid,\n\t      passthrough: {\n\t        req: permissions.root\n\t      }\n\t    }).nodeify(callback);\n\t  };\n\t\n\t  PinejsSessionStore.prototype.all = function(callback) {\n\t    return sessionAPI.get({\n\t      resource: 'session',\n\t      passthrough: {\n\t        req: permissions.root\n\t      },\n\t      options: {\n\t        select: 'session_id',\n\t        filter: {\n\t          expiry_time: {\n\t            $ge: Date.now()\n\t          }\n\t        }\n\t      }\n\t    }).then(function(sessions) {\n\t      return _.map(sessions, 'session_id');\n\t    }).nodeify(callback);\n\t  };\n\t\n\t  PinejsSessionStore.prototype.clear = function(callback) {\n\t    return sessionAPI[\"delete\"]({\n\t      resource: 'session',\n\t      passthrough: {\n\t        req: permissions.root\n\t      }\n\t    }).nodeify(callback);\n\t  };\n\t\n\t  PinejsSessionStore.prototype.length = function(callback) {\n\t    return sessionAPI.get({\n\t      resource: 'session',\n\t      passthrough: {\n\t        req: permissions.rootRead\n\t      },\n\t      options: {\n\t        select: 'session_id',\n\t        filter: {\n\t          expiry_time: {\n\t            $ge: Date.now()\n\t          }\n\t        }\n\t      }\n\t    }).then(function(sessions) {\n\t      return sessions.length;\n\t    }).nodeify(callback);\n\t  };\n\t\n\t  return PinejsSessionStore;\n\t\n\t})(expressSession.Store);\n\t\n\tPinejsSessionStore.config = {\n\t  models: [\n\t    {\n\t      modelName: 'session',\n\t      modelText: sessionModel,\n\t      apiRoot: 'session',\n\t      logging: {\n\t        \"default\": false,\n\t        error: true\n\t      },\n\t      customServerCode: PinejsSessionStore\n\t    }\n\t  ]\n\t};\n\t\n\tPinejsSessionStore.setup = function(app, sbvrUtils, db, callback) {\n\t  sessionAPI = sbvrUtils.api.session;\n\t  return callback();\n\t};\n\t\n\tmodule.exports = PinejsSessionStore;\n\n\n/***/ }),\n/* 145 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = require(\"express-session\");\n\n/***/ }),\n/* 146 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Promise, isServerOnAir, permissions, serverIsOnAir, uiModel,\n\t  hasProp = {}.hasOwnProperty;\n\t\n\tPromise = __webpack_require__(2);\n\t\n\tpermissions = __webpack_require__(46);\n\t\n\tuiModel = 'Vocabulary: ui\\n\\nTerm:       text\\n\tConcept type: Text (Type)\\nTerm:       name\\n\tConcept type: Short Text (Type)\\nTerm:       textarea\\n\t--Database id Field: name\\n\tReference Scheme: text\\nFact type:  textarea is disabled\\nFact type:  textarea has name\\n\tNecessity: Each textarea has exactly 1 name\\n\tNecessity: Each name is of exactly 1 textarea\\nFact type:  textarea has text\\n\tNecessity: Each textarea has exactly 1 text';\n\t\n\tisServerOnAir = (function() {\n\t  var promise, resolve;\n\t  resolve = null;\n\t  promise = new Promise(function(_resolve) {\n\t    return resolve = _resolve;\n\t  });\n\t  return function(value) {\n\t    if (value != null) {\n\t      if (promise.isPending()) {\n\t        resolve(value);\n\t        resolve = null;\n\t      } else {\n\t        promise = Promise.fulfilled(value);\n\t      }\n\t    }\n\t    return promise;\n\t  };\n\t})();\n\t\n\tserverIsOnAir = function(req, res, next) {\n\t  return isServerOnAir().then(function(onAir) {\n\t    if (onAir) {\n\t      return next();\n\t    } else {\n\t      return next('route');\n\t    }\n\t  });\n\t};\n\t\n\texports.config = {\n\t  models: [\n\t    {\n\t      modelName: 'ui',\n\t      modelText: uiModel,\n\t      apiRoot: 'ui',\n\t      customServerCode: exports\n\t    }\n\t  ]\n\t};\n\t\n\texports.setup = function(app, sbvrUtils, db) {\n\t  var devApi, setupModels, uiApi;\n\t  uiApi = sbvrUtils.api.ui;\n\t  devApi = sbvrUtils.api.dev;\n\t  setupModels = function(tx) {\n\t    var uiApiTx;\n\t    uiApiTx = uiApi.clone({\n\t      passthrough: {\n\t        tx: tx,\n\t        req: permissions.root\n\t      }\n\t    });\n\t    return uiApiTx.get({\n\t      resource: 'textarea',\n\t      options: {\n\t        select: 'id',\n\t        filter: {\n\t          name: 'model_area'\n\t        }\n\t      }\n\t    }).then(function(result) {\n\t      if (result.length === 0) {\n\t        return uiApiTx.post({\n\t          resource: 'textarea',\n\t          body: {\n\t            name: 'model_area',\n\t            text: ' '\n\t          }\n\t        });\n\t      }\n\t    }).then(function() {\n\t      return devApi.get({\n\t        resource: 'model',\n\t        passthrough: {\n\t          tx: tx,\n\t          req: permissions.rootRead\n\t        },\n\t        options: {\n\t          select: ['vocabulary', 'model_value'],\n\t          filter: {\n\t            model_type: 'se',\n\t            vocabulary: 'data'\n\t          }\n\t        }\n\t      });\n\t    }).then(function(result) {\n\t      var instance;\n\t      if (result.length === 0) {\n\t        throw new Error('No SE data model found');\n\t      }\n\t      instance = result[0];\n\t      return sbvrUtils.executeModel(tx, {\n\t        apiRoot: instance.vocabulary,\n\t        modelText: instance.model_value\n\t      });\n\t    }).then(function() {\n\t      return isServerOnAir(true);\n\t    })[\"catch\"](function(err) {\n\t      return isServerOnAir(false);\n\t    });\n\t  };\n\t  app.get('/onAir', function(req, res, next) {\n\t    return isServerOnAir().then(function(onAir) {\n\t      return res.json(onAir);\n\t    });\n\t  });\n\t  app.post('/update', permissions.checkPermissionsMiddleware('all'), serverIsOnAir, function(req, res, next) {\n\t    return res.sendStatus(404);\n\t  });\n\t  app.post('/execute', permissions.checkPermissionsMiddleware('all'), function(req, res, next) {\n\t    return uiApi.get({\n\t      resource: 'textarea',\n\t      passthrough: {\n\t        req: permissions.rootRead\n\t      },\n\t      options: {\n\t        select: 'text',\n\t        filter: {\n\t          name: 'model_area'\n\t        }\n\t      }\n\t    }).then(function(result) {\n\t      var modelText;\n\t      if (result.length === 0) {\n\t        throw new Error('Could not find the model to execute');\n\t      }\n\t      modelText = result[0].text;\n\t      return db.transaction().then(function(tx) {\n\t        return sbvrUtils.executeModel(tx, {\n\t          apiRoot: 'data',\n\t          modelText: modelText\n\t        }).then(function() {\n\t          return uiApi.patch({\n\t            resource: 'textarea',\n\t            passthrough: {\n\t              tx: tx,\n\t              req: permissions.root\n\t            },\n\t            options: {\n\t              filter: {\n\t                name: 'model_area'\n\t              }\n\t            },\n\t            body: {\n\t              is_disabled: true\n\t            }\n\t          });\n\t        }).then(function() {\n\t          return tx.end();\n\t        })[\"catch\"](function(err) {\n\t          tx.rollback();\n\t          throw err;\n\t        });\n\t      });\n\t    }).then(function() {\n\t      isServerOnAir(true);\n\t      return res.sendStatus(200);\n\t    })[\"catch\"](function(err) {\n\t      isServerOnAir(false);\n\t      return res.status(404).json(err);\n\t    });\n\t  });\n\t  app.post('/validate', permissions.checkPermissionsMiddleware('get'), function(req, res, next) {\n\t    return sbvrUtils.runRule('data', req.body.rule).then(function(results) {\n\t      return res.json(results);\n\t    })[\"catch\"](function(err) {\n\t      console.log('Error validating', err);\n\t      return res.sendStatus(404);\n\t    });\n\t  });\n\t  app[\"delete\"]('/cleardb', permissions.checkPermissionsMiddleware('delete'), function(req, res, next) {\n\t    return db.transaction(function(tx) {\n\t      return tx.tableList().then(function(result) {\n\t        return Promise.all(result.rows.map(function(table) {\n\t          return tx.dropTable(table.name);\n\t        }));\n\t      }).then(function() {\n\t        return sbvrUtils.executeStandardModels(tx);\n\t      }).then(function() {\n\t        console.warn('DEL /cleardb is very destructive and should really be followed by a full restart/reload.');\n\t        return sbvrUtils.executeModels(tx, exports.config.models);\n\t      }).then(function() {\n\t        return setupModels(tx);\n\t      }).then(function() {\n\t        tx.end();\n\t        return res.sendStatus(200);\n\t      })[\"catch\"](function(err) {\n\t        console.error('Error clearing db', err, err.stack);\n\t        tx.rollback();\n\t        return res.sendStatus(503);\n\t      });\n\t    });\n\t  });\n\t  app.put('/importdb', permissions.checkPermissionsMiddleware('set'), function(req, res, next) {\n\t    var queries;\n\t    queries = req.body.split(';');\n\t    return db.transaction(function(tx) {\n\t      return Promise.reduce(queries, function(result, query) {\n\t        query = query.trim();\n\t        if (query.length > 0) {\n\t          return tx.executeSql(query)[\"catch\"](function(err) {\n\t            throw [query, err];\n\t          });\n\t        }\n\t      }, null).then(function() {\n\t        tx.end();\n\t        return res.sendStatus(200);\n\t      })[\"catch\"](function(err) {\n\t        console.error('Error importing db', err, err.stack);\n\t        tx.rollback();\n\t        return res.sendStatus(404);\n\t      });\n\t    });\n\t  });\n\t  app.get('/exportdb', permissions.checkPermissionsMiddleware('get'), function(req, res, next) {\n\t    return db.transaction(function(tx) {\n\t      return tx.tableList(\"name NOT LIKE '%_buk'\").then(function(result) {\n\t        var exported;\n\t        exported = '';\n\t        return Promise.all(result.rows.map(function(table) {\n\t          var tableName;\n\t          tableName = table.name;\n\t          exported += 'DROP TABLE IF EXISTS \"' + tableName + '\";\\n';\n\t          exported += table.sql + ';\\n';\n\t          return tx.executeSql('SELECT * FROM \"' + tableName + '\";').then(function(result) {\n\t            var insQuery;\n\t            insQuery = '';\n\t            result.rows.forEach(function(currRow) {\n\t              var notFirst, propName, valQuery;\n\t              notFirst = false;\n\t              insQuery += 'INSERT INTO \"' + tableName + '\" (';\n\t              valQuery = '';\n\t              for (propName in currRow) {\n\t                if (!hasProp.call(currRow, propName)) continue;\n\t                if (notFirst) {\n\t                  insQuery += ',';\n\t                  valQuery += ',';\n\t                } else {\n\t                  notFirst = true;\n\t                }\n\t                insQuery += '\"' + propName + '\"';\n\t                valQuery += \"'\" + currRow[propName] + \"'\";\n\t              }\n\t              return insQuery += ') values (' + valQuery + ');\\n';\n\t            });\n\t            return exported += insQuery;\n\t          });\n\t        })).then(function() {\n\t          tx.end();\n\t          return res.json(exported);\n\t        });\n\t      })[\"catch\"](function(err) {\n\t        console.error('Error exporting db', err, err.stack);\n\t        tx.rollback();\n\t        return res.sendStatus(503);\n\t      });\n\t    });\n\t  });\n\t  app.post('/backupdb', permissions.checkPermissionsMiddleware('all'), serverIsOnAir, function(req, res, next) {\n\t    return db.transaction(function(tx) {\n\t      return tx.tableList(\"name NOT LIKE '%_buk'\").then(function(result) {\n\t        return Promise.all(result.rows.map(function(currRow) {\n\t          var tableName;\n\t          tableName = currRow.name;\n\t          return tx.dropTable(tableName + '_buk', true).then(function() {\n\t            return tx.executeSql('ALTER TABLE \"' + tableName + '\" RENAME TO \"' + tableName + '_buk\";');\n\t          });\n\t        }));\n\t      }).then(function() {\n\t        tx.end();\n\t        return res.sendStatus(200);\n\t      })[\"catch\"](function(err) {\n\t        tx.rollback();\n\t        console.error('Error backing up db', err, err.stack);\n\t        return res.sendStatus(404);\n\t      });\n\t    });\n\t  });\n\t  app.post('/restoredb', permissions.checkPermissionsMiddleware('all'), serverIsOnAir, function(req, res, next) {\n\t    return db.transaction(function(tx) {\n\t      return tx.tableList(\"name LIKE '%_buk'\").then(function(result) {\n\t        return Promise.all(result.rows.map(function(currRow) {\n\t          var tableName;\n\t          tableName = currRow.name;\n\t          return tx.dropTable(tableName.slice(0, -4), true).then(function() {\n\t            return tx.executeSql('ALTER TABLE \"' + tableName + '\" RENAME TO \"' + tableName.slice(0, -4) + '\";');\n\t          });\n\t        }));\n\t      }).then(function() {\n\t        tx.end();\n\t        return res.sendStatus(200);\n\t      })[\"catch\"](function(err) {\n\t        tx.rollback();\n\t        console.error('Error restoring db', err, err.stack);\n\t        return res.sendStatus(404);\n\t      });\n\t    });\n\t  });\n\t  app.all('/data/*', serverIsOnAir, sbvrUtils.handleODataRequest);\n\t  app.get('/Auth/*', serverIsOnAir, sbvrUtils.handleODataRequest);\n\t  app.merge('/ui/*', sbvrUtils.handleODataRequest);\n\t  app.patch('/ui/*', sbvrUtils.handleODataRequest);\n\t  app[\"delete\"]('/', serverIsOnAir, function(req, res, next) {\n\t    return Promise.all([\n\t      uiApi.patch({\n\t        resource: 'textarea',\n\t        passthrough: {\n\t          req: permissions.root\n\t        },\n\t        options: {\n\t          filter: {\n\t            name: 'model_area'\n\t          }\n\t        },\n\t        body: {\n\t          text: '',\n\t          name: 'model_area',\n\t          is_disabled: false\n\t        }\n\t      }), sbvrUtils.deleteModel('data')\n\t    ]).then(function() {\n\t      isServerOnAir(false);\n\t      return res.sendStatus(200);\n\t    });\n\t  });\n\t  return db.transaction().then(function(tx) {\n\t    return setupModels(tx).then(function() {\n\t      return tx.end();\n\t    })[\"catch\"](function(err) {\n\t      tx.rollback();\n\t      throw err;\n\t    });\n\t  });\n\t};\n\n\n/***/ }),\n/* 147 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Promise, _, transactionModel;\n\t\n\t_ = __webpack_require__(4);\n\t\n\tPromise = __webpack_require__(2);\n\t\n\ttransactionModel = __webpack_require__(148);\n\t\n\texports.config = {\n\t  models: [\n\t    {\n\t      apiRoot: 'transaction',\n\t      modelText: transactionModel,\n\t      customServerCode: exports\n\t    }\n\t  ]\n\t};\n\t\n\texports.setup = function(app, sbvrUtils) {\n\t  return exports.addModelHooks = function(modelName) {\n\t    var endTransaction;\n\t    sbvrUtils.addHook('PUT', modelName, 'all', function(arg) {\n\t      var id, logger, request, tx, vocab;\n\t      tx = arg.tx, request = arg.request;\n\t      vocab = request.vocabulary;\n\t      logger = sbvrUtils.api[vocab].logger;\n\t      id = sbvrUtils.getID(vocab, request);\n\t      return tx.executeSql('SELECT NOT EXISTS(\\n\tSELECT 1\\n\tFROM \"resource\" r\\n\tJOIN \"resource-is_under-lock\" AS rl ON rl.\"resource\" = r.\"id\"\\n\tWHERE r.\"resource type\" = ?\\n\tAND r.\"resource id\" = ?\\n) AS result;', [request.resourceName, id])[\"catch\"](function(err) {\n\t        logger.error('Unable to check resource locks', err, err.stack);\n\t        throw new Error('Unable to check resource locks');\n\t      }).then(function(result) {\n\t        var ref;\n\t        if ((ref = result.rows.item(0).result) === false || ref === 0 || ref === '0') {\n\t          throw new Error('The resource is locked and cannot be edited');\n\t        }\n\t      });\n\t    });\n\t    endTransaction = function(transactionID) {\n\t      return sbvrUtils.db.transaction().then(function(tx) {\n\t        var getFieldsObject, getLockedRow, placeholders;\n\t        placeholders = {};\n\t        getLockedRow = function(lockID) {\n\t          return tx.executeSql('SELECT \"resource\".\"resource id\" AS \"resource_id\"\\nFROM \"resource\",\\n\t\"resource-is_under-lock\"\\nWHERE \"resource\".\"id\" = \"resource-is_under-lock\".\"resource\"\\nAND \"resource-is_under-lock\".\"lock\" = ?;', [lockID]);\n\t        };\n\t        getFieldsObject = function(conditionalResourceID, clientModel) {\n\t          return tx.executeSql('SELECT \"conditional_field\".\"field name\" AS \"field_name\", \"conditional_field\".\"field value\" AS \"field_value\"\\nFROM \"conditional_field\"\\nWHERE \"conditional_field\".\"conditional resource\" = ?;', [conditionalResourceID]).then(function(fields) {\n\t            var fieldsObject;\n\t            fieldsObject = {};\n\t            return Promise.all(fields.rows.map(function(field) {\n\t              var fieldName, fieldValue, modelField;\n\t              fieldName = field.field_name.replace(clientModel.resourceName + '.', '');\n\t              fieldValue = field.field_value;\n\t              modelField = _.find(clientModel.fields, {\n\t                fieldName: fieldName\n\t              });\n\t              if (modelField.dataType === 'ForeignKey' && _.isNaN(Number(fieldValue))) {\n\t                if (!placeholders.hasOwnProperty(fieldValue)) {\n\t                  throw new Error('Cannot resolve placeholder' + fieldValue);\n\t                } else {\n\t                  return placeholders[fieldValue].promise.then(function(resolvedID) {\n\t                    return fieldsObject[fieldName] = resolvedID;\n\t                  })[\"catch\"](function() {\n\t                    throw new Error('Placeholder failed' + fieldValue);\n\t                  });\n\t                }\n\t              } else {\n\t                return fieldsObject[fieldName] = fieldValue;\n\t              }\n\t            })).then(function() {\n\t              return fieldsObject;\n\t            });\n\t          });\n\t        };\n\t        return tx.executeSql('SELECT \"conditional_resource\".\"id\", \"conditional_resource\".\"lock\", \"conditional_resource\".\"resource type\" AS \"resource_type\", \"conditional_resource\".\"conditional type\" AS \"conditional_type\", \"conditional_resource\".\"placeholder\"\\nFROM \"conditional_resource\"\\nWHERE \"conditional_resource\".\"transaction\" = ?;', [transactionID]).then(function(conditionalResources) {\n\t          conditionalResources.rows.forEach(function(conditionalResource) {\n\t            var placeholder;\n\t            placeholder = conditionalResource.placeholder;\n\t            if ((placeholder != null) && placeholder.length > 0) {\n\t              placeholders[placeholder] = {};\n\t              return placeholders[placeholder].promise = new Promise(function(resolve, reject) {\n\t                placeholders[placeholder].resolve = resolve;\n\t                return placeholders[placeholder].reject = reject;\n\t              });\n\t            }\n\t          });\n\t          return Promise.all(conditionalResources.rows.map(function(conditionalResource) {\n\t            var clientModel, doCleanup, lockID, passthrough, placeholder, url;\n\t            placeholder = conditionalResource.placeholder;\n\t            lockID = conditionalResource.lock;\n\t            doCleanup = function() {\n\t              return Promise.all([tx.executeSql('DELETE FROM \"conditional_field\" WHERE \"conditional resource\" = ?;', [conditionalResource.id]), tx.executeSql('DELETE FROM \"conditional_resource\" WHERE \"lock\" = ?;', [lockID]), tx.executeSql('DELETE FROM \"resource-is_under-lock\" WHERE \"lock\" = ?;', [lockID]), tx.executeSql('DELETE FROM \"lock\" WHERE \"id\" = ?;', [lockID])]);\n\t            };\n\t            passthrough = {\n\t              tx: tx\n\t            };\n\t            clientModel = clientModels[modelName].resources[conditionalResource.resource_type];\n\t            url = modelName + '/' + conditionalResource.resource_type;\n\t            switch (conditionalResource.conditional_type) {\n\t              case 'DELETE':\n\t                return getLockedRow(lockID).then(function(lockedRow) {\n\t                  lockedRow = lockedRow.rows.item(0);\n\t                  url = url + '?$filter=' + clientModel.idField + ' eq ' + lockedRow.resource_id;\n\t                  return sbvrUtils.PinejsClient.prototype[\"delete\"]({\n\t                    url: url,\n\t                    passthrough: passthrough\n\t                  });\n\t                }).then(doCleanup);\n\t              case 'EDIT':\n\t                return getLockedRow(lockID).then(function(lockedRow) {\n\t                  lockedRow = lockedRow.rows.item(0);\n\t                  return getFieldsObject(conditionalResource.id, clientModel).then(function(body) {\n\t                    body[clientModel.idField] = lockedRow.resource_id;\n\t                    return sbvrUtils.PinejsClient.prototype.put({\n\t                      url: url,\n\t                      body: body,\n\t                      passthrough: passthrough\n\t                    });\n\t                  });\n\t                }).then(doCleanup);\n\t              case 'ADD':\n\t                return getFieldsObject(conditionalResource.id, clientModel).then(function(body) {\n\t                  return sbvrUtils.PinejsClient.prototype.post({\n\t                    url: url,\n\t                    body: body,\n\t                    passthrough: passthrough\n\t                  });\n\t                }).then(function(result) {\n\t                  return placeholders[placeholder].resolve(result.id);\n\t                }).then(doCleanup)[\"catch\"](function(err) {\n\t                  placeholders[placeholder].reject(err);\n\t                  throw err;\n\t                });\n\t            }\n\t          }));\n\t        }).then(function(err) {\n\t          return tx.executeSql('DELETE FROM \"transaction\" WHERE \"id\" = ?;', [transactionID]);\n\t        }).then(function(result) {\n\t          return sbvrUtils.validateModel(tx, modelName);\n\t        })[\"catch\"](function(err) {\n\t          tx.rollback();\n\t          throw err;\n\t        }).then(function() {\n\t          return tx.end();\n\t        });\n\t      });\n\t    };\n\t    app.post('/transaction/execute', function(req, res, next) {\n\t      var id;\n\t      id = Number(req.body.id);\n\t      if (_.isNaN(id)) {\n\t        return res.sendStatus(404);\n\t      } else {\n\t        return endTransaction(id).then(function() {\n\t          return res.sendStatus(200);\n\t        })[\"catch\"](function(err) {\n\t          console.error('Error ending transaction', err, err.stack);\n\t          return res.status(404).json(err);\n\t        });\n\t      }\n\t    });\n\t    app.get('/transaction', function(req, res, next) {\n\t      return res.json({\n\t        transactionURI: '/transaction/transaction',\n\t        conditionalResourceURI: '/transaction/conditional_resource',\n\t        conditionalFieldURI: '/transaction/conditional_field',\n\t        lockURI: '/transaction/lock',\n\t        transactionLockURI: '/transaction/lock__belongs_to__transaction',\n\t        resourceURI: '/transaction/resource',\n\t        lockResourceURI: '/transaction/resource__is_under__lock',\n\t        exclusiveLockURI: '/transaction/lock__is_exclusive',\n\t        commitTransactionURI: '/transaction/execute'\n\t      });\n\t    });\n\t    return app.all('/transaction/*', sbvrUtils.handleODataRequest);\n\t  };\n\t};\n\n\n/***/ }),\n/* 148 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"Vocabulary: transaction\\n\\nTerm:       resource id\\n\\tConcept type: Text (Type)\\nTerm:       resource type\\n\\tConcept type: Text (Type)\\nTerm:       field name\\n\\tConcept type: Text (Type)\\nTerm:       field value\\n\\tConcept type: Text (Type)\\nTerm:       placeholder\\n\\tConcept type: Short Text (Type)\\n\\nTerm:       resource\\n\\tReference Scheme: resource id\\nFact type: resource has resource id\\n\\tNecessity: Each resource has exactly 1 resource id.\\nFact type: resource has resource type\\n\\tNecessity: Each resource has exactly 1 resource type.\\n\\nTerm:       transaction\\n\\nTerm:       lock\\nFact type:  lock is exclusive\\nFact type:  lock belongs to transaction\\n\\tNecessity: Each lock belongs to exactly 1 transaction.\\nFact type:  resource is under lock\\n\\tSynonymous Form: lock is on resource\\nRule:       It is obligatory that each resource that is under a lock that is exclusive, is under at most 1 lock.\\n\\nTerm:       conditional type\\n\\tConcept Type: Short Text (Type)\\n\\tDefinition: \\\"ADD\\\", \\\"EDIT\\\" or \\\"DELETE\\\"\\n\\nTerm:       conditional resource\\nFact type:  conditional resource belongs to transaction\\n\\tNecessity: Each conditional resource belongs to exactly 1 transaction.\\nFact type:  conditional resource has lock\\n\\tNecessity: Each conditional resource has at most 1 lock.\\nFact type:  conditional resource has resource type\\n\\tNecessity: Each conditional resource has exactly 1 resource type.\\nFact type:  conditional resource has conditional type\\n\\tNecessity: Each conditional resource has exactly 1 conditional type.\\nFact type:  conditional resource has placeholder\\n\\tNecessity: Each conditional resource has at most 1 placeholder.\\n--Rule:       It is obligatory that each conditional resource that has a placeholder, has a conditional type that is of \\\"ADD\\\".\\n\\nTerm:       conditional field\\n\\tReference Scheme: field name\\nFact type:  conditional field has field name\\n\\tNecessity: Each conditional field has exactly 1 field name.\\nFact type:  conditional field has field value\\n\\tNecessity: Each conditional field has at most 1 field value.\\nFact type:  conditional field is of conditional resource\\n\\tNecessity: Each conditional field is of exactly 1 conditional resource.\\n\\n--Rule:       It is obligatory that each conditional resource that has a conditional type that is of \\\"EDIT\\\" or \\\"DELETE\\\", has a lock that is exclusive\\nRule:       It is obligatory that each conditional resource that has a lock, has a resource type that is of a resource that the lock is on.\\nRule:       It is obligatory that each conditional resource that has a lock, belongs to a transaction that the lock belongs to.\\n\"\n\n/***/ }),\n/* 149 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Promise, permissions;\n\t\n\tPromise = __webpack_require__(2);\n\t\n\tpermissions = __webpack_require__(46);\n\t\n\texports.config = {\n\t  models: [\n\t    {\n\t      customServerCode: exports\n\t    }\n\t  ]\n\t};\n\t\n\texports.setup = function(app, sbvrUtils) {\n\t  var LocalStrategy, checkPassword, login, logout, passport;\n\t  exports.checkPassword = checkPassword = function(username, password, done) {\n\t    return permissions.checkPassword(username, password)[\"catch\"](function() {\n\t      return false;\n\t    }).then(function(user) {\n\t      return done(null, user);\n\t    });\n\t  };\n\t  if (false) {\n\t    passport = require('passport');\n\t    app.use(passport.initialize());\n\t    app.use(passport.session());\n\t    LocalStrategy = require('passport-local').Strategy;\n\t    passport.serializeUser(function(user, done) {\n\t      return done(null, user);\n\t    });\n\t    passport.deserializeUser(function(user, done) {\n\t      return done(null, user);\n\t    });\n\t    passport.use(new LocalStrategy(checkPassword));\n\t    login = function(fn) {\n\t      return function(req, res, next) {\n\t        return passport.authenticate('local', function(err, user) {\n\t          if (err || !user) {\n\t            fn(err, user, req, res, next);\n\t            return;\n\t          }\n\t          return req.login(user, function(err) {\n\t            return fn(err, user, req, res, next);\n\t          });\n\t        })(req, res, next);\n\t      };\n\t    };\n\t    logout = function(req, res, next) {\n\t      req.logout();\n\t      return next();\n\t    };\n\t  } else {\n\t    (function() {\n\t      var _user;\n\t      _user = false;\n\t      app.use(function(req, res, next) {\n\t        if (_user !== false) {\n\t          req.user = _user;\n\t        }\n\t        return next();\n\t      });\n\t      login = function(fn) {\n\t        return function(req, res, next) {\n\t          return checkPassword(req.body.username, req.body.password, function(err, user) {\n\t            if (user) {\n\t              _user = user;\n\t            }\n\t            return fn(err, user, req, res, next);\n\t          });\n\t        };\n\t      };\n\t      return logout = function(req, res, next) {\n\t        req.user = null;\n\t        _user = false;\n\t        return next();\n\t      };\n\t    })();\n\t  }\n\t  exports.login = login;\n\t  exports.logout = logout;\n\t  return Promise.resolve();\n\t};\n\n\n/***/ }),\n/* 150 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = require(\"express\");\n\n/***/ })\n/******/ ])))));\n\n\n// WEBPACK FOOTER //\n// out/pine.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a1cb07fb9a099fd0e365","Pinejs = require './module'\n\nPromise = require 'bluebird'\nsbvrUtils = require '../sbvr-api/sbvr-utils'\npassportPinejs = require '../passport-pinejs/passport-pinejs'\nPinejsSessionStore = require '../pinejs-session-store/pinejs-session-store'\n\nexpress = require 'express'\n\napp = express()\nswitch app.get('env')\n\twhen 'production'\n\t\tconsole.log = ->\n\twhen 'development'\n\t\tPromise.longStackTraces()\n\nif !process.browser\n\tpassport = require 'passport'\n\tpath = require 'path'\n\tcompression = require 'compression'\n\tserveStatic = require 'serve-static'\n\tcookieParser = require 'cookie-parser'\n\tbodyParser = require 'body-parser'\n\tmulter = require 'multer'\n\tmethodOverride = require 'method-override'\n\texpressSession = require 'express-session'\n\n\tapp.use(compression())\n\n\troot = process.argv[2] or __dirname\n\tapp.use('/', serveStatic(path.join(root, 'static')))\n\n\tapp.use(cookieParser())\n\tapp.use(bodyParser())\n\tapp.use(multer().any())\n\tapp.use(methodOverride())\n\tapp.use(expressSession(\n\t\tsecret: 'A pink cat jumped over a rainbow'\n\t\tstore: new PinejsSessionStore()\n\t))\n\tapp.use(passport.initialize())\n\tapp.use(passport.session())\n\n\tapp.use (req, res, next) ->\n\t\torigin = req.get('Origin') || '*'\n\t\tres.header('Access-Control-Allow-Origin', origin)\n\t\tres.header('Access-Control-Allow-Methods', 'GET, PUT, POST, PATCH, DELETE, OPTIONS, HEAD')\n\t\tres.header('Access-Control-Allow-Headers', 'Content-Type, Authorization, Application-Record-Count, MaxDataServiceVersion, X-Requested-With')\n\t\tres.header('Access-Control-Allow-Credentials', 'true')\n\t\tnext()\n\n\tapp.use (req, res, next) ->\n\t\tconsole.log('%s %s', req.method, req.url)\n\t\tnext()\n\ninitialised = Pinejs.init(app)\n.then (configLoader) ->\n\tPromise.all [\n\t\tconfigLoader.loadConfig(passportPinejs.config)\n\t\tconfigLoader.loadConfig(PinejsSessionStore.config)\n\t]\n.then ->\n\tif !process?.env.DISABLE_DEFAULT_AUTH\n\t\tapp.post '/login', passportPinejs.login (err, user, req, res, next) ->\n\t\t\tif err\n\t\t\t\tconsole.error('Error logging in', err, err.stack)\n\t\t\t\tres.sendStatus(500)\n\t\t\telse if user is false\n\t\t\t\tif req.xhr is true\n\t\t\t\t\tres.sendStatus(401)\n\t\t\t\telse\n\t\t\t\t\tres.redirect('/login.html')\n\t\t\telse\n\t\t\t\tif req.xhr is true\n\t\t\t\t\tres.sendStatus(200)\n\t\t\t\telse\n\t\t\t\t\tres.redirect('/')\n\n\t\tapp.get '/logout', passportPinejs.logout, (req, res, next) ->\n\t\t\tres.redirect('/')\n.then ->\n\tapp.listen process.env.PORT or 1337, ->\n\t\tconsole.info('Server started')\n.catch (err) ->\n\tconsole.error('Error initialising server', err, err.stack)\n\tprocess.exit()\n\nmodule.exports = { initialised, app, sbvrUtils }\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/src/server-glue/server.coffee","if !process.browser\n\tif !nodeRequire?\n\t\t# `nodeRequire` is a special variable we use to bypass webpack's resolving of `require`\n\t\t# statements on build for the cases where we need to always use the nodejs require, eg\n\t\t# in the config-loader which dynamically loads code at runtime, and for adding custom\n\t\t# filetype handlers - it works by being replaced with `require` after the webpack build\n\t\t# finishes.\n\t\t# In the case of `nodeRequire` being undefined it means we're being run in a nodejs\n\t\t# environment directly, without a webpack build, and have to manually create it as an\n\t\t# alias for the nodejs require so that things continue to work.\n\n\t\t# Alias require as nodeRequire for the config-loader hack.\n\t\tglobal.nodeRequire = require\n\n\t# Register a .sbvr loader\n\tfs = require 'fs'\n\tnodeRequire.extensions['.sbvr'] = (module, filename) ->\n\t\tmodule.exports = fs.readFileSync(filename, encoding: 'utf8')\n\t# Register the .ometajs loader\n\tnodeRequire('ometa-js')\n\nPromise = require 'bluebird'\ndbModule = require '../database-layer/db'\nsbvrUtils = require '../sbvr-api/sbvr-utils'\nconfigLoader = require '../config-loader/config-loader'\nmigrator = require '../migrator/migrator'\nPinejsSessionStore = require '../pinejs-session-store/pinejs-session-store'\n\nif dbModule.websql?\n\tdatabaseOptions =\n\t\tengine: 'websql'\n\t\tparams: 'rulemotion'\nelse\n\tdatabaseURL =\n\t\tif process.env.DATABASE_URL\n\t\t\tprocess.env.DATABASE_URL\n\t\telse if dbModule.postgres?\n\t\t\t'postgres://postgres:.@localhost:5432/postgres'\n\t\telse if dbModule.mysql?\n\t\t\t'mysql://mysql:.@localhost:3306'\n\t\telse\n\t\t\tthrow new Error('No supported database options available')\n\tdatabaseOptions =\n\t\tengine: databaseURL[...databaseURL.indexOf(':')]\n\t\tparams: databaseURL\n\ndb = dbModule.connect(databaseOptions)\n\ninit = (app, config) ->\n\tsbvrUtils.setup(app, db)\n\t.then ->\n\t\tconfigLoader = configLoader.setup(app)\n\t\tconfigLoader.loadConfig(migrator.config)\n\t\t.return(configLoader)\n\t.tap (configLoader) ->\n\t\tpromises = []\n\n\t\tif process.env.SBVR_SERVER_ENABLED\n\t\t\tsbvrServer = require '../data-server/SBVRServer'\n\t\t\tpromises.push configLoader.loadConfig(sbvrServer.config)\n\n\t\tif process.env.SBVR_SERVER_ENABLED\n\t\t\ttransactions = require '../http-transactions/transactions'\n\t\t\tpromises.push configLoader.loadConfig(transactions.config).then(-> transactions.addModelHooks('data'))\n\n\t\tif !process.env.CONFIG_LOADER_DISABLED\n\t\t\tpromises.push configLoader.loadApplicationConfig(config)\n\n\t\tPromise.all(promises)\n\t.catch (err) ->\n\t\tconsole.error('Error initialising server', err, err.stack)\n\t\tprocess.exit()\n\nmodule.exports = { init, sbvrUtils, SessionStore: PinejsSessionStore }\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/src/server-glue/module.coffee","module.exports = require(\"bluebird\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bluebird\"\n// module id = 2\n// module chunks = 0","_ = require 'lodash'\nPromise = require 'bluebird'\nsqlBinds = require './sql-binds'\nTypedError = require 'typed-error'\n\nclass DatabaseError extends TypedError\n\tconstructor: (message) ->\n\t\t# If the message has a code then use that as our code.\n\t\tif message?.code?\n\t\t\t@code = message.code\n\t\t# If this is a SQLError we have to handle it specially (since it's not an instance of Error)\n\t\tif message?.constructor.name is 'SQLError'\n\t\t\tmessage = message.message\n\t\tsuper(message)\n\nclass ConstraintError extends DatabaseError\nclass UniqueConstraintError extends ConstraintError\nclass ForeignKeyConstraintError extends ConstraintError\n\nNotADatabaseError = (err) -> not (err instanceof DatabaseError)\n\nDEFAULT_VALUE = {}\nbindDefaultValues = (sql, bindings) ->\n\tif !_.some(bindings, (binding) -> binding is DEFAULT_VALUE)\n\t\t# We don't have to do any work if none of the bindings match DEFAULT_VALUE\n\t\treturn sql\n\tbindNo = 0\n\tsqlBinds sql, ->\n\t\tif bindings[bindNo] == DEFAULT_VALUE\n\t\t\tbindings.splice(bindNo, 1)\n\t\t\t'DEFAULT'\n\t\telse\n\t\t\tbindNo++\n\t\t\t'?'\n\nalwaysExport = {\n\tDEFAULT_VALUE\n\tDatabaseError\n\tConstraintError\n\tUniqueConstraintError\n\tForeignKeyConstraintError\n}\n\natomicExecuteSql = (sql, bindings, callback) ->\n\t@transaction()\n\t.then (tx) ->\n\t\tresult = tx.executeSql(sql, bindings)\n\t\t# Use finally so that we do not modify the return of the result and will still trigger bluebird's possibly unhandled exception when relevant.\n\t\treturn result.finally ->\n\t\t\t# It is ok to use synchronous inspection of the promise here since this block will only be run once the promise is resolved.\n\t\t\tif result.isRejected()\n\t\t\t\ttx.rollback()\n\t\t\telse\n\t\t\t\ttx.end()\n\t.nodeify(callback)\n\nclass Tx\n\tif process.env.TRANSACTION_TIMEOUT_MS\n\t\ttimeoutMS = parseInt(process.env.TRANSACTION_TIMEOUT_MS)\n\t\tif _.isNaN(timeoutMS) or timeoutMS <= 0\n\t\t\tthrow new Error(\"Invalid valid for TRANSACTION_TIMEOUT_MS: #{process.env.TRANSACTION_TIMEOUT_MS}\")\n\telse\n\t\ttimeoutMS = 10000\n\n\tconstructor: (stackTraceErr, executeSql, rollback, end) ->\n\t\tautomaticClose = =>\n\t\t\tconsole.error('Transaction still open after ' + timeoutMS + 'ms without an execute call.', stackTraceErr.stack)\n\t\t\t@rollback()\n\t\tpendingExecutes = do ->\n\t\t\tautomaticCloseTimeout = setTimeout(automaticClose, timeoutMS)\n\t\t\tpending = 0\n\t\t\treturn {\n\t\t\t\tincrement: ->\n\t\t\t\t\tif pending is false\n\t\t\t\t\t\treturn\n\t\t\t\t\tpending++\n\t\t\t\t\tclearTimeout(automaticCloseTimeout)\n\t\t\t\tdecrement: ->\n\t\t\t\t\tif pending is false\n\t\t\t\t\t\treturn\n\t\t\t\t\tpending--\n\t\t\t\t\t# We only ever want one timeout running at a time, hence not using <=\n\t\t\t\t\tif pending is 0\n\t\t\t\t\t\tautomaticCloseTimeout = setTimeout(automaticClose, timeoutMS)\n\t\t\t\t\telse if pending < 0\n\t\t\t\t\t\tconsole.error('Pending transactions is less than 0, wtf?')\n\t\t\t\t\t\tpending = 0\n\t\t\t\tcancel: ->\n\t\t\t\t\t# Set pending to false to cancel all pending.\n\t\t\t\t\tpending = false\n\t\t\t\t\tclearTimeout(automaticCloseTimeout)\n\t\t\t}\n\n\t\t@executeSql = (sql, bindings = [], callback, args...) ->\n\t\t\tpendingExecutes.increment()\n\n\t\t\tsql = bindDefaultValues(sql, bindings)\n\n\t\t\texecuteSql(sql, bindings, args...)\n\t\t\t.finally(pendingExecutes.decrement)\n\t\t\t.catch NotADatabaseError, (err) ->\n\t\t\t\t# Wrap the error so we can catch it easier later\n\t\t\t\tthrow new DatabaseError(err)\n\t\t\t.nodeify(callback)\n\n\t\t@rollback = (callback) ->\n\t\t\tpromise = rollback()\n\t\t\tcloseTransaction('Transaction has been rolled back.')\n\n\t\t\treturn promise.nodeify(callback)\n\n\t\t@end = (callback) ->\n\t\t\tpromise = end()\n\t\t\tcloseTransaction('Transaction has been ended.')\n\n\t\t\treturn promise.nodeify(callback)\n\n\t\tcloseTransaction = (message) =>\n\t\t\tpendingExecutes.cancel()\n\t\t\trejectionValue = new Error(message)\n\t\t\t# We return a new rejected promise on each call so that bluebird can handle\n\t\t\t# logging errors if the rejection is not handled (but only if it is not handled)\n\t\t\t@executeSql = (sql, bindings, callback) ->\n\t\t\t\treturn Promise.rejected(rejectionValue).nodeify(callback)\n\t\t\t@rollback = @end = (callback) ->\n\t\t\t\treturn Promise.rejected(rejectionValue).nodeify(callback)\n\ncreateTransaction = (createFunc) ->\n\t(callback) ->\n\t\tstackTraceErr = new Error()\n\n\t\tpromise = new Promise (resolve, reject) ->\n\t\t\tcreateFunc(resolve, reject, stackTraceErr)\n\n\t\tif callback?\n\t\t\tpromise.tap(callback).catch (err) ->\n\t\t\t\tconsole.error(err, callback)\n\t\treturn promise\n\ntry\n\tpg = require('pg')\n\tConnectionParameters = require('pg/lib/connection-parameters')\nif pg?\n\texports.postgres = (connectString) ->\n\t\tPG_UNIQUE_VIOLATION = '23505'\n\t\tPG_FOREIGN_KEY_VIOLATION = '23503'\n\n\t\tconfig = new ConnectionParameters(connectString)\n\t\t# Use bluebird for our pool promises\n\t\tconfig.Promise = Promise\n\t\t# Inherit the same defaults we used to, for backwards compatibility\n\t\tconfig.max = pg.defaults.poolSize\n\t\tconfig.idleTimeoutMillis = pg.defaults.poolIdleTimeout\n\t\tconfig.log = pg.defaults.poolLog\n\t\tpool = new pg.Pool(config)\n\n\t\tcreateResult = ({ rowCount, rows }) ->\n\t\t\treturn {\n\t\t\t\trows:\n\t\t\t\t\tlength: rows?.length or 0\n\t\t\t\t\titem: (i) -> rows[i]\n\t\t\t\t\tforEach: (iterator, thisArg) ->\n\t\t\t\t\t\trows.forEach(iterator, thisArg)\n\t\t\t\t\tmap: (iterator, thisArg) ->\n\t\t\t\t\t\trows.map(iterator, thisArg)\n\t\t\t\trowsAffected: rowCount\n\t\t\t\tinsertId: rows[0]?.id || null\n\t\t\t}\n\t\tclass PostgresTx extends Tx\n\t\t\tconstructor: (_db, _close, _stackTraceErr) ->\n\t\t\t\texecuteSql = (sql, bindings, addReturning = false) ->\n\t\t\t\t\tbindings = bindings.slice(0) # Deal with the fact we may splice arrays directly into bindings\n\t\t\t\t\tif addReturning and /^\\s*INSERT\\s+INTO/i.test(sql)\n\t\t\t\t\t\tsql = sql.replace(/;?$/, ' RETURNING \"' + addReturning + '\";')\n\n\t\t\t\t\t# We only need to perform the bind replacements if there is at least one binding!\n\t\t\t\t\tif _.includes(sql, '?')\n\t\t\t\t\t\tbindNo = 0\n\t\t\t\t\t\tsql = sqlBinds sql, ->\n\t\t\t\t\t\t\tif Array.isArray(bindings[bindNo])\n\t\t\t\t\t\t\t\tinitialBindNo = bindNo\n\t\t\t\t\t\t\t\tbindString = (\n\t\t\t\t\t\t\t\t\tfor binding in bindings[initialBindNo]\n\t\t\t\t\t\t\t\t\t\t'$' + ++bindNo\n\t\t\t\t\t\t\t\t).join(',')\n\t\t\t\t\t\t\t\tArray.prototype.splice.apply(bindings, [initialBindNo, 1].concat(bindings[initialBindNo]))\n\t\t\t\t\t\t\t\treturn bindString\n\t\t\t\t\t\t\telse if bindings[bindNo] == DEFAULT_VALUE\n\t\t\t\t\t\t\t\tbindings.splice(bindNo, 1)\n\t\t\t\t\t\t\t\treturn 'DEFAULT'\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\treturn '$' + ++bindNo\n\n\t\t\t\t\tPromise.fromCallback (callback) ->\n\t\t\t\t\t\t_db.query({ text: sql, values: bindings }, callback)\n\t\t\t\t\t.catch code: PG_UNIQUE_VIOLATION, (err) ->\n\t\t\t\t\t\tthrow new UniqueConstraintError(err)\n\t\t\t\t\t.catch code: PG_FOREIGN_KEY_VIOLATION, (err) ->\n\t\t\t\t\t\tthrow new ForeignKeyConstraintError(err)\n\t\t\t\t\t.then(createResult)\n\n\t\t\t\trollback = =>\n\t\t\t\t\tpromise = @executeSql('ROLLBACK;')\n\t\t\t\t\t_close()\n\t\t\t\t\treturn promise\n\n\t\t\t\tend = =>\n\t\t\t\t\tpromise = @executeSql('COMMIT;')\n\t\t\t\t\t_close()\n\t\t\t\t\treturn promise\n\n\t\t\t\tsuper(_stackTraceErr, executeSql, rollback, end)\n\n\t\t\ttableList: (extraWhereClause = '', callback) ->\n\t\t\t\tif !callback? and _.isFunction(extraWhereClause)\n\t\t\t\t\tcallback = extraWhereClause\n\t\t\t\t\textraWhereClause = ''\n\t\t\t\tif extraWhereClause != ''\n\t\t\t\t\textraWhereClause = 'WHERE ' + extraWhereClause\n\t\t\t\t@executeSql(\"SELECT * FROM (SELECT tablename as name FROM pg_tables WHERE schemaname = 'public') t #{extraWhereClause};\", [], callback)\n\t\t\tdropTable: (tableName, ifExists = true, callback) ->\n\t\t\t\t@executeSql('DROP TABLE ' + (if ifExists is true then 'IF EXISTS ' else '') + '\"' + tableName + '\" CASCADE;', [], callback)\n\t\treturn _.extend({\n\t\t\tengine: 'postgres'\n\t\t\texecuteSql: atomicExecuteSql\n\t\t\ttransaction: createTransaction (resolve, reject, stackTraceErr) ->\n\t\t\t\tpool.connect (err, client, done) ->\n\t\t\t\t\tif err\n\t\t\t\t\t\tconsole.error('Error connecting', err, err.stack)\n\t\t\t\t\t\tprocess.exit()\n\t\t\t\t\ttx = new PostgresTx(client, done, stackTraceErr)\n\t\t\t\t\tif process.env.PG_SCHEMA?\n\t\t\t\t\t\ttx.executeSql('SET search_path TO \"' + process.env.PG_SCHEMA + '\"')\n\t\t\t\t\ttx.executeSql('START TRANSACTION;')\n\n\t\t\t\t\tresolve(tx)\n\t\t}, alwaysExport)\n\ntry\n\tmysql = require('mysql')\nif mysql?\n\texports.mysql = (options) ->\n\t\tMYSQL_UNIQUE_VIOLATION = 'ER_DUP_ENTRY'\n\t\tMYSQL_FOREIGN_KEY_VIOLATION = 'ER_ROW_IS_REFERENCED'\n\t\t_pool = mysql.createPool(options)\n\t\t_pool.on 'connection', (_db) ->\n\t\t\t_db.query(\"SET sql_mode='ANSI_QUOTES';\")\n\n\t\tcreateResult = (rows) ->\n\t\t\treturn {\n\t\t\t\trows:\n\t\t\t\t\tlength: rows?.length or 0\n\t\t\t\t\titem: (i) -> rows[i]\n\t\t\t\t\tforEach: (iterator, thisArg) ->\n\t\t\t\t\t\trows.forEach(iterator, thisArg)\n\t\t\t\t\tmap: (iterator, thisArg) ->\n\t\t\t\t\t\trows.map(iterator, thisArg)\n\t\t\t\trowsAffected: rows.affectedRows\n\t\t\t\tinsertId: rows.insertId || null\n\t\t\t}\n\t\tclass MySqlTx extends Tx\n\t\t\tconstructor: (_db, _close, _stackTraceErr) ->\n\t\t\t\texecuteSql = (sql, bindings) ->\n\t\t\t\t\tPromise.fromCallback (callback) ->\n\t\t\t\t\t\t_db.query(sql, bindings, callback)\n\t\t\t\t\t.catch code: MYSQL_UNIQUE_VIOLATION, (err) ->\n\t\t\t\t\t\tthrow new UniqueConstraintError(err)\n\t\t\t\t\t.catch code: MYSQL_FOREIGN_KEY_VIOLATION, (err) ->\n\t\t\t\t\t\tthrow new ForeignKeyConstraintError(err)\n\t\t\t\t\t.then(createResult)\n\n\t\t\t\trollback = =>\n\t\t\t\t\tpromise = @executeSql('ROLLBACK;')\n\t\t\t\t\t_close()\n\t\t\t\t\treturn promise\n\n\t\t\t\tend = =>\n\t\t\t\t\tpromise = @executeSql('COMMIT;')\n\t\t\t\t\t_close()\n\t\t\t\t\treturn promise\n\n\t\t\t\tsuper(_stackTraceErr, executeSql, rollback, end)\n\n\t\t\ttableList: (extraWhereClause = '', callback) ->\n\t\t\t\tif !callback? and _.isFunction(extraWhereClause)\n\t\t\t\t\tcallback = extraWhereClause\n\t\t\t\t\textraWhereClause = ''\n\t\t\t\tif extraWhereClause != ''\n\t\t\t\t\textraWhereClause = ' WHERE ' + extraWhereClause\n\t\t\t\t@executeSql('SELECT name FROM (SELECT table_name as name FROM information_schema.tables WHERE table_schema = ?) t' + extraWhereClause + ';', [options.database], callback)\n\t\t\tdropTable: (tableName, ifExists = true, callback) ->\n\t\t\t\t@executeSql('DROP TABLE ' + (if ifExists is true then 'IF EXISTS ' else '') + '\"' + tableName + '\";', [], callback)\n\t\treturn _.extend({\n\t\t\tengine: 'mysql'\n\t\t\texecuteSql: atomicExecuteSql\n\t\t\ttransaction: createTransaction (resolve, reject, stackTraceErr) ->\n\t\t\t\t_pool.getConnection (err, _db) ->\n\t\t\t\t\tif err\n\t\t\t\t\t\tconsole.error('Error connecting', err, err.stack)\n\t\t\t\t\t\tprocess.exit()\n\t\t\t\t\t_close = ->\n\t\t\t\t\t\t_db.release()\n\t\t\t\t\ttx = new MySqlTx(_db, _close, stackTraceErr)\n\t\t\t\t\ttx.executeSql('START TRANSACTION;')\n\n\t\t\t\t\tresolve(tx)\n\t\t}, alwaysExport)\n\nif openDatabase?\n\texports.websql = (databaseName) ->\n\t\tWEBSQL_CONSTRAINT_ERR = 6\n\n\t\t_db = openDatabase(databaseName, '1.0', 'rulemotion', 2 * 1024 * 1024)\n\t\tgetInsertId = (result) ->\n\t\t\t# Ignore the potential DOM exception.\n\t\t\ttry\n\t\t\t\treturn result.insertId\n\t\tcreateResult = (result) ->\n\t\t\treturn {\n\t\t\t\trows:\n\t\t\t\t\tlength: result.rows.length\n\t\t\t\t\titem: (i) -> _.clone(result.rows.item(i))\n\t\t\t\t\tforEach: (args...) ->\n\t\t\t\t\t\t@map(args...)\n\t\t\t\t\t\treturn\n\t\t\t\t\tmap: (iterator, thisArg) ->\n\t\t\t\t\t\tfor i in [0...result.rows.length] by 1\n\t\t\t\t\t\t\titerator.call(thisArg, @item(i), i, result.rows)\n\t\t\t\trowsAffected: result.rowsAffected\n\t\t\t\tinsertId: getInsertId(result)\n\t\t\t}\n\n\t\tclass WebSqlTx extends Tx\n\t\t\tconstructor: (_tx, _stackTraceErr) ->\n\t\t\t\trunning = true\n\t\t\t\tqueue = []\n\t\t\t\t# This function is used to recurse executeSql calls and keep the transaction open,\n\t\t\t\t# allowing us to use async calls within the API.\n\t\t\t\tasyncRecurse = ->\n\t\t\t\t\twhile args = queue.pop()\n\t\t\t\t\t\tconsole.debug('Running', args[0])\n\t\t\t\t\t\t_tx.executeSql(args...)\n\t\t\t\t\tif running is true\n\t\t\t\t\t\tconsole.debug('Looping')\n\t\t\t\t\t\t_tx.executeSql('SELECT 0', [], asyncRecurse)\n\t\t\t\tasyncRecurse()\n\n\t\t\t\texecuteSql = (sql, bindings) ->\n\t\t\t\t\tnew Promise (resolve, reject) ->\n\t\t\t\t\t\tsql = bindDefaultValues(sql, bindings)\n\n\t\t\t\t\t\tsuccessCallback = (_tx, _results) ->\n\t\t\t\t\t\t\tresolve(_results)\n\t\t\t\t\t\terrorCallback = (_tx, err) ->\n\t\t\t\t\t\t\treject(err)\n\n\t\t\t\t\t\tqueue.push([sql, bindings, successCallback, errorCallback])\n\t\t\t\t\t.catch code: WEBSQL_CONSTRAINT_ERR, ->\n\t\t\t\t\t\tthrow new ConstraintError('Constraint failed.')\n\t\t\t\t\t.then(createResult)\n\n\t\t\t\trollback = ->\n\t\t\t\t\tnew Promise (resolve) ->\n\t\t\t\t\t\tsuccessCallback = ->\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t\tthrow new Error('Rollback')\n\t\t\t\t\t\terrorCallback = ->\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\tqueue = [['RUN A FAILING STATEMENT TO ROLLBACK', [], successCallback, errorCallback]]\n\t\t\t\t\t\trunning = false\n\n\t\t\t\tend = ->\n\t\t\t\t\trunning = false\n\t\t\t\t\treturn Promise.fulfilled()\n\n\t\t\t\tsuper(_stackTraceErr, executeSql, rollback, end)\n\n\t\t\ttableList: (extraWhereClause = '', callback) ->\n\t\t\t\tif !callback? and _.isFunction(extraWhereClause)\n\t\t\t\t\tcallback = extraWhereClause\n\t\t\t\t\textraWhereClause = ''\n\t\t\t\tif extraWhereClause != ''\n\t\t\t\t\textraWhereClause = ' AND ' + extraWhereClause\n\t\t\t\t@executeSql(\"SELECT name, sql FROM sqlite_master WHERE type='table' AND name NOT IN ('__WebKitDatabaseInfoTable__', 'sqlite_sequence')\" + extraWhereClause + ';', [], callback)\n\n\t\t\tdropTable: (tableName, ifExists = true, callback) ->\n\t\t\t\t@executeSql('DROP TABLE ' + (if ifExists is true then 'IF EXISTS ' else '') + '\"' + tableName + '\";', [], callback)\n\n\t\treturn _.extend({\n\t\t\tengine: 'websql'\n\t\t\texecuteSql: atomicExecuteSql\n\t\t\ttransaction: createTransaction (resolve, reject, stackTraceErr) ->\n\t\t\t\t_db.transaction (_tx) ->\n\t\t\t\t\tresolve(new WebSqlTx(_tx, stackTraceErr))\n\t\t}, alwaysExport)\n\nexports.connect = (databaseOptions) ->\n\tif !exports[databaseOptions.engine]? or databaseOptions.engine is 'connect'\n\t\tthrow new Error('Unsupported database engine: ' + databaseOptions.engine)\n\treturn exports[databaseOptions.engine](databaseOptions.params)\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/src/database-layer/db.coffee","module.exports = require(\"lodash\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash\"\n// module id = 4\n// module chunks = 0","module.exports = (sql, nextBindFn) ->\n\tnewSql = ''\n\tstartQuote = false\n\ti = 0\n\tlength = sql.length\n\twhile i < length\n\t\tc = sql[i]\n\t\ti++\n\t\tif startQuote isnt false\n\t\t\tif c is '\\\\' or (c is startQuote and sql[i] is startQuote)\n\t\t\t\t# The quote is escaped, so we swallow it and move to the next char (which also gets swallowed).\n\t\t\t\tnewSql += c\n\t\t\t\tc = sql[i] ? ''\n\t\t\t\ti++\n\t\t\telse if c is startQuote\n\t\t\t\t# The quote is closed, so we start checking for ? again\n\t\t\t\tstartQuote = false\n\t\t\tnewSql += c\n\t\telse if c in [\"'\", '\"']\n\t\t\t# Check if the current character is a quote char, and if so mark it as such so we ignore any ? until the quote is closed.\n\t\t\tstartQuote = c\n\t\t\tnewSql += c\n\t\telse if c is '?'\n\t\t\t# We found a binding, so call the nextBindFn to find the correct replacement\n\t\t\tnewSql += nextBindFn()\n\t\telse\n\t\t\t# Anything left should just be kept as-is\n\t\t\tnewSql += c\n\treturn newSql\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/src/database-layer/sql-binds.coffee","module.exports = require(\"typed-error\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"typed-error\"\n// module id = 6\n// module chunks = 0","module.exports = require(\"pg\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"pg\"\n// module id = 7\n// module chunks = 0","/**\n * Copyright (c) 2010-2016 Brian Carlson (brian.m.carlson@gmail.com)\n * All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * README.md file in the root directory of this source tree.\n */\n\nvar url = require('url');\nvar dns = require('dns');\n\nvar defaults = require('./defaults');\n\nvar val = function(key, config, envVar) {\n  if (envVar === undefined) {\n    envVar = process.env[ 'PG' + key.toUpperCase() ];\n  } else if (envVar === false) {\n    // do nothing ... use false\n  } else {\n    envVar = process.env[ envVar ];\n  }\n\n  return config[key] ||\n    envVar ||\n    defaults[key];\n};\n\n//parses a connection string\nvar parse = require('pg-connection-string').parse;\n\nvar useSsl = function() {\n  switch(process.env.PGSSLMODE) {\n  case \"disable\":\n    return false;\n  case \"prefer\":\n  case \"require\":\n  case \"verify-ca\":\n  case \"verify-full\":\n    return true;\n  }\n  return defaults.ssl;\n};\n\nvar ConnectionParameters = function(config) {\n  //if a string is passed, it is a raw connection string so we parse it into a config\n  config = typeof config == 'string' ? parse(config) : (config || {});\n  //if the config has a connectionString defined, parse IT into the config we use\n  //this will override other default values with what is stored in connectionString\n  if(config.connectionString) {\n    config = parse(config.connectionString);\n  }\n  this.user = val('user', config);\n  this.database = val('database', config);\n  this.port = parseInt(val('port', config), 10);\n  this.host = val('host', config);\n  this.password = val('password', config);\n  this.binary = val('binary', config);\n  this.ssl = typeof config.ssl === 'undefined' ? useSsl() : config.ssl;\n  this.client_encoding = val(\"client_encoding\", config);\n  //a domain socket begins with '/'\n  this.isDomainSocket = (!(this.host||'').indexOf('/'));\n\n  this.application_name = val('application_name', config, 'PGAPPNAME');\n  this.fallback_application_name = val('fallback_application_name', config, false);\n};\n\nvar add = function(params, config, paramName) {\n  var value = config[paramName];\n  if(value) {\n    params.push(paramName+\"='\"+value+\"'\");\n  }\n};\n\nConnectionParameters.prototype.getLibpqConnectionString = function(cb) {\n  var params = [];\n  add(params, this, 'user');\n  add(params, this, 'password');\n  add(params, this, 'port');\n  add(params, this, 'application_name');\n  add(params, this, 'fallback_application_name');\n\n  if(this.database) {\n    params.push(\"dbname='\" + this.database + \"'\");\n  }\n  if(this.host) {\n    params.push(\"host=\" + this.host);\n  }\n  if(this.isDomainSocket) {\n    return cb(null, params.join(' '));\n  }\n  if(this.client_encoding) {\n    params.push(\"client_encoding='\" + this.client_encoding + \"'\");\n  }\n  dns.lookup(this.host, function(err, address) {\n    if(err) return cb(err, null);\n    params.push(\"hostaddr=\" + address);\n    return cb(null, params.join(' '));\n  });\n};\n\nmodule.exports = ConnectionParameters;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg/lib/connection-parameters.js\n// module id = 8\n// module chunks = 0","module.exports = require(\"url\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"url\"\n// module id = 9\n// module chunks = 0","module.exports = require(\"dns\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"dns\"\n// module id = 10\n// module chunks = 0","/**\n * Copyright (c) 2010-2016 Brian Carlson (brian.m.carlson@gmail.com)\n * All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * README.md file in the root directory of this source tree.\n */\n\nvar defaults = module.exports = {\n  // database host. defaults to localhost\n  host: 'localhost',\n\n  //database user's name\n  user: process.platform === 'win32' ? process.env.USERNAME : process.env.USER,\n\n  //name of database to connect\n  database: process.platform === 'win32' ? process.env.USERNAME : process.env.USER,\n\n  //database user's password\n  password: null,\n\n  // a Postgres connection string to be used instead of setting individual connection items\n  // NOTE:  Setting this value will cause it to override any other value (such as database or user) defined\n  // in the defaults object.\n  connectionString : undefined,\n\n  //database port\n  port: 5432,\n\n  //number of rows to return at a time from a prepared statement's\n  //portal. 0 will return all rows at once\n  rows: 0,\n\n  // binary result mode\n  binary: false,\n\n  //Connection pool options - see https://github.com/coopernurse/node-pool\n  //number of connections to use in connection pool\n  //0 will disable connection pooling\n  poolSize: 10,\n\n  //max milliseconds a client can go unused before it is removed\n  //from the pool and destroyed\n  poolIdleTimeout: 30000,\n\n  //frequency to check for idle clients within the client pool\n  reapIntervalMillis: 1000,\n\n  //if true the most recently released resources will be the first to be allocated\n  returnToHead: false,\n\n  //pool log function / boolean\n  poolLog: false,\n\n  client_encoding: \"\",\n\n  ssl: false,\n\n  application_name: undefined,\n  fallback_application_name: undefined,\n\n  parseInputDatesAsUTC: false\n};\n\nvar pgTypes = require('pg-types');\n// save default parsers\nvar parseBigInteger = pgTypes.getTypeParser(20, 'text');\nvar parseBigIntegerArray = pgTypes.getTypeParser(1016, 'text');\n\n//parse int8 so you can get your count values as actual numbers\nmodule.exports.__defineSetter__(\"parseInt8\", function(val) {\n  pgTypes.setTypeParser(20, 'text', val ? pgTypes.getTypeParser(23, 'text') : parseBigInteger);\n  pgTypes.setTypeParser(1016, 'text', val ? pgTypes.getTypeParser(1007, 'text') : parseBigIntegerArray);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg/lib/defaults.js\n// module id = 11\n// module chunks = 0","var textParsers = require('./lib/textParsers');\nvar binaryParsers = require('./lib/binaryParsers');\nvar arrayParser = require('./lib/arrayParser');\n\nexports.getTypeParser = getTypeParser;\nexports.setTypeParser = setTypeParser;\nexports.arrayParser = arrayParser;\n\nvar typeParsers = {\n  text: {},\n  binary: {}\n};\n\n//the empty parse function\nfunction noParse (val) {\n  return String(val);\n};\n\n//returns a function used to convert a specific type (specified by\n//oid) into a result javascript type\n//note: the oid can be obtained via the following sql query:\n//SELECT oid FROM pg_type WHERE typname = 'TYPE_NAME_HERE';\nfunction getTypeParser (oid, format) {\n  format = format || 'text';\n  if (!typeParsers[format]) {\n    return noParse;\n  }\n  return typeParsers[format][oid] || noParse;\n};\n\nfunction setTypeParser (oid, format, parseFn) {\n  if(typeof format == 'function') {\n    parseFn = format;\n    format = 'text';\n  }\n  typeParsers[format][oid] = parseFn;\n};\n\ntextParsers.init(function(oid, converter) {\n  typeParsers.text[oid] = converter;\n});\n\nbinaryParsers.init(function(oid, converter) {\n  typeParsers.binary[oid] = converter;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-types/index.js\n// module id = 12\n// module chunks = 0","var array = require('postgres-array')\nvar ap = require('ap')\nvar arrayParser = require('./arrayParser');\nvar parseDate = require('postgres-date');\nvar parseInterval = require('postgres-interval');\nvar parseByteA = require('postgres-bytea');\n\nfunction allowNull (fn) {\n  return function nullAllowed (value) {\n    if (value === null) return value\n    return fn(value)\n  }\n}\n\nfunction parseBool (value) {\n  if (value === null) return value\n  return value === 't';\n}\n\nfunction parseBoolArray (value) {\n  if (!value) return null\n  return array.parse(value, parseBool)\n}\n\nfunction parseIntegerArray (value) {\n  if (!value) return null\n  return array.parse(value, allowNull(ap.partialRight(parseInt, 10)))\n}\n\nfunction parseBigIntegerArray (value) {\n  if (!value) return null\n  return array.parse(value, allowNull(function (entry) {\n    return parseBigInteger(entry).trim()\n  }))\n}\n\nvar parseFloatArray = function(value) {\n  if(!value) { return null; }\n  var p = arrayParser.create(value, function(entry) {\n    if(entry !== null) {\n      entry = parseFloat(entry);\n    }\n    return entry;\n  });\n\n  return p.parse();\n};\n\nvar parseStringArray = function(value) {\n  if(!value) { return null; }\n\n  var p = arrayParser.create(value);\n  return p.parse();\n};\n\nvar parseDateArray = function(value) {\n  if (!value) { return null; }\n\n  var p = arrayParser.create(value, function(entry) {\n    if (entry !== null) {\n      entry = parseDate(entry);\n    }\n    return entry;\n  });\n\n  return p.parse();\n};\n\nvar parseByteAArray = function(value) {\n  var arr = parseStringArray(value);\n  if (!arr) return arr;\n\n  return arr.map(function(element) {\n    return parseByteA(element);\n  });\n};\n\nvar parseInteger = function(value) {\n  return parseInt(value, 10);\n};\n\nvar parseBigInteger = function(value) {\n  var valStr = String(value);\n  if (/^\\d+$/.test(valStr)) { return valStr; }\n  return value;\n};\n\nvar parseJsonArray = function(value) {\n  var arr = parseStringArray(value);\n\n  if (!arr) {\n    return arr;\n  }\n\n  return arr.map(function(el) { return JSON.parse(el); });\n};\n\nvar parsePoint = function(value) {\n  if (value[0] !== '(') { return null; }\n\n  value = value.substring( 1, value.length - 1 ).split(',');\n\n  return {\n    x: parseFloat(value[0])\n  , y: parseFloat(value[1])\n  };\n};\n\nvar parseCircle = function(value) {\n  if (value[0] !== '<' && value[1] !== '(') { return null; }\n\n  var point = '(';\n  var radius = '';\n  var pointParsed = false;\n  for (var i = 2; i < value.length - 1; i++){\n    if (!pointParsed) {\n      point += value[i];\n    }\n\n    if (value[i] === ')') {\n      pointParsed = true;\n      continue;\n    } else if (!pointParsed) {\n      continue;\n    }\n\n    if (value[i] === ','){\n      continue;\n    }\n\n    radius += value[i];\n  }\n  var result = parsePoint(point);\n  result.radius = parseFloat(radius);\n\n  return result;\n};\n\nvar init = function(register) {\n  register(20, parseBigInteger); // int8\n  register(21, parseInteger); // int2\n  register(23, parseInteger); // int4\n  register(26, parseInteger); // oid\n  register(700, parseFloat); // float4/real\n  register(701, parseFloat); // float8/double\n  register(16, parseBool);\n  register(1082, parseDate); // date\n  register(1114, parseDate); // timestamp without timezone\n  register(1184, parseDate); // timestamp\n  register(600, parsePoint); // point\n  register(718, parseCircle); // circle\n  register(1000, parseBoolArray);\n  register(1001, parseByteAArray);\n  register(1005, parseIntegerArray); // _int2\n  register(1007, parseIntegerArray); // _int4\n  register(1028, parseIntegerArray); // oid[]\n  register(1016, parseBigIntegerArray); // _int8\n  register(1021, parseFloatArray); // _float4\n  register(1022, parseFloatArray); // _float8\n  register(1231, parseFloatArray); // _numeric\n  register(1014, parseStringArray); //char\n  register(1015, parseStringArray); //varchar\n  register(1008, parseStringArray);\n  register(1009, parseStringArray);\n  register(1115, parseDateArray); // timestamp without time zone[]\n  register(1182, parseDateArray); // _date\n  register(1185, parseDateArray); // timestamp with time zone[]\n  register(1186, parseInterval);\n  register(17, parseByteA);\n  register(114, JSON.parse.bind(JSON)); // json\n  register(3802, JSON.parse.bind(JSON)); // jsonb\n  register(199, parseJsonArray); // json[]\n  register(3807, parseJsonArray); // jsonb[]\n  register(2951, parseStringArray); // uuid[]\n  register(791, parseStringArray); // money[]\n  register(1183, parseStringArray); // time[]\n};\n\nmodule.exports = {\n  init: init\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-types/lib/textParsers.js\n// module id = 13\n// module chunks = 0","'use strict'\n\nexports.parse = function (source, transform) {\n  return new ArrayParser(source, transform).parse()\n}\n\nfunction ArrayParser (source, transform) {\n  this.source = source\n  this.transform = transform || identity\n  this.position = 0\n  this.entries = []\n  this.recorded = []\n  this.dimension = 0\n}\n\nArrayParser.prototype.isEof = function () {\n  return this.position >= this.source.length\n}\n\nArrayParser.prototype.nextCharacter = function () {\n  var character = this.source[this.position++]\n  if (character === '\\\\') {\n    return {\n      value: this.source[this.position++],\n      escaped: true\n    }\n  }\n  return {\n    value: character,\n    escaped: false\n  }\n}\n\nArrayParser.prototype.record = function (character) {\n  this.recorded.push(character)\n}\n\nArrayParser.prototype.newEntry = function (includeEmpty) {\n  var entry\n  if (this.recorded.length > 0 || includeEmpty) {\n    entry = this.recorded.join('')\n    if (entry === 'NULL' && !includeEmpty) {\n      entry = null\n    }\n    if (entry !== null) entry = this.transform(entry)\n    this.entries.push(entry)\n    this.recorded = []\n  }\n}\n\nArrayParser.prototype.parse = function (nested) {\n  var character, parser, quote\n  while (!this.isEof()) {\n    character = this.nextCharacter()\n    if (character.value === '{' && !quote) {\n      this.dimension++\n      if (this.dimension > 1) {\n        parser = new ArrayParser(this.source.substr(this.position - 1), this.transform)\n        this.entries.push(parser.parse(true))\n        this.position += parser.position - 2\n      }\n    } else if (character.value === '}' && !quote) {\n      this.dimension--\n      if (!this.dimension) {\n        this.newEntry()\n        if (nested) return this.entries\n      }\n    } else if (character.value === '\"' && !character.escaped) {\n      if (quote) this.newEntry(true)\n      quote = !quote\n    } else if (character.value === ',' && !quote) {\n      this.newEntry()\n    } else {\n      this.record(character.value)\n    }\n  }\n  if (this.dimension !== 0) {\n    throw new Error('array dimension not balanced')\n  }\n  return this.entries\n}\n\nfunction identity (value) {\n  return value\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/postgres-array/index.js\n// module id = 14\n// module chunks = 0","exports = module.exports = ap;\nfunction ap (args, fn) {\n    return function () {\n        var rest = [].slice.call(arguments)\n            , first = args.slice()\n        first.push.apply(first, rest)\n        return fn.apply(this, first);\n    };\n}\n\nexports.pa = pa;\nfunction pa (args, fn) {\n    return function () {\n        var rest = [].slice.call(arguments)\n        rest.push.apply(rest, args)\n        return fn.apply(this, rest);\n    };\n}\n\nexports.apa = apa;\nfunction apa (left, right, fn) {\n    return function () {\n        return fn.apply(this,\n            left.concat.apply(left, arguments).concat(right)\n        );\n    };\n}\n\nexports.partial = partial;\nfunction partial (fn) {\n    var args = [].slice.call(arguments, 1);\n    return ap(args, fn);\n}\n\nexports.partialRight = partialRight;\nfunction partialRight (fn) {\n    var args = [].slice.call(arguments, 1);\n    return pa(args, fn);\n}\n\nexports.curry = curry;\nfunction curry (fn) {\n    return partial(partial, fn);\n}\n\nexports.curryRight = function curryRight (fn) {\n    return partial(partialRight, fn);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ap/index.js\n// module id = 15\n// module chunks = 0","var array = require('postgres-array');\n\nmodule.exports = {\n  create: function (source, transform) {\n    return {\n      parse: function() {\n        return array.parse(source, transform);\n      }\n    };\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-types/lib/arrayParser.js\n// module id = 16\n// module chunks = 0","'use strict'\n\nvar DATE_TIME = /(\\d{1,})-(\\d{2})-(\\d{2}) (\\d{2}):(\\d{2}):(\\d{2})(\\.\\d{1,})?/\nvar DATE = /^(\\d{1,})-(\\d{2})-(\\d{2})$/\nvar TIME_ZONE = /([Z+-])(\\d{2})?:?(\\d{2})?:?(\\d{2})?/\nvar BC = /BC$/\nvar INFINITY = /^-?infinity$/\n\nmodule.exports = function parseDate (isoDate) {\n  if (INFINITY.test(isoDate)) {\n    // Capitalize to Infinity before passing to Number\n    return Number(isoDate.replace('i', 'I'))\n  }\n  var matches = DATE_TIME.exec(isoDate)\n\n  if (!matches) {\n    // Force YYYY-MM-DD dates to be parsed as local time\n    return DATE.test(isoDate) ?\n      getDate(isoDate) :\n      null\n  }\n\n  var isBC = BC.test(isoDate)\n  var year = parseInt(matches[1], 10)\n  var isFirstCentury = year > 0 && year < 100\n  year = (isBC ? '-' : '') + year\n\n  var month = parseInt(matches[2], 10) - 1\n  var day = matches[3]\n  var hour = parseInt(matches[4], 10)\n  var minute = parseInt(matches[5], 10)\n  var second = parseInt(matches[6], 10)\n\n  var ms = matches[7]\n  ms = ms ? 1000 * parseFloat(ms) : 0\n\n  var date\n  var offset = timeZoneOffset(isoDate)\n  if (offset != null) {\n    var utc = Date.UTC(year, month, day, hour, minute, second, ms)\n    date = new Date(utc - offset)\n  } else {\n    date = new Date(year, month, day, hour, minute, second, ms)\n  }\n\n  if (isFirstCentury) {\n    date.setUTCFullYear(year)\n  }\n\n  return date\n}\n\nfunction getDate (isoDate) {\n  var matches = DATE.exec(isoDate)\n  var year = parseInt(matches[1], 10)\n  var month = parseInt(matches[2], 10) - 1\n  var day = matches[3]\n  // YYYY-MM-DD will be parsed as local time\n  var date = new Date(year, month, day)\n  date.setFullYear(year)\n  return date\n}\n\n// match timezones:\n// Z (UTC)\n// -05\n// +06:30\nfunction timeZoneOffset (isoDate) {\n  var zone = TIME_ZONE.exec(isoDate.split(' ')[1])\n  if (!zone) return\n  var type = zone[1]\n\n  if (type === 'Z') {\n    return 0\n  }\n  var sign = type === '-' ? -1 : 1\n  var offset = parseInt(zone[2], 10) * 3600 +\n    parseInt(zone[3] || 0, 10) * 60 +\n    parseInt(zone[4] || 0, 10)\n\n  return offset * sign * 1000\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/postgres-date/index.js\n// module id = 17\n// module chunks = 0","'use strict'\n\nvar extend = require('xtend/mutable')\n\nmodule.exports = PostgresInterval\n\nfunction PostgresInterval (raw) {\n  if (!(this instanceof PostgresInterval)) {\n    return new PostgresInterval(raw)\n  }\n  extend(this, parse(raw))\n}\nvar properties = ['seconds', 'minutes', 'hours', 'days', 'months', 'years']\nPostgresInterval.prototype.toPostgres = function () {\n  var filtered = properties.filter(this.hasOwnProperty, this)\n  if (filtered.length === 0) return '0'\n  return filtered\n    .map(function (property) {\n      return this[property] + ' ' + property\n    }, this)\n    .join(' ')\n}\n\nvar NUMBER = '([+-]?\\\\d+)'\nvar YEAR = NUMBER + '\\\\s+years?'\nvar MONTH = NUMBER + '\\\\s+mons?'\nvar DAY = NUMBER + '\\\\s+days?'\nvar TIME = '([+-])?([\\\\d]*):(\\\\d\\\\d):(\\\\d\\\\d):?(\\\\d\\\\d\\\\d)?'\nvar INTERVAL = new RegExp([YEAR, MONTH, DAY, TIME].map(function (regexString) {\n  return '(' + regexString + ')?'\n})\n.join('\\\\s*'))\n\n// Positions of values in regex match\nvar positions = {\n  years: 2,\n  months: 4,\n  days: 6,\n  hours: 9,\n  minutes: 10,\n  seconds: 11,\n  milliseconds: 12\n}\n// We can use negative time\nvar negatives = ['hours', 'minutes', 'seconds']\n\nfunction parse (interval) {\n  if (!interval) return {}\n  var matches = INTERVAL.exec(interval)\n  var isNegative = matches[8] === '-'\n  return Object.keys(positions)\n    .reduce(function (parsed, property) {\n      var position = positions[property]\n      var value = matches[position]\n      // no empty string\n      if (!value) return parsed\n      value = parseInt(value, 10)\n      // no zeros\n      if (!value) return parsed\n      if (isNegative && ~negatives.indexOf(property)) {\n        value *= -1\n      }\n      parsed[property] = value\n      return parsed\n    }, {})\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/postgres-interval/index.js\n// module id = 18\n// module chunks = 0","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend(target) {\n    for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/xtend/mutable.js\n// module id = 19\n// module chunks = 0","'use strict'\n\nmodule.exports = function parseBytea (input) {\n  if (/^\\\\x/.test(input)) {\n    // new 'hex' style response (pg >9.0)\n    return new Buffer(input.substr(2), 'hex')\n  }\n  var output = ''\n  var i = 0\n  while (i < input.length) {\n    if (input[i] !== '\\\\') {\n      output += input[i]\n      ++i\n    } else {\n      if (/[0-7]{3}/.test(input.substr(i + 1, 3))) {\n        output += String.fromCharCode(parseInt(input.substr(i + 1, 3), 8))\n        i += 4\n      } else {\n        var backslashes = 1\n        while (i + backslashes < input.length && input[i + backslashes] === '\\\\') {\n          backslashes++\n        }\n        for (var k = 0; k < Math.floor(backslashes / 2); ++k) {\n          output += '\\\\'\n        }\n        i += Math.floor(backslashes / 2) * 2\n      }\n    }\n  }\n  return new Buffer(output, 'binary')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/postgres-bytea/index.js\n// module id = 20\n// module chunks = 0","var parseBits = function(data, bits, offset, invert, callback) {\n  offset = offset || 0;\n  invert = invert || false;\n  callback = callback || function(lastValue, newValue, bits) { return (lastValue * Math.pow(2, bits)) + newValue; };\n  var offsetBytes = offset >> 3;\n\n  var inv = function(value) {\n    if (invert) {\n      return ~value & 0xff;\n    }\n\n    return value;\n  };\n\n  // read first (maybe partial) byte\n  var mask = 0xff;\n  var firstBits = 8 - (offset % 8);\n  if (bits < firstBits) {\n    mask = (0xff << (8 - bits)) & 0xff;\n    firstBits = bits;\n  }\n\n  if (offset) {\n    mask = mask >> (offset % 8);\n  }\n\n  var result = 0;\n  if ((offset % 8) + bits >= 8) {\n    result = callback(0, inv(data[offsetBytes]) & mask, firstBits);\n  }\n\n  // read bytes\n  var bytes = (bits + offset) >> 3;\n  for (var i = offsetBytes + 1; i < bytes; i++) {\n    result = callback(result, inv(data[i]), 8);\n  }\n\n  // bits to read, that are not a complete byte\n  var lastBits = (bits + offset) % 8;\n  if (lastBits > 0) {\n    result = callback(result, inv(data[bytes]) >> (8 - lastBits), lastBits);\n  }\n\n  return result;\n};\n\nvar parseFloatFromBits = function(data, precisionBits, exponentBits) {\n  var bias = Math.pow(2, exponentBits - 1) - 1;\n  var sign = parseBits(data, 1);\n  var exponent = parseBits(data, exponentBits, 1);\n\n  if (exponent === 0) {\n    return 0;\n  }\n\n  // parse mantissa\n  var precisionBitsCounter = 1;\n  var parsePrecisionBits = function(lastValue, newValue, bits) {\n    if (lastValue === 0) {\n      lastValue = 1;\n    }\n\n    for (var i = 1; i <= bits; i++) {\n      precisionBitsCounter /= 2;\n      if ((newValue & (0x1 << (bits - i))) > 0) {\n        lastValue += precisionBitsCounter;\n      }\n    }\n\n    return lastValue;\n  };\n\n  var mantissa = parseBits(data, precisionBits, exponentBits + 1, false, parsePrecisionBits);\n\n  // special cases\n  if (exponent == (Math.pow(2, exponentBits + 1) - 1)) {\n    if (mantissa === 0) {\n      return (sign === 0) ? Infinity : -Infinity;\n    }\n\n    return NaN;\n  }\n\n  // normale number\n  return ((sign === 0) ? 1 : -1) * Math.pow(2, exponent - bias) * mantissa;\n};\n\nvar parseInt16 = function(value) {\n  if (parseBits(value, 1) == 1) {\n    return -1 * (parseBits(value, 15, 1, true) + 1);\n  }\n\n  return parseBits(value, 15, 1);\n};\n\nvar parseInt32 = function(value) {\n  if (parseBits(value, 1) == 1) {\n    return -1 * (parseBits(value, 31, 1, true) + 1);\n  }\n\n  return parseBits(value, 31, 1);\n};\n\nvar parseFloat32 = function(value) {\n  return parseFloatFromBits(value, 23, 8);\n};\n\nvar parseFloat64 = function(value) {\n  return parseFloatFromBits(value, 52, 11);\n};\n\nvar parseNumeric = function(value) {\n  var sign = parseBits(value, 16, 32);\n  if (sign == 0xc000) {\n    return NaN;\n  }\n\n  var weight = Math.pow(10000, parseBits(value, 16, 16));\n  var result = 0;\n\n  var digits = [];\n  var ndigits = parseBits(value, 16);\n  for (var i = 0; i < ndigits; i++) {\n    result += parseBits(value, 16, 64 + (16 * i)) * weight;\n    weight /= 10000;\n  }\n\n  var scale = Math.pow(10, parseBits(value, 16, 48));\n  return ((sign === 0) ? 1 : -1) * Math.round(result * scale) / scale;\n};\n\nvar parseDate = function(isUTC, value) {\n  var sign = parseBits(value, 1);\n  var rawValue = parseBits(value, 63, 1);\n\n  // discard usecs and shift from 2000 to 1970\n  var result = new Date((((sign === 0) ? 1 : -1) * rawValue / 1000) + 946684800000);\n\n  if (!isUTC) {\n    result.setTime(result.getTime() + result.getTimezoneOffset() * 60000);\n  }\n\n  // add microseconds to the date\n  result.usec = rawValue % 1000;\n  result.getMicroSeconds = function() {\n    return this.usec;\n  };\n  result.setMicroSeconds = function(value) {\n    this.usec = value;\n  };\n  result.getUTCMicroSeconds = function() {\n    return this.usec;\n  };\n\n  return result;\n};\n\nvar parseArray = function(value) {\n  var dim = parseBits(value, 32);\n\n  var flags = parseBits(value, 32, 32);\n  var elementType = parseBits(value, 32, 64);\n\n  var offset = 96;\n  var dims = [];\n  for (var i = 0; i < dim; i++) {\n    // parse dimension\n    dims[i] = parseBits(value, 32, offset);\n    offset += 32;\n\n    // ignore lower bounds\n    offset += 32;\n  }\n\n  var parseElement = function(elementType) {\n    // parse content length\n    var length = parseBits(value, 32, offset);\n    offset += 32;\n\n    // parse null values\n    if (length == 0xffffffff) {\n      return null;\n    }\n\n    var result;\n    if ((elementType == 0x17) || (elementType == 0x14)) {\n      // int/bigint\n      result = parseBits(value, length * 8, offset);\n      offset += length * 8;\n      return result;\n    }\n    else if (elementType == 0x19) {\n      // string\n      result = value.toString(this.encoding, offset >> 3, (offset += (length << 3)) >> 3);\n      return result;\n    }\n    else {\n      console.log(\"ERROR: ElementType not implemented: \" + elementType);\n    }\n  };\n\n  var parse = function(dimension, elementType) {\n    var array = [];\n    var i;\n\n    if (dimension.length > 1) {\n      var count = dimension.shift();\n      for (i = 0; i < count; i++) {\n        array[i] = parse(dimension, elementType);\n      }\n      dimension.unshift(count);\n    }\n    else {\n      for (i = 0; i < dimension[0]; i++) {\n        array[i] = parseElement(elementType);\n      }\n    }\n\n    return array;\n  };\n\n  return parse(dims, elementType);\n};\n\nvar parseText = function(value) {\n  return value.toString('utf8');\n};\n\nvar parseBool = function(value) {\n  if(value === null) return null;\n  return (parseBits(value, 8) > 0);\n};\n\nvar init = function(register) {\n  register(21, parseInt16);\n  register(23, parseInt32);\n  register(26, parseInt32);\n  register(1700, parseNumeric);\n  register(700, parseFloat32);\n  register(701, parseFloat64);\n  register(16, parseBool);\n  register(1114, parseDate.bind(null, false));\n  register(1184, parseDate.bind(null, true));\n  register(1000, parseArray);\n  register(1007, parseArray);\n  register(1016, parseArray);\n  register(1008, parseArray);\n  register(1009, parseArray);\n  register(25, parseText);\n};\n\nmodule.exports = {\n  init: init\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-types/lib/binaryParsers.js\n// module id = 21\n// module chunks = 0","'use strict';\n\nvar url = require('url');\n\n//Parse method copied from https://github.com/brianc/node-postgres\n//Copyright (c) 2010-2014 Brian Carlson (brian.m.carlson@gmail.com)\n//MIT License\n\n//parses a connection string\nfunction parse(str) {\n  var config;\n  //unix socket\n  if(str.charAt(0) === '/') {\n    config = str.split(' ');\n    return { host: config[0], database: config[1] };\n  }\n  // url parse expects spaces encoded as %20\n  if(/ |%[^a-f0-9]|%[a-f0-9][^a-f0-9]/i.test(str)) {\n    str = encodeURI(str).replace(/\\%25(\\d\\d)/g, \"%$1\");\n  }\n  var result = url.parse(str, true);\n  config = {};\n\n  if (result.query.application_name) {\n    config.application_name = result.query.application_name;\n  }\n  if (result.query.fallback_application_name) {\n    config.fallback_application_name = result.query.fallback_application_name;\n  }\n\n  config.port = result.port;\n  if(result.protocol == 'socket:') {\n    config.host = decodeURI(result.pathname);\n    config.database = result.query.db;\n    config.client_encoding = result.query.encoding;\n    return config;\n  }\n  config.host = result.hostname;\n\n  // result.pathname is not always guaranteed to have a '/' prefix (e.g. relative urls)\n  // only strip the slash if it is present.\n  var pathname = result.pathname;\n  if (pathname && pathname.charAt(0) === '/') {\n    pathname = result.pathname.slice(1) || null;\n  }\n  config.database = pathname && decodeURI(pathname);\n\n  var auth = (result.auth || ':').split(':');\n  config.user = auth[0];\n  config.password = auth.splice(1).join(':');\n\n  var ssl = result.query.ssl;\n  if (ssl === 'true' || ssl === '1') {\n    config.ssl = true;\n  }\n\n  return config;\n}\n\nmodule.exports = {\n  parse: parse\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pg-connection-string/index.js\n// module id = 22\n// module chunks = 0","module.exports = require(\"mysql\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mysql\"\n// module id = 23\n// module chunks = 0","_ = require 'lodash'\nPromise = require 'bluebird'\nTypedError = require 'typed-error'\nLF2AbstractSQL = require '@resin/lf-to-abstract-sql'\nAbstractSQLCompiler = require '@resin/abstract-sql-compiler'\nPinejsClientCore = require 'pinejs-client/core'\nsbvrTypes = require '@resin/sbvr-types'\n\nSBVRParser = require '../../../common/extended-sbvr-parser/extended-sbvr-parser'\n\nmigrator = require '../migrator/migrator'\nAbstractSQL2CLF = require '@resin/abstract-sql-to-odata-schema'\nODataMetadataGenerator = require '../sbvr-compiler/ODataMetadataGenerator'\n\ndevModel = require './dev.sbvr'\npermissions = require './permissions'\nuriParser = require './uri-parser'\n\nmemoize = require 'memoizee'\nmemoizedCompileRule = memoize(\n\t(abstractSqlQuery) ->\n\t\tAbstractSQLCompiler.compileRule(abstractSqlQuery)\n\tprimitive: true\n)\n\ndb = null\n\nexports.sbvrTypes = sbvrTypes\n\nfetchProcessing = _.mapValues sbvrTypes, ({ fetchProcessing }) ->\n\tif fetchProcessing?\n\t\tPromise.promisify(fetchProcessing)\n\nLF2AbstractSQLTranslator = LF2AbstractSQL.createTranslator(sbvrTypes)\n\nseModels = {}\nsqlModels = {}\nclientModels = {}\nodataMetadata = {}\n\napiHooks =\n\tall: {}\n\tGET: {}\n\tPUT: {}\n\tPOST: {}\n\tPATCH: {}\n\tDELETE: {}\n\tOPTIONS: {}\n\n# Share hooks between merge and patch since they are the same operation, just MERGE was the OData intermediary until the HTTP spec added PATCH.\napiHooks.MERGE = apiHooks.PATCH\n\nclass UnsupportedMethodError extends TypedError\nclass SqlCompilationError extends TypedError\nclass SbvrValidationError extends TypedError\n\n# TODO: Clean this up and move it into the db module.\nprettifyConstraintError = (err, tableName) ->\n\tif err instanceof db.ConstraintError\n\t\tif err instanceof db.UniqueConstraintError\n\t\t\tswitch db.engine\n\t\t\t\twhen 'mysql'\n\t\t\t\t\tmatches = /ER_DUP_ENTRY: Duplicate entry '.*?[^\\\\]' for key '(.*?[^\\\\])'/.exec(err)\n\t\t\t\twhen 'postgres'\n\t\t\t\t\tmatches = new RegExp('\"' + tableName + '_(.*?)_key\"').exec(err)\n\t\t\t\t\t# We know it's the right error type, so if matches exists just return a generic error message, since we have failed to get the info for a more specific one.\n\t\t\t\t\tif !matches?\n\t\t\t\t\t\tthrow new db.UniqueConstraintError('Unique key constraint violated')\n\t\t\tthrow new db.UniqueConstraintError('\"' + matches[1] + '\" must be unique'.replace(/-/g, '__') + '.')\n\n\t\tif err instanceof db.ForeignKeyConstraintError\n\t\t\tswitch db.engine\n\t\t\t\twhen 'mysql'\n\t\t\t\t\tmatches = /ER_ROW_IS_REFERENCED_: Cannot delete or update a parent row: a foreign key constraint fails \\(\".*?\"\\.(\".*?\").*/.exec(err)\n\t\t\t\twhen 'postgres'\n\t\t\t\t\tmatches = new RegExp('\"' + tableName + '\" violates foreign key constraint \".*?\" on table \"(.*?)\"').exec(err)\n\t\t\t\t\tmatches ?= new RegExp('\"' + tableName + '\" violates foreign key constraint \"' + tableName + '_(.*?)_fkey\"').exec(err)\n\t\t\t\t\t# We know it's the right error type, so if matches exists just return a generic error message, since we have failed to get the info for a more specific one.\n\t\t\t\t\tif !matches?\n\t\t\t\t\t\tthrow new db.ForeignKeyConstraintError('Foreign key constraint violated')\n\t\t\tthrow new db.ForeignKeyConstraintError('Data is referenced by ' + matches[1].replace(/\\ /g, '_').replace(/-/g, '__') + '.')\n\n\t\tthrow err\n\nexports.resolveOdataBind = resolveOdataBind = (odataBinds, value) ->\n\tif _.isObject(value) and value.bind?\n\t\t[dataType, value] = odataBinds[value.bind]\n\treturn value\n\ngetAndCheckBindValues = (vocab, odataBinds, bindings, values) ->\n\tmappings = clientModels[vocab].resourceToSQLMappings\n\tsqlModelTables = sqlModels[vocab].tables\n\tPromise.map bindings, (binding) ->\n\t\tif binding[0] is 'Bind'\n\t\t\tif _.isArray(binding[1])\n\t\t\t\t[tableName, fieldName] = binding[1]\n\n\t\t\t\treferencedName = tableName + '.' + fieldName\n\t\t\t\tvalue = values[referencedName]\n\t\t\t\tif value is undefined\n\t\t\t\t\tvalue = values[fieldName]\n\n\t\t\t\tvalue = resolveOdataBind(odataBinds, value)\n\n\t\t\t\t[mappedTableName, mappedFieldName] = mappings[tableName][fieldName]\n\t\t\t\tfield = _.find(sqlModelTables[mappedTableName].fields, {\n\t\t\t\t\tfieldName: mappedFieldName\n\t\t\t\t})\n\t\t\telse if _.isInteger(binding[1])\n\t\t\t\tif binding[1] >= odataBinds.length\n\t\t\t\t\tconsole.error(\"Invalid binding number '#{binding[1]}' for binds: \", odataBinds)\n\t\t\t\t\tthrow new Error('Invalid binding')\n\t\t\t\t[dataType, value] = odataBinds[binding[1]]\n\t\t\t\tfield = { dataType }\n\t\t\telse\n\t\t\t\tthrow new Error(\"Unknown binding: #{binding}\")\n\t\telse\n\t\t\t[dataType, value] = binding\n\t\t\tfield = { dataType }\n\n\t\tif value is undefined\n\t\t\treturn db.DEFAULT_VALUE\n\n\t\tAbstractSQLCompiler.dataTypeValidate(value, field)\n\t\t.catch (e) ->\n\t\t\te.message = '\"' + fieldName + '\" ' + e.message\n\t\t\tthrow e\n\n\nexports.validateModel = validateModel = (tx, modelName) ->\n\tPromise.map sqlModels[modelName].rules, (rule) ->\n\t\ttx.executeSql(rule.sql, rule.bindings)\n\t\t.then (result) ->\n\t\t\tif result.rows.item(0).result in [false, 0, '0']\n\t\t\t\tthrow new SbvrValidationError(rule.structuredEnglish)\n\nexports.executeModel = executeModel = (tx, model, callback) ->\n\texecuteModels(tx, [model], callback)\n\nexports.executeModels = executeModels = (tx, models, callback) ->\n\tPromise.map models, (model) ->\n\t\tseModel = model.modelText\n\t\tvocab = model.apiRoot\n\n\t\tmigrator.run(tx, model).then ->\n\t\t\ttry\n\t\t\t\tlfModel = SBVRParser.matchAll(seModel, 'Process')\n\t\t\tcatch e\n\t\t\t\tconsole.error('Error parsing model', vocab, e, e.stack)\n\t\t\t\tthrow new Error(['Error parsing model', e])\n\n\t\t\ttry\n\t\t\t\tabstractSqlModel = LF2AbstractSQLTranslator(lfModel, 'Process')\n\t\t\t\tsqlModel = AbstractSQLCompiler.compileSchema(abstractSqlModel)\n\t\t\t\tclientModel = AbstractSQL2CLF(sqlModel)\n\t\t\t\tmetadata = ODataMetadataGenerator(vocab, sqlModel)\n\t\t\tcatch e\n\t\t\t\tconsole.error('Error compiling model', vocab, e, e.stack)\n\t\t\t\tthrow new Error(['Error compiling model', e])\n\n\t\t\t# Create tables related to terms and fact types\n\t\t\t# Use `Promise.reduce` to run statements sequentially, as the order of the CREATE TABLE statements matters (eg. for foreign keys).\n\t\t\tPromise.reduce sqlModel.createSchema, (arr, createStatement) ->\n\t\t\t\ttx.executeSql(createStatement)\n\t\t\t\t.catch ->\n\t\t\t\t\t# Warning: We ignore errors in the create table statements as SQLite doesn't support CREATE IF NOT EXISTS\n\t\t\t, []\n\t\t\t.then ->\n\t\t\t\tseModels[vocab] = seModel\n\t\t\t\tsqlModels[vocab] = sqlModel\n\t\t\t\tclientModels[vocab] = clientModel\n\t\t\t\todataMetadata[vocab] = metadata\n\n\t\t\t\turiParser.addClientModel(vocab, clientModel)\n\n\t\t\t\t# Validate the [empty] model according to the rules.\n\t\t\t\t# This may eventually lead to entering obligatory data.\n\t\t\t\t# For the moment it blocks such models from execution.\n\t\t\t\tvalidateModel(tx, vocab)\n\t\t\t.then ->\n\t\t\t\tapi[vocab] = new PinejsClient('/' + vocab + '/')\n\t\t\t\tapi[vocab].logger = {}\n\t\t\t\tfor key, value of console\n\t\t\t\t\tif _.isFunction(value)\n\t\t\t\t\t\tif model.logging?[key] ? model.logging?.default ? true\n\t\t\t\t\t\t\tapi[vocab].logger[key] = _.bind(value, console, vocab + ':')\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tapi[vocab].logger[key] = ->\n\t\t\t\t\telse\n\t\t\t\t\t\tapi[vocab].logger[key] = value\n\n\t\t\t\treturn {\n\t\t\t\t\tvocab: vocab\n\t\t\t\t\tse: seModel\n\t\t\t\t\tlf: lfModel\n\t\t\t\t\tabstractsql: abstractSqlModel\n\t\t\t\t\tsql: sqlModel\n\t\t\t\t\tclient: clientModel\n\t\t\t\t}\n\t# Only update the dev models once all models have finished executing.\n\t.map (model) ->\n\t\tupdateModel = (modelType, modelText) ->\n\t\t\tapi.dev.get\n\t\t\t\tresource: 'model'\n\t\t\t\tpassthrough:\n\t\t\t\t\ttx: tx\n\t\t\t\t\treq: permissions.rootRead\n\t\t\t\toptions:\n\t\t\t\t\tselect: 'id'\n\t\t\t\t\tfilter:\n\t\t\t\t\t\tvocabulary: model.vocab\n\t\t\t\t\t\tmodel_type: modelType\n\t\t\t.then (result) ->\n\t\t\t\tmethod = 'POST'\n\t\t\t\turi = '/dev/model'\n\t\t\t\tbody =\n\t\t\t\t\tvocabulary: model.vocab\n\t\t\t\t\tmodel_value: modelText\n\t\t\t\t\tmodel_type: modelType\n\t\t\t\tid = result[0]?.id\n\t\t\t\tif id?\n\t\t\t\t\turi += '(' + id + ')'\n\t\t\t\t\tmethod = 'PATCH'\n\t\t\t\t\tbody.id = id\n\n\t\t\t\trunURI(method, uri, body, tx, permissions.root)\n\n\t\tPromise.all([\n\t\t\tupdateModel('se', model.se)\n\t\t\tupdateModel('lf', model.lf)\n\t\t\tupdateModel('abstractsql', model.abstractsql)\n\t\t\tupdateModel('sql', model.sql)\n\t\t\tupdateModel('client', model.client)\n\t\t])\n\t.catch (err) ->\n\t\tPromise.map models, (model) ->\n\t\t\tcleanupModel(model.apiRoot)\n\t\tthrow err\n\t.nodeify(callback)\n\ncleanupModel = (vocab) ->\n\tdelete seModels[vocab]\n\tdelete sqlModels[vocab]\n\tdelete clientModels[vocab]\n\tdelete odataMetadata[vocab]\n\turiParser.deleteClientModel(vocab)\n\tdelete api[vocab]\n\ngetHooks = do ->\n\tmergeHooks = (a, b) ->\n\t\t_.mergeWith {}, a, b, (a, b) ->\n\t\t\tif _.isArray(a)\n\t\t\t\treturn a.concat(b)\n\tgetResourceHooks = (vocabHooks, request) ->\n\t\treturn {} if !vocabHooks?\n\t\t# When getting the hooks list for the sake of PREPARSE hooks\n\t\t# we don't know the resourceName we'll be acting on yet\n\t\tif !request.resourceName?\n\t\t\treturn vocabHooks['all']\n\t\tmergeHooks(\n\t\t\tvocabHooks[request.resourceName]\n\t\t\tvocabHooks['all']\n\t\t)\n\tgetVocabHooks = (methodHooks, request) ->\n\t\treturn {} if !methodHooks?\n\t\tmergeHooks(\n\t\t\tgetResourceHooks(methodHooks[request.vocabulary], request)\n\t\t\tgetResourceHooks(methodHooks['all'], request)\n\t\t)\n\treturn getMethodHooks = (request) ->\n\t\tmergeHooks(\n\t\t\tgetVocabHooks(apiHooks[request.method], request)\n\t\t\tgetVocabHooks(apiHooks['all'], request)\n\t\t)\n\nrunHook = (hookName, args) ->\n\tObject.defineProperty args, 'api',\n\t\tget: _.once ->\n\t\t\treturn api[args.request.vocabulary].clone(passthrough: _.pick(args, 'req', 'tx'))\n\thooks = args.req.hooks[hookName] || []\n\tPromise.map hooks, (hook) ->\n\t\thook(args)\n\nexports.deleteModel = (vocabulary, callback) ->\n\tdb.transaction()\n\t.then (tx) ->\n\t\tdropStatements =\n\t\t\t_.map sqlModels[vocabulary]?.dropSchema, (dropStatement) ->\n\t\t\t\ttx.executeSql(dropStatement)\n\t\tPromise.all(dropStatements.concat([\n\t\t\tapi.dev.delete\n\t\t\t\tresource: 'model'\n\t\t\t\tpassthrough:\n\t\t\t\t\ttx: tx\n\t\t\t\t\treq: permissions.root\n\t\t\t\toptions:\n\t\t\t\t\tfilter:\n\t\t\t\t\t\tvocabulary: vocabulary\n\t\t])).then ->\n\t\t\ttx.end()\n\t\t\tcleanupModel(vocabulary)\n\t\t.catch (err) ->\n\t\t\ttx.rollback()\n\t\t\tthrow err\n\t.nodeify(callback)\n\nexports.getID = (vocab, request) ->\n\tidField = sqlModels[vocab].tables[request.resourceName].idField\n\tfor whereClause in request.abstractSqlQuery when whereClause[0] == 'Where'\n\t\tfor comparison in whereClause[1..] when comparison[0] == 'Equals'\n\t\t\tif comparison[1][2] == idField\n\t\t\t\treturn comparison[2][1]\n\t\t\tif comparison[2][2] == idField\n\t\t\t\treturn comparison[1][1]\n\treturn 0\n\ncheckForExpansion = do ->\n\trowsObjectHack = (i) -> @[i]\n\tPromise.method (vocab, clientModel, fieldName, instance) ->\n\t\ttry\n\t\t\tfield = JSON.parse(instance[fieldName])\n\t\tcatch\n\t\t\t# If we can't JSON.parse the field then we use it directly.\n\t\t\tfield = instance[fieldName]\n\n\t\tif _.isArray(field)\n\t\t\t# Hack to look like a rows object\n\t\t\tfield.item = rowsObjectHack\n\t\t\tprocessOData(vocab, clientModel, fieldName, field)\n\t\t\t.then (expandedField) ->\n\t\t\t\tinstance[fieldName] = expandedField\n\t\t\t\treturn\n\t\telse if field?\n\t\t\tinstance[fieldName] = {\n\t\t\t\t__deferred:\n\t\t\t\t\turi: '/' + vocab + '/' + fieldName + '(' + field + ')'\n\t\t\t\t__id: field\n\t\t\t}\n\t\t\treturn\n\nodataResourceURI = (vocab, resourceName, id) ->\n\tid =\n\t\tif _.isString(id)\n\t\t\t\"'\" + encodeURIComponent(id) + \"'\"\n\t\telse\n\t\t\tid\n\treturn '/' + vocab + '/' + resourceName + '(' + id + ')'\n\nprocessOData = do ->\n\tgetLocalFields = (resourceModel) ->\n\t\tif !resourceModel.localFields?\n\t\t\tresourceModel.localFields = {}\n\t\t\tfor { fieldName, dataType } in resourceModel.fields when dataType isnt 'ForeignKey'\n\t\t\t\tresourceModel.localFields[fieldName.replace(/\\ /g, '_')] = true\n\t\treturn resourceModel.localFields\n\tgetFetchProcessingFields = (resourceModel) ->\n\t\treturn resourceModel.fetchProcessingFields ?=\n\t\t\t_(resourceModel.fields)\n\t\t\t.filter(({ dataType }) -> fetchProcessing[dataType]?)\n\t\t\t.map ({ fieldName, dataType }) ->\n\t\t\t\treturn [\n\t\t\t\t\tfieldName.replace(/\\ /g, '_')\n\t\t\t\t\tfetchProcessing[dataType]\n\t\t\t\t]\n\t\t\t.fromPairs()\n\t\t\t.value()\n\n\treturn (vocab, clientModel, resourceName, rows) ->\n\t\tif rows.length is 0\n\t\t\treturn Promise.fulfilled([])\n\n\t\tif rows.length is 1\n\t\t\tif rows.item(0).$count?\n\t\t\t\tcount = parseInt(rows.item(0).$count, 10)\n\t\t\t\treturn Promise.fulfilled(count)\n\n\t\tresourceModel = clientModel[resourceName]\n\n\t\tinstances = rows.map (instance) ->\n\t\t\tinstance.__metadata =\n\t\t\t\turi: odataResourceURI(vocab, resourceModel.resourceName, +instance[resourceModel.idField])\n\t\t\t\ttype: ''\n\t\t\treturn instance\n\n\t\tinstancesPromise = Promise.fulfilled()\n\n\t\tlocalFields = getLocalFields(resourceModel)\n\t\t# We check that it's not a local field, rather than that it is a foreign key because of the case where the foreign key is on the other resource\n\t\t# and hence not known to this resource\n\t\texpandableFields = _.filter(_.keys(instances[0]), (fieldName) -> fieldName[0..1] != '__' and !localFields.hasOwnProperty(fieldName))\n\t\tif expandableFields.length > 0\n\t\t\tinstancesPromise = Promise.map instances, (instance) ->\n\t\t\t\tPromise.map expandableFields, (fieldName) ->\n\t\t\t\t\tcheckForExpansion(vocab, clientModel, fieldName, instance)\n\n\t\tfetchProcessingFields = getFetchProcessingFields(resourceModel)\n\t\tprocessedFields = _.filter(_.keys(instances[0]), (fieldName) -> fieldName[0..1] != '__' and fetchProcessingFields.hasOwnProperty(fieldName))\n\t\tif processedFields.length > 0\n\t\t\tinstancesPromise = instancesPromise.then ->\n\t\t\t\tPromise.map instances, (instance) ->\n\t\t\t\t\tPromise.map processedFields, (resourceName) ->\n\t\t\t\t\t\tfetchProcessingFields[resourceName](instance[resourceName])\n\t\t\t\t\t\t.then (result) ->\n\t\t\t\t\t\t\tinstance[resourceName] = result\n\t\t\t\t\t\t\treturn\n\n\t\tinstancesPromise.then ->\n\t\t\treturn instances\n\nexports.runRule = do ->\n\tLF2AbstractSQLPrepHack = LF2AbstractSQL.LF2AbstractSQLPrep._extend({ CardinalityOptimisation: -> @_pred(false) })\n\ttranslator = LF2AbstractSQL.LF2AbstractSQL.createInstance()\n\ttranslator.addTypes(sbvrTypes)\n\treturn (vocab, rule, callback) ->\n\t\tPromise.try ->\n\t\t\tseModel = seModels[vocab]\n\t\t\t{ logger } = api[vocab]\n\n\t\t\ttry\n\t\t\t\tlfModel = SBVRParser.matchAll(seModel + '\\nRule: ' + rule, 'Process')\n\t\t\tcatch e\n\t\t\t\tlogger.error('Error parsing rule', rule, e, e.stack)\n\t\t\t\tthrow new Error(['Error parsing rule', rule, e])\n\n\t\t\truleLF = lfModel[lfModel.length - 1]\n\t\t\tlfModel = lfModel[...-1]\n\n\t\t\ttry\n\t\t\t\tslfModel = LF2AbstractSQL.LF2AbstractSQLPrep.match(lfModel, 'Process')\n\t\t\t\tslfModel.push(ruleLF)\n\t\t\t\tslfModel = LF2AbstractSQLPrepHack.match(slfModel, 'Process')\n\n\t\t\t\ttranslator.reset()\n\t\t\t\tabstractSqlModel = translator.match(slfModel, 'Process')\n\t\t\tcatch e\n\t\t\t\tlogger.error('Error compiling rule', rule, e, e.stack)\n\t\t\t\tthrow new Error(['Error compiling rule', rule, e])\n\n\t\t\tformulationType = ruleLF[1][0]\n\t\t\tresourceName =\n\t\t\t\tif ruleLF[1][1][0] == 'LogicalNegation'\n\t\t\t\t\truleLF[1][1][1][1][2][1]\n\t\t\t\telse\n\t\t\t\t\truleLF[1][1][1][2][1]\n\n\t\t\tfetchingViolators = false\n\t\t\truleAbs = abstractSqlModel.rules[-1..][0]\n\t\t\truleBody = _.find(ruleAbs, 0: 'Body')\n\t\t\tif ruleBody[1][0] == 'Not' and ruleBody[1][1][0] == 'Exists' and ruleBody[1][1][1][0] == 'SelectQuery'\n\t\t\t\t# Remove the not exists\n\t\t\t\truleBody[1] = ruleBody[1][1][1]\n\t\t\t\tfetchingViolators = true\n\t\t\telse if ruleBody[1][0] == 'Exists' and ruleBody[1][1][0] == 'SelectQuery'\n\t\t\t\t# Remove the exists\n\t\t\t\truleBody[1] = ruleBody[1][1]\n\t\t\telse\n\t\t\t\tthrow new Error('Unsupported rule formulation')\n\n\t\t\twantNonViolators = formulationType in ['PossibilityFormulation', 'PermissibilityFormulation']\n\t\t\tif wantNonViolators == fetchingViolators\n\t\t\t\t# What we want is the opposite of what we're getting, so add a not to the where clauses\n\t\t\t\truleBody[1] = _.map ruleBody[1], (queryPart) ->\n\t\t\t\t\tif queryPart[0] != 'Where'\n\t\t\t\t\t\treturn queryPart\n\t\t\t\t\tif queryPart.length > 2\n\t\t\t\t\t\tthrow new Error('Unsupported rule formulation')\n\t\t\t\t\treturn ['Where', ['Not', queryPart[1]]]\n\n\t\t\t# Select all\n\t\t\truleBody[1] = _.map ruleBody[1], (queryPart) ->\n\t\t\t\tif queryPart[0] != 'Select'\n\t\t\t\t\treturn queryPart\n\t\t\t\treturn ['Select', '*']\n\t\t\truleSQL = AbstractSQLCompiler.compileRule(ruleBody)\n\n\t\t\tdb.executeSql(ruleSQL.query, ruleSQL.bindings)\n\t\t\t.then (result) ->\n\t\t\t\tresourceName = resourceName.replace(/\\ /g, '_').replace(/-/g, '__')\n\t\t\t\tclientModel = clientModels[vocab].resources[resourceName]\n\t\t\t\tids = result.rows.map (row) -> row[clientModel.idField]\n\t\t\t\tids = _.uniq(ids)\n\t\t\t\tids = _.map ids, (id) -> clientModel.idField + ' eq ' + id\n\t\t\t\tfilter =\n\t\t\t\t\tif ids.length > 0\n\t\t\t\t\t\tids.join(' or ')\n\t\t\t\t\telse\n\t\t\t\t\t\t'0 eq 1'\n\t\t\t\trunURI('GET', '/' + vocab + '/' + clientModel.resourceName + '?$filter=' + filter, null, null, permissions.rootRead)\n\t\t\t\t.then (result) ->\n\t\t\t\t\tresult.__formulationType = formulationType\n\t\t\t\t\tresult.__resourceName = resourceName\n\t\t\t\t\treturn result\n\t\t.nodeify(callback)\n\nexports.PinejsClient =\n\tclass PinejsClient extends PinejsClientCore(_, Promise)\n\t\t_request: ({ method, url, body, tx, req }) ->\n\t\t\treturn runURI(method, url, body, tx, req)\n\nexports.api = api = {}\n\n# We default to full permissions if no req object is passed in\nexports.runURI = runURI =  (method, uri, body = {}, tx, req, callback) ->\n\tif callback? and !_.isFunction(callback)\n\t\tmessage = 'Called runURI with a non-function callback?!'\n\t\tconsole.trace(message)\n\t\treturn Promise.rejected(message)\n\n\tif _.isObject(req)\n\t\tuser = req.user\n\t\tapiKey = req.apiKey\n\telse\n\t\tif req?\n\t\t\tconsole.warn('Non-object req passed to runURI?', req, new Error().stack)\n\t\tuser = permissions: []\n\n\treq =\n\t\tuser: user\n\t\tapiKey: apiKey\n\t\tmethod: method\n\t\turl: uri\n\t\tbody: body\n\t\tparams: {}\n\t\tquery: {}\n\t\ttx: tx\n\n\treturn new Promise (resolve, reject) ->\n\t\tres =\n\t\t\tstatusCode: 200\n\t\t\tstatus: (@statusCode) ->\n\t\t\t\treturn this\n\t\t\tsendStatus: (statusCode) ->\n\t\t\t\tif statusCode >= 400\n\t\t\t\t\treject(statusCode)\n\t\t\t\telse\n\t\t\t\t\tresolve()\n\t\t\tsend: (statusCode = @statusCode) ->\n\t\t\t\t@sendStatus(statusCode)\n\t\t\tjson: (data, statusCode = @statusCode) ->\n\t\t\t\tif statusCode >= 400\n\t\t\t\t\treject(data)\n\t\t\t\telse\n\t\t\t\t\tresolve(data)\n\t\t\tset: ->\n\t\t\ttype: ->\n\n\t\tnext = (route) ->\n\t\t\tconsole.warn('Next called on a runURI?!', method, uri, route)\n\t\t\tres.sendStatus(500)\n\n\t\thandleODataRequest(req, res, next)\n\t.nodeify(callback)\n\nexports.handleODataRequest = handleODataRequest = (req, res, next) ->\n\turl = req.url.split('/')\n\tapiRoot = url[1]\n\tif !apiRoot? or !clientModels[apiRoot]?\n\t\treturn next('route')\n\n\tif process.env.DEBUG\n\t\tapi[apiRoot].logger.log('Parsing', req.method, req.url)\n\n\t# Get the hooks for the current method/vocabulary as we know it,\n\t# in order to run PREPARSE hooks, before parsing gets us more info\n\treq.hooks = getHooks(\n\t\tmethod: req.method\n\t\tvocabulary: apiRoot\n\t)\n\trunHook('PREPARSE', { req, tx: req.tx })\n\t.then ->\n\t\t# Parse the OData requests\n\t\turiParser.parseODataURI(req)\n\t.then (requests) ->\n\t\t# Then for each request add/check the relevant permissions, translate to abstract sql, and then compile the abstract sql.\n\t\tPromise.map requests, (request) ->\n\t\t\t# Get the full hooks list now that we can\n\t\t\treq.hooks = getHooks(request)\n\t\t\trunHook('POSTPARSE', { req, request, tx: req.tx })\n\t\t\t.return(request)\n\t\t\t.then(uriParser.translateUri)\n\t\t\t.then (request) ->\n\t\t\t\tif request.abstractSqlQuery?\n\t\t\t\t\ttry\n\t\t\t\t\t\trequest.sqlQuery = memoizedCompileRule(request.abstractSqlQuery)\n\t\t\t\t\tcatch err\n\t\t\t\t\t\tapi[apiRoot].logger.error('Failed to compile abstract sql: ', request.abstractSqlQuery, err, err.stack)\n\t\t\t\t\t\tthrow new SqlCompilationError(err)\n\t\t\t\treturn request\n\t# Then handle forwarding the request to the correct method handler.\n\t.then (requests) ->\n\t\t# Use the first request (and only, since we don't support multiple requests in one yet)\n\t\trequest = requests[0]\n\t\t{ logger } = api[request.vocabulary]\n\n\t\tres.set('Cache-Control', 'no-cache')\n\n\t\tif process.env.DEBUG\n\t\t\tlogger.log('Running', req.method, req.url)\n\n\t\trunTransaction req, request, (tx) ->\n\t\t\trunHook('PRERUN', { req, request, tx })\n\t\t\t.then ->\n\t\t\t\tswitch req.method\n\t\t\t\t\twhen 'GET'\n\t\t\t\t\t\trunGet(req, res, request, tx)\n\t\t\t\t\twhen 'POST'\n\t\t\t\t\t\trunPost(req, res, request, tx)\n\t\t\t\t\twhen 'PUT', 'PATCH', 'MERGE'\n\t\t\t\t\t\trunPut(req, res, request, tx)\n\t\t\t\t\twhen 'DELETE'\n\t\t\t\t\t\trunDelete(req, res, request, tx)\n\t\t.then (result) ->\n\t\t\tswitch req.method\n\t\t\t\twhen 'GET'\n\t\t\t\t\trespondGet(req, res, request, result)\n\t\t\t\twhen 'POST'\n\t\t\t\t\trespondPost(req, res, request, result)\n\t\t\t\twhen 'PUT', 'PATCH', 'MERGE'\n\t\t\t\t\trespondPut(req, res, request, result)\n\t\t\t\twhen 'DELETE'\n\t\t\t\t\trespondDelete(req, res, request, result)\n\t\t\t\twhen 'OPTIONS'\n\t\t\t\t\trespondOptions(req, res, request, result)\n\t\t\t\telse\n\t\t\t\t\tthrow new UnsupportedMethodError()\n\t\t.catch db.DatabaseError, (err) ->\n\t\t\tprettifyConstraintError(err, request.resourceName)\n\t\t\tlogger.error(err, err.stack)\n\t\t\tres.sendStatus(500)\n\t\t.catch EvalError, RangeError, ReferenceError, SyntaxError, TypeError, URIError, (err) ->\n\t\t\tlogger.error(err, err.stack)\n\t\t\tres.sendStatus(500)\n\t.catch SbvrValidationError, (err) ->\n\t\tres.status(400).send(err.message)\n\t.catch uriParser.BadRequestError, ->\n\t\tres.sendStatus(400)\n\t.catch permissions.PermissionError, (err) ->\n\t\tres.sendStatus(401)\n\t.catch SqlCompilationError, uriParser.TranslationError, uriParser.ParsingError, permissions.PermissionParsingError, (err) ->\n\t\tres.sendStatus(500)\n\t.catch UnsupportedMethodError, (err) ->\n\t\tres.sendStatus(405)\n\t.catch (err) ->\n\t\t# If the err is an error object then use its message instead - it should be more readable!\n\t\tif err instanceof Error\n\t\t\terr = err.message\n\t\tres.status(404).json(err)\n\n# This is a helper method to handle using a passed in req.tx when available, or otherwise creating a new tx and cleaning up after we're done.\nrunTransaction = (req, request, callback) ->\n\trunCallback = (tx) ->\n\t\tcallback(tx)\n\t\t.tap (result) ->\n\t\t\trunHook('POSTRUN', { req, request, result, tx })\n\tif req.tx?\n\t\t# If an existing tx was passed in then use it.\n\t\trunCallback(req.tx)\n\telse\n\t\t# Otherwise create a new transaction and handle tidying it up.\n\t\tdb.transaction().then (tx) ->\n\t\t\trunCallback(tx)\n\t\t\t.tap ->\n\t\t\t\ttx.end()\n\t\t\t.catch (err) ->\n\t\t\t\ttx.rollback()\n\t\t\t\tthrow err\n\n# This is a helper function that will check and add the bind values to the SQL query and then run it.\nrunQuery = (tx, request, queryIndex, addReturning) ->\n\t{ values, odataBinds, sqlQuery, vocabulary } = request\n\tif queryIndex?\n\t\tsqlQuery = sqlQuery[queryIndex]\n\tgetAndCheckBindValues(vocabulary, odataBinds, sqlQuery.bindings, values)\n\t.then (values) ->\n\t\tif process.env.DEBUG\n\t\t\tapi[vocabulary].logger.log(sqlQuery.query, values)\n\n\t\tsqlQuery.values = values\n\t\ttx.executeSql(sqlQuery.query, values, null, addReturning)\n\nrunGet = (req, res, request, tx) ->\n\tif request.sqlQuery?\n\t\trunQuery(tx, request)\n\nrespondGet = (req, res, request, result) ->\n\tvocab = request.vocabulary\n\tif request.sqlQuery?\n\t\tclientModel = clientModels[vocab].resources\n\t\tprocessOData(vocab, clientModel, request.resourceName, result.rows)\n\t\t.then (d) ->\n\t\t\trunHook('PRERESPOND', { req, res, request, result, data: d, tx: req.tx })\n\t\t\t.then ->\n\t\t\t\tres.json({ d })\n\telse\n\t\tif request.resourceName == '$metadata'\n\t\t\tres.type('xml')\n\t\t\tres.send(odataMetadata[vocab])\n\t\telse\n\t\t\tclientModel = clientModels[vocab]\n\t\t\tdata =\n\t\t\t\tif request.resourceName == '$serviceroot'\n\t\t\t\t\t__model: clientModel.resources\n\t\t\t\telse\n\t\t\t\t\t__model: clientModel.resources[request.resourceName]\n\t\t\tres.json(data)\n\t\treturn Promise.resolve()\n\nrunPost = (req, res, request, tx) ->\n\tvocab = request.vocabulary\n\n\tidField = clientModels[vocab].resources[request.resourceName].idField\n\n\trunQuery(tx, request, null, idField)\n\t.then (sqlResult) ->\n\t\tvalidateModel(tx, vocab)\n\t\t.then ->\n\t\t\t# Return the inserted/updated id.\n\t\t\tif request.abstractSqlQuery[0] == 'UpdateQuery'\n\t\t\t\trequest.sqlQuery.values[0]\n\t\t\telse\n\t\t\t\tsqlResult.insertId\n\nrespondPost = (req, res, request, result) ->\n\tvocab = request.vocabulary\n\tid = result\n\tlocation = odataResourceURI(vocab, request.resourceName, id)\n\tapi[vocab].logger.log('Insert ID: ', request.resourceName, id)\n\trunURI('GET', location, null, req.tx, req)\n\t.catch ->\n\t\t# If we failed to fetch the created resource then just return the id.\n\t\treturn d: [{ id }]\n\t.then (result) ->\n\t\trunHook('PRERESPOND', { req, res, request, result, tx: req.tx })\n\t\t.then ->\n\t\t\tres.set('Location', location)\n\t\t\tres.status(201).json(result.d[0])\n\nrunPut = (req, res, request, tx) ->\n\tvocab = request.vocabulary\n\n\tPromise.try ->\n\t\t# If request.sqlQuery is an array it means it's an UPSERT, ie two queries: [InsertQuery, UpdateQuery]\n\t\tif _.isArray(request.sqlQuery)\n\t\t\t# Run the update query first\n\t\t\trunQuery(tx, request, 1)\n\t\t\t.then (result) ->\n\t\t\t\tif result.rowsAffected is 0\n\t\t\t\t\t# Then run the insert query if nothing was updated\n\t\t\t\t\trunQuery(tx, request, 0)\n\t\telse\n\t\t\trunQuery(tx, request)\n\t.then ->\n\t\tvalidateModel(tx, vocab)\n\nrespondPut = respondDelete = respondOptions = (req, res, request) ->\n\trunHook('PRERESPOND', { req, res, request, tx: req.tx })\n\t.then ->\n\t\tres.sendStatus(200)\n\nrunDelete = (req, res, request, tx) ->\n\tvocab = request.vocabulary\n\n\trunQuery(tx, request)\n\t.then ->\n\t\tvalidateModel(tx, vocab)\n\nexports.executeStandardModels = executeStandardModels = (tx, callback) ->\n\t# dev model must run first\n\texecuteModel(tx,\n\t\tapiRoot: 'dev'\n\t\tmodelText: devModel\n\t\tlogging:\n\t\t\tlog: false\n\t)\n\t.then ->\n\t\texecuteModels(tx, permissions.config.models)\n\t.then ->\n\t\tconsole.info('Sucessfully executed standard models.')\n\t.catch (err) ->\n\t\tconsole.error('Failed to execute standard models.', err, err.stack)\n\t\tthrow err\n\t.nodeify(callback)\n\nexports.addHook = (method, apiRoot, resourceName, callbacks) ->\n\tmethodHooks = apiHooks[method]\n\tif !methodHooks?\n\t\tthrow new Error('Unsupported method: ' + method)\n\tif apiRoot isnt 'all' and !clientModels[apiRoot]?\n\t\tthrow new Error('Unknown api root: ' + apiRoot)\n\tif resourceName isnt 'all' and !clientModels[apiRoot].resources[resourceName]?\n\t\tthrow new Error('Unknown resource for api root: ' + resourceName + ', ' + apiRoot)\n\n\tfor callbackType, callback of callbacks when callbackType not in ['PREPARSE', 'POSTPARSE', 'PRERUN', 'POSTRUN', 'PRERESPOND']\n\t\tthrow new Error('Unknown callback type: ' + callbackType)\n\n\tapiRootHooks = methodHooks[apiRoot] ?= {}\n\tresourceHooks = apiRootHooks[resourceName] ?= {}\n\n\tfor callbackType, callback of callbacks\n\t\tresourceHooks[callbackType] ?= []\n\t\tresourceHooks[callbackType].push(callback)\n\nexports.setup = (app, _db, callback) ->\n\texports.db = db = _db\n\tAbstractSQLCompiler = AbstractSQLCompiler[db.engine]\n\n\tdb.transaction()\n\t.then (tx) ->\n\t\texecuteStandardModels(tx)\n\t\t.then ->\n\t\t\tpermissions.setup(app, exports)\n\t\t\t_.extend(exports, permissions)\n\t\t\ttx.end()\n\t\t.catch (err) ->\n\t\t\ttx.rollback()\n\t\t\tconsole.error('Could not execute standard models', err, err.stack)\n\t\t\tprocess.exit()\n\t.then ->\n\t\tdb.executeSql('CREATE UNIQUE INDEX \"uniq_model_model_type_vocab\" ON \"model\" (\"vocabulary\", \"model type\");')\n\t\t.catch -> # we can't use IF NOT EXISTS on all dbs, so we have to ignore the error raised if this index already exists\n\t.nodeify(callback)\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/src/sbvr-api/sbvr-utils.coffee","(function (root, factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine(['@resin/lf-to-abstract-sql/lf-to-abstract-sql-prep', '@resin/lf-to-abstract-sql/lf-to-abstract-sql'], factory);\n\t} else if (typeof exports === 'object') {\n\t\t// Node. Does not work with strict CommonJS, but\n\t\t// only CommonJS-like enviroments that support module.exports,\n\t\t// like Node.\n\t\tmodule.exports = factory(\n\t\t\trequire('./lf-to-abstract-sql-prep'),\n\t\t\trequire('./lf-to-abstract-sql')\n\t\t);\n\t} else {\n\t\t// Browser globals\n\t\troot.LF2AbstractSQL = factory(LF2AbstractSQLPrep, LF2AbstractSQL);\n\t}\n}(this, function (LF2AbstractSQLPrep, LF2AbstractSQL) {\n\tLF2AbstractSQLPrep = LF2AbstractSQLPrep.LF2AbstractSQLPrep;\n\tLF2AbstractSQL = LF2AbstractSQL.LF2AbstractSQL;\n\treturn {\n\t\tLF2AbstractSQLPrep: LF2AbstractSQLPrep,\n\t\tLF2AbstractSQL: LF2AbstractSQL,\n\t\ttranslate: function(lf, types) {\n\t\t\tlf = LF2AbstractSQLPrep.match(lf, 'Process');\n\t\t\tvar translator = LF2AbstractSQL.createInstance();\n\t\t\ttranslator.addTypes(types);\n\t\t\treturn translator.match(lf, 'Process');\n\t\t},\n\t\tcreateTranslator: function(types) {\n\t\t\tvar translator = LF2AbstractSQL.createInstance();\n\t\t\ttranslator.addTypes(types);\n\t\t\treturn function(lf) {\n\t\t\t\tlf = LF2AbstractSQLPrep.match(lf, 'Process');\n\t\t\t\ttranslator.reset();\n\t\t\t\treturn translator.match(lf, 'Process');\n\t\t\t};\n\t\t}\n\t}\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@resin/lf-to-abstract-sql/index.js\n// module id = 25\n// module chunks = 0","!function(root, factory) {\n    \"function\" == typeof define && define.amd ? define([ \"require\", \"exports\", \"ometa-core\", \"./sbvr-compiler-libs\", \"@resin/sbvr-parser/lf-optimiser\", \"lodash\" ], factory) : \"object\" == typeof exports ? factory(require, exports, require(\"ometa-js\").core) : factory(function(moduleName) {\n        return root[moduleName];\n    }, root, root.OMeta);\n}(this, function(require, exports, OMeta) {\n    var SBVRCompilerLibs = require(\"./sbvr-compiler-libs\").SBVRCompilerLibs, LFOptimiser = require(\"@resin/sbvr-parser/lf-optimiser\").LFOptimiser, _ = require(\"lodash\"), LF2AbstractSQLPrep = exports.LF2AbstractSQLPrep = LFOptimiser._extend({\n        AttrConceptType: function(termName) {\n            var $elf = this, _fromIdx = this.input.idx, conceptType;\n            conceptType = LFOptimiser._superApplyWithArgs(this, \"AttrConceptType\", termName);\n            this._opt(function() {\n                this._pred(this.primitives[termName] === !1 && this.primitives[conceptType] !== !1);\n                this.primitives[conceptType] = !1;\n                return this._apply(\"SetHelped\");\n            });\n            return conceptType;\n        },\n        AttrDatabaseAttribute: function(termOrFactType) {\n            var $elf = this, _fromIdx = this.input.idx, attrVal, newAttrVal;\n            attrVal = this.anything();\n            newAttrVal = \"Term\" == termOrFactType[0] && (!this.attributes.hasOwnProperty(termOrFactType[3]) || this.attributes[termOrFactType[3]] === !0) || \"FactType\" == termOrFactType[0] && 4 == termOrFactType.length && (!this.attributes.hasOwnProperty(termOrFactType[3]) || this.attributes[termOrFactType[3]] === !0) && this.primitives.hasOwnProperty(termOrFactType[3]) && this.primitives[termOrFactType[3]] !== !1;\n            this.attributes[termOrFactType] = newAttrVal;\n            this._opt(function() {\n                this._pred(newAttrVal != attrVal);\n                return this._apply(\"SetHelped\");\n            });\n            return newAttrVal;\n        },\n        AttrDatabasePrimitive: function(termOrFactType) {\n            var $elf = this, _fromIdx = this.input.idx, attrVal, newAttrVal;\n            attrVal = this.anything();\n            newAttrVal = attrVal;\n            this._opt(function() {\n                this._pred(this.primitives.hasOwnProperty(termOrFactType));\n                newAttrVal = this.primitives[termOrFactType];\n                this._pred(newAttrVal != attrVal);\n                return this._apply(\"SetHelped\");\n            });\n            this.primitives[termOrFactType] = newAttrVal;\n            return newAttrVal;\n        },\n        AttrTermForm: function(factType) {\n            var $elf = this, _fromIdx = this.input.idx;\n            this.termForms[factType] = !0;\n            return this.anything();\n        },\n        UniversalQuantification: function() {\n            var $elf = this, _fromIdx = this.input.idx, v, xs;\n            v = this._applyWithArgs(\"token\", \"Variable\");\n            xs = this._many(function() {\n                return this._apply(\"trans\");\n            });\n            this._apply(\"SetHelped\");\n            return [ \"LogicalNegation\", [ \"ExistentialQuantification\", v, [ \"LogicalNegation\" ].concat(xs) ] ];\n        },\n        AtMostNQuantification: function() {\n            var $elf = this, _fromIdx = this.input.idx, maxCard, v, xs;\n            maxCard = this._applyWithArgs(\"token\", \"MaximumCardinality\");\n            v = this._applyWithArgs(\"token\", \"Variable\");\n            xs = this._many(function() {\n                return this._apply(\"trans\");\n            });\n            this._apply(\"SetHelped\");\n            maxCard[1][1]++;\n            return [ \"LogicalNegation\", [ \"AtLeastNQuantification\", [ \"MinimumCardinality\", maxCard[1] ], v ].concat(xs) ];\n        },\n        CardinalityOptimisation2: function(v1) {\n            var $elf = this, _fromIdx = this.input.idx, actualFactType, atomicForm, card, factType, required, v2;\n            this._pred(3 == v1.length);\n            required = this._or(function() {\n                this._form(function() {\n                    this._applyWithArgs(\"exactly\", \"ExactQuantification\");\n                    card = this._applyWithArgs(\"token\", \"Cardinality\");\n                    this._pred(1 == card[1][1]);\n                    v2 = this._applyWithArgs(\"token\", \"Variable\");\n                    return atomicForm = this._applyWithArgs(\"token\", \"AtomicFormulation\");\n                });\n                return !0;\n            }, function() {\n                this._form(function() {\n                    this._applyWithArgs(\"exactly\", \"AtMostNQuantification\");\n                    card = this._applyWithArgs(\"token\", \"MaximumCardinality\");\n                    this._pred(1 == card[1][1]);\n                    v2 = this._applyWithArgs(\"token\", \"Variable\");\n                    return atomicForm = this._applyWithArgs(\"token\", \"AtomicFormulation\");\n                });\n                return !1;\n            });\n            this._apply(\"end\");\n            this._pred(3 == v2.length);\n            factType = atomicForm[1];\n            this._pred(!this.termForms[factType]);\n            this._pred(4 == atomicForm.length && 4 == factType.length);\n            actualFactType = this._applyWithArgs(\"UnmappedFactType\", factType.slice(1));\n            actualFactType = [ \"FactType\" ].concat(actualFactType);\n            this._or(function() {\n                this._pred(this.IdentifiersEqual(v1[2], actualFactType[1]) && this.IdentifiersEqual(v2[2], actualFactType[3]));\n                return this.foreignKeys[actualFactType] = required;\n            }, function() {\n                this._pred(this.IdentifiersEqual(v1[2], actualFactType[3]) && this.IdentifiersEqual(v2[2], actualFactType[1]));\n                return this.uniqueKeys[actualFactType] = required;\n            });\n            return this._apply(\"SetHelped\");\n        },\n        CardinalityOptimisation: function() {\n            var $elf = this, _fromIdx = this.input.idx, v1;\n            return this._form(function() {\n                switch (this.anything()) {\n                  case \"LogicalNegation\":\n                    return this._form(function() {\n                        this._applyWithArgs(\"exactly\", \"ExistentialQuantification\");\n                        v1 = this._applyWithArgs(\"token\", \"Variable\");\n                        return this._form(function() {\n                            this._applyWithArgs(\"exactly\", \"LogicalNegation\");\n                            return this._applyWithArgs(\"CardinalityOptimisation2\", v1);\n                        });\n                    });\n\n                  case \"UniversalQuantification\":\n                    v1 = this._applyWithArgs(\"token\", \"Variable\");\n                    return this._applyWithArgs(\"CardinalityOptimisation2\", v1);\n\n                  default:\n                    throw this._fail();\n                }\n            });\n        },\n        NecessityOptimisation: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._apply(\"CardinalityOptimisation\");\n        },\n        ObligationOptimisation: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._apply(\"CardinalityOptimisation\");\n        },\n        Rule: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                this._form(function() {\n                    switch (this.anything()) {\n                      case \"NecessityFormulation\":\n                        return this._apply(\"NecessityOptimisation\");\n\n                      case \"ObligationFormulation\":\n                        return this._apply(\"ObligationOptimisation\");\n\n                      default:\n                        throw this._fail();\n                    }\n                });\n                this._applyWithArgs(\"token\", \"StructuredEnglish\");\n                return null;\n            }, function() {\n                return LFOptimiser._superApplyWithArgs(this, \"Rule\");\n            });\n        }\n    });\n    LF2AbstractSQLPrep.initialize = function() {\n        _.assign(this, SBVRCompilerLibs);\n        LFOptimiser.initialize.call(this);\n        this.foreignKeys = {};\n        this.uniqueKeys = {};\n        this.primitives = {};\n        this.attributes = {};\n        this.termForms = {};\n    };\n    LF2AbstractSQLPrep.defaultAttributes = function(termOrFactType, attrsFound, attrs) {\n        switch (termOrFactType[0]) {\n          case \"Name\":\n          case \"Term\":\n            if (!this.IsPrimitive(termOrFactType) && !attrsFound.hasOwnProperty(\"DatabaseIDField\")) {\n                attrs.splice(1, 0, [ \"DatabaseIDField\", \"id\" ]);\n                this.SetHelped();\n            }\n            if (!attrsFound.hasOwnProperty(\"ReferenceScheme\")) {\n                attrs.splice(1, 0, [ \"ReferenceScheme\", \"id\" ]);\n                this.SetHelped();\n            }\n            if (!attrsFound.hasOwnProperty(\"DatabaseTableName\")) {\n                attrs.splice(1, 0, [ \"DatabaseTableName\", termOrFactType[1].replace(new RegExp(\" \", \"g\"), \"_\") ]);\n                this.SetHelped();\n            }\n            if (!attrsFound.hasOwnProperty(\"DatabasePrimitive\")) {\n                this.primitives.hasOwnProperty(termOrFactType) || (this.primitives[termOrFactType] = this.IsPrimitive(termOrFactType));\n                attrs.splice(1, 0, [ \"DatabasePrimitive\", this.primitives[termOrFactType] ]);\n                this.SetHelped();\n            }\n            break;\n\n          case \"FactType\":\n            var actualFactType = this.UnmappedFactType(termOrFactType.slice(1));\n            actualFactType = [ \"FactType\" ].concat(actualFactType);\n            if (!this.IsPrimitive(actualFactType[1])) {\n                if (!attrsFound.hasOwnProperty(\"DatabaseIDField\")) {\n                    attrs.splice(1, 0, [ \"DatabaseIDField\", \"id\" ]);\n                    this.SetHelped();\n                }\n                if (!attrsFound.hasOwnProperty(\"DatabaseTableName\")) {\n                    for (var tableName = actualFactType[1][1].replace(new RegExp(\" \", \"g\"), \"_\"), i = 2; i < actualFactType.length; i++) tableName += \"-\" + actualFactType[i][1].replace(new RegExp(\" \", \"g\"), \"_\");\n                    attrs.splice(1, 0, [ \"DatabaseTableName\", tableName ]);\n                    this.SetHelped();\n                }\n                if (this.uniqueKeys.hasOwnProperty(actualFactType)) if (attrsFound.hasOwnProperty(\"Unique\")) {\n                    if (attrsFound.Unique != this.uniqueKeys[actualFactType]) {\n                        console.error(attrsFound.Unique, this.uniqueKeys[actualFactType]);\n                        ___MISMATCHED_UNIQUE_KEY___.die();\n                    }\n                } else {\n                    attrs.splice(1, 0, [ \"Unique\", this.uniqueKeys[actualFactType] ]);\n                    this.SetHelped();\n                }\n                if (this.foreignKeys.hasOwnProperty(actualFactType)) {\n                    if (!attrsFound.hasOwnProperty(\"DatabaseAttribute\")) {\n                        attrs.splice(1, 0, [ \"DatabaseAttribute\", !1 ]);\n                        this.SetHelped();\n                    }\n                    if (attrsFound.hasOwnProperty(\"ForeignKey\")) {\n                        if (attrsFound.ForeignKey != this.foreignKeys[actualFactType]) {\n                            console.error(attrsFound.ForeignKey, this.foreignKeys[actualFactType]);\n                            ___MISMATCHED_FOREIGN_KEY___.die();\n                        }\n                    } else {\n                        attrs.splice(1, 0, [ \"ForeignKey\", this.foreignKeys[actualFactType] ]);\n                        this.SetHelped();\n                    }\n                }\n                if (3 == actualFactType.length) {\n                    this.primitives.hasOwnProperty(actualFactType[1]) && this.primitives[actualFactType[1]] === !1 || this.SetHelped();\n                    this.primitives[actualFactType[1]] = !1;\n                } else if (actualFactType.length > 4) for (var i = 1; i < actualFactType.length; i += 2) {\n                    this.attributes.hasOwnProperty(actualFactType[i]) && this.attributes[actualFactType[i]] === !1 || this.SetHelped();\n                    this.attributes[actualFactType[i]] = !1;\n                }\n            }\n        }\n        termOrFactType.push(attrs);\n    };\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@resin/lf-to-abstract-sql/lf-to-abstract-sql-prep.js\n// module id = 26\n// module chunks = 0","!function(root, factory) {\n    \"function\" == typeof define && define.amd ? define([ \"require\", \"exports\", \"ometa-core\", \"./lf-validator\" ], factory) : \"object\" == typeof exports ? factory(require, exports, require(\"ometa-js\").core) : factory(function(moduleName) {\n        return root[moduleName];\n    }, root, root.OMeta);\n}(this, function(require, exports, OMeta) {\n    var LFValidator = require(\"./lf-validator\").LFValidator, LFOptimiser = exports.LFOptimiser = LFValidator._extend({\n        Helped: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            this._pred(this.helped === !0);\n            return this.helped = !1;\n        },\n        SetHelped: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this.helped = !0;\n        },\n        Process: function() {\n            var $elf = this, _fromIdx = this.input.idx, x;\n            x = this.anything();\n            x = this._applyWithArgs(\"trans\", x);\n            this._many(function() {\n                this._applyWithArgs(\"Helped\", \"disableMemoisation\");\n                return this._or(function() {\n                    return x = this._applyWithArgs(\"trans\", x);\n                }, function() {\n                    console.error(\"Failed to reprocess?!\");\n                    return this._pred(!1);\n                });\n            });\n            return x;\n        },\n        AtLeastNQuantification: function() {\n            var $elf = this, _fromIdx = this.input.idx, i, v, xs;\n            return this._or(function() {\n                i = this._applyWithArgs(\"token\", \"MinimumCardinality\");\n                this._pred(1 == i[1][1]);\n                v = this._applyWithArgs(\"token\", \"Variable\");\n                xs = this._many(function() {\n                    return this._apply(\"trans\");\n                });\n                this._apply(\"SetHelped\");\n                return [ \"ExistentialQuantification\", v ].concat(xs);\n            }, function() {\n                return LFValidator._superApplyWithArgs(this, \"AtLeastNQuantification\");\n            });\n        },\n        NumericalRangeQuantification: function() {\n            var $elf = this, _fromIdx = this.input.idx, i, j, v, xs;\n            return this._or(function() {\n                i = this._applyWithArgs(\"token\", \"MinimumCardinality\");\n                j = this._applyWithArgs(\"token\", \"MaximumCardinality\");\n                this._pred(i[1][1] == j[1][1]);\n                v = this._applyWithArgs(\"token\", \"Variable\");\n                xs = this._many(function() {\n                    return this._apply(\"trans\");\n                });\n                this._apply(\"SetHelped\");\n                return [ \"ExactQuantification\", [ \"Cardinality\", i[1] ], v ].concat(xs);\n            }, function() {\n                return LFValidator._superApplyWithArgs(this, \"NumericalRangeQuantification\");\n            });\n        },\n        LogicalNegation: function() {\n            var $elf = this, _fromIdx = this.input.idx, xs;\n            return this._or(function() {\n                this._form(function() {\n                    this._applyWithArgs(\"exactly\", \"LogicalNegation\");\n                    return xs = this._apply(\"trans\");\n                });\n                this._apply(\"SetHelped\");\n                return xs;\n            }, function() {\n                return LFValidator._superApplyWithArgs(this, \"LogicalNegation\");\n            });\n        }\n    });\n    LFOptimiser.initialize = function() {\n        LFValidator.initialize.call(this);\n        this._didSomething = !1;\n    };\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@resin/sbvr-parser/lf-optimiser.js\n// module id = 27\n// module chunks = 0","(function (root, factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine('ometa-core', function () {\n\t\t\treturn (root.OMeta = factory());\n\t\t});\n\t} else if (typeof exports === 'object') {\n\t\t// Node. Does not work with strict CommonJS, but\n\t\t// only CommonJS-like enviroments that support module.exports,\n\t\t// like Node.\n\t\tmodule.exports = factory();\n\t} else {\n\t\t// Browser globals\n\t\troot.OMeta = factory();\n\t}\n}(this, function () {\n\t\"use strict\";\n\t/*\n\t\tnew syntax:\n\t\t\t#foo and `foo\tmatch the string object 'foo' (it's also accepted in my JS)\n\t\t\t'abc'\t\tmatch the string object 'abc'\n\t\t\t'c'\t\t\tmatch the string object 'c'\n\t\t\t``abc''\t\tmatch the sequence of string objects 'a', 'b', 'c'\n\t\t\t\"abc\"\t\ttoken('abc')\n\t\t\t[1 2 3]\t\tmatch the array object [1, 2, 3]\n\t\t\tfoo(bar)\t\tapply rule foo with argument bar\n\t\t\t-> ...\t\tsemantic actions written in JS (see OMetaParser's atomicHostExpr rule)\n\t*/\n\n\t/*\n\tometa M {\n\t\tnumber =\n\t\t\t\tnumber:n digit:d\n\t\t\t\t-> { n * 10 + parseInt(d, 10) }\n\t\t\t|\tdigit:d\n\t\t\t\t-> { parseInt(d, 10) }\n\t}\n\n\tcompiles into...\n\n\tM = objectThatDelegatesTo(OMeta, {\n\t\tnumber: function() {\n\t\t\treturn this._or(function() {\n\t\t\t\t\tvar n = this._apply(\"number\"),\n\t\t\t\t\t\td = this._apply(\"digit\");\n\t\t\t\t\treturn n * 10 + parseInt(d, 10);\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tvar d = this._apply(\"digit\");\n\t\t\t\t\treturn parseInt(d, 10)\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t})\n\tM.matchAll(\"123456789\", \"number\")\n\t*/\n\n\t//\n\t// failure exception\n\t//\n\tvar fail = function fail() {\n\t\treturn fail.error;\n\t};\n\tfail.error = new SyntaxError('match failed');\n\tfail.error._extend = function(child) {\n\t\treturn objectThatDelegatesTo(this, child);\n\t};\n\n\t//\n\t// ### function objectThatDelegatesTo(obj, props)\n\t// #### @obj {Object} parent object\n\t// #### @props {Object} object to merge result with\n\t// Returns object with merged properties of `obj` and `props`\n\t//\n\tfunction objectThatDelegatesTo(obj, props) {\n\t\tvar clone = Object.create(obj || {});\n\n\t\tfor (var key in props) {\n\t\t\tif (props.hasOwnProperty(key)) {\n\t\t\t\tclone[key] = props[key];\n\t\t\t}\n\t\t}\n\n\t\treturn clone;\n\t}\n\n\t//\n\t// ### function isSequenceable(o)\n\t// #### @o {any} object to perform check against\n\t// Returns true if object is sequenceable\n\t//\n\tfunction isSequenceable(o) {\n\t\treturn typeof o === 'string' || Array.isArray(o);\n\t}\n\n\t//\n\t// ### function getTag(o)\n\t// #### @o {Object} input\n\t// unique tags for objects (useful for making \"hash tables\")\n\t//\n\tfunction getTag(o) {\n\t\tif (o == null) {\n\t\t\treturn 'null';\n\t\t}\n\n\t\tswitch (typeof o) {\n\t\t\tcase \"boolean\":\n\t\t\t\treturn o === true ? \"Btrue\" : \"Bfalse\";\n\t\t\tcase \"string\":\n\t\t\t\treturn \"S\" + o;\n\t\t\tcase \"number\":\n\t\t\t\treturn \"N\" + o;\n\t\t\tdefault:\n\t\t\t\tif (!o.hasOwnProperty(\"_id_\")) {\n\t\t\t\t\to._id_ = getTag.id++;\n\t\t\t\t}\n\t\t\t\treturn \"R\" + o._id_;\n\t\t}\n\t}\n\tgetTag.id = 0;\n\n\t//\n\t// ### function isImmutable(o)\n\t// #### @o {any} object to perform check against\n\t// Returns true if object is immutable\n\t//\n\tfunction isImmutable(o) {\n\t\treturn o == null ||\n\t\t\ttypeof o === 'boolean' || typeof o === 'number' ||\n\t\t\ttypeof o === 'string';\n\t}\n\n\t//\n\t// ### function lookup (fn, success, fallback)\n\t// #### @fn {Function} function that may throw\n\t// #### @success {Function} call if function hasn't thrown\n\t// #### @fallback {Function} call if function thrown fail()\n\t//\n\tfunction lookup(fn, success, fallback) {\n\t\tvar value;\n\t\ttry {\n\t\t\tvalue = fn();\n\t\t} catch (e) {\n\t\t\tif (!(e instanceof SyntaxError)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\treturn fallback && fallback(e);\n\t\t}\n\n\t\treturn success && success(value);\n\t}\n\n\tfunction always(fn, after) {\n\t\ttry {\n\t\t\treturn fn();\n\t\t} finally {\n\t\t\tafter();\n\t\t}\n\t}\n\n\tfunction returnTrue() {\n\t\treturn true;\n\t}\n\n\tfunction returnFalse() {\n\t\treturn false;\n\t}\n\n\tfunction throwFail() {\n\t\tthrow fail();\n\t}\n\n\tfunction noop() {}\n\n\t//\n\t// ### function OMInputStream(hd, tl)\n\t// #### @hd {any} Head\n\t// #### @tl {Object} Tail\n\t// Streams and memoization\n\t//\n\tfunction OMInputStream(hd, tl) {\n\t\tthis.memo = {};\n\t\tthis.lst = tl.lst;\n\t\tthis.idx = tl.idx;\n\t\tthis.hd = hd;\n\t\tthis.tl = tl;\n\t}\n\n\t//\n\t// ### function head ()\n\t// Returns stream's `hd` property\n\t//\n\tOMInputStream.prototype.head = function() { return this.hd; };\n\n\t//\n\t// ### function tail ()\n\t// Returns stream's `tl` property\n\t//\n\tOMInputStream.prototype.tail = function() { return this.tl; };\n\n\t//\n\t// ### function type ()\n\t// Returns stream's `lst` property constructor\n\t//\n\tOMInputStream.prototype.type = function() { return this.lst.constructor; };\n\n\t//\n\t// ### function upTo (that)\n\t// #### @that {Object} target object\n\t// Visit all tails and join all met heads and return string or array\n\t// (depending on `.lst` type)\n\t//\n\tOMInputStream.prototype.upTo = function(that) {\n\t\tvar r = [], curr = this;\n\t\twhile (curr !== that) {\n\t\t\tr.push(curr.head());\n\t\t\tcurr = curr.tail();\n\t\t}\n\t\treturn this.type() === String ? r.join('') : r;\n\t};\n\n\t//\n\t// ### function OMInputStreamEnd (lst, idx)\n\t// #### @lst {Array} list\n\t// #### @idx {Number} index\n\t// Internal class\n\t//\n\tfunction OMInputStreamEnd(lst, idx) {\n\t\tthis.memo = {};\n\t\tthis.lst = lst;\n\t\tthis.idx = idx;\n\t}\n\tOMInputStreamEnd.prototype = objectThatDelegatesTo(OMInputStream.prototype);\n\n\t//\n\t// ### function head ()\n\t// Not implemented\n\t//\n\tOMInputStreamEnd.prototype.head = throwFail;\n\n\t//\n\t// ### function tail ()\n\t// Not implemented\n\t//\n\tOMInputStreamEnd.prototype.tail = throwFail;\n\n\t//\n\t// ### function ListOMInputStream (lst, idx)\n\t// #### @lst {Array} list\n\t// #### @idx {Number} index\n\t// Returns self-expanding stream\n\t//\n\tfunction ListOMInputStream(lst, idx) {\n\t\tthis.memo = { };\n\t\tthis.lst = lst;\n\t\tthis.idx = idx;\n\t\tthis.hd = lst[idx];\n\t}\n\tListOMInputStream.prototype = objectThatDelegatesTo(OMInputStream.prototype);\n\n\t//\n\t// ### function head ()\n\t// Returns stream's `hd` property's value\n\t//\n\tListOMInputStream.prototype.head = function() { return this.hd; };\n\n\t//\n\t// ### function tail ()\n\t// Returns or creates stream's tail\n\t//\n\tListOMInputStream.prototype.tail = function() {\n\t\treturn this.tl || (this.tl = makeListOMInputStream(this.lst, this.idx + 1));\n\t};\n\n\t//\n\t// ### function makeListOMInputStream (lst, idx)\n\t// #### @lst {Array} List\n\t// #### @idx {Number} index\n\t// Returns either ListOMInputStream's or OMInputStreamEnd's instance\n\t//\n\tfunction makeListOMInputStream(lst, idx) {\n\t\tif (idx < lst.length) {\n\t\t\treturn new ListOMInputStream(lst, idx);\n\t\t} else {\n\t\t\treturn new OMInputStreamEnd(lst, idx);\n\t\t}\n\t}\n\n\t//\n\t// ### function makeOMInputStreamProxy (target)\n\t// #### @target {any} Delegate's constructor\n\t// Returns object with stream's properties\n\t// (has self-expanding tail)\n\t//\n\tfunction makeOMInputStreamProxy(target) {\n\t\treturn {\n\t\t\tmemo: {},\n\t\t\ttarget: target,\n\t\t\tidx: target.idx,\n\t\t\ttl: undefined,\n\t\t\ttype: function() {\n\t\t\t\treturn String;\n\t\t\t},\n\t\t\tupTo: OMInputStream.prototype.upTo,\n\t\t\thead: function() {\n\t\t\t\treturn target.head();\n\t\t\t},\n\t\t\ttail: function() {\n\t\t\t\treturn this.tl || (this.tl = makeOMInputStreamProxy(target.tail()));\n\t\t\t}\n\t\t};\n\t}\n\n\t//\n\t// ### OMeta\n\t// the OMeta \"class\" and basic functionality\n\t//\n\tvar OMeta;\n\treturn OMeta = {\n\t\t_extend: function(child) {\n\t\t\treturn objectThatDelegatesTo(this, child);\n\t\t},\n\t\t_fail: fail,\n\t\t_enableTokens: function(rulesToTrack) {\n\t\t\tif(rulesToTrack == null) {\n\t\t\t\t// No rules to track were supplied and it wasn't even a reference they could be added to.\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._enableTokens = function() {\n\t\t\t\tthrow 'Can only enable tokens once';\n\t\t\t};\n\t\t\tthis._tokensEnabled = returnTrue;\n\t\t\tthis._addToken = function(startInput, endInput, rule, ruleArgs) {\n\t\t\t\tif(rulesToTrack.indexOf(rule) !== -1 && startInput !== endInput) {\n\t\t\t\t\twhile(startInput.hasOwnProperty('target')) {\n\t\t\t\t\t\tstartInput = startInput.target;\n\t\t\t\t\t}\n\t\t\t\t\twhile(endInput.hasOwnProperty('target')) {\n\t\t\t\t\t\tendInput = endInput.target;\n\t\t\t\t\t}\n\t\t\t\t\tif(!startInput.hasOwnProperty('tokens')) {\n\t\t\t\t\t\tstartInput.tokens = [];\n\t\t\t\t\t}\n\t\t\t\t\tstartInput.tokens.push([endInput.idx, rule, ruleArgs]);\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\t_addToken: noop,\n\t\t_tokensEnabled: returnFalse,\n\t\t\n\t\t_enableBranchTracking: function(rulesToTrack) {\n\t\t\tvar branches = [];\n\t\t\tthis._enableBranchTracking = function() {\n\t\t\t\tthrow 'Can only enable tokens once';\n\t\t\t};\n\t\t\tthis._addBranch = function(rule, ruleArgs) {\n\t\t\t\tif(rulesToTrack.hasOwnProperty(rule)) {\n\t\t\t\t\tvar idx = this.input.idx;\n\t\t\t\t\tif(branches[idx] === undefined) {\n\t\t\t\t\t\tbranches[idx] = {};\n\t\t\t\t\t}\n\t\t\t\t\tbranches[idx][rule] = ruleArgs;\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis._getBranches = function() {\n\t\t\t\treturn branches;\n\t\t\t};\n\t\t},\n\t\t_addBranch: noop,\n\t\t_getBranches: noop,\n\t\t\n\t\t_apply: function(rule) {\n\t\t\tvar memo = this.input.memo,\n\t\t\t\tmemoRec = memo[rule],\n\t\t\t\torigInput = this.input;\n\t\t\tthis._addBranch(rule, []);\n\t\t\tif (memoRec === undefined) {\n\n\t\t\t\tmemo[rule] = false;\n\t\t\t\tmemoRec = {\n\t\t\t\t\tans: this[rule](),\n\t\t\t\t\tnextInput: this.input\n\t\t\t\t};\n\t\t\t\tvar failer = memo[rule];\n\t\t\t\tmemo[rule] = memoRec;\n\n\t\t\t\t// If we tried to match this rule again without progressing the input at all\n\t\t\t\t// then retry matching it now that we have an answer for it, this allows for rules like `A = A 'x' | 'x'`\n\t\t\t\tif (failer === true) {\n\t\t\t\t\tvar self = this,\n\t\t\t\t\t\tsentinel = this.input,\n\t\t\t\t\t\tlookupFunc = function() {\n\t\t\t\t\t\t\tself.input = origInput;\n\t\t\t\t\t\t\tvar ans = self[rule]();\n\n\t\t\t\t\t\t\tif (self.input === sentinel) {\n\t\t\t\t\t\t\t\tthrow fail();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmemoRec.ans = ans;\n\t\t\t\t\t\t\tmemoRec.nextInput = self.input;\n\t\t\t\t\t\t};\n\t\t\t\t\twhile (lookup(lookupFunc, returnTrue, returnFalse));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (typeof memoRec === 'boolean') {\n\t\t\t\tmemo[rule] = true;\n\t\t\t\tthrow fail();\n\t\t\t}\n\t\t\tthis.input = memoRec.nextInput;\n\t\t\tthis._addToken(origInput, this.input, rule, []);\n\t\t\treturn memoRec.ans;\n\t\t},\n\n\t\t// note: _applyWithArgs and _superApplyWithArgs are not memoized, so they can't be left-recursive\n\t\t_applyWithArgs: function(rule) {\n\t\t\tvar origInput = this.input,\n\t\t\t\truleFn = this[rule],\n\t\t\t\truleFnArity = ruleFn.length,\n\t\t\t\truleArgs = new Array(Math.min(arguments.length - 1, ruleFnArity));\n\t\t\tfor(var i = 0; i < ruleArgs.length; ++i) {\n\t\t\t\truleArgs[i] = arguments[i + 1];\n\t\t\t}\n\t\t\tfor (var idx = arguments.length - 1; idx > ruleFnArity; idx--) { // prepend \"extra\" arguments in reverse order\n\t\t\t\tthis._prependInput(arguments[idx]);\n\t\t\t}\n\t\t\tthis._addBranch(rule, ruleArgs);\n\t\t\tvar ans = ruleFnArity === 0 ?\n\t\t\t\truleFn.call(this) :\n\t\t\t\truleFn.apply(this, ruleArgs);\n\t\t\tthis._addToken(origInput, this.input, rule, ruleArgs);\n\t\t\treturn ans;\n\t\t},\n\t\t_superApplyWithArgs: function(recv, rule) {\n\t\t\tvar origInput = recv.input,\n\t\t\t\truleFn = this[rule],\n\t\t\t\truleFnArity = ruleFn.length,\n\t\t\t\truleArgs = new Array(Math.min(arguments.length - 2, ruleFnArity));\n\t\t\tfor(var i = 0; i < ruleArgs.length; ++i) {\n\t\t\t\truleArgs[i] = arguments[i + 2];\n\t\t\t}\n\t\t\tfor (var idx = arguments.length - 1; idx > ruleFnArity + 1; idx--) { // prepend \"extra\" arguments in reverse order\n\t\t\t\trecv._prependInput(arguments[idx]);\n\t\t\t}\n\t\t\tthis._addBranch(rule, ruleArgs);\n\t\t\tvar ans = ruleFnArity === 0 ?\n\t\t\t\truleFn.call(recv) :\n\t\t\t\truleFn.apply(recv, ruleArgs);\n\t\t\tthis._addToken(origInput, recv.input, rule, ruleArgs);\n\t\t\treturn ans;\n\t\t},\n\t\t_prependInput: function(v) {\n\t\t\tthis.input = new OMInputStream(v, this.input);\n\t\t},\n\t\t\n\t\t// Use this if you want to disable prepending to the input (increases performances but requires using `Rule :param1 :param2 =` style parameter binding at all times)\n\t\t_disablePrependingInput: function() {\n\t\t\tthis._applyWithArgs = function(rule) {\n\t\t\t\tvar origInput = this.input,\n\t\t\t\t\truleArgs = new Array(arguments.length - 1);\n\t\t\t\tfor(var i = 0; i < ruleArgs.length; ++i) {\n\t\t\t\t\truleArgs[i] = arguments[i + 1];\n\t\t\t\t}\n\t\t\t\tthis._addBranch(rule, ruleArgs);\n\t\t\t\tvar ans = this[rule].apply(this, ruleArgs);\n\t\t\t\tthis._addToken(origInput, this.input, rule, ruleArgs);\n\t\t\t\treturn ans;\n\t\t\t};\n\t\t\tthis._superApplyWithArgs = function(recv, rule) {\n\t\t\t\tvar origInput = recv.input,\n\t\t\t\t\truleArgs = new Array(arguments.length - 2);\n\t\t\t\tfor(var i = 0; i < ruleArgs.length; ++i) {\n\t\t\t\t\truleArgs[i] = arguments[i + 2];\n\t\t\t\t}\n\t\t\t\tthis._addBranch(rule, ruleArgs);\n\t\t\t\tvar ans = this[rule].apply(recv, ruleArgs);\n\t\t\t\tthis._addToken(origInput, recv.input, rule, ruleArgs);\n\t\t\t\treturn ans;\n\t\t\t};\n\t\t},\n\n\t\t// if you want your grammar (and its subgrammars) to memoize parameterized rules, invoke this method on it:\n\t\tmemoizeParameterizedRules: function() {\n\t\t\tthis._prependInput = function(v) {\n\t\t\t\tvar newInput;\n\t\t\t\tif (isImmutable(v)) {\n\t\t\t\t\tnewInput = this.input[getTag(v)];\n\t\t\t\t\tif (!newInput) {\n\t\t\t\t\t\tnewInput = new OMInputStream(v, this.input);\n\t\t\t\t\t\tthis.input[getTag(v)] = newInput;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnewInput = new OMInputStream(v, this.input);\n\t\t\t\t}\n\t\t\t\tthis.input = newInput;\n\t\t\t};\n\t\t\tthis._applyWithArgs = function(rule) {\n\t\t\t\tvar origInput = this.input,\n\t\t\t\t\truleFn = this[rule],\n\t\t\t\t\truleFnArity = ruleFn.length,\n\t\t\t\t\truleArgs = new Array(Math.min(arguments.length - 1, ruleFnArity));\n\t\t\t\tfor(var i = 0; i < ruleArgs.length; ++i) {\n\t\t\t\t\truleArgs[i] = arguments[i + 1];\n\t\t\t\t}\n\t\t\t\tfor (var idx = arguments.length - 1; idx > ruleFnArity; idx--) { // prepend \"extra\" arguments in reverse order\n\t\t\t\t\tthis._prependInput(arguments[idx]);\n\t\t\t\t}\n\t\t\t\tthis._addBranch(rule, ruleArgs);\n\t\t\t\tvar ans = ruleFnArity === 0 ?\n\t\t\t\t\truleFn.call(this) :\n\t\t\t\t\truleFn.apply(this, ruleArgs);\n\t\t\t\tthis._addToken(origInput, this.input, rule, ruleArgs);\n\t\t\t\treturn ans;\n\t\t\t};\n\t\t},\n\n\t\t_pred: function(b) {\n\t\t\tif (b) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tthrow fail();\n\t\t},\n\t\t_not: function(x) {\n\t\t\tvar self = this,\n\t\t\t\torigInput = this.input,\n\t\t\t\torigAddBranch = this._addBranch,\n\t\t\t\torigAddToken = this._addToken;\n\t\t\treturn always(function() {\n\t\t\t\treturn lookup(function() {\n\t\t\t\t\tx.call(self);\n\t\t\t\t}, throwFail, function() {\n\t\t\t\t\tself.input = origInput;\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\t}, function() {\n\t\t\t\tself._addBranch = origAddBranch;\n\t\t\t\tself._addToken = origAddToken;\n\t\t\t});\n\t\t},\n\t\t_lookahead: function(x) {\n\t\t\tvar origInput = this.input,\n\t\t\t\tr = x.call(this);\n\t\t\tthis.input = origInput;\n\t\t\treturn r;\n\t\t},\n\t\t_or: function() {\n\t\t\tvar self = this,\n\t\t\t\torigInput = this.input,\n\t\t\t\tref = {},\n\t\t\t\tresult = ref,\n\t\t\t\tlookupFunc = function() {\n\t\t\t\t\tself.input = origInput;\n\t\t\t\t\tresult = arg.call(self);\n\t\t\t\t};\n\n\t\t\tfor (var idx = 0; idx < arguments.length; idx++) {\n\t\t\t\tvar arg = arguments[idx];\n\n\t\t\t\tlookup(lookupFunc);\n\n\t\t\t\tif (result !== ref) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthrow fail();\n\t\t},\n\t\t_xor: function(ruleName) {\n\t\t\tvar self = this,\n\t\t\t\torigInput = this.input,\n\t\t\t\tidx = 1,\n\t\t\t\tnewInput,\n\t\t\t\tans,\n\t\t\t\targ,\n\t\t\t\tlookupFunc = function() {\n\t\t\t\t\tself.input = origInput;\n\t\t\t\t\tans = arg.call(self);\n\t\t\t\t\tif (newInput) {\n\t\t\t\t\t\tthrow 'more than one choice matched by \"exclusive-OR\" in ' + ruleName;\n\t\t\t\t\t}\n\t\t\t\t\tnewInput = self.input;\n\t\t\t\t};\n\n\t\t\twhile (idx < arguments.length) {\n\t\t\t\targ = arguments[idx];\n\n\t\t\t\tlookup(lookupFunc);\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tif (newInput) {\n\t\t\t\tthis.input = newInput;\n\t\t\t\treturn ans;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow fail();\n\t\t\t}\n\t\t},\n\t\tdisableXORs: function() {\n\t\t\tthis._xor = function() {\n\t\t\t\tvar self = this,\n\t\t\t\t\torigInput = this.input,\n\t\t\t\t\tref = {},\n\t\t\t\t\tresult = ref,\n\t\t\t\t\tlookupFunc = function() {\n\t\t\t\t\t\tself.input = origInput;\n\t\t\t\t\t\tresult = arg.call(self);\n\t\t\t\t\t};\n\n\t\t\t\tfor (var idx = 1; idx < arguments.length; idx++) {\n\t\t\t\t\tvar arg = arguments[idx];\n\n\t\t\t\t\tlookup(lookupFunc);\n\n\t\t\t\t\tif (result !== ref) {\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthrow fail();\n\t\t\t};\n\t\t},\n\t\t_opt: function(x) {\n\t\t\tvar self = this,\n\t\t\t\torigInput = this.input,\n\t\t\t\tans;\n\n\t\t\tlookup(function() {\n\t\t\t\tans = x.call(self);\n\t\t\t}, noop, function() {\n\t\t\t\tself.input = origInput;\n\t\t\t});\n\n\t\t\treturn ans;\n\t\t},\n\t\t_many: function(x, y) {\n\t\t\tvar self = this,\n\t\t\t\torigInput,\n\t\t\t\tans = y !== undefined ? [y] : [],\n\t\t\t\tresetAndReturnTrue = function () {\n\t\t\t\t\tself.input = origInput;\n\t\t\t\t\treturn true;\n\t\t\t\t},\n\t\t\t\tlookupFunc = function() {\n\t\t\t\t\tans.push(x.call(self));\n\t\t\t\t};\n\n\t\t\twhile (true) {\n\t\t\t\torigInput = this.input;\n\n\t\t\t\tvar result = lookup(lookupFunc, returnFalse, resetAndReturnTrue);\n\n\t\t\t\tif (result) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ans;\n\t\t},\n\t\t_many1: function(x) {\n\t\t\treturn this._many(x, x.call(this));\n\t\t},\n\t\t_form: function(x) {\n\t\t\tvar v = this.anything(),\n\t\t\t\torigInput = this.input;\n\t\t\tthis._pred(isSequenceable(v));\n\t\t\tthis.input = makeListOMInputStream(v, 0);\n\t\t\tx.call(this);\n\t\t\tthis._apply(\"end\");\n\t\t\tthis.input = origInput;\n\t\t\treturn v;\n\t\t},\n\t\t_consumedBy: function(x) {\n\t\t\tvar origInput = this.input;\n\t\t\tx.call(this);\n\t\t\treturn origInput.upTo(this.input);\n\t\t},\n\t\t_idxConsumedBy: function(x) {\n\t\t\tvar origInput = this.input;\n\t\t\tx.call(this);\n\t\t\treturn {fromIdx: origInput.idx, toIdx: this.input.idx};\n\t\t},\n\t\t_interleave: function(/* mode1, part1, mode2, part2 ..., moden, partn */) {\n\t\t\tvar currInput = this.input, ans = [], idx, args = new Array(arguments.length);\n\t\t\tfor(var i = 0; i < args.length; ++i) {\n\t\t\t\targs[i] = arguments[i];\n\t\t\t}\n\t\t\tfor (idx = 0; idx < args.length; idx += 2) {\n\t\t\t\tans[idx / 2] = (args[idx] === \"*\" || args[idx] === \"+\") ? [] : undefined;\n\t\t\t}\n\t\t\twhile (true) {\n\t\t\t\tvar allDone = true;\n\t\t\t\tidx = 0;\n\t\t\t\twhile (idx < args.length) {\n\t\t\t\t\tif (args[idx] !== \"0\") {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tthis.input = currInput;\n\t\t\t\t\t\t\tswitch (args[idx]) {\n\t\t\t\t\t\t\t\tcase \"*\":\n\t\t\t\t\t\t\t\t\tans[idx / 2].push(args[idx + 1].call(this));\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"+\":\n\t\t\t\t\t\t\t\t\tans[idx / 2].push(args[idx + 1].call(this));\n\t\t\t\t\t\t\t\t\targs[idx] = \"*\";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"?\":\n\t\t\t\t\t\t\t\t\tans[idx / 2] = args[idx + 1].call(this);\n\t\t\t\t\t\t\t\t\targs[idx] = \"0\";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"1\":\n\t\t\t\t\t\t\t\t\tans[idx / 2] = args[idx + 1].call(this);\n\t\t\t\t\t\t\t\t\targs[idx] = \"0\";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tthrow \"invalid mode '\" + args[idx] + \"' in OMeta._interleave\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcurrInput = this.input;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch (f) {\n\t\t\t\t\t\t\tif (!(f instanceof SyntaxError)) {\n\t\t\t\t\t\t\t\tthrow f;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// if this (failed) part's mode is \"1\" or \"+\", we're not done yet\n\t\t\t\t\t\t\tallDone = allDone && (args[idx] === \"*\" || args[idx] === \"?\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tidx += 2;\n\t\t\t\t}\n\t\t\t\tif (idx === args.length) {\n\t\t\t\t\tif (allDone) {\n\t\t\t\t\t\treturn ans;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthrow fail();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t_currIdx: function() {\n\t\t\treturn this.input.idx;\n\t\t},\n\n\t\t// some basic rules\n\t\tanything: function() {\n\t\t\tvar r = this.input.head();\n\t\t\tthis.input = this.input.tail();\n\t\t\treturn r;\n\t\t},\n\t\t// This is useful for case insensitive matching, as the `.toLowerCase()` will be memoised.\n\t\tlowerCaseAnything: function() {\n\t\t\treturn this.anything().toLowerCase();\n\t\t},\n\t\tend: function() {\n\t\t\treturn this._not(this.anything);\n\t\t},\n\t\tpos: function() {\n\t\t\treturn this.input.idx;\n\t\t},\n\t\tempty: returnTrue,\n\t\tapply: function(r) {\n\t\t\treturn this._apply(r);\n\t\t},\n\t\tforeign: function(grammar, ruleName) {\n\t\t\tvar ans,\n\t\t\t\tgrammarInstance = grammar._extend({input: makeOMInputStreamProxy(this.input)});\n\t\t\tif(this._tokensEnabled()) {\n\t\t\t\tgrammarInstance._enableTokens();\n\t\t\t}\n\t\t\tans = grammarInstance._apply(ruleName);\n\t\t\t// No need to merge tokens as they will automatically have been placed on the root target.\n\t\t\tthis.input = grammarInstance.input.target;\n\t\t\treturn ans;\n\t\t},\n\n\t\t// some useful \"derived\" rules\n\t\texactly: function(wanted) {\n\t\t\tthis._pred(wanted === this.anything());\n\t\t\treturn wanted;\n\t\t},\n\t\t\"true\": function() {\n\t\t\tvar r = this.anything();\n\t\t\tthis._pred(r === true);\n\t\t\treturn r;\n\t\t},\n\t\t\"false\": function() {\n\t\t\tvar r = this.anything();\n\t\t\tthis._pred(r === false);\n\t\t\treturn r;\n\t\t},\n\t\t\"undefined\": function() {\n\t\t\tvar r = this.anything();\n\t\t\tthis._pred(r === undefined);\n\t\t\treturn r;\n\t\t},\n\t\tnumber: function() {\n\t\t\tvar r = this.anything();\n\t\t\tthis._pred(typeof r === \"number\");\n\t\t\treturn r;\n\t\t},\n\t\tstring: function() {\n\t\t\tvar r = this.anything();\n\t\t\tthis._pred(typeof r === \"string\");\n\t\t\treturn r;\n\t\t},\n\t\t\"char\": function() {\n\t\t\tvar r = this.anything();\n\t\t\tthis._pred(typeof r === \"string\" && r.length === 1);\n\t\t\treturn r;\n\t\t},\n\t\tspace: function() {\n\t\t\tvar r = this._apply(\"char\");\n\t\t\tthis._pred(r.charCodeAt(0) <= 32);\n\t\t\treturn r;\n\t\t},\n\t\tspaces: function() {\n\t\t\treturn this._many(function() {\n\t\t\t\treturn this._apply(\"space\");\n\t\t\t});\n\t\t},\n\t\tdigit: function() {\n\t\t\tvar r = this._apply(\"char\");\n\t\t\tthis._pred(r >= \"0\" && r <= \"9\");\n\t\t\treturn r;\n\t\t},\n\t\tlower: function() {\n\t\t\tvar r = this._apply(\"char\");\n\t\t\tthis._pred(r >= \"a\" && r <= \"z\");\n\t\t\treturn r;\n\t\t},\n\t\tupper: function() {\n\t\t\tvar r = this._apply(\"char\");\n\t\t\tthis._pred(r >= \"A\" && r <= \"Z\");\n\t\t\treturn r;\n\t\t},\n\t\tletter: function() {\n\t\t\tvar r = this._apply(\"char\");\n\t\t\tthis._pred(r >= \"a\" && r <= \"z\" || r >= \"A\" && r <= \"Z\");\n\t\t\treturn r;\n\t\t\t// Note: The following code will potentially make use of more memoisations,\n\t\t\t// however it will have more overhead and it is unlikely that letter/upper/lower calls will be mixed in a memoisable way.\n\t\t\t// return this._or(function() { return this._apply(\"lower\"); },\n\t\t\t\t\t\t\t\t\t\t\t// function() { return this._apply(\"upper\"); });\n\t\t},\n\t\tletterOrDigit: function() {\n\t\t\treturn this._or(function() { return this._apply(\"letter\"); },\n\t\t\t\tfunction() { return this._apply(\"digit\"); });\n\t\t},\n\t\tfirstAndRest: function(first, rest) {\n\t\t\treturn this._many(function() {\n\t\t\t\treturn this._apply(rest);\n\t\t\t}, this._apply(first));\n\t\t},\n\t\tseq: function(xs) {\n\t\t\tfor (var idx = 0; idx < xs.length; idx++) {\n\t\t\t\tthis._applyWithArgs(\"exactly\", xs[idx]);\n\t\t\t}\n\t\t\treturn xs;\n\t\t},\n\t\tnotLast: function(rule) {\n\t\t\tvar r = this._apply(rule);\n\t\t\tthis._lookahead(function() { return this._apply(rule); });\n\t\t\treturn r;\n\t\t},\n\t\tlistOf: function(rule, delim) {\n\t\t\treturn this._or(function() {\n\t\t\t\t\tvar r = this._apply(rule);\n\t\t\t\t\treturn this._many(function() {\n\t\t\t\t\t\t\tthis._applyWithArgs(\"token\", delim);\n\t\t\t\t\t\t\treturn this._apply(rule);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tr\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\t\ttoken: function(cs) {\n\t\t\tthis._apply(\"spaces\");\n\t\t\treturn this._applyWithArgs(\"seq\", cs);\n\t\t},\n\t\tfromTo: function (x, y) {\n\t\t\treturn this._consumedBy(function() {\n\t\t\t\tthis._applyWithArgs(\"seq\", x);\n\t\t\t\tthis._many(function() {\n\t\t\t\t\tthis._not(function() { this._applyWithArgs(\"seq\", y); });\n\t\t\t\t\tthis._apply(\"char\");\n\t\t\t\t});\n\t\t\t\tthis._applyWithArgs(\"seq\", y);\n\t\t\t});\n\t\t},\n\t\thexDigit: function() {\n\t\t\tvar v, c;\n\t\t\tc = this._apply(\"char\");\n\t\t\tv = \"0123456789abcdef\".indexOf(c.toLowerCase());\n\t\t\tif(v === -1) {\n\t\t\t\tthrow this._fail();\n\t\t\t}\n\t\t\treturn v;\n\t\t},\n\t\tescapedChar: function() {\n\t\t\tvar s, c;\n\t\t\tthis._applyWithArgs(\"exactly\", \"\\\\\");\n\t\t\tc = this.anything();\n\t\t\tswitch (c) {\n\t\t\t\tcase \"'\":\treturn \"'\";\n\t\t\t\tcase '\"':\treturn '\"';\n\t\t\t\tcase '\\\\':\treturn '\\\\';\n\t\t\t\tcase 'b':\treturn '\\b';\n\t\t\t\tcase 'f':\treturn '\\f';\n\t\t\t\tcase 'n':\treturn '\\n';\n\t\t\t\tcase 'r':\treturn '\\r';\n\t\t\t\tcase 't':\treturn '\\t';\n\t\t\t\tcase 'v':\treturn '\\v';\n\t\t\t\tcase \"u\":\n\t\t\t\t\ts = this._consumedBy(function() {\n\t\t\t\t\t\tthis._apply(\"hexDigit\");\n\t\t\t\t\t\tthis._apply(\"hexDigit\");\n\t\t\t\t\t\tthis._apply(\"hexDigit\");\n\t\t\t\t\t\tthis._apply(\"hexDigit\");\n\t\t\t\t\t});\n\t\t\t\t\treturn String.fromCharCode(parseInt(s, 16));\n\t\t\t\tcase \"x\":\n\t\t\t\t\ts = this._consumedBy(function() {\n\t\t\t\t\t\tthis._apply(\"hexDigit\");\n\t\t\t\t\t\tthis._apply(\"hexDigit\");\n\t\t\t\t\t});\n\t\t\t\t\treturn String.fromCharCode(parseInt(s, 16));\n\t\t\t\tdefault:\n\t\t\t\t\treturn c;\n\t\t\t}\n\t\t},\n\n\t\tinitialize: noop,\n\t\t// match and matchAll are a grammar's \"public interface\"\n\t\tmatch: function(obj, rule, args, matchFailed) {\n\t\t\treturn this.matchAll([obj], rule, args, matchFailed);\n\t\t},\n\t\tmatchAll: function(listyObj, rule, args, matchFailed) {\n\t\t\tvar m = this.createInstance();\n\t\t\treturn m.matchAll(listyObj, rule, args, matchFailed);\n\t\t},\n\t\tcreateInstance: function() {\n\t\t\tvar m = objectThatDelegatesTo(this);\n\t\t\tm.setInput = function(listyObj) {\n\t\t\t\treturn this.inputHead = this.input = makeListOMInputStream(listyObj, 0);\n\t\t\t};\n\t\t\tm.matchAll = function(listyObj, rule, args, matchFailed) {\n\t\t\t\tif (args == null) {\n\t\t\t\t\targs = [];\n\t\t\t\t}\n\t\t\t\tvar realArgs = [rule];\n\t\t\t\tfor (var idx = 0; idx < args.length; idx++) {\n\t\t\t\t\trealArgs.push(args[idx]);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.setInput(listyObj);\n\t\t\t\treturn lookup(function() {\n\t\t\t\t\treturn realArgs.length === 1 ?\n\t\t\t\t\t\t\tm._apply.call(m, realArgs[0]) :\n\t\t\t\t\t\t\tm._applyWithArgs.apply(m, realArgs);\n\t\t\t\t}, function(value) {\n\t\t\t\t\treturn value;\n\t\t\t\t}, function(err) {\n\t\t\t\t\terr.OMeta = {};\n\t\t\t\t\tvar input = m.input;\n\t\t\t\t\tif (input.idx !== undefined) {\n\t\t\t\t\t\twhile (input.tl !== undefined && input.tl.idx !== undefined) {\n\t\t\t\t\t\t\tinput = input.tl;\n\t\t\t\t\t\t}\n\t\t\t\t\t\terr.OMeta.idx = input.idx - 1;\n\t\t\t\t\t\tif(typeof input.lst == 'string') {\n\t\t\t\t\t\t\tvar source = input.lst,\n\t\t\t\t\t\t\t\ti = 0,\n\t\t\t\t\t\t\t\tchar,\n\t\t\t\t\t\t\t\tstart;\n\t\t\t\t\t\t\terr.OMeta.line = 1;\n\t\t\t\t\t\t\terr.OMeta.col = 0;\n\t\t\t\t\t\t\tfor(; i < err.OMeta.idx; i++) {\n\t\t\t\t\t\t\t\tchar = source.charAt(i);\n\t\t\t\t\t\t\t\terr.OMeta.col++;\n\t\t\t\t\t\t\t\tif(char === '\\n') {\n\t\t\t\t\t\t\t\t\terr.OMeta.line++;\n\t\t\t\t\t\t\t\t\terr.OMeta.col = 0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof matchFailed === 'function') {\n\t\t\t\t\t\treturn matchFailed(m, err);\n\t\t\t\t\t}\n\t\t\t\t\tthrow err;\n\t\t\t\t});\n\t\t\t};\n\t\t\tm.match = function(obj, aRule, args, matchFailed) {\n\t\t\t\treturn this.matchAll([obj], aRule, args, matchFailed);\n\t\t\t};\n\t\t\t// This will reuse memoisations when possible, currently only works for string inputs.\n\t\t\tm.enableReusingMemoizations = function(sideEffectingRules) {\n\t\t\t\tsideEffectingRules = sideEffectingRules || [];\n\t\t\t\tthis.setInput = function(listyObj) {\n\t\t\t\t\tvar input = this.inputHead;\n\t\t\t\t\tif(input && typeof input.lst === 'string' && typeof listyObj === 'string') {\n\t\t\t\t\t\tvar previousText = input.lst;\n\t\t\t\t\t\tfor(var divergencePoint = 0, l = Math.min(listyObj.length, previousText.length); divergencePoint < l; divergencePoint++) {\n\t\t\t\t\t\t\tif(listyObj.charAt(divergencePoint) !== previousText.charAt(divergencePoint)) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// We will have stepped one past the divergence point, so decrement to correct.\n\t\t\t\t\t\tdivergencePoint--;\n\t\t\t\t\t\t// Step back to the start of any white space to minimise issues with keeping no longer correct memoisations\n\t\t\t\t\t\twhile(/\\s/.test(listyObj.charAt(divergencePoint))) {\n\t\t\t\t\t\t\tdivergencePoint--;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(divergencePoint > 0) {\n\t\t\t\t\t\t\t// If we diverge after the first character then fixup the memoisations.\n\t\t\t\t\t\t\tvar cleanInput = function(divergencePoint) {\n\t\t\t\t\t\t\t\tvar secondaryDivergencePoint;\n\t\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\t\tvar memo = input.memo,\n\t\t\t\t\t\t\t\t\t\tmemoTokens = input.tokens,\n\t\t\t\t\t\t\t\t\t\truleNames = Object.keys(memo);\n\t\t\t\t\t\t\t\t\t// For each memoised rule, delete it if it is a boolean (failer - it may now parse)\n\t\t\t\t\t\t\t\t\t// or if it is a rule with side effects.\n\t\t\t\t\t\t\t\t\t// or if it ends on or after the point of divergence (the nextInput is guaranteed to be wrong,\n\t\t\t\t\t\t\t\t\t// even if the rule will still pass - for the ending on the divergence point then it might be a case that with the change the rule will now encompass more)\n\t\t\t\t\t\t\t\t\t// There should be no need to update the memoised new inputs - as we traverse through inputs by idx they should be updated (as they should be references).\n\t\t\t\t\t\t\t\t\tfor(var i = 0; i < ruleNames.length; i++) {\n\t\t\t\t\t\t\t\t\t\tvar ruleName = ruleNames[i];\n\t\t\t\t\t\t\t\t\t\tif(typeof memo[ruleName] === 'boolean'\n\t\t\t\t\t\t\t\t\t\t\t|| sideEffectingRules.indexOf(ruleName) !== -1\n\t\t\t\t\t\t\t\t\t\t\t|| memo[ruleName].nextInput.idx >= divergencePoint) {\n\t\t\t\t\t\t\t\t\t\t\tdelete memo[ruleName];\n\t\t\t\t\t\t\t\t\t\t} else if(input.idx > secondaryDivergencePoint && !OMeta.hasOwnProperty(ruleName)) {\n\t\t\t\t\t\t\t\t\t\t\tsecondaryDivergencePoint = input.idx;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// Remove tokens that end on or after the divergence point, similar to memoisation\n\t\t\t\t\t\t\t\t\tif(memoTokens != null) {\n\t\t\t\t\t\t\t\t\t\tvar duplicateTokens = {};\n\t\t\t\t\t\t\t\t\t\tfor(var i = memoTokens.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\t\t\t\t\tif(memoTokens[i][0] >= divergencePoint || duplicateTokens[memoTokens[i][1]]) {\n\t\t\t\t\t\t\t\t\t\t\t\tmemoTokens.splice(i, 1);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\t\t\tduplicateTokens[memoTokens[i][1]] = true;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tinput.lst = listyObj;\n\t\t\t\t\t\t\t\t} while(input.idx < divergencePoint && (input = input.tail()));\n\t\t\t\t\t\t\t\treturn secondaryDivergencePoint;\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tdivergencePoint = cleanInput(divergencePoint);\n\n\t\t\t\t\t\t\tif(divergencePoint > 0) {\n\t\t\t\t\t\t\t\tcleanInput(divergencePoint);\n\t\t\t\t\t\t\t\tdelete input.tl;\n\t\t\t\t\t\t\t\treturn this.input = this.inputHead;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// If we couldn't reuse memoisations for whatever reason then just create a new input.\n\t\t\t\t\treturn this.input = this.inputHead = makeListOMInputStream(listyObj, 0);\n\t\t\t\t};\n\t\t\t};\n\n\t\t\tm.initialize();\n\t\t\treturn m;\n\t\t}\n\t};\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ometa-js/lib/ometajs/core.js\n// module id = 28\n// module chunks = 0","!function(root, factory) {\n    \"function\" == typeof define && define.amd ? define([ \"require\", \"exports\", \"ometa-core\", \"./sbvr-libs\" ], factory) : \"object\" == typeof exports ? factory(require, exports, require(\"ometa-js\").core) : factory(function(moduleName) {\n        return root[moduleName];\n    }, root, root.OMeta);\n}(this, function(require, exports, OMeta) {\n    var SBVRLibs = require(\"./sbvr-libs\").SBVRLibs, LFValidator = exports.LFValidator = SBVRLibs._extend({\n        trans: function() {\n            var $elf = this, _fromIdx = this.input.idx, a, t;\n            this._form(function() {\n                t = this.anything();\n                return a = this._applyWithArgs(\"apply\", t);\n            });\n            return a;\n        },\n        token: function(x) {\n            var $elf = this, _fromIdx = this.input.idx, a, t;\n            this._form(function() {\n                t = this.anything();\n                this._pred(t == x);\n                return a = this._applyWithArgs(\"apply\", x);\n            });\n            return a;\n        },\n        letters: function() {\n            var $elf = this, _fromIdx = this.input.idx, l;\n            l = this._many1(function() {\n                return this._apply(\"letter\");\n            });\n            this._many(function() {\n                return this._apply(\"space\");\n            });\n            return l.join(\"\");\n        },\n        Number: function() {\n            var $elf = this, _fromIdx = this.input.idx, n;\n            n = this._apply(\"number\");\n            this._pred(!isNaN(n));\n            return [ \"Number\", parseInt(n, 10) ];\n        },\n        Model: function() {\n            var $elf = this, _fromIdx = this.input.idx, x, xs;\n            xs = [];\n            this._many(function() {\n                x = this._or(function() {\n                    return this._applyWithArgs(\"token\", \"Vocabulary\");\n                }, function() {\n                    return this._applyWithArgs(\"token\", \"Term\");\n                }, function() {\n                    return this._applyWithArgs(\"token\", \"Name\");\n                }, function() {\n                    return this._applyWithArgs(\"token\", \"FactType\");\n                }, function() {\n                    return this._applyWithArgs(\"token\", \"Rule\");\n                });\n                return this._opt(function() {\n                    this._pred(null != x);\n                    return xs.push(x);\n                });\n            });\n            return [ \"Model\" ].concat(xs);\n        },\n        FactType: function() {\n            var $elf = this, _fromIdx = this.input.idx, attrs, factType, identifier, verb;\n            factType = [];\n            this._many(function() {\n                identifier = this._or(function() {\n                    return this._applyWithArgs(\"token\", \"Term\");\n                }, function() {\n                    return this._applyWithArgs(\"token\", \"Name\");\n                });\n                verb = this._applyWithArgs(\"token\", \"Verb\");\n                return factType = factType.concat([ identifier, verb ]);\n            });\n            this._opt(function() {\n                identifier = this._or(function() {\n                    return this._applyWithArgs(\"token\", \"Term\");\n                }, function() {\n                    return this._applyWithArgs(\"token\", \"Name\");\n                });\n                return factType.push(identifier);\n            });\n            this._opt(function() {\n                return this._lookahead(function() {\n                    attrs = this.anything();\n                    return this._applyWithArgs(\"AddFactType\", factType, factType);\n                });\n            });\n            return this._applyWithArgs(\"addAttributes\", [ \"FactType\" ].concat(factType));\n        },\n        Vocabulary: function() {\n            var $elf = this, _fromIdx = this.input.idx, vocab;\n            vocab = this.anything();\n            this._applyWithArgs(\"AddVocabulary\", vocab, vocab);\n            return this._applyWithArgs(\"addAttributes\", [ \"Vocabulary\", vocab ]);\n        },\n        Term: function() {\n            var $elf = this, _fromIdx = this.input.idx, data, term, vocab;\n            term = this.anything();\n            vocab = this.anything();\n            return this._or(function() {\n                data = this._or(function() {\n                    return this._applyWithArgs(\"token\", \"Number\");\n                }, function() {\n                    return this._apply(\"Value\");\n                });\n                return [ \"Term\", term, vocab, data ];\n            }, function() {\n                return this._applyWithArgs(\"addAttributes\", [ \"Term\", term, vocab ]);\n            });\n        },\n        Name: function() {\n            var $elf = this, _fromIdx = this.input.idx, name, vocab;\n            name = this.anything();\n            vocab = this.anything();\n            return this._applyWithArgs(\"addAttributes\", [ \"Name\", name, vocab ]);\n        },\n        Verb: function() {\n            var $elf = this, _fromIdx = this.input.idx, negated, v;\n            v = this.anything();\n            negated = this._or(function() {\n                return this._apply(\"true\");\n            }, function() {\n                return this._apply(\"false\");\n            });\n            return [ \"Verb\", v, negated ];\n        },\n        Disjunction: function() {\n            var $elf = this, _fromIdx = this.input.idx, xs;\n            xs = this._many(function() {\n                return this._apply(\"trans\");\n            });\n            return [ \"Disjunction\" ].concat(xs);\n        },\n        Conjunction: function() {\n            var $elf = this, _fromIdx = this.input.idx, xs;\n            xs = this._many(function() {\n                return this._apply(\"trans\");\n            });\n            return [ \"Conjunction\" ].concat(xs);\n        },\n        Rule: function() {\n            var $elf = this, _fromIdx = this.input.idx, t, x;\n            x = this._or(function() {\n                return this._applyWithArgs(\"token\", \"ObligationFormulation\");\n            }, function() {\n                return this._applyWithArgs(\"token\", \"NecessityFormulation\");\n            }, function() {\n                return this._applyWithArgs(\"token\", \"PossibilityFormulation\");\n            }, function() {\n                return this._applyWithArgs(\"token\", \"PermissibilityFormulation\");\n            });\n            t = this._applyWithArgs(\"token\", \"StructuredEnglish\");\n            return [ \"Rule\", x, t ];\n        },\n        addAttributes: function(termOrFactType) {\n            var $elf = this, _fromIdx = this.input.idx, attrName, attrVal, attrs, attrsFound;\n            this._or(function() {\n                return this._apply(\"end\");\n            }, function() {\n                attrsFound = {};\n                attrs = [ \"Attributes\" ];\n                this._form(function() {\n                    this._applyWithArgs(\"exactly\", \"Attributes\");\n                    this._many(function() {\n                        return this._form(function() {\n                            attrName = this.anything();\n                            attrVal = this._applyWithArgs(\"ApplyFirstExisting\", [ \"Attr\" + attrName, \"DefaultAttr\" ], [ termOrFactType ]);\n                            return this._opt(function() {\n                                this._pred(null != attrVal);\n                                attrsFound[attrName] = attrVal;\n                                return attrs.push([ attrName, attrVal ]);\n                            });\n                        });\n                    });\n                    return this._apply(\"end\");\n                });\n                return this._applyWithArgs(\"defaultAttributes\", termOrFactType, attrsFound, attrs);\n            });\n            return termOrFactType;\n        },\n        DefaultAttr: function(tableID) {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this.anything();\n        },\n        AttrConceptType: function(termOrFactType) {\n            var $elf = this, _fromIdx = this.input.idx, conceptType, term, vocab;\n            term = this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Term\");\n                conceptType = this.anything();\n                return vocab = this.anything();\n            });\n            this.vocabularies[this.currentVocabulary].ConceptTypes[termOrFactType] = term;\n            return term;\n        },\n        AttrDefinition: function(termOrFactType) {\n            var $elf = this, _fromIdx = this.input.idx, values;\n            return this._or(function() {\n                return this._form(function() {\n                    this._applyWithArgs(\"exactly\", \"Enum\");\n                    return values = this._many1(function() {\n                        return this.anything();\n                    });\n                });\n            }, function() {\n                return this._apply(\"trans\");\n            });\n        },\n        AttrNecessity: function(termOrFactType) {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._applyWithArgs(\"token\", \"Rule\");\n            }, function() {\n                return this._apply(\"DefaultAttr\");\n            });\n        },\n        AttrSynonymousForm: function(factType) {\n            var $elf = this, _fromIdx = this.input.idx, synForm;\n            synForm = this.anything();\n            this._applyWithArgs(\"AddFactType\", synForm, factType.slice(1));\n            return synForm;\n        },\n        StructuredEnglish: function() {\n            var $elf = this, _fromIdx = this.input.idx, a;\n            a = this.anything();\n            return [ \"StructuredEnglish\", a ];\n        },\n        ObligationFormulation: function() {\n            var $elf = this, _fromIdx = this.input.idx, xs;\n            xs = this._many(function() {\n                return this._apply(\"trans\");\n            });\n            return [ \"ObligationFormulation\" ].concat(xs);\n        },\n        NecessityFormulation: function() {\n            var $elf = this, _fromIdx = this.input.idx, xs;\n            xs = this._many(function() {\n                return this._apply(\"trans\");\n            });\n            return [ \"NecessityFormulation\" ].concat(xs);\n        },\n        PossibilityFormulation: function() {\n            var $elf = this, _fromIdx = this.input.idx, xs;\n            xs = this._many(function() {\n                return this._apply(\"trans\");\n            });\n            return [ \"PossibilityFormulation\" ].concat(xs);\n        },\n        PermissibilityFormulation: function() {\n            var $elf = this, _fromIdx = this.input.idx, xs;\n            xs = this._many(function() {\n                return this._apply(\"trans\");\n            });\n            return [ \"PermissibilityFormulation\" ].concat(xs);\n        },\n        LogicalNegation: function() {\n            var $elf = this, _fromIdx = this.input.idx, xs;\n            xs = this._apply(\"trans\");\n            return [ \"LogicalNegation\" ].concat([ xs ]);\n        },\n        quant: function() {\n            var $elf = this, _fromIdx = this.input.idx, x;\n            return this._or(function() {\n                return this._applyWithArgs(\"token\", \"Disjunction\");\n            }, function() {\n                return this._applyWithArgs(\"token\", \"Conjunction\");\n            }, function() {\n                return this._applyWithArgs(\"token\", \"UniversalQuantification\");\n            }, function() {\n                return this._applyWithArgs(\"token\", \"ExistentialQuantification\");\n            }, function() {\n                return this._applyWithArgs(\"token\", \"ExactQuantification\");\n            }, function() {\n                return this._applyWithArgs(\"token\", \"AtMostNQuantification\");\n            }, function() {\n                return this._applyWithArgs(\"token\", \"AtLeastNQuantification\");\n            }, function() {\n                return this._applyWithArgs(\"token\", \"NumericalRangeQuantification\");\n            }, function() {\n                this._form(function() {\n                    this._applyWithArgs(\"exactly\", \"LogicalNegation\");\n                    return x = this._apply(\"quant\");\n                });\n                return [ \"LogicalNegation\", x ];\n            });\n        },\n        UniversalQuantification: function() {\n            var $elf = this, _fromIdx = this.input.idx, v, xs;\n            v = this._applyWithArgs(\"token\", \"Variable\");\n            xs = this._many(function() {\n                return this._apply(\"trans\");\n            });\n            return [ \"UniversalQuantification\", v ].concat(xs);\n        },\n        ExistentialQuantification: function() {\n            var $elf = this, _fromIdx = this.input.idx, v, xs;\n            v = this._applyWithArgs(\"token\", \"Variable\");\n            xs = this._many(function() {\n                return this._apply(\"trans\");\n            });\n            return [ \"ExistentialQuantification\", v ].concat(xs);\n        },\n        ExactQuantification: function() {\n            var $elf = this, _fromIdx = this.input.idx, i, v, xs;\n            i = this._applyWithArgs(\"token\", \"Cardinality\");\n            v = this._applyWithArgs(\"token\", \"Variable\");\n            xs = this._many(function() {\n                return this._apply(\"trans\");\n            });\n            return [ \"ExactQuantification\", i, v ].concat(xs);\n        },\n        AtMostNQuantification: function() {\n            var $elf = this, _fromIdx = this.input.idx, a, v, xs;\n            a = this._applyWithArgs(\"token\", \"MaximumCardinality\");\n            v = this._applyWithArgs(\"token\", \"Variable\");\n            xs = this._many(function() {\n                return this._apply(\"trans\");\n            });\n            return [ \"AtMostNQuantification\", a, v ].concat(xs);\n        },\n        AtLeastNQuantification: function() {\n            var $elf = this, _fromIdx = this.input.idx, i, v, xs;\n            i = this._applyWithArgs(\"token\", \"MinimumCardinality\");\n            v = this._applyWithArgs(\"token\", \"Variable\");\n            xs = this._many(function() {\n                return this._apply(\"trans\");\n            });\n            return [ \"AtLeastNQuantification\", i, v ].concat(xs);\n        },\n        NumericalRangeQuantification: function() {\n            var $elf = this, _fromIdx = this.input.idx, a, i, v, xs;\n            i = this._applyWithArgs(\"token\", \"MinimumCardinality\");\n            a = this._applyWithArgs(\"token\", \"MaximumCardinality\");\n            v = this._applyWithArgs(\"token\", \"Variable\");\n            xs = this._many(function() {\n                return this._apply(\"trans\");\n            });\n            return [ \"NumericalRangeQuantification\", i, a, v ].concat(xs);\n        },\n        Cardinality: function() {\n            var $elf = this, _fromIdx = this.input.idx, n;\n            n = this._applyWithArgs(\"token\", \"Number\");\n            return [ \"Cardinality\", n ];\n        },\n        MinimumCardinality: function() {\n            var $elf = this, _fromIdx = this.input.idx, n;\n            n = this._applyWithArgs(\"token\", \"Number\");\n            return [ \"MinimumCardinality\", n ];\n        },\n        MaximumCardinality: function() {\n            var $elf = this, _fromIdx = this.input.idx, n;\n            n = this._applyWithArgs(\"token\", \"Number\");\n            return [ \"MaximumCardinality\", n ];\n        },\n        Variable: function() {\n            var $elf = this, _fromIdx = this.input.idx, num, term, w;\n            num = this._applyWithArgs(\"token\", \"Number\");\n            term = this._applyWithArgs(\"token\", \"Term\");\n            w = this._many(function() {\n                return this._or(function() {\n                    return this._applyWithArgs(\"token\", \"AtomicFormulation\");\n                }, function() {\n                    return this._apply(\"quant\");\n                });\n            });\n            return [ \"Variable\", num, term ].concat(w);\n        },\n        Real: function() {\n            var $elf = this, _fromIdx = this.input.idx, num;\n            num = this._apply(\"number\");\n            this._pred(!isNaN(num));\n            return [ \"Real\", num ];\n        },\n        Integer: function() {\n            var $elf = this, _fromIdx = this.input.idx, num;\n            num = this._apply(\"number\");\n            this._pred(!isNaN(num));\n            return [ \"Integer\", num ];\n        },\n        Text: function() {\n            var $elf = this, _fromIdx = this.input.idx, text;\n            text = this.anything();\n            return [ \"Text\", text ];\n        },\n        Value: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._applyWithArgs(\"token\", \"Real\");\n            }, function() {\n                return this._applyWithArgs(\"token\", \"Integer\");\n            }, function() {\n                return this._applyWithArgs(\"token\", \"Text\");\n            });\n        },\n        RoleBinding: function() {\n            var $elf = this, _fromIdx = this.input.idx, bindIdentifier, identifier;\n            identifier = this._or(function() {\n                return this._applyWithArgs(\"token\", \"Term\");\n            }, function() {\n                return this._applyWithArgs(\"token\", \"Name\");\n            });\n            bindIdentifier = this._or(function() {\n                return this._apply(\"number\");\n            }, function() {\n                return this._apply(\"Value\");\n            });\n            return [ \"RoleBinding\", identifier, bindIdentifier ];\n        },\n        AtomicFormulation: function() {\n            var $elf = this, _fromIdx = this.input.idx, b, f;\n            f = this._applyWithArgs(\"token\", \"FactType\");\n            b = this._many(function() {\n                return this._applyWithArgs(\"token\", \"RoleBinding\");\n            });\n            return [ \"AtomicFormulation\", f ].concat(b);\n        }\n    });\n    LFValidator.initialize = function() {\n        SBVRLibs.initialize.call(this);\n    };\n    LFValidator.defaultAttributes = function(termOrVerb, attrsFound, attrs) {\n        termOrVerb.push(attrs);\n    };\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@resin/sbvr-parser/lf-validator.js\n// module id = 29\n// module chunks = 0","!function(root, factory) {\n    \"function\" == typeof define && define.amd ? define([ \"require\", \"exports\", \"ometa-core\", \"lodash\" ], factory) : \"object\" == typeof exports ? factory(require, exports, require(\"ometa-js\").core) : factory(function(moduleName) {\n        return root[moduleName];\n    }, root, root.OMeta);\n}(this, function(require, exports, OMeta) {\n    var _ = require(\"lodash\"), SBVRLibs = exports.SBVRLibs = OMeta._extend({});\n    SBVRLibs.initialize = function() {\n        this.currentVocabulary = \"\";\n        this.vocabularies = {};\n        this.factTypes = {};\n    };\n    SBVRLibs.ApplyFirstExisting = function(rules, ruleArgs) {\n        null == ruleArgs && (ruleArgs = []);\n        for (var i = 0; i < rules.length; i++) if (null != this[rules[i]]) return ruleArgs.length > 0 ? this._applyWithArgs.apply(this, [ rules[i] ].concat(ruleArgs)) : this._apply(rules[i], ruleArgs);\n    };\n    SBVRLibs.IdentifiersEqual = function(a, b) {\n        return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n    };\n    SBVRLibs.FollowConceptType = function(identifier) {\n        var conceptTypes = this.vocabularies[identifier[2]].ConceptTypes;\n        identifier = identifier.slice(0, 3);\n        return !!conceptTypes.hasOwnProperty(identifier) && conceptTypes[identifier];\n    };\n    SBVRLibs.AddVocabulary = function(vocabulary, baseSynonym) {\n        this.currentVocabulary = baseSynonym;\n        this.vocabularies.hasOwnProperty(baseSynonym) || (this.vocabularies[baseSynonym] = {\n            Term: {},\n            Name: {},\n            IdentifierChildren: {},\n            ConceptTypes: {}\n        });\n        this.vocabularies.hasOwnProperty(vocabulary) || (this.vocabularies[vocabulary] = this.vocabularies[baseSynonym]);\n    };\n    var formatFactType = function(factType) {\n        return _.map(factType, 1).join(\" \");\n    };\n    SBVRLibs.AddFactType = function(factType, realFactType) {\n        for (var mappedFactType = [], matchingFactTypes = _.isEqual(factType, realFactType), i = 0; i < realFactType.length; i++) {\n            var realFactTypePart = realFactType[i];\n            mappedFactType[i] = realFactTypePart.slice(0, 3);\n            if (\"Verb\" !== realFactTypePart[0]) if (matchingFactTypes) mappedFactType[i][3] = i; else {\n                for (var mappingFound = !1, j = 0; j < factType.length; j++) {\n                    var factTypePart = factType[j];\n                    if (\"Verb\" !== factTypePart[0] && this.IdentifiersEqual(realFactTypePart, factTypePart) && realFactTypePart.length === factTypePart.length && (realFactTypePart.length < 4 || realFactTypePart[3][1] === factTypePart[3][1])) {\n                        if (mappingFound) throw new Error('Ambiguous use of fact type \"' + formatFactType(factType) + '\", please add explicit numbering');\n                        mappingFound = !0;\n                        mappedFactType[i][3] = j;\n                    }\n                }\n                if (!mappingFound) throw new Error('Unable to map identifiers for \"' + formatFactType(factType) + '\", please add explicit numbering');\n            }\n        }\n        this._traverseFactType(factType, mappedFactType);\n        if (3 === factType.length && (\"has\" === factType[1][1] || \"is of\" === factType[1][1])) {\n            mappedFactType = _.clone(mappedFactType);\n            mappedFactType[0] = mappedFactType[0].slice(0, 3).concat(2);\n            mappedFactType[2] = mappedFactType[2].slice(0, 3).concat(0);\n            \"has\" === factType[1][1] ? this._traverseFactType([ factType[2], [ \"Verb\", \"is of\", factType[1][2] ], factType[0] ], mappedFactType) : \"is of\" === factType[1][1] && this._traverseFactType([ factType[2], [ \"Verb\", \"has\", factType[1][2] ], factType[0] ], mappedFactType);\n        }\n    };\n    SBVRLibs._traverseFactType = function(factType, create) {\n        var $elf = this, traverseRecurse = function(currentFactTypePart, remainingFactType, currentLevel) {\n            if (null == currentFactTypePart) {\n                create && (currentLevel.__valid = create);\n                return currentLevel;\n            }\n            var finalLevel, finalLevels = {};\n            switch (currentFactTypePart[0]) {\n              case \"Verb\":\n                currentFactTypePart = currentFactTypePart.slice(0, 2);\n                break;\n\n              default:\n                currentFactTypePart = currentFactTypePart.slice(0, 3);\n            }\n            if (currentLevel.hasOwnProperty(currentFactTypePart) || create && (currentLevel[currentFactTypePart] = {})) {\n                finalLevel = traverseRecurse(remainingFactType[0], remainingFactType.slice(1), currentLevel[currentFactTypePart]);\n                finalLevel !== !1 && _.assign(finalLevels, finalLevel);\n            }\n            if (!create && (\"Term\" === currentFactTypePart[0] || \"Name\" === currentFactTypePart[0])) for (;(currentFactTypePart = $elf.FollowConceptType(currentFactTypePart)) !== !1; ) if (currentLevel.hasOwnProperty(currentFactTypePart)) {\n                finalLevel = traverseRecurse(remainingFactType[0], remainingFactType.slice(1), currentLevel[currentFactTypePart]);\n                finalLevel !== !1 && _.assign(finalLevels, finalLevel);\n            }\n            return _.isEmpty(finalLevels) !== !0 && finalLevels;\n        };\n        return traverseRecurse(factType[0], factType.slice(1), this.factTypes);\n    };\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@resin/sbvr-parser/sbvr-libs.js\n// module id = 30\n// module chunks = 0","!function(root, factory) {\n    \"function\" == typeof define && define.amd ? define([ \"require\", \"exports\", \"ometa-core\", \"@resin/sbvr-parser/sbvr-libs\", \"lodash\" ], factory) : \"object\" == typeof exports ? factory(require, exports, require(\"ometa-js\").core) : factory(function(moduleName) {\n        return root[moduleName];\n    }, root, root.OMeta);\n}(this, function(require, exports, OMeta) {\n    var SBVRLibs = require(\"@resin/sbvr-parser/sbvr-libs\").SBVRLibs, _ = require(\"lodash\"), SBVRCompilerLibs = exports.SBVRCompilerLibs = SBVRLibs._extend({});\n    SBVRCompilerLibs.initialize = function() {\n        SBVRLibs.initialize.call(this);\n    };\n    SBVRCompilerLibs.TYPE_VOCAB = \"Type\";\n    SBVRCompilerLibs.IsPrimitive = function(term) {\n        return term[2] == this.TYPE_VOCAB ? term[1] : (term = this.FollowConceptType(term)) !== !1 && term[2] == this.TYPE_VOCAB ? term[1] : !1;\n    };\n    SBVRCompilerLibs.IsChild = function(child, parent) {\n        do if (this.IdentifiersEqual(child, parent)) return !0; while ((child = this.FollowConceptType(child)) !== !1);\n        return !1;\n    };\n    SBVRCompilerLibs.MappedFactType = function(factType) {\n        var traverseInfo = this._traverseFactType(factType), mappedFactType = [];\n        if (traverseInfo === !1 || !traverseInfo.hasOwnProperty(\"__valid\")) return !1;\n        for (var i = 0; i < traverseInfo.__valid.length; i++) mappedFactType[i] = traverseInfo.__valid[i].slice();\n        mappedFactType[1][2] = factType[1][2];\n        return mappedFactType;\n    };\n    SBVRCompilerLibs.UnmappedFactType = function(factType) {\n        var mappedFactType = this.MappedFactType(factType);\n        if (mappedFactType === !1) return !1;\n        for (var i = 0; i < mappedFactType.length; i++) mappedFactType[i] = mappedFactType[i].slice(0, 3);\n        return mappedFactType;\n    };\n    SBVRCompilerLibs.GetResourceName = function(termOrFactType) {\n        var i = 0, resource = [];\n        if (_.isString(termOrFactType)) return termOrFactType.replace(new RegExp(\" \", \"g\"), \"_\");\n        for (void 0; i < termOrFactType.length; i++) resource.push(termOrFactType[i][1].replace(new RegExp(\" \", \"g\"), \"_\"));\n        return resource.join(\"-\");\n    };\n    SBVRCompilerLibs.GetTable = function(termNameOrFactType) {\n        return this.tables[this.GetResourceName(termNameOrFactType)];\n    };\n    SBVRCompilerLibs.GetTableID = function(termOrFactType) {\n        switch (termOrFactType[0]) {\n          case \"Term\":\n          case \"Name\":\n            return termOrFactType[1];\n\n          default:\n            return termOrFactType;\n        }\n    };\n    SBVRCompilerLibs.GetTableField = function(table, fieldName) {\n        var fieldID = this.GetTableFieldID(table, fieldName);\n        return fieldID === !1 ? !1 : table.fields[fieldID];\n    };\n    SBVRCompilerLibs.GetTableFieldID = function(table, fieldName) {\n        for (var tableFields = table.fields, i = 0; i < tableFields.length; i++) if (tableFields[i].fieldName == fieldName) return i;\n        return !1;\n    };\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@resin/lf-to-abstract-sql/sbvr-compiler-libs.js\n// module id = 31\n// module chunks = 0","!function(root, factory) {\n    \"function\" == typeof define && define.amd ? define([ \"require\", \"exports\", \"ometa-core\", \"./sbvr-compiler-libs\", \"lodash\" ], factory) : \"object\" == typeof exports ? factory(require, exports, require(\"ometa-js\").core) : factory(function(moduleName) {\n        return root[moduleName];\n    }, root, root.OMeta);\n}(this, function(require, exports, OMeta) {\n    var SBVRCompilerLibs = require(\"./sbvr-compiler-libs\").SBVRCompilerLibs, _ = require(\"lodash\"), LF2AbstractSQL = exports.LF2AbstractSQL = SBVRCompilerLibs._extend({\n        Number: function() {\n            var $elf = this, _fromIdx = this.input.idx, num;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Number\");\n                num = this._apply(\"number\");\n                return this._pred(!isNaN(num));\n            });\n            return num;\n        },\n        Real: function() {\n            var $elf = this, _fromIdx = this.input.idx, num;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Real\");\n                num = this._apply(\"number\");\n                return this._pred(!isNaN(num));\n            });\n            return [ \"Real\", num ];\n        },\n        Integer: function() {\n            var $elf = this, _fromIdx = this.input.idx, num;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Integer\");\n                num = this._apply(\"number\");\n                return this._pred(!isNaN(num));\n            });\n            return [ \"Integer\", num ];\n        },\n        Text: function() {\n            var $elf = this, _fromIdx = this.input.idx, text;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Text\");\n                return text = this.anything();\n            });\n            return [ \"Text\", text ];\n        },\n        Value: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._apply(\"Real\");\n            }, function() {\n                return this._apply(\"Integer\");\n            }, function() {\n                return this._apply(\"Text\");\n            });\n        },\n        Identifier: function() {\n            var $elf = this, _fromIdx = this.input.idx, name, num, type, vocab;\n            num = \"\";\n            this._form(function() {\n                type = function() {\n                    switch (this.anything()) {\n                      case \"Name\":\n                        return \"Name\";\n\n                      case \"Term\":\n                        return \"Term\";\n\n                      default:\n                        throw this._fail();\n                    }\n                }.call(this);\n                name = this.anything();\n                vocab = this.anything();\n                return this._opt(function() {\n                    return this._or(function() {\n                        return num = this._apply(\"Number\");\n                    }, function() {\n                        return this._apply(\"Value\");\n                    });\n                });\n            });\n            return {\n                type: type,\n                name: name,\n                num: num,\n                vocab: vocab\n            };\n        },\n        IdentifierName: function() {\n            var $elf = this, _fromIdx = this.input.idx, identifierName, resourceName;\n            identifierName = this.anything();\n            resourceName = this._applyWithArgs(\"GetResourceName\", identifierName);\n            this._or(function() {\n                return this._pred(!this.tables.hasOwnProperty(resourceName));\n            }, function() {\n                console.error(\"We already have an identifier with a name of: \" + identifierName);\n                return this._pred(!1);\n            });\n            this.identifiers[identifierName] = identifierName;\n            this.tables[resourceName] = this.CreateTable();\n            return identifierName;\n        },\n        Attributes: function(termOrFactType) {\n            var $elf = this, _fromIdx = this.input.idx, attributeName, attributeValue;\n            return this._or(function() {\n                return this._apply(\"end\");\n            }, function() {\n                return this._form(function() {\n                    this._applyWithArgs(\"exactly\", \"Attributes\");\n                    return this._many(function() {\n                        return this._form(function() {\n                            attributeName = this.anything();\n                            return attributeValue = this._applyWithArgs(\"ApplyFirstExisting\", [ \"Attr\" + attributeName, \"DefaultAttr\" ], [ termOrFactType ]);\n                        });\n                    });\n                });\n            });\n        },\n        DefaultAttr: function(termOrFactType) {\n            var $elf = this, _fromIdx = this.input.idx, anything;\n            return anything = this.anything();\n        },\n        AttrConceptType: function(termOrFactType) {\n            var $elf = this, _fromIdx = this.input.idx, conceptTable, conceptType, dataType, fieldID, identifierTable, primitive, references, term, vocab;\n            term = this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Term\");\n                conceptType = this.anything();\n                return vocab = this.anything();\n            });\n            (function() {\n                this.termForms[termOrFactType] && (termOrFactType = this.termForms[termOrFactType]);\n            }).call(this);\n            this.vocabularies[termOrFactType[2]].ConceptTypes[termOrFactType] = term;\n            primitive = this._applyWithArgs(\"IsPrimitive\", term);\n            conceptTable = this._applyWithArgs(\"GetTable\", conceptType);\n            identifierTable = this._applyWithArgs(\"GetTable\", termOrFactType[1]);\n            this._or(function() {\n                this._pred(primitive !== !1 && conceptType === primitive);\n                dataType = primitive;\n                this._opt(function() {\n                    this._pred(identifierTable.hasOwnProperty(\"referenceScheme\"));\n                    fieldID = this._applyWithArgs(\"GetTableFieldID\", identifierTable, identifierTable.referenceScheme);\n                    this._pred(fieldID !== !1);\n                    return identifierTable.fields.splice(fieldID, 1);\n                });\n                return identifierTable.referenceScheme = conceptType;\n            }, function() {\n                dataType = \"ConceptType\";\n                return references = {\n                    tableName: conceptTable.name,\n                    fieldName: conceptTable.idField\n                };\n            });\n            return this._applyWithArgs(\"AddTableField\", identifierTable, conceptType, dataType, !0, null, references);\n        },\n        AttrDatabaseIDField: function(termOrFactType) {\n            var $elf = this, _fromIdx = this.input.idx, fieldID, idField, table, tableID;\n            idField = this.anything();\n            tableID = this._applyWithArgs(\"GetTableID\", termOrFactType);\n            table = this._applyWithArgs(\"GetTable\", tableID);\n            return this._or(function() {\n                return this._pred(_.isString(table));\n            }, function() {\n                fieldID = this._applyWithArgs(\"AddTableField\", table, idField, \"Serial\", !0, \"PRIMARY KEY\");\n                this._opt(function() {\n                    this._pred(fieldID !== !1);\n                    return table.fields[fieldID].index = \"PRIMARY KEY\";\n                });\n                return table.idField = idField;\n            });\n        },\n        AttrReferenceScheme: function(termOrFactType) {\n            var $elf = this, _fromIdx = this.input.idx, fieldID, referenceScheme, table, tableID;\n            referenceScheme = this.anything();\n            referenceScheme = this._or(function() {\n                this._pred(_.isArray(referenceScheme));\n                return referenceScheme[1];\n            }, function() {\n                return referenceScheme;\n            });\n            tableID = this._applyWithArgs(\"GetTableID\", termOrFactType);\n            table = this._applyWithArgs(\"GetTable\", tableID);\n            return this._or(function() {\n                return this._pred(_.isString(table));\n            }, function() {\n                this._opt(function() {\n                    this._pred(table.hasOwnProperty(\"referenceScheme\"));\n                    fieldID = this._applyWithArgs(\"GetTableFieldID\", table, table.referenceScheme);\n                    this._pred(fieldID !== !1);\n                    return table.fields[fieldID].fieldName = referenceScheme;\n                });\n                return table.referenceScheme = referenceScheme;\n            });\n        },\n        AttrDatabaseTableName: function(termOrFactType) {\n            var $elf = this, _fromIdx = this.input.idx, table, tableID, tableName;\n            tableName = this.anything();\n            tableID = this._applyWithArgs(\"GetTableID\", termOrFactType);\n            table = this._applyWithArgs(\"GetTable\", tableID);\n            return this._or(function() {\n                return this._pred(_.isString(table));\n            }, function() {\n                return table.name = tableName;\n            });\n        },\n        AttrDatabasePrimitive: function(termOrFactType) {\n            var $elf = this, _fromIdx = this.input.idx, attrVal, tableID;\n            attrVal = this.anything();\n            tableID = this._applyWithArgs(\"GetTableID\", termOrFactType);\n            return this.GetTable(tableID).primitive = attrVal;\n        },\n        AttrDatabaseAttribute: function(factType) {\n            var $elf = this, _fromIdx = this.input.idx, attrVal, attributeName, attributeTable, baseTable, fieldID;\n            attrVal = this.anything();\n            return this._opt(function() {\n                this._pred(attrVal);\n                this.attributes[factType] = attrVal;\n                this.tables[this.GetResourceName(factType)] = \"Attribute\";\n                baseTable = this._applyWithArgs(\"GetTable\", factType[0][1]);\n                attributeName = factType[2][1];\n                attributeTable = this._applyWithArgs(\"GetTable\", attributeName);\n                fieldID = this._applyWithArgs(\"GetTableFieldID\", baseTable, attributeName);\n                return baseTable.fields[fieldID].dataType = attributeTable.primitive;\n            });\n        },\n        AttrForeignKey: function(factType) {\n            var $elf = this, _fromIdx = this.input.idx, baseTable, fieldID, fkName, fkTable, required;\n            required = this.anything();\n            baseTable = this._applyWithArgs(\"GetTable\", factType[0][1]);\n            fkName = factType[2][1];\n            fkTable = this._applyWithArgs(\"GetTable\", fkName);\n            this._opt(function() {\n                this._pred(baseTable.idField == fkName);\n                fieldID = this._applyWithArgs(\"GetTableFieldID\", baseTable, fkName);\n                this._pred(fieldID !== !1);\n                return baseTable.fields.splice(fieldID, 1);\n            });\n            fieldID = this._applyWithArgs(\"AddTableField\", baseTable, fkName, \"ForeignKey\", required, null, {\n                tableName: fkTable.name,\n                fieldName: fkTable.idField\n            });\n            this._opt(function() {\n                this._pred(fieldID);\n                return baseTable.fields[fieldID].required = required;\n            });\n            return this.tables[this.GetResourceName(factType)] = \"ForeignKey\";\n        },\n        AttrUnique: function(factType) {\n            var $elf = this, _fromIdx = this.input.idx, baseTable, fieldID, required, uniqueField;\n            required = this.anything();\n            baseTable = this._applyWithArgs(\"GetTable\", factType);\n            this._opt(function() {\n                this._pred(\"Attribute\" === baseTable || \"ForeignKey\" === baseTable);\n                return baseTable = this._applyWithArgs(\"GetTable\", factType[0][1]);\n            });\n            uniqueField = factType[2][1];\n            fieldID = this._applyWithArgs(\"GetTableFieldID\", baseTable, uniqueField);\n            this._pred(fieldID !== !1);\n            return baseTable.fields[fieldID].index = \"UNIQUE\";\n        },\n        AttrSynonymousForm: function(factType) {\n            var $elf = this, _fromIdx = this.input.idx, synForm;\n            synForm = this.anything();\n            return this._applyWithArgs(\"AddFactType\", synForm, factType);\n        },\n        AttrTermForm: function(factType) {\n            var $elf = this, _fromIdx = this.input.idx, term;\n            term = this.anything();\n            return function() {\n                this.termForms[factType] = term;\n                this.identifiers[term[1]] = factType;\n                this.tables[this.GetResourceName(term[1])] = this.GetTable(factType);\n                for (var i = 0; i < factType.length; i++) if (\"Term\" === factType[i][0]) {\n                    var extraFactType = [ term, [ \"Verb\", \"has\", !1 ], factType[i] ];\n                    this.AddFactType(extraFactType, extraFactType);\n                    this.tables[this.GetResourceName(extraFactType)] = this.GetTable(factType[i][1]).primitive ? \"Attribute\" : \"ForeignKey\";\n                }\n            }.call(this);\n        },\n        AttrNecessity: function(tableID) {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._apply(\"Rule\");\n        },\n        FactType: function() {\n            var $elf = this, _fromIdx = this.input.idx, attributes, factType, factTypePart, fieldName, fkTable, identifier, identifierTable, linkTable, negated, resourceName, uniqueFields, verb;\n            this._lookahead(function() {\n                return factType = this._many1(function() {\n                    factTypePart = this.anything();\n                    this._lookahead(function() {\n                        return attributes = this.anything();\n                    });\n                    return factTypePart;\n                });\n            });\n            this._applyWithArgs(\"AddFactType\", factType, factType);\n            this._or(function() {\n                this._pred(this.IsPrimitive(factType[0]));\n                return this._many1(function() {\n                    factTypePart = this.anything();\n                    return this._lookahead(function() {\n                        return attributes = this.anything();\n                    });\n                });\n            }, function() {\n                resourceName = this._applyWithArgs(\"GetResourceName\", factType);\n                return this._or(function() {\n                    this._pred(2 == factType.length);\n                    this._many1(function() {\n                        factTypePart = this.anything();\n                        return this._lookahead(function() {\n                            return attributes = this.anything();\n                        });\n                    });\n                    identifierTable = this._applyWithArgs(\"GetTable\", factType[0][1]);\n                    this._applyWithArgs(\"AddTableField\", identifierTable, factType[1][1], \"Boolean\", !0);\n                    return this.tables[resourceName] = \"BooleanAttribute\";\n                }, function() {\n                    linkTable = this.tables[resourceName] = this.CreateTable();\n                    uniqueFields = [];\n                    this._many1(function() {\n                        return this._or(function() {\n                            identifier = this._apply(\"Identifier\");\n                            fieldName = identifier.name + identifier.num;\n                            uniqueFields.push(fieldName);\n                            fkTable = this._applyWithArgs(\"GetTable\", identifier.name);\n                            return this._or(function() {\n                                this._pred(fkTable.primitive);\n                                return this._applyWithArgs(\"AddTableField\", linkTable, fieldName, fkTable.primitive, !0);\n                            }, function() {\n                                return this._applyWithArgs(\"AddTableField\", linkTable, fieldName, \"ForeignKey\", !0, null, {\n                                    tableName: fkTable.name,\n                                    fieldName: fkTable.idField\n                                });\n                            });\n                        }, function() {\n                            return this._form(function() {\n                                this._applyWithArgs(\"exactly\", \"Verb\");\n                                verb = this.anything();\n                                return negated = this.anything();\n                            });\n                        });\n                    });\n                    return linkTable.indexes.push({\n                        type: \"UNIQUE\",\n                        fields: uniqueFields\n                    });\n                });\n            });\n            return factType;\n        },\n        Cardinality: function() {\n            var $elf = this, _fromIdx = this.input.idx, cardinality;\n            this._form(function() {\n                (function() {\n                    switch (this.anything()) {\n                      case \"Cardinality\":\n                        return \"Cardinality\";\n\n                      case \"MaximumCardinality\":\n                        return \"MaximumCardinality\";\n\n                      case \"MinimumCardinality\":\n                        return \"MinimumCardinality\";\n\n                      default:\n                        throw this._fail();\n                    }\n                }).call(this);\n                return cardinality = this._apply(\"Number\");\n            });\n            return cardinality;\n        },\n        Variable: function() {\n            var $elf = this, _fromIdx = this.input.idx, bind, identifier, num, query, selectBody, varNum, whereBody, whereBody2;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Variable\");\n                num = this._apply(\"Number\");\n                identifier = this._apply(\"Identifier\");\n                query = this._or(function() {\n                    bind = this.bindAttributes[num];\n                    this._pred(bind);\n                    selectBody = _.clone(bind.binding);\n                    return [ \"SelectQuery\", [ \"Select\", [ selectBody ] ] ];\n                }, function() {\n                    varNum = \".\" + num;\n                    query = [ \"SelectQuery\", [ \"Select\", [] ], [ \"From\", [ this.GetTable(identifier.name).name, identifier.name + varNum ] ] ];\n                    this._applyWithArgs(\"CreateConceptTypesResolver\", query, identifier, varNum);\n                    return query;\n                });\n                return this._opt(function() {\n                    whereBody = this._apply(\"RulePart\");\n                    return this._opt(function() {\n                        this._pred(query);\n                        return this._applyWithArgs(\"AddWhereClause\", query, whereBody);\n                    });\n                });\n            });\n            this._opt(function() {\n                whereBody2 = this._apply(\"RulePart\");\n                return this._applyWithArgs(\"AddWhereClause\", query, whereBody2);\n            });\n            return this._or(function() {\n                this._pred(!_.some(query, {\n                    0: \"From\"\n                }));\n                this._opt(function() {\n                    whereBody = _.find(query, {\n                        0: \"Where\"\n                    });\n                    this._pred(whereBody);\n                    return selectBody.whereBody = whereBody[1];\n                });\n                return selectBody;\n            }, function() {\n                return query;\n            });\n        },\n        RoleBindings: function(actualFactType) {\n            var $elf = this, _fromIdx = this.input.idx, binds;\n            binds = [];\n            (function() {\n                for (var i = 0; i < actualFactType.length; i += 2) {\n                    var j = _.findIndex(actualFactType, {\n                        3: i\n                    });\n                    binds[j / 2] = this.RoleBinding(actualFactType[j][1]);\n                }\n            }).call(this);\n            this._apply(\"end\");\n            return binds;\n        },\n        RoleBinding: function(baseTermName) {\n            var $elf = this, _fromIdx = this.input.idx, baseBind, binding, conceptTypeResolver, data, identifier, number;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"RoleBinding\");\n                identifier = this._apply(\"Identifier\");\n                return this._or(function() {\n                    return number = this._apply(\"number\");\n                }, function() {\n                    return data = this._apply(\"Value\");\n                });\n            });\n            baseBind = this.bindAttributes[number];\n            binding = this._or(function() {\n                this._pred(data);\n                return data;\n            }, function() {\n                this._pred(baseBind);\n                return baseBind.binding;\n            }, function() {\n                conceptTypeResolver = this.conceptTypeResolvers[identifier.name + \".\" + number];\n                this._or(function() {\n                    return this._pred(!conceptTypeResolver);\n                }, function() {\n                    return conceptTypeResolver(baseTermName);\n                });\n                return [ \"ReferencedField\", baseTermName + \".\" + number, identifier.name ];\n            });\n            return {\n                identifier: identifier,\n                number: number,\n                data: data,\n                binding: binding\n            };\n        },\n        NativeProperty: function(actualFactType) {\n            var $elf = this, _fromIdx = this.input.idx, binds, primitive, property, verb;\n            this._pred(this.IsPrimitive(actualFactType[0]));\n            this._pred(this.IsPrimitive(actualFactType[2]));\n            binds = this._applyWithArgs(\"RoleBindings\", actualFactType);\n            this._pred(2 == binds.length);\n            primitive = actualFactType[0][1];\n            verb = actualFactType[1][1];\n            property = actualFactType[2][1];\n            this._pred(this.sbvrTypes[primitive] && this.sbvrTypes[primitive].nativeProperties && this.sbvrTypes[primitive].nativeProperties[verb] && this.sbvrTypes[primitive].nativeProperties[verb][property]);\n            return [ \"Equals\", [ \"Boolean\", !0 ], [ \"Boolean\", !0 ] ];\n        },\n        NativeFactType: function(actualFactType) {\n            var $elf = this, _fromIdx = this.input.idx, binds, primitive, secondPrimitive, verb;\n            this._pred(3 == actualFactType.length);\n            this._pred(this.IsPrimitive(actualFactType[0]));\n            this._pred(this.IsPrimitive(actualFactType[2]));\n            return this._or(function() {\n                binds = this._applyWithArgs(\"RoleBindings\", actualFactType);\n                this._pred(2 == binds.length);\n                primitive = actualFactType[0][1];\n                verb = actualFactType[1][1];\n                secondPrimitive = actualFactType[2][1];\n                this._pred(this.sbvrTypes[primitive] && this.sbvrTypes[primitive].nativeFactTypes && this.sbvrTypes[primitive].nativeFactTypes[secondPrimitive] && this.sbvrTypes[primitive].nativeFactTypes[secondPrimitive][verb]);\n                return this.sbvrTypes[primitive].nativeFactTypes[secondPrimitive][verb](binds[0].binding, binds[1].binding);\n            }, function() {\n                return this._applyWithArgs(\"foreign\", ___NativeFactTypeMatchingFailed___, \"die\");\n            });\n        },\n        LinkTableAlias: function() {\n            var $elf = this, _fromIdx = this.input.idx, bindNumbers, binding, factType, identifierName, identifierType, mapping, partAlias, verb, vocab;\n            this._form(function() {\n                return bindNumbers = this._many1(function() {\n                    binding = this.anything();\n                    return binding.number;\n                });\n            });\n            this._form(function() {\n                return factType = this._many(function() {\n                    this._form(function() {\n                        return partAlias = this._or(function() {\n                            switch (this.anything()) {\n                              case \"Verb\":\n                                verb = this.anything();\n                                this.anything();\n                                return verb;\n\n                              default:\n                                throw this._fail();\n                            }\n                        }, function() {\n                            identifierType = this.anything();\n                            identifierName = this.anything();\n                            vocab = this.anything();\n                            mapping = this._opt(function() {\n                                return this.anything();\n                            });\n                            return identifierName + \".\" + bindNumbers.shift();\n                        });\n                    });\n                    return partAlias;\n                });\n            });\n            return factType.join(\"-\");\n        },\n        LinkTable: function(actualFactType) {\n            var $elf = this, _fromIdx = this.input.idx, binds, query, tableAlias;\n            binds = this._applyWithArgs(\"RoleBindings\", actualFactType);\n            tableAlias = this._applyWithArgs(\"LinkTableAlias\", binds, actualFactType);\n            query = [ \"SelectQuery\", [ \"Select\", [] ], [ \"From\", [ this.GetTable(actualFactType).name, tableAlias ] ] ];\n            _.each(binds, function(bind, i) {\n                var baseIdentifierName = actualFactType[2 * i][1], table = $elf.GetTable(baseIdentifierName);\n                table.primitive || $elf.AddWhereClause(query, [ \"Equals\", [ \"ReferencedField\", tableAlias, baseIdentifierName ], [ \"ReferencedField\", bind.binding[1], table.idField ] ]);\n            });\n            return [ \"Exists\", query ];\n        },\n        ForeignKey: function(actualFactType) {\n            var $elf = this, _fromIdx = this.input.idx, baseToIdentifier, bindFrom, bindTo, binds, tableTo;\n            this._pred(\"ForeignKey\" == this.GetTable(actualFactType));\n            this._or(function() {\n                binds = this._applyWithArgs(\"RoleBindings\", actualFactType);\n                this._pred(2 == binds.length);\n                bindFrom = binds[0];\n                bindTo = binds[1];\n                baseToIdentifier = actualFactType[2];\n                return tableTo = this._applyWithArgs(\"GetTable\", baseToIdentifier[1]);\n            }, function() {\n                return this._applyWithArgs(\"foreign\", ___ForeignKeyMatchingFailed___, \"die\");\n            });\n            return [ \"Equals\", [ \"ReferencedField\", bindFrom.binding[1], baseToIdentifier[1] ], [ \"ReferencedField\", bindTo.binding[1], tableTo.idField ] ];\n        },\n        BooleanAttribute: function(actualFactType) {\n            var $elf = this, _fromIdx = this.input.idx, attributeName, binds, negated;\n            this._pred(\"BooleanAttribute\" == this.GetTable(actualFactType));\n            this._or(function() {\n                binds = this._applyWithArgs(\"RoleBindings\", actualFactType);\n                this._pred(1 == binds.length);\n                attributeName = actualFactType[1][1];\n                return negated = actualFactType[1][2];\n            }, function() {\n                console.error(this.input);\n                return this._applyWithArgs(\"foreign\", ___BooleanAttributeMatchingFailed___, \"die\");\n            });\n            return [ \"Equals\", [ \"ReferencedField\", binds[0].binding[1], attributeName ], [ \"Boolean\", !negated ] ];\n        },\n        Attribute: function(actualFactType) {\n            var $elf = this, _fromIdx = this.input.idx, bind, bindAttr, bindReal, binds;\n            this._pred(\"Attribute\" == this.GetTable(actualFactType));\n            this._or(function() {\n                binds = this._applyWithArgs(\"RoleBindings\", actualFactType);\n                this._pred(2 == binds.length);\n                bindReal = binds[0];\n                return bindAttr = binds[1];\n            }, function() {\n                return this._applyWithArgs(\"foreign\", ___AttributeMatchingFailed___, \"die\");\n            });\n            return this._or(function() {\n                bind = this.bindAttributes[bindAttr.number];\n                bindAttr.binding = [ \"ReferencedField\", bindReal.binding[1], bind.binding[2] ];\n                this._pred(!_.isEqual(bindAttr.binding, bind.binding));\n                return [ \"Equals\", bindAttr.binding, bind.binding ];\n            }, function() {\n                return [ \"Equals\", [ \"Boolean\", !0 ], [ \"Boolean\", !0 ] ];\n            });\n        },\n        AtomicFormulation: function() {\n            var $elf = this, _fromIdx = this.input.idx, actualFactType, factType, whereClause;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"AtomicFormulation\");\n                this._form(function() {\n                    this._applyWithArgs(\"exactly\", \"FactType\");\n                    return factType = this._many1(function() {\n                        return this.anything();\n                    });\n                });\n                actualFactType = this._applyWithArgs(\"MappedFactType\", factType);\n                return whereClause = this._or(function() {\n                    return this._applyWithArgs(\"NativeProperty\", actualFactType);\n                }, function() {\n                    return this._applyWithArgs(\"NativeFactType\", actualFactType);\n                }, function() {\n                    return this._applyWithArgs(\"ForeignKey\", actualFactType);\n                }, function() {\n                    return this._applyWithArgs(\"BooleanAttribute\", actualFactType);\n                }, function() {\n                    return this._applyWithArgs(\"Attribute\", actualFactType);\n                }, function() {\n                    return this._applyWithArgs(\"LinkTable\", actualFactType);\n                });\n            });\n            return whereClause;\n        },\n        AtLeast: function() {\n            var $elf = this, _fromIdx = this.input.idx, minCard, variable, where;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"AtLeastNQuantification\");\n                minCard = this._apply(\"Cardinality\");\n                return variable = this._apply(\"Variable\");\n            });\n            where = this._or(function() {\n                this._pred(0 == minCard);\n                return [ \"Boolean\", !0 ];\n            }, function() {\n                this._pred(\"SelectQuery\" == variable[0] && 0 == variable[1][1].length);\n                variable[1][1].push([ \"Count\", \"*\" ]);\n                return [ \"GreaterThanOrEqual\", variable, [ \"Number\", minCard ] ];\n            }, function() {\n                this._pred(minCard > 1);\n                return [ \"Boolean\", !1 ];\n            }, function() {\n                return [ \"Exists\", variable ];\n            });\n            return this._or(function() {\n                this._pred(variable.whereBody);\n                return [ \"And\", variable.whereBody, where ];\n            }, function() {\n                return where;\n            });\n        },\n        Exactly: function() {\n            var $elf = this, _fromIdx = this.input.idx, card, exists, variable, where;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"ExactQuantification\");\n                card = this._apply(\"Cardinality\");\n                return variable = this._apply(\"Variable\");\n            });\n            where = this._or(function() {\n                this._pred(\"SelectQuery\" == variable[0] && 0 == variable[1][1].length);\n                variable[1][1].push([ \"Count\", \"*\" ]);\n                return [ \"Equals\", variable, [ \"Number\", card ] ];\n            }, function() {\n                exists = [ \"Exists\", variable ];\n                return this._or(function() {\n                    this._pred(0 == card);\n                    return [ \"Not\", exists ];\n                }, function() {\n                    this._pred(1 == card);\n                    return exists;\n                }, function() {\n                    return [ \"Boolean\", !1 ];\n                });\n            });\n            return this._or(function() {\n                this._pred(variable.whereBody);\n                return [ \"And\", variable.whereBody, where ];\n            }, function() {\n                return where;\n            });\n        },\n        Range: function() {\n            var $elf = this, _fromIdx = this.input.idx, exists, maxCard, minCard, variable, where;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"NumericalRangeQuantification\");\n                minCard = this._apply(\"Cardinality\");\n                maxCard = this._apply(\"Cardinality\");\n                return variable = this._apply(\"Variable\");\n            });\n            where = this._or(function() {\n                this._pred(\"SelectQuery\" == variable[0] && 0 == variable[1][1].length);\n                variable[1][1].push([ \"Count\", \"*\" ]);\n                return [ \"Between\", variable, [ \"Number\", minCard ], [ \"Number\", maxCard ] ];\n            }, function() {\n                exists = [ \"Exists\", variable ];\n                return this._or(function() {\n                    this._pred(0 == minCard);\n                    return this._or(function() {\n                        this._pred(0 == maxCard);\n                        return [ \"Not\", exists ];\n                    }, function() {\n                        return [ \"Boolean\", !0 ];\n                    });\n                }, function() {\n                    this._pred(1 == minCard);\n                    return exists;\n                }, function() {\n                    return [ \"Boolean\", !1 ];\n                });\n            });\n            return this._or(function() {\n                this._pred(variable.whereBody);\n                return [ \"And\", variable.whereBody, where ];\n            }, function() {\n                return where;\n            });\n        },\n        Disjunction: function() {\n            var $elf = this, _fromIdx = this.input.idx, first, rest;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Disjunction\");\n                first = this._apply(\"RulePart\");\n                return rest = this._many1(function() {\n                    return this._apply(\"RulePart\");\n                });\n            });\n            return [ \"Or\", first ].concat(rest);\n        },\n        Conjunction: function() {\n            var $elf = this, _fromIdx = this.input.idx, first, rest;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Conjunction\");\n                first = this._apply(\"RulePart\");\n                return rest = this._many1(function() {\n                    return this._apply(\"RulePart\");\n                });\n            });\n            return [ \"And\", first ].concat(rest);\n        },\n        Exists: function() {\n            var $elf = this, _fromIdx = this.input.idx, variable, where;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"ExistentialQuantification\");\n                return variable = this._apply(\"Variable\");\n            });\n            where = [ \"Exists\", variable ];\n            return this._or(function() {\n                this._pred(variable.whereBody);\n                return [ \"And\", variable.whereBody, where ];\n            }, function() {\n                return where;\n            });\n        },\n        Negation: function() {\n            var $elf = this, _fromIdx = this.input.idx, whereBody;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"LogicalNegation\");\n                return whereBody = this._apply(\"RulePart\");\n            });\n            return [ \"Not\", whereBody ];\n        },\n        RulePart: function() {\n            var $elf = this, _fromIdx = this.input.idx, x;\n            return this._or(function() {\n                return this._apply(\"AtomicFormulation\");\n            }, function() {\n                return this._apply(\"AtLeast\");\n            }, function() {\n                return this._apply(\"Exactly\");\n            }, function() {\n                return this._apply(\"Exists\");\n            }, function() {\n                return this._apply(\"Negation\");\n            }, function() {\n                return this._apply(\"Range\");\n            }, function() {\n                return this._apply(\"Disjunction\");\n            }, function() {\n                return this._apply(\"Conjunction\");\n            }, function() {\n                x = this.anything();\n                console.error(\"Hit unhandled operation:\", x);\n                return this._pred(!1);\n            });\n        },\n        RuleBody: function() {\n            var $elf = this, _fromIdx = this.input.idx, rule;\n            this._form(function() {\n                (function() {\n                    switch (this.anything()) {\n                      case \"NecessityFormulation\":\n                        return \"NecessityFormulation\";\n\n                      case \"ObligationFormulation\":\n                        return \"ObligationFormulation\";\n\n                      case \"PermissibilityFormulation\":\n                        return \"PermissibilityFormulation\";\n\n                      case \"PossibilityFormulation\":\n                        return \"PossibilityFormulation\";\n\n                      default:\n                        throw this._fail();\n                    }\n                }).call(this);\n                return rule = this._apply(\"RulePart\");\n            });\n            return rule;\n        },\n        ReconstructIdentifier: function(bindIdentifier) {\n            var $elf = this, _fromIdx = this.input.idx;\n            return [ bindIdentifier.type, bindIdentifier.name, bindIdentifier.vocab ];\n        },\n        ProcessAtomicFormulations: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            this.bindAttributes = [];\n            this.bindAttributeDepth = [];\n            this.nonPrimitiveExists = !1;\n            this._lookahead(function() {\n                return this._applyWithArgs(\"ProcessAtomicFormulationsRecurse\", 0, \"ProcessAtomicFormulationsAttributes\");\n            });\n            this._lookahead(function() {\n                return this._applyWithArgs(\"ProcessAtomicFormulationsRecurse\", 0, \"ProcessAtomicFormulationsNonPrimitive\");\n            });\n            return this._lookahead(function() {\n                return this._applyWithArgs(\"ProcessAtomicFormulationsRecurse\", 0, \"ProcessAtomicFormulationsNativeProperties\");\n            });\n        },\n        ProcessAtomicFormulationsRecurse: function(depth, rule) {\n            var $elf = this, _fromIdx = this.input.idx, actualFactType, factType, unmappedFactType;\n            return this._many(function() {\n                return this._or(function() {\n                    this._pred(_.isArray(this.input.hd));\n                    return this._form(function() {\n                        return this._or(function() {\n                            switch (this.anything()) {\n                              case \"AtomicFormulation\":\n                                this._form(function() {\n                                    this._applyWithArgs(\"exactly\", \"FactType\");\n                                    return factType = this._many1(function() {\n                                        return this.anything();\n                                    });\n                                });\n                                unmappedFactType = this._applyWithArgs(\"UnmappedFactType\", factType);\n                                actualFactType = this._applyWithArgs(\"MappedFactType\", factType);\n                                return this._applyWithArgs(rule, depth, unmappedFactType, actualFactType);\n\n                              default:\n                                throw this._fail();\n                            }\n                        }, function() {\n                            return this._applyWithArgs(\"ProcessAtomicFormulationsRecurse\", depth + 1, rule);\n                        });\n                    });\n                }, function() {\n                    return this.anything();\n                });\n            });\n        },\n        ProcessAtomicFormulationsNonPrimitive: function(depth, unmappedFactType, actualFactType) {\n            var $elf = this, _fromIdx = this.input.idx, binds;\n            binds = this._applyWithArgs(\"RoleBindings\", actualFactType);\n            return function() {\n                for (var i = 0; i < binds.length; i++) if (!this.IsPrimitive(this.ReconstructIdentifier(binds[i].identifier))) {\n                    this.nonPrimitiveExists = !0;\n                    break;\n                }\n            }.call(this);\n        },\n        ProcessAtomicFormulationsAttributes: function(depth, unmappedFactType, actualFactType) {\n            var $elf = this, _fromIdx = this.input.idx, attrBinding, baseBinding, binds, tableAlias;\n            binds = this._applyWithArgs(\"RoleBindings\", actualFactType);\n            return this._or(function() {\n                this._pred(this.attributes.hasOwnProperty(unmappedFactType) && this.attributes[unmappedFactType]);\n                baseBinding = _.find(binds, function(bind) {\n                    return !$elf.IsPrimitive($elf.ReconstructIdentifier(bind.identifier));\n                });\n                attrBinding = _.find(binds, function(bind) {\n                    return $elf.IsPrimitive($elf.ReconstructIdentifier(bind.identifier)) && (null == $elf.bindAttributeDepth[bind.number] || $elf.bindAttributeDepth[bind.number] > depth);\n                });\n                return function() {\n                    this.bindAttributeDepth[attrBinding.number] = depth;\n                    return this.bindAttributes[attrBinding.number] = {\n                        binding: [ \"ReferencedField\", baseBinding.binding[1], attrBinding.identifier.name ]\n                    };\n                }.call(this);\n            }, function() {\n                this._pred(_.some(binds, function(bind) {\n                    return !$elf.IsPrimitive($elf.ReconstructIdentifier(bind.identifier));\n                }));\n                tableAlias = this._applyWithArgs(\"LinkTableAlias\", binds, actualFactType);\n                return function() {\n                    for (var i = 0; i < actualFactType.length; i += 2) {\n                        var table = this.GetTable(actualFactType[i][1]), bindNumber = binds[i / 2].number;\n                        if (table && table.primitive && (null == this.bindAttributeDepth[bindNumber] || this.bindAttributeDepth[bindNumber] > depth)) {\n                            this.bindAttributeDepth[bindNumber] = depth;\n                            this.bindAttributes[bindNumber] = {\n                                binding: [ \"ReferencedField\", tableAlias, actualFactType[i][1] ]\n                            };\n                        }\n                    }\n                }.call(this);\n            });\n        },\n        ProcessAtomicFormulationsNativeProperties: function(depth, unmappedFactType, actualFactType) {\n            var $elf = this, _fromIdx = this.input.idx, binding, binds, primitive, property, verb;\n            binds = this._applyWithArgs(\"RoleBindings\", actualFactType);\n            this._pred(_.every(binds, function(bind) {\n                return $elf.IsPrimitive($elf.ReconstructIdentifier(bind.identifier));\n            }));\n            this._pred(2 == binds.length);\n            primitive = actualFactType[0][1];\n            verb = actualFactType[1][1];\n            property = actualFactType[2][1];\n            this._pred(this.sbvrTypes[primitive] && this.sbvrTypes[primitive].nativeProperties && this.sbvrTypes[primitive].nativeProperties[verb] && this.sbvrTypes[primitive].nativeProperties[verb][property]);\n            binding = this.sbvrTypes[primitive].nativeProperties[verb][property](binds[0].binding, binds[1].binding);\n            return function() {\n                this.bindAttributeDepth[binds[1].number] = depth;\n                return this.bindAttributes[binds[1].number] = {\n                    binding: binding\n                };\n            }.call(this);\n        },\n        Rule: function() {\n            var $elf = this, _fromIdx = this.input.idx, ruleBody, ruleText;\n            this._apply(\"ResetRuleState\");\n            return this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Rule\");\n                this._lookahead(function() {\n                    return this._apply(\"ProcessAtomicFormulations\");\n                });\n                ruleBody = this._or(function() {\n                    this._pred(this.nonPrimitiveExists);\n                    return this._apply(\"RuleBody\");\n                }, function() {\n                    return this.anything();\n                });\n                this._form(function() {\n                    this._applyWithArgs(\"exactly\", \"StructuredEnglish\");\n                    return ruleText = this.anything();\n                });\n                return this._opt(function() {\n                    this._pred(this.nonPrimitiveExists);\n                    return this.rules.push([ \"Rule\", [ \"Body\", ruleBody ], [ \"StructuredEnglish\", ruleText ] ]);\n                });\n            });\n        },\n        Process: function() {\n            var $elf = this, _fromIdx = this.input.idx, attributes, factType, identifierName, tables, type, vocab;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Model\");\n                return this._many1(function() {\n                    return this._or(function() {\n                        return this._form(function() {\n                            return this._or(function() {\n                                switch (this.anything()) {\n                                  case \"Vocabulary\":\n                                    vocab = this.anything();\n                                    return attributes = this.anything();\n\n                                  default:\n                                    throw this._fail();\n                                }\n                            }, function() {\n                                type = function() {\n                                    switch (this.anything()) {\n                                      case \"Name\":\n                                        return \"Name\";\n\n                                      case \"Term\":\n                                        return \"Term\";\n\n                                      default:\n                                        throw this._fail();\n                                    }\n                                }.call(this);\n                                identifierName = this._apply(\"IdentifierName\");\n                                vocab = this.anything();\n                                this._applyWithArgs(\"AddVocabulary\", vocab);\n                                return this._applyWithArgs(\"Attributes\", [ type, identifierName, vocab ]);\n                            }, function() {\n                                switch (this.anything()) {\n                                  case \"FactType\":\n                                    factType = this._apply(\"FactType\");\n                                    return this._applyWithArgs(\"Attributes\", factType);\n\n                                  default:\n                                    throw this._fail();\n                                }\n                            });\n                        });\n                    }, function() {\n                        return this._apply(\"Rule\");\n                    });\n                });\n            });\n            tables = {};\n            return {\n                tables: this.tables,\n                rules: this.rules\n            };\n        },\n        CreateTable: function() {\n            var $elf = this, _fromIdx = this.input.idx, table;\n            table = {\n                fields: [],\n                primitive: !1,\n                name: null,\n                indexes: [],\n                idField: null\n            };\n            this._applyWithArgs(\"AddTableField\", table, \"created at\", \"Date Time\", !0, null, null, \"CURRENT_TIMESTAMP\");\n            return table;\n        }\n    });\n    LF2AbstractSQL.AddTableField = function(table, fieldName, dataType, required, index, references, defaultValue) {\n        void 0 === references && (references = null);\n        void 0 === index && (index = null);\n        void 0 === defaultValue && (defaultValue = null);\n        var fieldID = this.GetTableFieldID(table, fieldName);\n        fieldID === !1 && table.fields.push({\n            dataType: dataType,\n            fieldName: fieldName,\n            required: required,\n            index: index,\n            references: references,\n            defaultValue: defaultValue\n        });\n        return fieldID;\n    };\n    LF2AbstractSQL.AddWhereClause = function(query, whereBody) {\n        if (!_.isEqual(whereBody, [ \"Equals\", [ \"Boolean\", !0 ], [ \"Boolean\", !0 ] ])) if (\"Exists\" != whereBody[0] || \"SelectQuery\" != whereBody[1][0] && \"InsertQuery\" != whereBody[1][0] && \"UpdateQuery\" != whereBody[1][0] && \"UpsertQuery\" != whereBody[1][0]) {\n            for (var i = 1; i < query.length; i++) if (\"Where\" == query[i][0]) {\n                query[i][1] = [ \"And\", query[i][1], whereBody ];\n                return;\n            }\n            query.push([ \"Where\", whereBody ]);\n        } else {\n            whereBody = whereBody[1].slice(1);\n            for (var i = 0; i < whereBody.length; i++) \"From\" == whereBody[i][0] && query.push(whereBody[i]);\n            for (var i = 0; i < whereBody.length; i++) \"Where\" == whereBody[i][0] && this.AddWhereClause(query, whereBody[i][1]);\n        }\n    };\n    LF2AbstractSQL.CreateConceptTypesResolver = function(query, identifier, varNum) {\n        var parentAlias = identifier.name + varNum, concept = this.ReconstructIdentifier(identifier), conceptTypeResolutions, $elf = this;\n        if (this.conceptTypeResolvers[parentAlias]) throw new Error('Concept type resolver already added for \"' + parentAlias + '\"!');\n        conceptTypeResolutions = [ identifier.name ];\n        this.conceptTypeResolvers[parentAlias] = function(untilConcept) {\n            var conceptTable, conceptAlias;\n            parentAlias = _.last(conceptTypeResolutions);\n            if (parentAlias !== !0 && !_.includes(conceptTypeResolutions, untilConcept)) {\n                for (;(concept = this.FollowConceptType(concept)) !== !1; ) {\n                    conceptAlias = concept[1] + varNum;\n                    conceptTable = this.GetTable(concept[1]);\n                    if (conceptTable.primitive !== !1) break;\n                    query.push([ \"From\", [ conceptTable.name, conceptAlias ] ]);\n                    this.AddWhereClause(query, [ \"Equals\", [ \"ReferencedField\", parentAlias, concept[1] ], [ \"ReferencedField\", conceptAlias, conceptTable.idField ] ]);\n                    parentAlias = conceptAlias;\n                    conceptTypeResolutions.push(parentAlias);\n                    if (null != untilConcept && !this.IdentifiersEqual(concept, untilConcept)) break;\n                }\n                concept === !1 && conceptTypeResolutions.push(!0);\n            }\n        }.bind(this);\n    };\n    LF2AbstractSQL.initialize = function() {\n        this.reset();\n        this.sbvrTypes = {};\n        this.termForms = {};\n    };\n    LF2AbstractSQL.reset = function() {\n        SBVRCompilerLibs.initialize.call(this);\n        this.tables = {};\n        this.identifiers = {};\n        this.rules = [];\n        this.attributes = {};\n        this.bindAttributes = [];\n        this.bindAttributeDepth = [];\n        this.ResetRuleState();\n    };\n    LF2AbstractSQL.ResetRuleState = function() {\n        this.conceptTypeResolvers = {};\n    };\n    LF2AbstractSQL.addTypes = function(types) {\n        _.assign(this.sbvrTypes, types);\n    };\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@resin/lf-to-abstract-sql/lf-to-abstract-sql.js\n// module id = 32\n// module chunks = 0","// Generated by CoffeeScript 1.10.0\n(function() {\n  var hasProp = {}.hasOwnProperty;\n\n  (function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      return define(['@resin/abstract-sql-compiler/AbstractSQLOptimiser', '@resin/abstract-sql-compiler/AbstractSQLRules2SQL', '@resin/sbvr-types', 'lodash', 'bluebird'], factory);\n    } else if (typeof exports === 'object') {\n      return module.exports = factory(require('./AbstractSQLOptimiser'), require('./AbstractSQLRules2SQL'), require('@resin/sbvr-types'), require('lodash'), require('bluebird'));\n    } else {\n      return root.AbstractSQLCompiler = factory(root.AbstractSQLOptimiser, root.AbstractSQLRules2SQL, root.sbvrTypes, root._, root.Promise);\n    }\n  })(this, function(arg, arg1, sbvrTypes, _, Promise) {\n    var AbstractSQLOptimiser, AbstractSQLRules2SQL, compileRule, compileSchema, dataTypeGen, dataTypeValidate, validateTypes;\n    AbstractSQLOptimiser = arg.AbstractSQLOptimiser;\n    AbstractSQLRules2SQL = arg1.AbstractSQLRules2SQL;\n    validateTypes = _.mapValues(sbvrTypes, function(arg2) {\n      var validate;\n      validate = arg2.validate;\n      if (validate != null) {\n        return Promise.promisify(validate);\n      }\n    });\n    dataTypeValidate = function(value, field, callback) {\n      var dataType, required;\n      dataType = field.dataType, required = field.required;\n      if (value === null) {\n        if (required) {\n          return Promise.rejected('cannot be null');\n        } else {\n          return Promise.fulfilled(null);\n        }\n      } else if (validateTypes[dataType] != null) {\n        return validateTypes[dataType](value, required);\n      } else {\n        return Promise.rejected('is an unsupported type: ' + dataType);\n      }\n    };\n    dataTypeGen = function(engine, dataType, necessity, index, defaultValue) {\n      var dbType, ref, ref1;\n      if (index == null) {\n        index = '';\n      }\n      necessity = necessity ? ' NOT NULL' : ' NULL';\n      defaultValue = defaultValue ? \" DEFAULT \" + defaultValue : void 0;\n      if (index !== '') {\n        index = ' ' + index;\n      }\n      dbType = (ref = sbvrTypes[dataType]) != null ? (ref1 = ref.types) != null ? ref1[engine] : void 0 : void 0;\n      if (dbType != null) {\n        if (_.isFunction(dbType)) {\n          return dbType(necessity, index);\n        }\n        if (defaultValue == null) {\n          defaultValue = '';\n        }\n        return dbType + defaultValue + necessity + index;\n      } else {\n        throw new Error(\"Unknown data type '\" + dataType + \"' for engine: \" + engine);\n      }\n    };\n    compileRule = (function() {\n      var compiler, optimiser;\n      optimiser = AbstractSQLOptimiser.createInstance();\n      compiler = AbstractSQLRules2SQL.createInstance();\n      return function(abstractSQL, engine) {\n        abstractSQL = optimiser.match(abstractSQL, 'Process');\n        compiler.engine = engine;\n        return compiler.match(abstractSQL, 'Process');\n      };\n    })();\n    compileSchema = function(sqlModel, engine, ifNotExists) {\n      var createSQL, createSchemaStatements, dataType, defaultValue, dependency, depends, dropSQL, dropSchemaStatements, e, error, fieldName, foreignKey, foreignKeys, hasDependants, i, index, j, k, l, len, len1, len2, len3, len4, len5, m, n, ref, ref1, ref2, ref3, ref4, ref5, references, required, resourceName, rule, ruleBody, ruleSE, ruleSQL, ruleStatements, schemaDependencyMap, schemaInfo, table, tableName, tableNames, unsolvedDependency;\n      ifNotExists = ifNotExists ? 'IF NOT EXISTS ' : '';\n      hasDependants = {};\n      schemaDependencyMap = {};\n      ref = sqlModel.tables;\n      for (resourceName in ref) {\n        if (!hasProp.call(ref, resourceName)) continue;\n        table = ref[resourceName];\n        if (!(!_.isString(table))) {\n          continue;\n        }\n        foreignKeys = [];\n        depends = [];\n        dropSQL = 'DROP TABLE \"' + table.name + '\";';\n        createSQL = 'CREATE TABLE ' + ifNotExists + '\"' + table.name + '\" (\\n\\t';\n        ref1 = table.fields;\n        for (i = 0, len = ref1.length; i < len; i++) {\n          ref2 = ref1[i], dataType = ref2.dataType, fieldName = ref2.fieldName, required = ref2.required, index = ref2.index, references = ref2.references, defaultValue = ref2.defaultValue;\n          createSQL += '\"' + fieldName + '\" ' + dataTypeGen(engine, dataType, required, index, defaultValue) + '\\n,\\t';\n          if (dataType === 'ForeignKey' || dataType === 'ConceptType') {\n            foreignKeys.push({\n              fieldName: fieldName,\n              references: references\n            });\n            depends.push(references.tableName);\n            hasDependants[references.tableName] = true;\n          }\n        }\n        for (j = 0, len1 = foreignKeys.length; j < len1; j++) {\n          foreignKey = foreignKeys[j];\n          createSQL += 'FOREIGN KEY (\"' + foreignKey.fieldName + '\") REFERENCES \"' + foreignKey.references.tableName + '\" (\"' + foreignKey.references.fieldName + '\")' + '\\n,\\t';\n        }\n        ref3 = table.indexes;\n        for (k = 0, len2 = ref3.length; k < len2; k++) {\n          index = ref3[k];\n          createSQL += index.type + '(\"' + index.fields.join('\", \"') + '\")\\n,\\t';\n        }\n        createSQL = createSQL.slice(0, -2) + ');';\n        schemaDependencyMap[table.name] = {\n          resourceName: resourceName,\n          primitive: table.primitive,\n          createSQL: createSQL,\n          dropSQL: dropSQL,\n          depends: depends\n        };\n      }\n      createSchemaStatements = [];\n      dropSchemaStatements = [];\n      tableNames = [];\n      while (tableNames.length !== (tableNames = Object.keys(schemaDependencyMap)).length && tableNames.length > 0) {\n        for (l = 0, len3 = tableNames.length; l < len3; l++) {\n          tableName = tableNames[l];\n          schemaInfo = schemaDependencyMap[tableName];\n          unsolvedDependency = false;\n          ref4 = schemaInfo.depends;\n          for (m = 0, len4 = ref4.length; m < len4; m++) {\n            dependency = ref4[m];\n            if (dependency !== schemaInfo.resourceName) {\n              if (schemaDependencyMap.hasOwnProperty(dependency)) {\n                unsolvedDependency = true;\n                break;\n              }\n            }\n          }\n          if (unsolvedDependency === false) {\n            if (sqlModel.tables[schemaInfo.resourceName].exists = schemaInfo.primitive === false || (hasDependants[tableName] != null)) {\n              if (schemaInfo.primitive !== false) {\n                console.warn(\"We're adding a primitive table??\", schemaInfo.resourceName);\n              }\n              createSchemaStatements.push(schemaInfo.createSQL);\n              dropSchemaStatements.push(schemaInfo.dropSQL);\n            }\n            delete schemaDependencyMap[tableName];\n          }\n        }\n      }\n      if (schemaDependencyMap.length > 0) {\n        console.error('Failed to resolve all schema dependencies', schemaDependencyMap);\n        throw new Error('Failed to resolve all schema dependencies');\n      }\n      dropSchemaStatements = dropSchemaStatements.reverse();\n      ruleStatements = [];\n      try {\n        ref5 = sqlModel.rules;\n        for (n = 0, len5 = ref5.length; n < len5; n++) {\n          rule = ref5[n];\n          ruleBody = _.find(rule, {\n            0: 'Body'\n          })[1];\n          ruleSE = _.find(rule, {\n            0: 'StructuredEnglish'\n          })[1];\n          ruleSQL = compileRule(ruleBody, engine);\n          ruleStatements.push({\n            structuredEnglish: ruleSE,\n            sql: ruleSQL\n          });\n        }\n      } catch (error) {\n        e = error;\n        console.error('Failed to compile the rule', JSON.stringify(rule, null, '\\t'));\n        console.error(e, e.stack);\n        throw e;\n      }\n      return {\n        tables: sqlModel.tables,\n        createSchema: createSchemaStatements,\n        dropSchema: dropSchemaStatements,\n        rules: ruleStatements\n      };\n    };\n    return module.exports = _.mapValues({\n      postgres: true,\n      mysql: true,\n      websql: false\n    }, function(ifNotExists, engine) {\n      return {\n        compileSchema: _.partial(compileSchema, _, engine, ifNotExists),\n        compileRule: _.partial(compileRule, _, engine),\n        dataTypeValidate: dataTypeValidate\n      };\n    });\n  });\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@resin/abstract-sql-compiler/AbstractSQLCompiler.js\n// module id = 33\n// module chunks = 0","!function(root, factory) {\n    \"function\" == typeof define && define.amd ? define([ \"require\", \"exports\", \"ometa-core\", \"lodash\" ], factory) : \"object\" == typeof exports ? factory(require, exports, require(\"ometa-js\").core) : factory(function(moduleName) {\n        return root[moduleName];\n    }, root, root.OMeta);\n}(this, function(require, exports, OMeta) {\n    var _ = require(\"lodash\"), AbstractSQLValidator = OMeta._extend({\n        Query: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._apply(\"SelectQuery\");\n        },\n        SelectQuery: function() {\n            var $elf = this, _fromIdx = this.input.idx, from, groupBy, limit, offset, orderBy, query, queryPart, select, where;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"SelectQuery\");\n                query = [ \"SelectQuery\" ];\n                this._many1(function() {\n                    queryPart = this._or(function() {\n                        this._pred(null == select);\n                        return select = this._apply(\"Select\");\n                    }, function() {\n                        return from = this._apply(\"Table\");\n                    }, function() {\n                        return this._apply(\"Join\");\n                    }, function() {\n                        this._pred(null == where);\n                        return where = this._apply(\"Where\");\n                    }, function() {\n                        this._pred(null == groupBy);\n                        return groupBy = this._apply(\"GroupBy\");\n                    }, function() {\n                        this._pred(null == orderBy);\n                        return orderBy = this._apply(\"OrderBy\");\n                    }, function() {\n                        this._pred(null == limit);\n                        return limit = this._apply(\"Limit\");\n                    }, function() {\n                        this._pred(null == offset);\n                        return offset = this._apply(\"Offset\");\n                    });\n                    return query = query.concat(queryPart);\n                });\n                return this._pred(null != select);\n            });\n            return query;\n        },\n        DeleteQuery: function() {\n            var $elf = this, _fromIdx = this.input.idx, query, queryPart, table, where;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"DeleteQuery\");\n                query = [ \"DeleteQuery\" ];\n                this._many(function() {\n                    queryPart = this._or(function() {\n                        return table = this._apply(\"Table\");\n                    }, function() {\n                        this._pred(null == where);\n                        return where = this._apply(\"Where\");\n                    });\n                    return query = query.concat(queryPart);\n                });\n                return this._pred(null != table);\n            });\n            return query;\n        },\n        UpsertQuery: function() {\n            var $elf = this, _fromIdx = this.input.idx, insert, update;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"UpsertQuery\");\n                insert = this._apply(\"InsertQuery\");\n                return update = this._apply(\"UpdateQuery\");\n            });\n            return [ \"UpsertQuery\", insert, update ];\n        },\n        InsertQuery: function() {\n            var $elf = this, _fromIdx = this.input.idx, body;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"InsertQuery\");\n                return body = this._apply(\"InsertBody\");\n            });\n            return [ \"InsertQuery\" ].concat(body);\n        },\n        UpdateQuery: function() {\n            var $elf = this, _fromIdx = this.input.idx, body;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"UpdateQuery\");\n                return body = this._apply(\"UpdateBody\");\n            });\n            return [ \"UpdateQuery\" ].concat(body);\n        },\n        InsertBody: function() {\n            var $elf = this, _fromIdx = this.input.idx, body, fields, table, values;\n            body = [];\n            this._many1(function() {\n                return this._or(function() {\n                    return this._apply(\"Where\");\n                }, function() {\n                    table = this._apply(\"Table\");\n                    return body = body.concat(table);\n                }, function() {\n                    return fields = this._apply(\"Fields\");\n                }, function() {\n                    return values = this._apply(\"Values\");\n                });\n            });\n            this._pred(null != fields);\n            this._pred(null != values);\n            this._pred(null != table);\n            body = body.concat(fields, values);\n            return body;\n        },\n        UpdateBody: function() {\n            var $elf = this, _fromIdx = this.input.idx, body, fields, table, values, where;\n            body = [];\n            this._many1(function() {\n                return this._or(function() {\n                    table = this._apply(\"Table\");\n                    return body = body.concat(table);\n                }, function() {\n                    return fields = this._apply(\"Fields\");\n                }, function() {\n                    return values = this._apply(\"Values\");\n                }, function() {\n                    this._pred(null == where);\n                    return where = this._apply(\"Where\");\n                });\n            });\n            this._pred(null != fields && fields[0].length > 0);\n            this._pred(null != values && values[0].length > 0);\n            this._pred(null != table);\n            body = body.concat(fields, values);\n            this._opt(function() {\n                this._pred(where);\n                return body = body.concat(where);\n            });\n            return body;\n        },\n        Fields: function() {\n            var $elf = this, _fromIdx = this.input.idx, fields;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Fields\");\n                return this._form(function() {\n                    return fields = this._many(function() {\n                        return this.anything();\n                    });\n                });\n            });\n            return [ [ \"Fields\", fields ] ];\n        },\n        Values: function() {\n            var $elf = this, _fromIdx = this.input.idx, values;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Values\");\n                return this._or(function() {\n                    return values = this._apply(\"SelectQuery\");\n                }, function() {\n                    return this._form(function() {\n                        return values = this._many(function() {\n                            return this._or(function() {\n                                switch (this.anything()) {\n                                  case \"?\":\n                                    return \"?\";\n\n                                  default:\n                                    throw this._fail();\n                                }\n                            }, function() {\n                                return this._apply(\"true\");\n                            }, function() {\n                                return this._apply(\"false\");\n                            }, function() {\n                                return this._apply(\"Null\");\n                            }, function() {\n                                return this._apply(\"Bind\");\n                            }, function() {\n                                return this._apply(\"Default\");\n                            }, function() {\n                                return this.anything();\n                            });\n                        });\n                    });\n                });\n            });\n            return [ [ \"Values\", values ] ];\n        },\n        Default: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._applyWithArgs(\"exactly\", \"Default\");\n        },\n        Select: function() {\n            var $elf = this, _fromIdx = this.input.idx, as, field, fields, table;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Select\");\n                return this._form(function() {\n                    return fields = this._many(function() {\n                        return this._or(function() {\n                            this._form(function() {\n                                field = this._apply(\"SelectField\");\n                                return as = this.anything();\n                            });\n                            return [ field, as ];\n                        }, function() {\n                            return this._apply(\"SelectField\");\n                        }, function() {\n                            return this._form(function() {\n                                table = this.anything();\n                                return this._applyWithArgs(\"exactly\", \"*\");\n                            });\n                        }, function() {\n                            switch (this.anything()) {\n                              case \"*\":\n                                return \"*\";\n\n                              default:\n                                throw this._fail();\n                            }\n                        });\n                    });\n                });\n            });\n            return [ [ \"Select\", fields ] ];\n        },\n        SelectField: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._apply(\"Count\");\n            }, function() {\n                return this._apply(\"AnyValue\");\n            }, function() {\n                return this._apply(\"Null\");\n            });\n        },\n        Count: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Count\");\n                return this._applyWithArgs(\"exactly\", \"*\");\n            });\n        },\n        Table: function() {\n            var $elf = this, _fromIdx = this.input.idx, as, from, table;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"From\");\n                return from = this._or(function() {\n                    this._not(function() {\n                        return this._apply(\"string\");\n                    });\n                    this._form(function() {\n                        table = this._or(function() {\n                            return this._apply(\"SelectQuery\");\n                        }, function() {\n                            return this.anything();\n                        });\n                        return as = this.anything();\n                    });\n                    return [ table, as ];\n                }, function() {\n                    return this._apply(\"SelectQuery\");\n                }, function() {\n                    return this.anything();\n                });\n            });\n            return [ [ \"From\", from ] ];\n        },\n        Join: function() {\n            var $elf = this, _fromIdx = this.input.idx, boolStatement, table;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Join\");\n                this._form(function() {\n                    this._applyWithArgs(\"exactly\", \"With\");\n                    return table = this.anything();\n                });\n                return this._form(function() {\n                    this._applyWithArgs(\"exactly\", \"On\");\n                    return boolStatement = this._apply(\"BooleanValue\");\n                });\n            });\n            return [ [ \"Join\", [ \"With\", table ], [ \"On\", boolStatement ] ] ];\n        },\n        Where: function() {\n            var $elf = this, _fromIdx = this.input.idx, boolStatement;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Where\");\n                return boolStatement = this._apply(\"BooleanValue\");\n            });\n            return [ [ \"Where\", boolStatement ] ];\n        },\n        GroupBy: function() {\n            var $elf = this, _fromIdx = this.input.idx, values;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"GroupBy\");\n                return this._form(function() {\n                    return values = this._many1(function() {\n                        return this._apply(\"AnyValue\");\n                    });\n                });\n            });\n            return [ [ \"GroupBy\", values ] ];\n        },\n        OrderBy: function() {\n            var $elf = this, _fromIdx = this.input.idx, field, order, orders;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"OrderBy\");\n                return orders = this._many1(function() {\n                    this._form(function() {\n                        order = function() {\n                            switch (this.anything()) {\n                              case \"ASC\":\n                                return \"ASC\";\n\n                              case \"DESC\":\n                                return \"DESC\";\n\n                              default:\n                                throw this._fail();\n                            }\n                        }.call(this);\n                        return field = this._apply(\"Field\");\n                    });\n                    return [ order, field ];\n                });\n            });\n            return [ [ \"OrderBy\" ].concat(orders) ];\n        },\n        Limit: function() {\n            var $elf = this, _fromIdx = this.input.idx, num;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Limit\");\n                return num = this._apply(\"NumericValue\");\n            });\n            return [ [ \"Limit\", num ] ];\n        },\n        Offset: function() {\n            var $elf = this, _fromIdx = this.input.idx, num;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Offset\");\n                return num = this._apply(\"NumericValue\");\n            });\n            return [ [ \"Offset\", num ] ];\n        },\n        AnyValue: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._apply(\"UnknownValue\");\n            }, function() {\n                return this._apply(\"TextValue\");\n            }, function() {\n                return this._apply(\"NumericValue\");\n            }, function() {\n                return this._apply(\"BooleanValue\");\n            }, function() {\n                return this._apply(\"DateValue\");\n            }, function() {\n                return this._apply(\"JSONValue\");\n            }, function() {\n                return this._apply(\"DurationValue\");\n            });\n        },\n        UnknownValue: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._apply(\"Field\");\n            }, function() {\n                return this._apply(\"Bind\");\n            }, function() {\n                return this._apply(\"Null\");\n            }, function() {\n                return this._apply(\"Cast\");\n            }, function() {\n                return this._apply(\"SelectQuery\");\n            });\n        },\n        Field: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._apply(\"ReferencedField\");\n            }, function() {\n                return this._apply(\"UnreferencedField\");\n            });\n        },\n        UnreferencedField: function() {\n            var $elf = this, _fromIdx = this.input.idx, field;\n            return this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Field\");\n                return field = this.anything();\n            });\n        },\n        ReferencedField: function() {\n            var $elf = this, _fromIdx = this.input.idx, field, table;\n            return this._form(function() {\n                this._applyWithArgs(\"exactly\", \"ReferencedField\");\n                table = this.anything();\n                return field = this.anything();\n            });\n        },\n        Bind: function() {\n            var $elf = this, _fromIdx = this.input.idx, field, tableName;\n            return this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Bind\");\n                return this._or(function() {\n                    return this._apply(\"number\");\n                }, function() {\n                    tableName = this.anything();\n                    return field = this.anything();\n                });\n            });\n        },\n        Null: function() {\n            var $elf = this, _fromIdx = this.input.idx, next;\n            next = this.anything();\n            this._pred(null === next || \"Null\" === next);\n            return null;\n        },\n        Cast: function() {\n            var $elf = this, _fromIdx = this.input.idx, as, v;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Cast\");\n                v = this._apply(\"AnyValue\");\n                return as = this.anything();\n            });\n            return [ \"Cast\", v, as ];\n        },\n        TextValue: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._apply(\"UnknownValue\");\n            }, function() {\n                return this._apply(\"Text\");\n            }, function() {\n                return this._apply(\"Concat\");\n            }, function() {\n                return this._apply(\"Lower\");\n            }, function() {\n                return this._apply(\"Upper\");\n            }, function() {\n                return this._apply(\"Trim\");\n            }, function() {\n                return this._apply(\"Replace\");\n            }, function() {\n                return this._apply(\"Substring\");\n            }, function() {\n                return this._apply(\"Right\");\n            });\n        },\n        Text: function() {\n            var $elf = this, _fromIdx = this.input.idx, text;\n            return this._form(function() {\n                (function() {\n                    switch (this.anything()) {\n                      case \"Text\":\n                        return \"Text\";\n\n                      case \"Value\":\n                        return \"Value\";\n\n                      default:\n                        throw this._fail();\n                    }\n                }).call(this);\n                return text = this.anything();\n            });\n        },\n        Concat: function() {\n            var $elf = this, _fromIdx = this.input.idx, firstString, otherStrings;\n            this._form(function() {\n                (function() {\n                    switch (this.anything()) {\n                      case \"Concat\":\n                        return \"Concat\";\n\n                      case \"Concatenate\":\n                        return \"Concatenate\";\n\n                      default:\n                        throw this._fail();\n                    }\n                }).call(this);\n                firstString = this._apply(\"TextValue\");\n                return otherStrings = this._many1(function() {\n                    return this._apply(\"TextValue\");\n                });\n            });\n            return [ \"Concatenate\", firstString ].concat(otherStrings);\n        },\n        Lower: function() {\n            var $elf = this, _fromIdx = this.input.idx, string;\n            this._form(function() {\n                (function() {\n                    switch (this.anything()) {\n                      case \"Lower\":\n                        return \"Lower\";\n\n                      case \"ToLower\":\n                        return \"ToLower\";\n\n                      case \"Tolower\":\n                        return \"Tolower\";\n\n                      default:\n                        throw this._fail();\n                    }\n                }).call(this);\n                return string = this._apply(\"TextValue\");\n            });\n            return [ \"Lower\", string ];\n        },\n        Upper: function() {\n            var $elf = this, _fromIdx = this.input.idx, string;\n            this._form(function() {\n                (function() {\n                    switch (this.anything()) {\n                      case \"ToUpper\":\n                        return \"ToUpper\";\n\n                      case \"Toupper\":\n                        return \"Toupper\";\n\n                      case \"Upper\":\n                        return \"Upper\";\n\n                      default:\n                        throw this._fail();\n                    }\n                }).call(this);\n                return string = this._apply(\"TextValue\");\n            });\n            return [ \"Upper\", string ];\n        },\n        Trim: function() {\n            var $elf = this, _fromIdx = this.input.idx, str;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Trim\");\n                return str = this._apply(\"TextValue\");\n            });\n            return [ \"Trim\", str ];\n        },\n        Replace: function() {\n            var $elf = this, _fromIdx = this.input.idx, find, replacement, string;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Replace\");\n                string = this._apply(\"TextValue\");\n                find = this._apply(\"TextValue\");\n                return replacement = this._apply(\"TextValue\");\n            });\n            return [ \"Replace\", string, find, replacement ];\n        },\n        Substring: function() {\n            var $elf = this, _fromIdx = this.input.idx, args, string;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Substring\");\n                string = this._apply(\"TextValue\");\n                return args = this._many1(function() {\n                    return this._apply(\"NumericValue\");\n                });\n            });\n            return [ \"Substring\", string ].concat(args);\n        },\n        Right: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, n, string;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Right\");\n                string = this._apply(\"TextValue\");\n                return n = this._apply(\"NumericValue\");\n            });\n            return [ \"Right\", string, n ];\n        },\n        NumericValue: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._apply(\"UnknownValue\");\n            }, function() {\n                return this._apply(\"Number\");\n            }, function() {\n                return this._apply(\"MathOp\");\n            }, function() {\n                return this._apply(\"BitwiseAnd\");\n            }, function() {\n                return this._apply(\"BitwiseShiftRight\");\n            }, function() {\n                return this._apply(\"CharacterLength\");\n            }, function() {\n                return this._apply(\"IndexOf\");\n            }, function() {\n                return this._apply(\"StrPos\");\n            }, function() {\n                return this._apply(\"Year\");\n            }, function() {\n                return this._apply(\"Month\");\n            }, function() {\n                return this._apply(\"Day\");\n            }, function() {\n                return this._apply(\"Hour\");\n            }, function() {\n                return this._apply(\"Minute\");\n            }, function() {\n                return this._apply(\"Second\");\n            }, function() {\n                return this._apply(\"FractionalSeconds\");\n            }, function() {\n                return this._apply(\"TotalSeconds\");\n            }, function() {\n                return this._apply(\"Round\");\n            }, function() {\n                return this._apply(\"Floor\");\n            }, function() {\n                return this._apply(\"Ceiling\");\n            });\n        },\n        Number: function() {\n            var $elf = this, _fromIdx = this.input.idx, number;\n            return this._form(function() {\n                (function() {\n                    switch (this.anything()) {\n                      case \"Integer\":\n                        return \"Integer\";\n\n                      case \"Number\":\n                        return \"Number\";\n\n                      case \"Real\":\n                        return \"Real\";\n\n                      default:\n                        throw this._fail();\n                    }\n                }).call(this);\n                return number = this.anything();\n            });\n        },\n        MathOp: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._apply(\"Add\");\n            }, function() {\n                return this._apply(\"Subtract\");\n            }, function() {\n                return this._apply(\"Multiply\");\n            }, function() {\n                return this._apply(\"Divide\");\n            });\n        },\n        Add: function() {\n            var $elf = this, _fromIdx = this.input.idx, lhs, rhs;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Add\");\n                lhs = this._apply(\"NumericValue\");\n                return rhs = this._apply(\"NumericValue\");\n            });\n            return [ \"Add\", lhs, rhs ];\n        },\n        Subtract: function() {\n            var $elf = this, _fromIdx = this.input.idx, lhs, rhs;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Subtract\");\n                lhs = this._apply(\"NumericValue\");\n                return rhs = this._apply(\"NumericValue\");\n            });\n            return [ \"Subtract\", lhs, rhs ];\n        },\n        Multiply: function() {\n            var $elf = this, _fromIdx = this.input.idx, lhs, rhs;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Multiply\");\n                lhs = this._apply(\"NumericValue\");\n                return rhs = this._apply(\"NumericValue\");\n            });\n            return [ \"Multiply\", lhs, rhs ];\n        },\n        Divide: function() {\n            var $elf = this, _fromIdx = this.input.idx, lhs, rhs;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Divide\");\n                lhs = this._apply(\"NumericValue\");\n                return rhs = this._apply(\"NumericValue\");\n            });\n            return [ \"Divide\", lhs, rhs ];\n        },\n        BitwiseAnd: function() {\n            var $elf = this, _fromIdx = this.input.idx, mask, operand;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"BitwiseAnd\");\n                operand = this._apply(\"NumericValue\");\n                return mask = this._apply(\"NumericValue\");\n            });\n            return [ \"BitwiseAnd\", operand, mask ];\n        },\n        BitwiseShiftRight: function() {\n            var $elf = this, _fromIdx = this.input.idx, operand, shift;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"BitwiseShiftRight\");\n                operand = this._apply(\"NumericValue\");\n                return shift = this._apply(\"NumericValue\");\n            });\n            return [ \"BitwiseShiftRight\", operand, shift ];\n        },\n        CharacterLength: function() {\n            var $elf = this, _fromIdx = this.input.idx, text;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"CharacterLength\");\n                return text = this._apply(\"TextValue\");\n            });\n            return [ \"CharacterLength\", text ];\n        },\n        IndexOf: function() {\n            var $elf = this, _fromIdx = this.input.idx, haystack, needle;\n            this._form(function() {\n                (function() {\n                    switch (this.anything()) {\n                      case \"IndexOf\":\n                        return \"IndexOf\";\n\n                      case \"Indexof\":\n                        return \"Indexof\";\n\n                      default:\n                        throw this._fail();\n                    }\n                }).call(this);\n                haystack = this._apply(\"TextValue\");\n                return needle = this._apply(\"TextValue\");\n            });\n            this._apply(\"SetHelped\");\n            return [ \"Subtract\", [ \"StrPos\", haystack, needle ], [ \"Number\", 1 ] ];\n        },\n        StrPos: function() {\n            var $elf = this, _fromIdx = this.input.idx, haystack, needle;\n            this._form(function() {\n                (function() {\n                    switch (this.anything()) {\n                      case \"InStr\":\n                        return \"InStr\";\n\n                      case \"StrPos\":\n                        return \"StrPos\";\n\n                      default:\n                        throw this._fail();\n                    }\n                }).call(this);\n                haystack = this._apply(\"TextValue\");\n                return needle = this._apply(\"TextValue\");\n            });\n            return [ \"StrPos\", haystack, needle ];\n        },\n        Year: function() {\n            var $elf = this, _fromIdx = this.input.idx, date;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Year\");\n                return date = this._apply(\"DateValue\");\n            });\n            return [ \"Year\", date ];\n        },\n        Month: function() {\n            var $elf = this, _fromIdx = this.input.idx, date;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Month\");\n                return date = this._apply(\"DateValue\");\n            });\n            return [ \"Month\", date ];\n        },\n        Day: function() {\n            var $elf = this, _fromIdx = this.input.idx, date;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Day\");\n                return date = this._apply(\"DateValue\");\n            });\n            return [ \"Day\", date ];\n        },\n        Hour: function() {\n            var $elf = this, _fromIdx = this.input.idx, date;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Hour\");\n                return date = this._apply(\"DateValue\");\n            });\n            return [ \"Hour\", date ];\n        },\n        Minute: function() {\n            var $elf = this, _fromIdx = this.input.idx, date;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Minute\");\n                return date = this._apply(\"DateValue\");\n            });\n            return [ \"Minute\", date ];\n        },\n        Second: function() {\n            var $elf = this, _fromIdx = this.input.idx, date;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Second\");\n                return date = this._apply(\"DateValue\");\n            });\n            return [ \"Second\", date ];\n        },\n        FractionalSeconds: function() {\n            var $elf = this, _fromIdx = this.input.idx, date;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Fractionalseconds\");\n                return date = this._apply(\"DateValue\");\n            });\n            return [ \"Fractionalseconds\", date ];\n        },\n        TotalSeconds: function() {\n            var $elf = this, _fromIdx = this.input.idx, duration;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Totalseconds\");\n                return duration = this._apply(\"DurationValue\");\n            });\n            return [ \"Totalseconds\", duration ];\n        },\n        Round: function() {\n            var $elf = this, _fromIdx = this.input.idx, num;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Round\");\n                return num = this._apply(\"NumericValue\");\n            });\n            return [ \"Round\", num ];\n        },\n        Floor: function() {\n            var $elf = this, _fromIdx = this.input.idx, num;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Floor\");\n                return num = this._apply(\"NumericValue\");\n            });\n            return [ \"Floor\", num ];\n        },\n        Ceiling: function() {\n            var $elf = this, _fromIdx = this.input.idx, num;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Ceiling\");\n                return num = this._apply(\"NumericValue\");\n            });\n            return [ \"Ceiling\", num ];\n        },\n        BooleanValue: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._apply(\"UnknownValue\");\n            }, function() {\n                return this._apply(\"Boolean\");\n            }, function() {\n                return this._apply(\"And\");\n            }, function() {\n                return this._apply(\"Not\");\n            }, function() {\n                return this._apply(\"Or\");\n            }, function() {\n                return this._apply(\"Exists\");\n            }, function() {\n                return this._apply(\"NotExists\");\n            }, function() {\n                return this._apply(\"Comparison\");\n            }, function() {\n                return this._apply(\"Between\");\n            }, function() {\n                return this._apply(\"In\");\n            }, function() {\n                return this._apply(\"NotIn\");\n            });\n        },\n        Boolean: function() {\n            var $elf = this, _fromIdx = this.input.idx, bool;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Boolean\");\n                return bool = this._or(function() {\n                    return this._apply(\"true\");\n                }, function() {\n                    return this._apply(\"false\");\n                });\n            });\n            return [ \"Boolean\", bool ];\n        },\n        Not: function() {\n            var $elf = this, _fromIdx = this.input.idx, bool;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Not\");\n                return bool = this._apply(\"BooleanValue\");\n            });\n            return [ \"Not\", bool ];\n        },\n        And: function() {\n            var $elf = this, _fromIdx = this.input.idx, firstBool, otherBools;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"And\");\n                firstBool = this._apply(\"BooleanValue\");\n                return otherBools = this._many1(function() {\n                    return this._apply(\"BooleanValue\");\n                });\n            });\n            return [ \"And\", firstBool ].concat(otherBools);\n        },\n        Or: function() {\n            var $elf = this, _fromIdx = this.input.idx, firstBool, otherBools;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Or\");\n                firstBool = this._apply(\"BooleanValue\");\n                return otherBools = this._many1(function() {\n                    return this._apply(\"BooleanValue\");\n                });\n            });\n            return [ \"Or\", firstBool ].concat(otherBools);\n        },\n        NotExists: function() {\n            var $elf = this, _fromIdx = this.input.idx, exists;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"NotExists\");\n                return exists = this._apply(\"AnyValue\");\n            });\n            return [ \"NotExists\", exists ];\n        },\n        Exists: function() {\n            var $elf = this, _fromIdx = this.input.idx, exists;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Exists\");\n                return exists = this._apply(\"AnyValue\");\n            });\n            return [ \"Exists\", exists ];\n        },\n        Comparison: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._apply(\"Equals\");\n            }, function() {\n                return this._apply(\"GreaterThan\");\n            }, function() {\n                return this._apply(\"GreaterThanOrEqual\");\n            }, function() {\n                return this._apply(\"LessThan\");\n            }, function() {\n                return this._apply(\"LessThanOrEqual\");\n            }, function() {\n                return this._apply(\"NotEquals\");\n            }, function() {\n                return this._apply(\"Like\");\n            });\n        },\n        Equals: function() {\n            var $elf = this, _fromIdx = this.input.idx, comp1, comp2;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Equals\");\n                comp1 = this._apply(\"AnyValue\");\n                return comp2 = this._apply(\"AnyValue\");\n            });\n            return [ \"Equals\", comp1, comp2 ];\n        },\n        GreaterThan: function() {\n            var $elf = this, _fromIdx = this.input.idx, comp1, comp2;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"GreaterThan\");\n                comp1 = this._apply(\"AnyValue\");\n                return comp2 = this._apply(\"AnyValue\");\n            });\n            return [ \"GreaterThan\", comp1, comp2 ];\n        },\n        GreaterThanOrEqual: function() {\n            var $elf = this, _fromIdx = this.input.idx, comp1, comp2;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"GreaterThanOrEqual\");\n                comp1 = this._apply(\"AnyValue\");\n                return comp2 = this._apply(\"AnyValue\");\n            });\n            return [ \"GreaterThanOrEqual\", comp1, comp2 ];\n        },\n        LessThan: function() {\n            var $elf = this, _fromIdx = this.input.idx, comp1, comp2;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"LessThan\");\n                comp1 = this._apply(\"AnyValue\");\n                return comp2 = this._apply(\"AnyValue\");\n            });\n            return [ \"LessThan\", comp1, comp2 ];\n        },\n        LessThanOrEqual: function() {\n            var $elf = this, _fromIdx = this.input.idx, comp1, comp2;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"LessThanOrEqual\");\n                comp1 = this._apply(\"AnyValue\");\n                return comp2 = this._apply(\"AnyValue\");\n            });\n            return [ \"LessThanOrEqual\", comp1, comp2 ];\n        },\n        NotEquals: function() {\n            var $elf = this, _fromIdx = this.input.idx, comp1, comp2;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"NotEquals\");\n                comp1 = this._apply(\"AnyValue\");\n                return comp2 = this._apply(\"AnyValue\");\n            });\n            return [ \"NotEquals\", comp1, comp2 ];\n        },\n        Like: function() {\n            var $elf = this, _fromIdx = this.input.idx, comp1, comp2;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Like\");\n                comp1 = this._apply(\"AnyValue\");\n                return comp2 = this._apply(\"AnyValue\");\n            });\n            return [ \"Like\", comp1, comp2 ];\n        },\n        Between: function() {\n            var $elf = this, _fromIdx = this.input.idx, comp1, comp2, comp3;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Between\");\n                comp1 = this._apply(\"AnyValue\");\n                comp2 = this._apply(\"AnyValue\");\n                return comp3 = this._apply(\"AnyValue\");\n            });\n            return [ \"Between\", comp1, comp2, comp3 ];\n        },\n        In: function() {\n            var $elf = this, _fromIdx = this.input.idx, field, vals;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"In\");\n                field = this._apply(\"Field\");\n                return vals = this._many1(function() {\n                    return this._apply(\"AnyValue\");\n                });\n            });\n            return [ \"In\", field ].concat(vals);\n        },\n        NotIn: function() {\n            var $elf = this, _fromIdx = this.input.idx, field, vals;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"NotIn\");\n                field = this._apply(\"Field\");\n                return vals = this._many1(function() {\n                    return this._apply(\"AnyValue\");\n                });\n            });\n            return [ \"NotIn\", field ].concat(vals);\n        },\n        DateValue: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._apply(\"UnknownValue\");\n            }, function() {\n                return this._apply(\"Date\");\n            }, function() {\n                return this._apply(\"ToDate\");\n            }, function() {\n                return this._apply(\"ToTime\");\n            }, function() {\n                return this._apply(\"Now\");\n            });\n        },\n        Date: function() {\n            var $elf = this, _fromIdx = this.input.idx, date;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Date\");\n                return date = this.anything();\n            });\n            this._pred(_.isDate(date));\n            return [ \"Date\", date ];\n        },\n        ToDate: function() {\n            var $elf = this, _fromIdx = this.input.idx, date;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"ToDate\");\n                return date = this._apply(\"DateValue\");\n            });\n            return [ \"ToDate\", date ];\n        },\n        ToTime: function() {\n            var $elf = this, _fromIdx = this.input.idx, date;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"ToTime\");\n                return date = this._apply(\"DateValue\");\n            });\n            return [ \"ToTime\", date ];\n        },\n        Now: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            this._form(function() {\n                return this._applyWithArgs(\"exactly\", \"Now\");\n            });\n            return [ \"Now\" ];\n        },\n        JSONValue: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._apply(\"UnknownValue\");\n            }, function() {\n                return this._apply(\"AggregateJSON\");\n            });\n        },\n        AggregateJSON: function() {\n            var $elf = this, _fromIdx = this.input.idx, field;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"AggregateJSON\");\n                return field = this.anything();\n            });\n            return [ \"AggregateJSON\", field ];\n        },\n        DurationValue: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._apply(\"UnknownValue\");\n            }, function() {\n                return this._apply(\"Duration\");\n            });\n        },\n        Duration: function() {\n            var $elf = this, _fromIdx = this.input.idx, duration;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Duration\");\n                return duration = this.anything();\n            });\n            this._pred(_.isObject(duration));\n            duration = _(duration).pick(\"negative\", \"day\", \"hour\", \"minute\", \"second\").omitBy(_.isNil).pickBy(function(value, key) {\n                return \"negative\" === key ? _.isBoolean(value) : _.isNumber(value);\n            }).value();\n            this._pred(!_(duration).omit(\"negative\").isEmpty());\n            return [ \"Duration\", duration ];\n        }\n    }), AbstractSQLOptimiser = exports.AbstractSQLOptimiser = AbstractSQLValidator._extend({\n        FieldNotEquals: function() {\n            var $elf = this, _fromIdx = this.input.idx, comp1, comp2;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"NotEquals\");\n                return this._or(function() {\n                    comp1 = this._apply(\"Field\");\n                    return comp2 = this._apply(\"AnyValue\");\n                }, function() {\n                    comp2 = this._apply(\"AnyValue\");\n                    return comp1 = this._apply(\"Field\");\n                });\n            });\n            return [ \"NotEquals\", comp1, comp2 ];\n        },\n        FieldEquals: function() {\n            var $elf = this, _fromIdx = this.input.idx, comp1, comp2;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Equals\");\n                return this._or(function() {\n                    comp1 = this._apply(\"Field\");\n                    return comp2 = this._apply(\"AnyValue\");\n                }, function() {\n                    comp2 = this._apply(\"AnyValue\");\n                    return comp1 = this._apply(\"Field\");\n                });\n            });\n            return [ \"Equals\", comp1, comp2 ];\n        },\n        Or: function() {\n            var $elf = this, _fromIdx = this.input.idx, bool, conditions, firstBool, inStatement, inVals, or, otherBools, secondBool;\n            return this._or(function() {\n                this._form(function() {\n                    this._applyWithArgs(\"exactly\", \"Or\");\n                    firstBool = this._apply(\"FieldEquals\");\n                    inVals = this._many1(function() {\n                        secondBool = this._apply(\"FieldEquals\");\n                        this._pred(_.isEqual(firstBool[1], secondBool[1]));\n                        return secondBool[2];\n                    });\n                    return otherBools = this._many(function() {\n                        return this._apply(\"BooleanValue\");\n                    });\n                });\n                this._apply(\"SetHelped\");\n                inStatement = [ \"In\", firstBool[1], firstBool[2] ].concat(inVals);\n                return this._or(function() {\n                    this._pred(otherBools.length > 0);\n                    return [ \"Or\", inStatement ].concat(otherBools);\n                }, function() {\n                    return inStatement;\n                });\n            }, function() {\n                this._form(function() {\n                    this._applyWithArgs(\"exactly\", \"Or\");\n                    conditions = [];\n                    return this._many1(function() {\n                        return this._or(function() {\n                            or = this._apply(\"Or\");\n                            conditions = conditions.concat(or.slice(1));\n                            return this._apply(\"SetHelped\");\n                        }, function() {\n                            bool = this._apply(\"BooleanValue\");\n                            return conditions.push(bool);\n                        });\n                    });\n                });\n                return [ \"Or\" ].concat(conditions);\n            }, function() {\n                return AbstractSQLValidator._superApplyWithArgs(this, \"Or\");\n            });\n        },\n        And: function() {\n            var $elf = this, _fromIdx = this.input.idx, and, bool, conditions, firstBool, inStatement, inVals, otherBools, secondBool;\n            return this._or(function() {\n                this._form(function() {\n                    this._applyWithArgs(\"exactly\", \"And\");\n                    firstBool = this._apply(\"FieldNotEquals\");\n                    inVals = this._many1(function() {\n                        secondBool = this._apply(\"FieldNotEquals\");\n                        this._pred(_.isEqual(firstBool[1], secondBool[1]));\n                        return secondBool[2];\n                    });\n                    return otherBools = this._many(function() {\n                        return this._apply(\"BooleanValue\");\n                    });\n                });\n                this._apply(\"SetHelped\");\n                inStatement = [ \"NotIn\", firstBool[1], firstBool[2] ].concat(inVals);\n                return this._or(function() {\n                    this._pred(otherBools.length > 0);\n                    return [ \"Or\", inStatement ].concat(otherBools);\n                }, function() {\n                    return inStatement;\n                });\n            }, function() {\n                this._form(function() {\n                    this._applyWithArgs(\"exactly\", \"And\");\n                    conditions = [];\n                    return this._many1(function() {\n                        return this._or(function() {\n                            and = this._apply(\"And\");\n                            conditions = conditions.concat(and.slice(1));\n                            return this._apply(\"SetHelped\");\n                        }, function() {\n                            bool = this._apply(\"BooleanValue\");\n                            return conditions.push(bool);\n                        });\n                    });\n                });\n                return [ \"And\" ].concat(conditions);\n            }, function() {\n                return AbstractSQLValidator._superApplyWithArgs(this, \"And\");\n            });\n        },\n        Not: function() {\n            var $elf = this, _fromIdx = this.input.idx, boolStatement, replace;\n            return this._or(function() {\n                this._form(function() {\n                    this._applyWithArgs(\"exactly\", \"Not\");\n                    return this._or(function() {\n                        return this._form(function() {\n                            this._applyWithArgs(\"exactly\", \"Not\");\n                            return boolStatement = this._apply(\"BooleanValue\");\n                        });\n                    }, function() {\n                        replace = this._or(function() {\n                            boolStatement = this._apply(\"Equals\");\n                            return \"NotEquals\";\n                        }, function() {\n                            boolStatement = this._apply(\"NotEquals\");\n                            return \"Equals\";\n                        }, function() {\n                            boolStatement = this._apply(\"In\");\n                            return \"NotIn\";\n                        }, function() {\n                            boolStatement = this._apply(\"NotIn\");\n                            return \"In\";\n                        }, function() {\n                            boolStatement = this._apply(\"Exists\");\n                            return \"NotExists\";\n                        }, function() {\n                            boolStatement = this._apply(\"NotExists\");\n                            return \"Exists\";\n                        });\n                        return boolStatement[0] = replace;\n                    });\n                });\n                this._apply(\"SetHelped\");\n                return boolStatement;\n            }, function() {\n                return AbstractSQLValidator._superApplyWithArgs(this, \"Not\");\n            });\n        },\n        NotEquals: function() {\n            var $elf = this, _fromIdx = this.input.idx, value;\n            return this._or(function() {\n                this._form(function() {\n                    this._applyWithArgs(\"exactly\", \"NotEquals\");\n                    return this._or(function() {\n                        this._apply(\"Null\");\n                        return value = this._apply(\"AnyValue\");\n                    }, function() {\n                        value = this._apply(\"AnyValue\");\n                        return this._apply(\"Null\");\n                    });\n                });\n                this._apply(\"SetHelped\");\n                return [ \"Exists\", value ];\n            }, function() {\n                return AbstractSQLValidator._superApplyWithArgs(this, \"NotEquals\");\n            });\n        },\n        Equals: function() {\n            var $elf = this, _fromIdx = this.input.idx, value;\n            return this._or(function() {\n                this._form(function() {\n                    this._applyWithArgs(\"exactly\", \"Equals\");\n                    return this._or(function() {\n                        this._apply(\"Null\");\n                        return value = this._apply(\"AnyValue\");\n                    }, function() {\n                        value = this._apply(\"AnyValue\");\n                        return this._apply(\"Null\");\n                    });\n                });\n                this._apply(\"SetHelped\");\n                return [ \"Not\", [ \"Exists\", value ] ];\n            }, function() {\n                return AbstractSQLValidator._superApplyWithArgs(this, \"Equals\");\n            });\n        },\n        BooleanValue: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._apply(\"Contains\");\n            }, function() {\n                return this._apply(\"StartsWith\");\n            }, function() {\n                return this._apply(\"EndsWith\");\n            }, function() {\n                return AbstractSQLValidator._superApplyWithArgs(this, \"BooleanValue\");\n            });\n        },\n        Contains: function() {\n            var $elf = this, _fromIdx = this.input.idx, haystack, needle;\n            this._form(function() {\n                switch (this.anything()) {\n                  case \"Contains\":\n                    haystack = this._apply(\"TextValue\");\n                    return needle = this._apply(\"TextValue\");\n\n                  case \"Substringof\":\n                    needle = this._apply(\"TextValue\");\n                    return haystack = this._apply(\"TextValue\");\n\n                  default:\n                    throw this._fail();\n                }\n            });\n            this._apply(\"SetHelped\");\n            return [ \"GreaterThan\", [ \"StrPos\", haystack, needle ], [ \"Number\", 0 ] ];\n        },\n        StartsWith: function() {\n            var $elf = this, _fromIdx = this.input.idx, haystack, needle;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Startswith\");\n                haystack = this._apply(\"TextValue\");\n                return needle = this._apply(\"TextValue\");\n            });\n            this._apply(\"SetHelped\");\n            return [ \"Equals\", [ \"StrPos\", haystack, needle ], [ \"Number\", 1 ] ];\n        },\n        EndsWith: function() {\n            var $elf = this, _fromIdx = this.input.idx, haystack, needle;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Endswith\");\n                haystack = this._apply(\"TextValue\");\n                return needle = this._apply(\"TextValue\");\n            });\n            this._apply(\"SetHelped\");\n            return [ \"Equals\", [ \"Right\", haystack, [ \"CharacterLength\", needle ] ], needle ];\n        },\n        Helped: function(disableMemoisationHack) {\n            var $elf = this, _fromIdx = this.input.idx;\n            this._pred(this.helped === !0);\n            return this.helped = !1;\n        },\n        SetHelped: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this.helped = !0;\n        },\n        Process: function() {\n            var $elf = this, _fromIdx = this.input.idx, query;\n            query = this.anything();\n            query = this._or(function() {\n                return this._applyWithArgs(\"AnyValue\", query);\n            }, function() {\n                return this._applyWithArgs(\"SelectQuery\", query);\n            }, function() {\n                return this._applyWithArgs(\"InsertQuery\", query);\n            }, function() {\n                return this._applyWithArgs(\"UpdateQuery\", query);\n            }, function() {\n                return this._applyWithArgs(\"DeleteQuery\", query);\n            }, function() {\n                return this._applyWithArgs(\"UpsertQuery\", query);\n            });\n            this._many(function() {\n                this._applyWithArgs(\"Helped\", \"disableMemoisation\");\n                return query = this._or(function() {\n                    return this._applyWithArgs(\"AnyValue\", query);\n                }, function() {\n                    return this._applyWithArgs(\"SelectQuery\", query);\n                }, function() {\n                    return this._applyWithArgs(\"InsertQuery\", query);\n                }, function() {\n                    return this._applyWithArgs(\"UpdateQuery\", query);\n                }, function() {\n                    return this._applyWithArgs(\"DeleteQuery\", query);\n                }, function() {\n                    return this._applyWithArgs(\"UpsertQuery\", query);\n                });\n            });\n            return query;\n        }\n    });\n    AbstractSQLOptimiser.initialize = function() {\n        this.helped = !1;\n    };\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@resin/abstract-sql-compiler/AbstractSQLOptimiser.js\n// module id = 34\n// module chunks = 0","!function(root, factory) {\n    \"function\" == typeof define && define.amd ? define([ \"require\", \"exports\", \"ometa-core\", \"@resin/sbvr-types\", \"lodash\" ], factory) : \"object\" == typeof exports ? factory(require, exports, require(\"ometa-js\").core) : factory(function(moduleName) {\n        return root[moduleName];\n    }, root, root.OMeta);\n}(this, function(require, exports, OMeta) {\n    var sbvrTypes = require(\"@resin/sbvr-types\"), _ = require(\"lodash\"), comparisons = {\n        Equals: \" = \",\n        GreaterThan: \" > \",\n        GreaterThanOrEqual: \" >= \",\n        LessThan: \" < \",\n        LessThanOrEqual: \" <= \",\n        NotEquals: \" != \",\n        Like: \" LIKE \"\n    }, fractionalSecondsFormat = function(date) {\n        return this.Totalseconds(date) + \" - \" + this.Second(date);\n    }, websqlBasicDateFormat = function(format) {\n        return function(date) {\n            return \"STRFTIME('\" + format + \"', \" + date + \")\";\n        };\n    }, websqlDateFormats = {\n        Year: websqlBasicDateFormat(\"%Y\"),\n        Month: websqlBasicDateFormat(\"%m\"),\n        Day: websqlBasicDateFormat(\"%d\"),\n        Hour: websqlBasicDateFormat(\"%H\"),\n        Minute: websqlBasicDateFormat(\"%M\"),\n        Second: websqlBasicDateFormat(\"%S\"),\n        Fractionalseconds: fractionalSecondsFormat,\n        Totalseconds: websqlBasicDateFormat(\"%f\")\n    }, basicDateFormat = function(part) {\n        return function(date) {\n            return \"EXTRACT('\" + part + \"' FROM \" + date + \")\";\n        };\n    }, dateFormats = {\n        Year: basicDateFormat(\"YEAR\"),\n        Month: basicDateFormat(\"MONTH\"),\n        Day: basicDateFormat(\"DAY\"),\n        Hour: basicDateFormat(\"HOUR\"),\n        Minute: basicDateFormat(\"MINUTE\"),\n        Second: function(date) {\n            return \"FLOOR(\" + dateFormats.Totalseconds(date) + \")\";\n        },\n        Fractionalseconds: fractionalSecondsFormat,\n        Totalseconds: basicDateFormat(\"SECOND\")\n    }, AbstractSQLRules2SQL = exports.AbstractSQLRules2SQL = OMeta._extend({\n        NestedIndent: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx;\n            return indent + \"\t\";\n        },\n        SelectQuery: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, fields, from, groupBy, limit, nestedIndent, offset, orderBy, table, tables, where;\n            nestedIndent = this._applyWithArgs(\"NestedIndent\", indent);\n            tables = [];\n            where = \"\";\n            groupBy = \"\";\n            orderBy = \"\";\n            limit = \"\";\n            offset = \"\";\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"SelectQuery\");\n                return this._many(function() {\n                    return this._form(function() {\n                        return this._or(function() {\n                            return fields = this._applyWithArgs(\"Select\", indent);\n                        }, function() {\n                            table = this._applyWithArgs(\"Table\", indent);\n                            return tables.push(table);\n                        }, function() {\n                            where = this._applyWithArgs(\"Where\", indent);\n                            return where = indent + where;\n                        }, function() {\n                            groupBy = this._applyWithArgs(\"GroupBy\", indent);\n                            return groupBy = indent + groupBy;\n                        }, function() {\n                            orderBy = this._applyWithArgs(\"OrderBy\", indent);\n                            return orderBy = indent + orderBy;\n                        }, function() {\n                            limit = this._applyWithArgs(\"Limit\", indent);\n                            return limit = indent + limit;\n                        }, function() {\n                            offset = this._applyWithArgs(\"Offset\", indent);\n                            return offset = indent + offset;\n                        });\n                    });\n                });\n            });\n            from = this._or(function() {\n                this._pred(tables.length);\n                return indent + \"FROM \" + tables.join(\",\" + nestedIndent);\n            }, function() {\n                return \"\";\n            });\n            return \"SELECT \" + fields.join(\", \") + from + where + groupBy + orderBy + limit + offset;\n        },\n        DeleteQuery: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, table, tables, where;\n            tables = [];\n            where = \"\";\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"DeleteQuery\");\n                return this._many(function() {\n                    return this._form(function() {\n                        return this._or(function() {\n                            table = this._applyWithArgs(\"Table\", indent);\n                            return tables.push(table);\n                        }, function() {\n                            where = this._applyWithArgs(\"Where\", indent);\n                            return where = indent + where;\n                        });\n                    });\n                });\n            });\n            return \"DELETE FROM \" + tables.join(\", \") + where;\n        },\n        UpsertQuery: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, insert, update;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"UpsertQuery\");\n                insert = this._applyWithArgs(\"InsertQuery\", indent);\n                insert = {\n                    query: insert,\n                    bindings: this.fieldOrderings\n                };\n                this.fieldOrderings = [];\n                update = this._applyWithArgs(\"UpdateQuery\", indent);\n                return update = {\n                    query: update,\n                    bindings: this.fieldOrderings\n                };\n            });\n            return [ insert, update ];\n        },\n        InsertQuery: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, insert;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"InsertQuery\");\n                return insert = this._applyWithArgs(\"InsertBody\", indent);\n            });\n            return insert;\n        },\n        UpdateQuery: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, update;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"UpdateQuery\");\n                return update = this._applyWithArgs(\"UpdateBody\", indent);\n            });\n            return update;\n        },\n        InsertBody: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, fields, table, tables, values;\n            tables = [];\n            this._many(function() {\n                return this._form(function() {\n                    return this._or(function() {\n                        return fields = this._apply(\"Fields\");\n                    }, function() {\n                        return values = this._applyWithArgs(\"Values\", indent);\n                    }, function() {\n                        table = this._applyWithArgs(\"Table\", indent);\n                        return tables.push(table);\n                    });\n                });\n            });\n            return this._or(function() {\n                this._pred(fields.length > 0);\n                this._opt(function() {\n                    this._pred(_.isArray(values));\n                    return values = \"VALUES (\" + values.join(\", \") + \")\";\n                });\n                return \"INSERT INTO \" + tables.join(\", \") + \" (\" + fields.join(\", \") + \")\" + indent + values;\n            }, function() {\n                return \"INSERT INTO \" + tables.join(\", \") + \" DEFAULT VALUES\";\n            });\n        },\n        UpdateBody: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, fields, nestedIndent, sets, table, tables, values, where;\n            tables = [];\n            where = \"\";\n            this._many(function() {\n                return this._form(function() {\n                    return this._or(function() {\n                        fields = this._apply(\"Fields\");\n                        return this._pred(fields.length > 0);\n                    }, function() {\n                        values = this._apply(\"Values\");\n                        return this._pred(values.length > 0);\n                    }, function() {\n                        table = this._applyWithArgs(\"Table\", indent);\n                        return tables.push(table);\n                    }, function() {\n                        where = this._applyWithArgs(\"Where\", indent);\n                        return where = indent + where;\n                    });\n                });\n            });\n            sets = [];\n            (function() {\n                for (var i = 0; i < fields.length; i++) sets[i] = fields[i] + \" = \" + values[i];\n            }).call(this);\n            nestedIndent = this._applyWithArgs(\"NestedIndent\", indent);\n            return \"UPDATE \" + tables.join(\", \") + indent + \"SET \" + sets.join(\",\" + nestedIndent) + where;\n        },\n        Fields: function() {\n            var $elf = this, _fromIdx = this.input.idx, field, fields;\n            this._applyWithArgs(\"exactly\", \"Fields\");\n            fields = [];\n            this._form(function() {\n                return fields = this._many(function() {\n                    field = this.anything();\n                    return '\"' + field + '\"';\n                });\n            });\n            return fields;\n        },\n        Values: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, values;\n            this._applyWithArgs(\"exactly\", \"Values\");\n            this._or(function() {\n                return values = this._applyWithArgs(\"SelectQuery\", indent);\n            }, function() {\n                return this._form(function() {\n                    return values = this._many(function() {\n                        return this._or(function() {\n                            switch (this.anything()) {\n                              case \"?\":\n                                return \"?\";\n\n                              default:\n                                throw this._fail();\n                            }\n                        }, function() {\n                            this._apply(\"true\");\n                            return 1;\n                        }, function() {\n                            this._apply(\"false\");\n                            return 0;\n                        }, function() {\n                            return this._apply(\"Null\");\n                        }, function() {\n                            return this._apply(\"Bind\");\n                        }, function() {\n                            return this._apply(\"Default\");\n                        }, function() {\n                            return this._apply(\"Text\");\n                        }, function() {\n                            return this._apply(\"Number\");\n                        });\n                    });\n                });\n            });\n            return values;\n        },\n        Default: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            this._applyWithArgs(\"exactly\", \"Default\");\n            return \"DEFAULT\";\n        },\n        Select: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, as, field, fields, table, value;\n            this._applyWithArgs(\"exactly\", \"Select\");\n            this._form(function() {\n                return this._or(function() {\n                    this._apply(\"end\");\n                    return fields = [ \"1\" ];\n                }, function() {\n                    return fields = this._many(function() {\n                        return this._or(function() {\n                            this._form(function() {\n                                return field = this._or(function() {\n                                    field = this._applyWithArgs(\"SelectField\", indent);\n                                    as = this.anything();\n                                    return field + ' AS \"' + as + '\"';\n                                }, function() {\n                                    switch (this.anything()) {\n                                      case \"Count\":\n                                        this._applyWithArgs(\"exactly\", \"*\");\n                                        return \"COUNT(*)\";\n\n                                      default:\n                                        throw this._fail();\n                                    }\n                                }, function() {\n                                    table = this.anything();\n                                    this._applyWithArgs(\"exactly\", \"*\");\n                                    return '\"' + table + '\".*';\n                                }, function() {\n                                    value = this._applyWithArgs(\"AnyValue\", indent);\n                                    as = this.anything();\n                                    return value + ' AS \"' + as + '\"';\n                                });\n                            });\n                            return field;\n                        }, function() {\n                            return this._applyWithArgs(\"AnyValue\", indent);\n                        }, function() {\n                            switch (this.anything()) {\n                              case \"*\":\n                                return \"*\";\n\n                              default:\n                                throw this._fail();\n                            }\n                        }, function() {\n                            return this._apply(\"Null\");\n                        });\n                    });\n                });\n            });\n            return fields;\n        },\n        SelectField: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._apply(\"Count\");\n            }, function() {\n                return this._applyWithArgs(\"AnyValue\", indent);\n            }, function() {\n                return this._apply(\"Null\");\n            });\n        },\n        Count: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Count\");\n                return this._applyWithArgs(\"exactly\", \"*\");\n            });\n            return \"COUNT(*)\";\n        },\n        Table: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, alias, from, nestedindent, query, table;\n            this._applyWithArgs(\"exactly\", \"From\");\n            nestedindent = this._applyWithArgs(\"NestedIndent\", indent);\n            return this._or(function() {\n                this._not(function() {\n                    return this._apply(\"string\");\n                });\n                this._form(function() {\n                    from = this._or(function() {\n                        query = this._applyWithArgs(\"SelectQuery\", nestedindent);\n                        return \"(\" + nestedindent + query + indent + \")\";\n                    }, function() {\n                        table = this.anything();\n                        return '\"' + table + '\"';\n                    });\n                    return alias = this.anything();\n                });\n                return from + ' AS \"' + alias + '\"';\n            }, function() {\n                query = this._applyWithArgs(\"SelectQuery\", nestedindent);\n                return \"(\" + nestedindent + query + indent + \")\";\n            }, function() {\n                table = this.anything();\n                return '\"' + table + '\"';\n            });\n        },\n        Where: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, ruleBody;\n            this._applyWithArgs(\"exactly\", \"Where\");\n            ruleBody = this._applyWithArgs(\"BooleanValue\", indent);\n            return \"WHERE \" + ruleBody;\n        },\n        GroupBy: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, values;\n            this._applyWithArgs(\"exactly\", \"GroupBy\");\n            this._form(function() {\n                return values = this._many1(function() {\n                    return this._applyWithArgs(\"AnyValue\", indent);\n                });\n            });\n            return \"GROUP BY \" + values.join(\", \");\n        },\n        OrderBy: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, field, nestedIndent, order, orders;\n            this._applyWithArgs(\"exactly\", \"OrderBy\");\n            orders = this._many1(function() {\n                this._form(function() {\n                    order = function() {\n                        switch (this.anything()) {\n                          case \"ASC\":\n                            return \"ASC\";\n\n                          case \"DESC\":\n                            return \"DESC\";\n\n                          default:\n                            throw this._fail();\n                        }\n                    }.call(this);\n                    return field = this._apply(\"Field\");\n                });\n                return field + \" \" + order;\n            });\n            nestedIndent = this._applyWithArgs(\"NestedIndent\", indent);\n            return \"ORDER BY \" + orders.join(\",\" + nestedIndent);\n        },\n        Limit: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, num;\n            this._applyWithArgs(\"exactly\", \"Limit\");\n            num = this._applyWithArgs(\"NumericValue\", indent);\n            return \"LIMIT \" + num;\n        },\n        Offset: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, num;\n            this._applyWithArgs(\"exactly\", \"Offset\");\n            num = this._applyWithArgs(\"NumericValue\", indent);\n            return \"OFFSET \" + num;\n        },\n        AnyValue: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._applyWithArgs(\"UnknownValue\", indent);\n            }, function() {\n                return this._applyWithArgs(\"TextValue\", indent);\n            }, function() {\n                return this._applyWithArgs(\"NumericValue\", indent);\n            }, function() {\n                return this._applyWithArgs(\"BooleanValue\", indent);\n            }, function() {\n                return this._applyWithArgs(\"DateValue\", indent);\n            }, function() {\n                return this._applyWithArgs(\"JSONValue\", indent);\n            }, function() {\n                return this._applyWithArgs(\"DurationValue\", indent);\n            });\n        },\n        UnknownValue: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, nestedIndent, query;\n            return this._or(function() {\n                return this._apply(\"Field\");\n            }, function() {\n                return this._apply(\"Bind\");\n            }, function() {\n                return this._apply(\"Null\");\n            }, function() {\n                return this._applyWithArgs(\"Cast\", indent);\n            }, function() {\n                nestedIndent = this._applyWithArgs(\"NestedIndent\", indent);\n                query = this._applyWithArgs(\"SelectQuery\", nestedIndent);\n                return \"(\" + nestedIndent + query + indent + \")\";\n            });\n        },\n        Field: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._apply(\"ReferencedField\");\n            }, function() {\n                return this._apply(\"UnreferencedField\");\n            });\n        },\n        UnreferencedField: function() {\n            var $elf = this, _fromIdx = this.input.idx, field;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Field\");\n                return field = this.anything();\n            });\n            return '\"' + field + '\"';\n        },\n        ReferencedField: function() {\n            var $elf = this, _fromIdx = this.input.idx, field, table;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"ReferencedField\");\n                table = this.anything();\n                return field = this.anything();\n            });\n            return '\"' + table + '\".\"' + field + '\"';\n        },\n        Bind: function() {\n            var $elf = this, _fromIdx = this.input.idx, bind, field, tableName;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Bind\");\n                return bind = this._or(function() {\n                    return this._apply(\"number\");\n                }, function() {\n                    tableName = this.anything();\n                    field = this.anything();\n                    return [ tableName, field ];\n                });\n            });\n            this.fieldOrderings.push([ \"Bind\", bind ]);\n            return \"?\";\n        },\n        Null: function() {\n            var $elf = this, _fromIdx = this.input.idx, next;\n            next = this.anything();\n            this._pred(null === next);\n            return \"NULL\";\n        },\n        Cast: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, type, v;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Cast\");\n                v = this._applyWithArgs(\"AnyValue\", indent);\n                return type = this._apply(\"DataType\");\n            });\n            return \"CAST(\" + v + \" AS \" + type + \")\";\n        },\n        DataType: function() {\n            var $elf = this, _fromIdx = this.input.idx, dbType, typeName;\n            typeName = this.anything();\n            this._pred(sbvrTypes[typeName]);\n            this._pred(sbvrTypes[typeName].types[this.engine]);\n            dbType = sbvrTypes[typeName].types[this.engine];\n            return this._or(function() {\n                this._pred(_.isFunction(dbType) || \"SERIAL\" === dbType.toUpperCase());\n                return \"INTEGER\";\n            }, function() {\n                return dbType;\n            });\n        },\n        TextValue: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._applyWithArgs(\"UnknownValue\", indent);\n            }, function() {\n                return this._apply(\"Text\");\n            }, function() {\n                return this._applyWithArgs(\"Concat\", indent);\n            }, function() {\n                return this._applyWithArgs(\"Lower\", indent);\n            }, function() {\n                return this._applyWithArgs(\"Upper\", indent);\n            }, function() {\n                return this._applyWithArgs(\"Trim\", indent);\n            }, function() {\n                return this._applyWithArgs(\"Replace\", indent);\n            }, function() {\n                return this._applyWithArgs(\"Substring\", indent);\n            }, function() {\n                return this._applyWithArgs(\"Right\", indent);\n            });\n        },\n        Text: function() {\n            var $elf = this, _fromIdx = this.input.idx, text;\n            this._form(function() {\n                (function() {\n                    switch (this.anything()) {\n                      case \"Text\":\n                        return \"Text\";\n\n                      case \"Value\":\n                        return \"Value\";\n\n                      default:\n                        throw this._fail();\n                    }\n                }).call(this);\n                return text = this.anything();\n            });\n            this.fieldOrderings.push([ \"Text\", text ]);\n            return \"?\";\n        },\n        Concat: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, comparators;\n            this._form(function() {\n                (function() {\n                    switch (this.anything()) {\n                      case \"Concat\":\n                        return \"Concat\";\n\n                      case \"Concatenate\":\n                        return \"Concatenate\";\n\n                      default:\n                        throw this._fail();\n                    }\n                }).call(this);\n                return comparators = this._many1(function() {\n                    return this._applyWithArgs(\"TextValue\", indent);\n                });\n            });\n            return this._or(function() {\n                this._pred(\"mysql\" == this.engine);\n                return \"CONCAT(\" + comparators.join(\", \") + \")\";\n            }, function() {\n                return \"(\" + comparators.join(\" || \") + \")\";\n            });\n        },\n        Lower: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, string;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Lower\");\n                return string = this._applyWithArgs(\"TextValue\", indent);\n            });\n            return \"LOWER(\" + string + \")\";\n        },\n        Upper: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, string;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Upper\");\n                return string = this._applyWithArgs(\"TextValue\", indent);\n            });\n            return \"UPPER(\" + string + \")\";\n        },\n        Trim: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, string;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Trim\");\n                return string = this._applyWithArgs(\"TextValue\", indent);\n            });\n            return \"TRIM(\" + string + \")\";\n        },\n        Replace: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, find, replacement, string;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Replace\");\n                string = this._applyWithArgs(\"TextValue\", indent);\n                find = this._applyWithArgs(\"TextValue\", indent);\n                return replacement = this._applyWithArgs(\"TextValue\", indent);\n            });\n            return \"REPLACE(\" + string + \", \" + find + \", \" + replacement + \")\";\n        },\n        Substring: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, args, string;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Substring\");\n                string = this._apply(\"TextValue\");\n                return args = this._many1(function() {\n                    return this._apply(\"NumericValue\");\n                });\n            });\n            return \"SUBSTRING(\" + [ string ].concat(args).join(\", \") + \")\";\n        },\n        Right: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, n, string;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Right\");\n                string = this._apply(\"TextValue\");\n                return n = this._apply(\"NumericValue\");\n            });\n            return this._or(function() {\n                this._pred(\"websql\" == this.engine);\n                return \"SUBSTRING(\" + string + \", -\" + n + \")\";\n            }, function() {\n                return \"RIGHT(\" + string + \", \" + n + \")\";\n            });\n        },\n        NumericValue: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._applyWithArgs(\"UnknownValue\", indent);\n            }, function() {\n                return this._apply(\"Number\");\n            }, function() {\n                return this._applyWithArgs(\"MathOp\", indent);\n            }, function() {\n                return this._applyWithArgs(\"BitwiseAnd\", indent);\n            }, function() {\n                return this._applyWithArgs(\"BitwiseShiftRight\", indent);\n            }, function() {\n                return this._applyWithArgs(\"CharacterLength\", indent);\n            }, function() {\n                return this._applyWithArgs(\"StrPos\", indent);\n            }, function() {\n                return this._applyWithArgs(\"ExtractNumericDatePart\", indent);\n            }, function() {\n                return this._applyWithArgs(\"TotalSeconds\", indent);\n            }, function() {\n                return this._applyWithArgs(\"Round\", indent);\n            }, function() {\n                return this._applyWithArgs(\"Floor\", indent);\n            }, function() {\n                return this._applyWithArgs(\"Ceiling\", indent);\n            });\n        },\n        Number: function() {\n            var $elf = this, _fromIdx = this.input.idx, number;\n            this._form(function() {\n                (function() {\n                    switch (this.anything()) {\n                      case \"Integer\":\n                        return \"Integer\";\n\n                      case \"Number\":\n                        return \"Number\";\n\n                      case \"Real\":\n                        return \"Real\";\n\n                      default:\n                        throw this._fail();\n                    }\n                }).call(this);\n                return number = this._apply(\"number\");\n            });\n            return number;\n        },\n        MathOp: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, lhs, op, rhs;\n            this._form(function() {\n                op = function() {\n                    switch (this.anything()) {\n                      case \"Add\":\n                        return \"+\";\n\n                      case \"Divide\":\n                        return \"/\";\n\n                      case \"Multiply\":\n                        return \"*\";\n\n                      case \"Subtract\":\n                        return \"-\";\n\n                      default:\n                        throw this._fail();\n                    }\n                }.call(this);\n                lhs = this._applyWithArgs(\"NumericValue\", indent);\n                return rhs = this._applyWithArgs(\"NumericValue\", indent);\n            });\n            return [ lhs, op, rhs ].join(\" \");\n        },\n        BitwiseAnd: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, mask, operand;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"BitwiseAnd\");\n                operand = this._applyWithArgs(\"NumericValue\", indent);\n                return mask = this._applyWithArgs(\"NumericValue\", indent);\n            });\n            return \"(\" + operand + \" & \" + mask + \")\";\n        },\n        BitwiseShiftRight: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, operand, shift;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"BitwiseShiftRight\");\n                operand = this._applyWithArgs(\"NumericValue\", indent);\n                return shift = this._applyWithArgs(\"NumericValue\", indent);\n            });\n            return \"(\" + operand + \" >> \" + shift + \")\";\n        },\n        CharacterLength: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, text;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"CharacterLength\");\n                return text = this._applyWithArgs(\"TextValue\", indent);\n            });\n            return this._or(function() {\n                this._pred(\"mysql\" == this.engine);\n                return \"CHAR_LENGTH(\" + text + \")\";\n            }, function() {\n                return \"LENGTH(\" + text + \")\";\n            });\n        },\n        StrPos: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, haystack, needle;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"StrPos\");\n                haystack = this._apply(\"TextValue\");\n                return needle = this._apply(\"TextValue\");\n            });\n            return this._or(function() {\n                this._pred(\"postgres\" == this.engine);\n                return \"STRPOS(\" + haystack + \", \" + needle + \")\";\n            }, function() {\n                return \"INSTR(\" + haystack + \", \" + needle + \")\";\n            });\n        },\n        ExtractNumericDatePart: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, date, part;\n            this._form(function() {\n                part = function() {\n                    switch (this.anything()) {\n                      case \"Day\":\n                        return \"Day\";\n\n                      case \"Fractionalseconds\":\n                        return \"Fractionalseconds\";\n\n                      case \"Hour\":\n                        return \"Hour\";\n\n                      case \"Minute\":\n                        return \"Minute\";\n\n                      case \"Month\":\n                        return \"Month\";\n\n                      case \"Second\":\n                        return \"Second\";\n\n                      case \"Year\":\n                        return \"Year\";\n\n                      default:\n                        throw this._fail();\n                    }\n                }.call(this);\n                return date = this._apply(\"DateValue\");\n            });\n            return this._or(function() {\n                this._pred(\"websql\" == this.engine);\n                return websqlDateFormats[part](date);\n            }, function() {\n                return dateFormats[part](date);\n            });\n        },\n        TotalSeconds: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, duration;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Totalseconds\");\n                return duration = this._applyWithArgs(\"DurationValue\", indent);\n            });\n            return this._or(function() {\n                this._pred(\"postgres\" == this.engine);\n                return \"EXTRACT(EPOCH FROM \" + duration + \")\";\n            }, function() {\n                this._pred(\"mysql\" == this.engine);\n                return \"(TIMESTAMPDIFF(MICROSECOND, FROM_UNIXTIME(0), FROM_UNIXTIME(0) + \" + duration + \") / 1000000)\";\n            }, function() {\n                return function() {\n                    throw new Error(\"TotalSeconds not supported on: \" + this.engine);\n                }.call(this);\n            });\n        },\n        Round: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, num;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Round\");\n                return num = this._apply(\"NumericValue\");\n            });\n            return \"ROUND(\" + num + \")\";\n        },\n        Floor: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, num;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Floor\");\n                return num = this._apply(\"NumericValue\");\n            });\n            return \"FLOOR(\" + num + \")\";\n        },\n        Ceiling: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, num;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Ceiling\");\n                return num = this._apply(\"NumericValue\");\n            });\n            return \"CEILING(\" + num + \")\";\n        },\n        BooleanValue: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._applyWithArgs(\"UnknownValue\", indent);\n            }, function() {\n                return this._apply(\"Boolean\");\n            }, function() {\n                return this._applyWithArgs(\"And\", indent);\n            }, function() {\n                return this._applyWithArgs(\"Not\", indent);\n            }, function() {\n                return this._applyWithArgs(\"Or\", indent);\n            }, function() {\n                return this._applyWithArgs(\"Exists\", indent);\n            }, function() {\n                return this._applyWithArgs(\"NotExists\", indent);\n            }, function() {\n                return this._applyWithArgs(\"Comparison\", indent);\n            }, function() {\n                return this._applyWithArgs(\"Between\", indent);\n            }, function() {\n                return this._applyWithArgs(\"In\", indent);\n            }, function() {\n                return this._applyWithArgs(\"NotIn\", indent);\n            });\n        },\n        Boolean: function() {\n            var $elf = this, _fromIdx = this.input.idx, bool;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Boolean\");\n                return bool = this._or(function() {\n                    this._apply(\"true\");\n                    return 1;\n                }, function() {\n                    this._apply(\"false\");\n                    return 0;\n                });\n            });\n            return bool;\n        },\n        Not: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, bool, nestedIndent;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Not\");\n                nestedIndent = this._applyWithArgs(\"NestedIndent\", indent);\n                return bool = this._applyWithArgs(\"BooleanValue\", nestedIndent);\n            });\n            return \"NOT (\" + nestedIndent + bool + indent + \")\";\n        },\n        And: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, bools;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"And\");\n                return bools = this._many(function() {\n                    return this._applyWithArgs(\"BooleanValue\", indent);\n                });\n            });\n            return bools.join(indent + \"AND \");\n        },\n        Or: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, bools;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Or\");\n                return bools = this._many(function() {\n                    return this._applyWithArgs(\"BooleanValue\", indent);\n                });\n            });\n            return \"(\" + bools.join(indent + \"OR \") + \")\";\n        },\n        Exists: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, comparator, exists, nestedIndent, ruleBody;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Exists\");\n                return exists = this._or(function() {\n                    nestedIndent = this._applyWithArgs(\"NestedIndent\", indent);\n                    ruleBody = this._applyWithArgs(\"SelectQuery\", nestedIndent);\n                    return \"EXISTS (\" + nestedIndent + ruleBody + indent + \")\";\n                }, function() {\n                    comparator = this._applyWithArgs(\"AnyValue\", indent);\n                    return comparator + \" IS NOT NULL\";\n                });\n            });\n            return exists;\n        },\n        NotExists: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, comparator, exists, nestedIndent, ruleBody;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"NotExists\");\n                return exists = this._or(function() {\n                    nestedIndent = this._applyWithArgs(\"NestedIndent\", indent);\n                    ruleBody = this._applyWithArgs(\"SelectQuery\", nestedIndent);\n                    return \"NOT EXISTS (\" + nestedIndent + ruleBody + indent + \")\";\n                }, function() {\n                    comparator = this._applyWithArgs(\"AnyValue\", indent);\n                    return comparator + \" IS NULL\";\n                });\n            });\n            return exists;\n        },\n        Comparison: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, a, b, comparison;\n            this._form(function() {\n                comparison = function() {\n                    switch (this.anything()) {\n                      case \"Equals\":\n                        return \"Equals\";\n\n                      case \"GreaterThan\":\n                        return \"GreaterThan\";\n\n                      case \"GreaterThanOrEqual\":\n                        return \"GreaterThanOrEqual\";\n\n                      case \"LessThan\":\n                        return \"LessThan\";\n\n                      case \"LessThanOrEqual\":\n                        return \"LessThanOrEqual\";\n\n                      case \"Like\":\n                        return \"Like\";\n\n                      case \"NotEquals\":\n                        return \"NotEquals\";\n\n                      default:\n                        throw this._fail();\n                    }\n                }.call(this);\n                a = this._applyWithArgs(\"AnyValue\", indent);\n                return b = this._applyWithArgs(\"AnyValue\", indent);\n            });\n            return a + comparisons[comparison] + b;\n        },\n        Between: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, a, b, val;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Between\");\n                val = this._applyWithArgs(\"AnyValue\", indent);\n                a = this._applyWithArgs(\"AnyValue\", indent);\n                return b = this._applyWithArgs(\"AnyValue\", indent);\n            });\n            return val + \" BETWEEN \" + a + \" AND \" + b;\n        },\n        In: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, field, vals;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"In\");\n                field = this._apply(\"Field\");\n                return vals = this._many1(function() {\n                    return this._applyWithArgs(\"AnyValue\", indent);\n                });\n            });\n            return field + \" IN (\" + vals.join(\", \") + \")\";\n        },\n        NotIn: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, field, vals;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"NotIn\");\n                field = this._apply(\"Field\");\n                return vals = this._many1(function() {\n                    return this._applyWithArgs(\"AnyValue\", indent);\n                });\n            });\n            return field + \" NOT IN (\" + vals.join(\", \") + \")\";\n        },\n        DateValue: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._applyWithArgs(\"UnknownValue\", indent);\n            }, function() {\n                return this._applyWithArgs(\"Date\", indent);\n            }, function() {\n                return this._applyWithArgs(\"ToDate\", indent);\n            }, function() {\n                return this._applyWithArgs(\"ToTime\", indent);\n            }, function() {\n                return this._applyWithArgs(\"Now\", indent);\n            });\n        },\n        Date: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, date;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Date\");\n                return date = this.anything();\n            });\n            this.fieldOrderings.push([ \"Date\", date ]);\n            return \"?\";\n        },\n        ToDate: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, date;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"ToDate\");\n                return date = this._apply(\"DateValue\");\n            });\n            return \"DATE(\" + date + \")\";\n        },\n        ToTime: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, date;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"ToTime\");\n                return date = this._apply(\"DateValue\");\n            });\n            return this._or(function() {\n                this._pred(\"postgres\" == this.engine);\n                return \"CAST(\" + date + \" AS TIME)\";\n            }, function() {\n                return \"TIME(\" + date + \")\";\n            });\n        },\n        Now: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx;\n            this._form(function() {\n                return this._applyWithArgs(\"exactly\", \"Now\");\n            });\n            return \"CURRENT_TIMESTAMP\";\n        },\n        JSONValue: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._applyWithArgs(\"UnknownValue\", indent);\n            }, function() {\n                return this._applyWithArgs(\"AggregateJSON\", indent);\n            });\n        },\n        AggregateJSON: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, field, table;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"AggregateJSON\");\n                return this._form(function() {\n                    table = this.anything();\n                    return field = this._or(function() {\n                        switch (this.anything()) {\n                          case \"*\":\n                            return \"*\";\n\n                          default:\n                            throw this._fail();\n                        }\n                    }, function() {\n                        field = this.anything();\n                        return '\"' + field + '\"';\n                    });\n                });\n            });\n            field = '\"' + table + '\".' + field;\n            return this._or(function() {\n                this._pred(\"postgres\" == this.engine);\n                return \"coalesce(array_to_json(array_agg(\" + field + \")), '[]')\";\n            }, function() {\n                return function() {\n                    throw new Error(\"AggregateJSON not supported on: \" + this.engine);\n                }.call(this);\n            });\n        },\n        DurationValue: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._applyWithArgs(\"UnknownValue\", indent);\n            }, function() {\n                return this._applyWithArgs(\"Duration\", indent);\n            });\n        },\n        Duration: function(indent) {\n            var $elf = this, _fromIdx = this.input.idx, duration;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Duration\");\n                return duration = this.anything();\n            });\n            this._pred(_.isObject(duration));\n            duration = _(duration).pick(\"negative\", \"day\", \"hour\", \"minute\", \"second\").omitBy(_.isNil).value();\n            this._pred(!_(duration).omit(\"negative\").isEmpty());\n            return this._or(function() {\n                this._pred(\"websql\" == this.engine);\n                return function() {\n                    throw new Error(\"Durations not supported on: \" + this.engine);\n                }.call(this);\n            }, function() {\n                return \"INTERVAL '\" + (duration.negative ? \"-\" : \"\") + (duration.day || \"0\") + \" \" + (duration.negative ? \"-\" : \"\") + (duration.hour || \"0\") + \":\" + (duration.minute || \"0\") + \":\" + Number(duration.second).toLocaleString(\"en\", {\n                    minimumFractionDigits: 1\n                }) + \"'\" + (\"mysql\" == this.engine ? \" DAY_MICROSECOND\" : \"\");\n            });\n        },\n        Process: function() {\n            var $elf = this, _fromIdx = this.input.idx, query, value;\n            return this._or(function() {\n                this.fieldOrderings = [];\n                query = this._or(function() {\n                    return this._applyWithArgs(\"SelectQuery\", \"\\n\");\n                }, function() {\n                    return this._applyWithArgs(\"InsertQuery\", \"\\n\");\n                }, function() {\n                    return this._applyWithArgs(\"UpdateQuery\", \"\\n\");\n                }, function() {\n                    return this._applyWithArgs(\"DeleteQuery\", \"\\n\");\n                });\n                return {\n                    query: query,\n                    bindings: this.fieldOrderings\n                };\n            }, function() {\n                return this._applyWithArgs(\"UpsertQuery\", \"\\n\");\n            }, function() {\n                value = this._applyWithArgs(\"AnyValue\", \"\\n\");\n                return \"SELECT \" + value + ' AS \"result\";';\n            });\n        }\n    });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@resin/abstract-sql-compiler/AbstractSQLRules2SQL.js\n// module id = 35\n// module chunks = 0","(function() {\n  var hasProp = {}.hasOwnProperty;\n\n  (function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      return define(['lodash', 'bluebird'], function(_, Promise) {\n        return (root.SBVRTypes = factory(_, Promise));\n      });\n    } else if (typeof exports === 'object') {\n      return module.exports = factory(require('lodash'), require('bluebird'));\n    } else {\n      return root.SBVRTypes = factory(_, Promise);\n    }\n  })(this, function(_, Promise) {\n    var TypeUtils;\n    TypeUtils = (function() {\n      var equality;\n      equality = function(from, to) {\n        return ['Equals', from, to];\n      };\n      return {\n        nativeFactTypeTemplates: {\n          equality: {\n            'is equal to': equality,\n            'equals': equality\n          },\n          comparison: {\n            'is greater than': function(from, to) {\n              return ['GreaterThan', from, to];\n            },\n            'is greater than or equal to': function(from, to) {\n              return ['GreaterThanOrEqual', from, to];\n            },\n            'is less than': function(from, to) {\n              return ['LessThan', from, to];\n            },\n            'is less than or equal to': function(from, to) {\n              return ['LessThanOrEqual', from, to];\n            },\n            'is equal to': equality,\n            'equals': equality\n          }\n        },\n        validate: {\n          integer: function(value, required, callback) {\n            var processedValue;\n            processedValue = parseInt(value, 10);\n            if (_.isNaN(processedValue)) {\n              return callback('is not a number: ' + value);\n            } else {\n              return callback(null, processedValue);\n            }\n          },\n          text: function(length) {\n            return function(value, required, callback) {\n              if (!_.isString(value)) {\n                return callback('is not a string: ' + value);\n              } else if ((length != null) && value.length > length) {\n                return callback('longer than ' + length + ' characters (' + value.length + ')');\n              } else {\n                return callback(null, value);\n              }\n            };\n          },\n          date: function(value, required, callback) {\n            var processedValue;\n            processedValue = Number(value);\n            if (_.isNaN(processedValue)) {\n              processedValue = value;\n            }\n            processedValue = new Date(processedValue);\n            if (_.isNaN(processedValue.getTime())) {\n              return callback('is not a valid date: ' + value);\n            } else {\n              return callback(null, processedValue);\n            }\n          }\n        }\n      };\n    })();\n    return {\n      \"Boolean\": (function() {\n        var typeFunc;\n        typeFunc = function(necessity, index, defaultValue) {\n          if (defaultValue == null) {\n            defaultValue = ' DEFAULT 0';\n          }\n          return 'INTEGER' + defaultValue + necessity + index;\n        };\n        return {\n          types: {\n            postgres: typeFunc,\n            mysql: typeFunc,\n            websql: typeFunc,\n            odata: {\n              name: 'Edm.Boolean'\n            }\n          },\n          fetchProcessing: function(data, callback) {\n            return callback(null, data === 1);\n          },\n          validate: function(originalValue, required, callback) {\n            var value;\n            value = Number(originalValue);\n            if (_.isNaN(value) || (value !== 0 && value !== 1)) {\n              return callback(\"is not a boolean: \" + (JSON.stringify(originalValue)) + \" (\" + (typeof originalValue) + \")\");\n            } else {\n              return callback(null, value);\n            }\n          }\n        };\n      })(),\n      \"Color\": {\n        types: {\n          postgres: 'INTEGER',\n          mysql: 'INTEGER',\n          websql: 'INTEGER',\n          odata: {\n            name: 'Self.Color',\n            complexType: '<ComplexType Name=\"Color\">\\n\t <Property Name=\"r\" Nullable=\"false\" Type=\"Edm.Int8\"/><Property Name=\"g\" Nullable=\"false\" Type=\"Edm.Int8\"/><Property Name=\"b\" Nullable=\"false\" Type=\"Edm.Int8\"/><Property Name=\"a\" Nullable=\"false\" Type=\"Edm.Int8\"/></ComplexType>'\n          }\n        },\n        nativeProperties: {\n          has: {\n            'Red Component': function(from) {\n              return ['BitwiseAnd', ['BitwiseShiftRight', from, 16], 255];\n            },\n            'Green Component': function(from) {\n              return ['BitwiseAnd', ['BitwiseShiftRight', from, 8], 255];\n            },\n            'Blue Component': function(from) {\n              return ['BitwiseShiftRight', from, 255];\n            },\n            'Alpha Component': function(from) {\n              return ['BitwiseAnd', ['BitwiseShiftRight', from, 24], 255];\n            }\n          }\n        },\n        fetchProcessing: function(data, callback) {\n          return callback(null, {\n            r: (data >> 16) & 0xFF,\n            g: (data >> 8) & 0xFF,\n            b: data & 0xFF,\n            a: (data >> 24) & 0xFF\n          });\n        },\n        validate: function(value, required, callback) {\n          var component, componentValue, processedValue;\n          if (!_.isObject(value)) {\n            processedValue = parseInt(value, 10);\n            if (_.isNaN(processedValue)) {\n              callback('is neither an integer or color object: ' + value);\n              return;\n            }\n          } else {\n            processedValue = 0;\n            for (component in value) {\n              if (!hasProp.call(value, component)) continue;\n              componentValue = value[component];\n              if (_.isNaN(componentValue) || componentValue > 255) {\n                callback('has invalid component value of ' + componentValue + ' for component ' + component);\n                return;\n              }\n              switch (component.toLowerCase()) {\n                case 'r':\n                case 'red':\n                  processedValue |= componentValue << 16;\n                  break;\n                case 'g':\n                case 'green':\n                  processedValue |= componentValue << 8;\n                  break;\n                case 'b':\n                case 'blue':\n                  processedValue |= componentValue;\n                  break;\n                case 'a':\n                case 'alpha':\n                  processedValue |= componentValue << 24;\n                  break;\n                default:\n                  callback('has an unknown component: ' + component);\n                  return;\n              }\n            }\n          }\n          return callback(null, processedValue);\n        }\n      },\n      \"ConceptType\": {\n        types: {\n          postgres: 'INTEGER',\n          mysql: 'INTEGER',\n          websql: 'INTEGER',\n          odata: {\n            name: 'Edm.Int64'\n          }\n        },\n        nativeFactTypes: {\n          Integer: TypeUtils.nativeFactTypeTemplates.comparison,\n          Real: TypeUtils.nativeFactTypeTemplates.comparison\n        },\n        validate: TypeUtils.validate.integer\n      },\n      \"Date Time\": {\n        types: {\n          postgres: 'TIMESTAMP',\n          mysql: 'TIMESTAMP',\n          websql: 'INTEGER',\n          odata: {\n            name: 'Edm.DateTime'\n          }\n        },\n        fetchProcessing: function(data, callback) {\n          if (data != null) {\n            data = new Date(data);\n          }\n          return callback(null, data);\n        },\n        validate: TypeUtils.validate.date\n      },\n      \"Date\": {\n        types: {\n          postgres: 'DATE',\n          mysql: 'DATE',\n          websql: 'INTEGER',\n          odata: {\n            name: 'Edm.DateTime'\n          }\n        },\n        fetchProcessing: function(data, callback) {\n          if (data != null) {\n            data = new Date(data);\n          }\n          return callback(null, data);\n        },\n        validate: TypeUtils.validate.date\n      },\n      \"File\": {\n        types: {\n          postgres: 'BYTEA',\n          mysql: 'BLOB',\n          websql: 'BLOB',\n          odata: {\n            name: 'Edm.String'\n          }\n        },\n        validate: function(value, required, callback) {\n          var e, error;\n          if (Buffer.isBuffer(value)) {\n            return callback(null, value);\n          } else if (_.isString(value)) {\n            try {\n              value = new Buffer(value, 'hex');\n            } catch (error) {\n              e = error;\n              callback(\"could not be converted to binary: \" + e.message);\n              return;\n            }\n            return callback(null, value);\n          } else {\n            return callback(\"could not be converted to binary: \" + (typeof value));\n          }\n        }\n      },\n      \"ForeignKey\": {\n        types: {\n          postgres: 'INTEGER',\n          mysql: 'INTEGER',\n          websql: 'INTEGER',\n          odata: {\n            name: 'Edm.Int64'\n          }\n        },\n        nativeFactTypes: {\n          Integer: TypeUtils.nativeFactTypeTemplates.comparison,\n          Real: TypeUtils.nativeFactTypeTemplates.comparison\n        },\n        validate: TypeUtils.validate.integer\n      },\n      \"Hashed\": (function() {\n        var bcrypt, error;\n        try {\n          bcrypt = require('bcrypt');\n        } catch (error) {\n          bcrypt = require('bcryptjs');\n        }\n        bcrypt = Promise.promisifyAll(bcrypt);\n        return {\n          types: {\n            postgres: 'CHAR(60)',\n            mysql: 'CHAR(60)',\n            websql: 'CHAR(60)',\n            odata: {\n              name: 'Edm.String'\n            }\n          },\n          validate: function(value, required, callback) {\n            if (!_.isString(value)) {\n              return callback('is not a string');\n            } else {\n              return bcrypt.genSaltAsync().then(function(salt) {\n                return bcrypt.hashAsync(value, salt);\n              }).asCallback(callback);\n            }\n          },\n          compare: _.bind(bcrypt.compareAsync, bcrypt)\n        };\n      })(),\n      \"Integer\": {\n        types: {\n          postgres: 'INTEGER',\n          mysql: 'INTEGER',\n          websql: 'INTEGER',\n          odata: {\n            name: 'Edm.Int64'\n          }\n        },\n        nativeFactTypes: {\n          Integer: TypeUtils.nativeFactTypeTemplates.comparison,\n          Real: TypeUtils.nativeFactTypeTemplates.comparison\n        },\n        validate: TypeUtils.validate.integer\n      },\n      \"Interval\": {\n        types: {\n          postgres: 'INTERVAL',\n          mysql: 'INTEGER',\n          websql: 'INTEGER',\n          odata: {\n            name: 'Edm.Int64'\n          }\n        },\n        validate: TypeUtils.validate.integer\n      },\n      \"JSON\": {\n        types: {\n          postgres: 'TEXT',\n          mysql: 'TEXT',\n          websql: 'TEXT',\n          odata: {\n            name: 'Edm.String'\n          }\n        },\n        fetchProcessing: function(data, callback) {\n          var e, error;\n          try {\n            return callback(null, JSON.parse(data));\n          } catch (error) {\n            e = error;\n            return callback(e);\n          }\n        },\n        validate: function(value, required, callback) {\n          var e, error;\n          try {\n            return callback(null, JSON.stringify(value));\n          } catch (error) {\n            e = error;\n            console.error(e);\n            return callback('cannot be turned into JSON: ' + value);\n          }\n        }\n      },\n      \"Real\": {\n        types: {\n          postgres: 'REAL',\n          mysql: 'REAL',\n          websql: 'REAL',\n          odata: {\n            name: 'Edm.Double'\n          }\n        },\n        nativeFactTypes: {\n          Integer: TypeUtils.nativeFactTypeTemplates.comparison,\n          Real: TypeUtils.nativeFactTypeTemplates.comparison\n        },\n        validate: function(value, required, callback) {\n          var processedValue;\n          processedValue = parseFloat(value);\n          if (_.isNaN(processedValue)) {\n            return callback('is not a number: ' + value);\n          } else {\n            return callback(null, processedValue);\n          }\n        }\n      },\n      \"Serial\": {\n        types: {\n          postgres: 'SERIAL',\n          mysql: function(necessity, index, defaultValue) {\n            if (defaultValue == null) {\n              defaultValue = '';\n            }\n            return 'INTEGER' + defaultValue + necessity + index + ' AUTO_INCREMENT';\n          },\n          websql: function(necessity, index, defaultValue) {\n            if (defaultValue == null) {\n              defaultValue = '';\n            }\n            return 'INTEGER' + defaultValue + necessity + index + ' AUTOINCREMENT';\n          },\n          odata: {\n            name: 'Edm.Int64'\n          }\n        },\n        validate: TypeUtils.validate.integer\n      },\n      \"Short Text\": {\n        types: {\n          postgres: 'VARCHAR(255)',\n          mysql: 'VARCHAR(255)',\n          websql: 'VARCHAR(255)',\n          odata: {\n            name: 'Edm.String'\n          }\n        },\n        validate: TypeUtils.validate.text(255)\n      },\n      \"Text\": {\n        types: {\n          postgres: 'TEXT',\n          mysql: 'TEXT',\n          websql: 'TEXT',\n          odata: {\n            name: 'Edm.String'\n          }\n        },\n        nativeProperties: {\n          has: {\n            Length: function(from) {\n              return ['CharacterLength', from];\n            }\n          }\n        },\n        nativeFactTypes: {\n          Text: TypeUtils.nativeFactTypeTemplates.equality\n        },\n        validate: TypeUtils.validate.text()\n      },\n      \"Time\": {\n        types: {\n          postgres: 'TIME',\n          mysql: 'TIME',\n          websql: 'TEXT',\n          odata: {\n            name: 'Edm.DateTime'\n          }\n        },\n        fetchProcessing: function(data, callback) {\n          if (data != null) {\n            data = new Date('Thu, 01 Jan 1970 ' + data);\n          }\n          return callback(null, data);\n        },\n        validate: function(value, required, callback) {\n          return TypeUtils.validate.date(value, required, function(err, value) {\n            if (err) {\n              callback(err);\n              return;\n            }\n            return callback(null, value.toLocaleTimeString());\n          });\n        }\n      }\n    };\n  });\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@resin/sbvr-types/bin/types.js\n// module id = 36\n// module chunks = 0","module.exports = require(\"bcrypt\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bcrypt\"\n// module id = 37\n// module chunks = 0","module.exports = require(\"bcryptjs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bcryptjs\"\n// module id = 38\n// module chunks = 0","module.exports = require(\"pinejs-client/core\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"pinejs-client/core\"\n// module id = 39\n// module chunks = 0","{ SBVRParser } = require '@resin/sbvr-parser'\nTypes = require '@resin/sbvr-types/Type.sbvr'\n\nmodule.exports = SBVRParser._extend\n\tinitialize: ->\n\t\tSBVRParser.initialize.call(this)\n\t\t@AddCustomAttribute('Database ID Field:')\n\t\t@AddCustomAttribute('Database Table Name:')\n\t\t@AddBuiltInVocab(Types)\n\t\treturn this\n\n\n\n// WEBPACK FOOTER //\n// ./src/common/extended-sbvr-parser/extended-sbvr-parser.coffee","!function(root, factory) {\n    \"function\" == typeof define && define.amd ? define([ \"require\", \"exports\", \"ometa-core\", \"./sbvr-libs\", \"lodash\", \"./inflection\" ], factory) : \"object\" == typeof exports ? factory(require, exports, require(\"ometa-js\").core) : factory(function(moduleName) {\n        return root[moduleName];\n    }, root, root.OMeta);\n}(this, function(require, exports, OMeta) {\n    var SBVRLibs = require(\"./sbvr-libs\").SBVRLibs, _ = require(\"lodash\");\n    require(\"./inflection\");\n    var SBVRParser = exports.SBVRParser = SBVRLibs._extend({\n        EOL: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return function() {\n                switch (this.anything()) {\n                  case \"\\n\":\n                    return \"\\n\";\n\n                  case \"\\r\":\n                    return this._opt(function() {\n                        return this._applyWithArgs(\"exactly\", \"\\n\");\n                    });\n\n                  default:\n                    throw this._fail();\n                }\n            }.call(this);\n        },\n        EOLSpaces: function() {\n            var $elf = this, _fromIdx = this.input.idx, eol;\n            eol = !1;\n            this._many(function() {\n                return this._or(function() {\n                    this._apply(\"EOL\");\n                    return eol = !0;\n                }, function() {\n                    return this._apply(\"space\");\n                });\n            });\n            return this._pred(eol);\n        },\n        IdentifierKey: function(identifier) {\n            var $elf = this, _fromIdx = this.input.idx, index;\n            index = this._or(function() {\n                this._pred(_.isArray(identifier[3]));\n                this._pred(\"Number\" == identifier[3][0]);\n                return identifier[3][1];\n            }, function() {\n                return \"\";\n            });\n            return identifier[1] + \"|\" + identifier[2] + \"|\" + index;\n        },\n        Bind: function(identifier, bindings) {\n            var $elf = this, _fromIdx = this.input.idx, binding, identifierKey, varNumber;\n            identifierKey = this._applyWithArgs(\"IdentifierKey\", identifier);\n            varNumber = this.ruleVars[identifierKey];\n            this._pred(null != varNumber);\n            binding = [ \"RoleBinding\", identifier, varNumber ];\n            this._opt(function() {\n                this._pred(bindings);\n                return bindings.push(binding);\n            });\n            return binding;\n        },\n        spaces: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._many(function() {\n                this._not(function() {\n                    return this._apply(\"EOL\");\n                });\n                return this._apply(\"space\");\n            });\n        },\n        Number: function() {\n            var $elf = this, _fromIdx = this.input.idx, n;\n            return this._or(function() {\n                this._apply(\"spaces\");\n                n = this._consumedBy(function() {\n                    return this._many1(function() {\n                        return this._apply(\"digit\");\n                    });\n                });\n                return [ \"Number\", parseInt(n, 10) ];\n            }, function() {\n                this._applyWithArgs(\"token\", \"one\");\n                return [ \"Number\", 1 ];\n            });\n        },\n        Real: function() {\n            var $elf = this, _fromIdx = this.input.idx, n;\n            this._apply(\"spaces\");\n            n = this._consumedBy(function() {\n                this._many1(function() {\n                    return this._apply(\"digit\");\n                });\n                this._applyWithArgs(\"exactly\", \".\");\n                return this._many1(function() {\n                    return this._apply(\"digit\");\n                });\n            });\n            return [ \"Real\", Number(n) ];\n        },\n        Integer: function() {\n            var $elf = this, _fromIdx = this.input.idx, n;\n            this._apply(\"spaces\");\n            n = this._consumedBy(function() {\n                return this._many1(function() {\n                    return this._apply(\"digit\");\n                });\n            });\n            return [ \"Integer\", Number(n) ];\n        },\n        Text: function() {\n            var $elf = this, _fromIdx = this.input.idx, text;\n            this._apply(\"spaces\");\n            this._applyWithArgs(\"exactly\", '\"');\n            text = this._consumedBy(function() {\n                return this._many1(function() {\n                    return this._or(function() {\n                        switch (this.anything()) {\n                          case \"\\\\\":\n                            return this._applyWithArgs(\"exactly\", '\"');\n\n                          default:\n                            throw this._fail();\n                        }\n                    }, function() {\n                        this._not(function() {\n                            return this._applyWithArgs(\"exactly\", '\"');\n                        });\n                        return this.anything();\n                    });\n                });\n            });\n            this._applyWithArgs(\"exactly\", '\"');\n            return [ \"Text\", text ];\n        },\n        Value: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._apply(\"Real\");\n            }, function() {\n                return this._apply(\"Integer\");\n            }, function() {\n                return this._apply(\"Text\");\n            });\n        },\n        toSBVREOL: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            this._apply(\"spaces\");\n            return this._consumedBy(function() {\n                return this._many(function() {\n                    this._apply(\"spaces\");\n                    return this._or(function() {\n                        return this._apply(\"InformalIdentifier\");\n                    }, function() {\n                        switch (this.anything()) {\n                          case \"'\":\n                            this._apply(\"InformalIdentifier\");\n                            return this._applyWithArgs(\"exactly\", \"'\");\n\n                          default:\n                            throw this._fail();\n                        }\n                    }, function() {\n                        return this._many1(function() {\n                            this._not(function() {\n                                return this._apply(\"space\");\n                            });\n                            return this.anything();\n                        });\n                    });\n                });\n            });\n        },\n        toEOL: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._consumedBy(function() {\n                return this._many(function() {\n                    this._not(function() {\n                        return this._apply(\"EOL\");\n                    });\n                    return this.anything();\n                });\n            });\n        },\n        token: function(x) {\n            var $elf = this, _fromIdx = this.input.idx, s;\n            this._apply(\"spaces\");\n            s = this._applyWithArgs(\"seq\", x);\n            this._lookahead(function() {\n                return this._or(function() {\n                    return this._apply(\"space\");\n                }, function() {\n                    return this._apply(\"end\");\n                });\n            });\n            return s;\n        },\n        AddIdentifier: function(identifierType, baseSynonym) {\n            var $elf = this, _fromIdx = this.input.idx, identifier, startInput;\n            startInput = this.input;\n            identifier = this._many1(function() {\n                return this._apply(\"IdentifierPart\");\n            });\n            identifier = identifier.join(\" \");\n            this._addToken(startInput, this.input, identifierType, []);\n            return function() {\n                return $elf._AddIdentifier(identifierType, identifier, baseSynonym);\n            };\n        },\n        InformalIdentifier: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._applyWithArgs(\"Identifier\", void 0, !0);\n        },\n        Identifier: function(factTypeSoFar, noAutoComplete) {\n            var $elf = this, _fromIdx = this.input.idx, name, term;\n            this._opt(function() {\n                return this._not(function() {\n                    return term = this._consumedBy(function() {\n                        return this._opt(function() {\n                            return this._applyWithArgs(\"Term\", factTypeSoFar);\n                        });\n                    });\n                });\n            });\n            this._opt(function() {\n                return this._not(function() {\n                    return name = this._consumedBy(function() {\n                        return this._opt(function() {\n                            return this._applyWithArgs(\"Name\", factTypeSoFar);\n                        });\n                    });\n                });\n            });\n            return this._or(function() {\n                this._pred(term || name);\n                return this._or(function() {\n                    this._pred(term.length > name.length);\n                    return this._applyWithArgs(\"Term\", factTypeSoFar);\n                }, function() {\n                    return this._applyWithArgs(\"Name\", factTypeSoFar);\n                });\n            }, function() {\n                this._pred(!noAutoComplete);\n                return this._or(function() {\n                    return this._applyWithArgs(\"Term\", factTypeSoFar);\n                }, function() {\n                    return this._applyWithArgs(\"Name\", factTypeSoFar);\n                });\n            });\n        },\n        Vocabulary: function() {\n            var $elf = this, _fromIdx = this.input.idx, vocabulary;\n            vocabulary = this._apply(\"FindVocabulary\");\n            return [ \"Vocabulary\", vocabulary ];\n        },\n        Name: function(factTypeSoFar) {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._applyWithArgs(\"FindIdentifier\", \"Name\", factTypeSoFar);\n        },\n        Term: function(factTypeSoFar) {\n            var $elf = this, _fromIdx = this.input.idx, n, term;\n            term = this._applyWithArgs(\"FindIdentifier\", \"Term\", factTypeSoFar);\n            this._opt(function() {\n                n = this._consumedBy(function() {\n                    return this._many1(function() {\n                        return this._apply(\"digit\");\n                    });\n                });\n                return term.push([ \"Number\", Number(n) ]);\n            });\n            return term;\n        },\n        FindIdentifier: function(identifierType, factTypeSoFar) {\n            var $elf = this, _fromIdx = this.input.idx, identifier, quote;\n            this._apply(\"spaces\");\n            quote = this._opt(function() {\n                return this._applyWithArgs(\"exactly\", \"'\");\n            });\n            identifier = this._applyWithArgs(\"FindIdentifierNest\", identifierType, factTypeSoFar);\n            this._or(function() {\n                return this._pred(!quote);\n            }, function() {\n                return this._applyWithArgs(\"seq\", quote);\n            });\n            return identifier;\n        },\n        FindIdentifierNest: function(identifierType, factTypeSoFar, identifierSoFar) {\n            var $elf = this, _fromIdx = this.input.idx, identifierSoFar, part, vocabulary;\n            part = this._apply(\"IdentifierPart\");\n            identifierSoFar = this._or(function() {\n                this._pred(identifierSoFar);\n                return identifierSoFar + \" \" + part;\n            }, function() {\n                return part;\n            });\n            this._pred(identifierSoFar.length <= this.longestIdentifier[identifierType]);\n            return this._or(function() {\n                return this._applyWithArgs(\"FindIdentifierNest\", identifierType, factTypeSoFar, identifierSoFar);\n            }, function() {\n                vocabulary = this._or(function() {\n                    return this._applyWithArgs(\"FindVocabulary\", identifierSoFar);\n                }, function() {\n                    return this.currentVocabulary;\n                });\n                return this._applyWithArgs(\"IsFactTypeIdentifier\", [ identifierType, identifierSoFar, vocabulary ], factTypeSoFar);\n            });\n        },\n        FindVocabulary: function(identifier) {\n            var $elf = this, _fromIdx = this.input.idx, bracket, vocabulary;\n            this._apply(\"spaces\");\n            bracket = this._opt(function() {\n                return this._applyWithArgs(\"exactly\", \"(\");\n            });\n            vocabulary = this._apply(\"FindVocabularyNest\");\n            this._pred(!identifier || this.vocabularies[vocabulary].IdentifierChildren.hasOwnProperty(identifier));\n            this._or(function() {\n                return this._pred(!bracket);\n            }, function() {\n                switch (this.anything()) {\n                  case \")\":\n                    return \")\";\n\n                  default:\n                    throw this._fail();\n                }\n            });\n            return vocabulary;\n        },\n        FindVocabularyNest: function(vocabularySoFar) {\n            var $elf = this, _fromIdx = this.input.idx, part, vocabularySoFar;\n            part = this._apply(\"IdentifierPart\");\n            vocabularySoFar = this._or(function() {\n                this._pred(vocabularySoFar);\n                return vocabularySoFar + \" \" + part;\n            }, function() {\n                return part;\n            });\n            this._pred(vocabularySoFar.length <= this.longestIdentifier.Vocabulary);\n            return this._or(function() {\n                return this._applyWithArgs(\"FindVocabularyNest\", vocabularySoFar);\n            }, function() {\n                this._pred(this.vocabularies.hasOwnProperty(vocabularySoFar));\n                return vocabularySoFar;\n            });\n        },\n        IdentifierPart: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            this._apply(\"spaces\");\n            return this._consumedBy(function() {\n                return this._many1(function() {\n                    return this._or(function() {\n                        return this._apply(\"letter\");\n                    }, function() {\n                        switch (this.anything()) {\n                          case \"-\":\n                            return \"-\";\n\n                          default:\n                            throw this._fail();\n                        }\n                    });\n                });\n            });\n        },\n        addVerb: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            this._apply(\"ClearSuggestions\");\n            return this._applyWithArgs(\"Verb\", !0);\n        },\n        Verb: function(factTypeSoFar) {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._applyWithArgs(\"FindVerb\", factTypeSoFar);\n        },\n        FindVerb: function(factTypeSoFar, verbSoFar, negated) {\n            var $elf = this, _fromIdx = this.input.idx, negated, part, verb, verbSoFar;\n            this._opt(function() {\n                this._pred(factTypeSoFar && !verbSoFar);\n                this._or(function() {\n                    return this._applyWithArgs(\"Keyword\", \"isn't\");\n                }, function() {\n                    return this._applyWithArgs(\"Keyword\", \"aren't\");\n                });\n                verbSoFar = \"is\";\n                return negated = !0;\n            });\n            part = this._apply(\"VerbPart\");\n            verbSoFar = this._or(function() {\n                this._pred(verbSoFar);\n                return verbSoFar + \" \" + part;\n            }, function() {\n                return this._verbForm(part);\n            });\n            this._opt(function() {\n                this._pred(factTypeSoFar && \"is\" === verbSoFar);\n                this._apply(\"spaces\");\n                this._applyWithArgs(\"Keyword\", \"not\");\n                return negated = !0;\n            });\n            return this._or(function() {\n                return this._applyWithArgs(\"FindVerb\", factTypeSoFar, verbSoFar, negated);\n            }, function() {\n                this._or(function() {\n                    return this._pred(factTypeSoFar === !0);\n                }, function() {\n                    return this._applyWithArgs(\"IsVerb\", factTypeSoFar, verbSoFar);\n                });\n                verb = [ \"Verb\", verbSoFar ];\n                this._or(function() {\n                    this._pred(negated);\n                    return verb.push(!0);\n                }, function() {\n                    return verb.push(!1);\n                });\n                return verb;\n            });\n        },\n        VerbPart: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            this._apply(\"spaces\");\n            this._not(function() {\n                return this._apply(\"Identifier\");\n            });\n            return this._apply(\"IdentifierPart\");\n        },\n        JoiningQuantifier: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._applyWithArgs(\"matchForAll\", \"Keyword\", [ \"and\", \"at\", \"most\" ]);\n        },\n        Quantifier: function() {\n            var $elf = this, _fromIdx = this.input.idx, m, n;\n            return this._or(function() {\n                this._applyWithArgs(\"Keyword\", \"each\");\n                return [ \"UniversalQuantification\" ];\n            }, function() {\n                this._applyWithArgs(\"matchForAny\", \"Keyword\", [ \"a\", \"an\", \"some\" ]);\n                return [ \"ExistentialQuantification\" ];\n            }, function() {\n                this._applyWithArgs(\"matchForAll\", \"Keyword\", [ \"at\", \"most\" ]);\n                n = this._apply(\"Number\");\n                return [ \"AtMostNQuantification\", [ \"MaximumCardinality\", n ] ];\n            }, function() {\n                this._applyWithArgs(\"matchForAll\", \"Keyword\", [ \"at\", \"least\" ]);\n                n = this._apply(\"Number\");\n                return this._or(function() {\n                    this._apply(\"JoiningQuantifier\");\n                    m = this._apply(\"Number\");\n                    return [ \"NumericalRangeQuantification\", [ \"MinimumCardinality\", n ], [ \"MaximumCardinality\", m ] ];\n                }, function() {\n                    return [ \"AtLeastNQuantification\", [ \"MinimumCardinality\", n ] ];\n                });\n            }, function() {\n                this._applyWithArgs(\"matchForAll\", \"Keyword\", [ \"more\", \"than\" ]);\n                n = this._apply(\"Number\");\n                ++n[1];\n                return [ \"AtLeastNQuantification\", [ \"MinimumCardinality\", n ] ];\n            }, function() {\n                this._applyWithArgs(\"Keyword\", \"exactly\");\n                n = this._apply(\"Number\");\n                return [ \"ExactQuantification\", [ \"Cardinality\", n ] ];\n            }, function() {\n                this._applyWithArgs(\"Keyword\", \"no\");\n                return [ \"ExactQuantification\", [ \"Cardinality\", [ \"Number\", 0 ] ] ];\n            });\n        },\n        Keyword: function(word, noToken) {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                this._pred(noToken === !0);\n                return this._applyWithArgs(\"seq\", word);\n            }, function() {\n                this._pred(noToken !== !0);\n                return this._applyWithArgs(\"token\", word);\n            });\n        },\n        addThat: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._applyWithArgs(\"Keyword\", \"that\");\n        },\n        addThe: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._applyWithArgs(\"Keyword\", \"the\");\n        },\n        DisableCommas: function(bool) {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this.disableCommas = bool;\n        },\n        addComma: function(force) {\n            var $elf = this, _fromIdx = this.input.idx;\n            this._pred(force || !this.disableCommas);\n            return this._applyWithArgs(\"Keyword\", \",\");\n        },\n        CreateVar: function(identifier) {\n            var $elf = this, _fromIdx = this.input.idx, identifierKey, varNumber;\n            identifierKey = this._applyWithArgs(\"IdentifierKey\", identifier);\n            varNumber = this._or(function() {\n                this._pred(\"|\" !== identifierKey.slice(-1));\n                this._pred(this.ruleVars[identifierKey]);\n                return this.ruleVars[identifierKey];\n            }, function() {\n                return this.ruleVars[identifierKey] = this.ruleVarsCount++;\n            });\n            return [ \"Variable\", [ \"Number\", varNumber ], identifier ];\n        },\n        EmbedVar: function(identifier, data) {\n            var $elf = this, _fromIdx = this.input.idx, identifierKey;\n            identifierKey = this._applyWithArgs(\"IdentifierKey\", identifier);\n            return this.ruleVars[identifierKey] = data;\n        },\n        IsAtomicFormulation: function(factType, bindings) {\n            var $elf = this, _fromIdx = this.input.idx, realFactType;\n            realFactType = this._applyWithArgs(\"IsFactType\", factType);\n            this._pred(realFactType);\n            return [ \"AtomicFormulation\" ].concat([ [ \"FactType\" ].concat(factType) ], bindings);\n        },\n        ClosedProjection: function(identifier, bind) {\n            var $elf = this, _fromIdx = this.input.idx;\n            this._apply(\"addThat\");\n            return this._or(function() {\n                return this._applyWithArgs(\"Junction\", \"VerbContinuation\", [ [ identifier ], [ bind ] ]);\n            }, function() {\n                return this._applyWithArgs(\"Junction\", \"RuleBody\", [ [], [], identifier, bind ]);\n            });\n        },\n        TermEntity: function(factType, bindings) {\n            var $elf = this, _fromIdx = this.input.idx, bind, term, thatLF, varLF;\n            term = this._applyWithArgs(\"Term\", factType);\n            varLF = this._applyWithArgs(\"CreateVar\", term);\n            bind = this._applyWithArgs(\"Bind\", term, bindings);\n            this._opt(function() {\n                thatLF = this._applyWithArgs(\"ClosedProjection\", term, bind);\n                varLF.push(thatLF);\n                return this._opt(function() {\n                    this._pred(factType);\n                    return this._applyWithArgs(\"addComma\", !1);\n                });\n            });\n            return {\n                term: term,\n                lf: varLF\n            };\n        },\n        RuleBody: function(factType, bindings, parentIdentifier, parentBind) {\n            var $elf = this, _fromIdx = this.input.idx, bind, data, identifier, lf, quant, termEntity;\n            this._or(function() {\n                quant = this._apply(\"Quantifier\");\n                termEntity = this._applyWithArgs(\"TermEntity\", factType, bindings);\n                return factType.push(termEntity.term);\n            }, function() {\n                this._apply(\"addThe\");\n                identifier = this._applyWithArgs(\"Identifier\", factType);\n                this._or(function() {\n                    return this._applyWithArgs(\"Bind\", identifier, bindings);\n                }, function() {\n                    this._applyWithArgs(\"EmbedVar\", identifier, identifier);\n                    return this._applyWithArgs(\"Bind\", identifier, bindings);\n                });\n                return factType.push(identifier);\n            }, function() {\n                data = this._apply(\"Value\");\n                identifier = this._applyWithArgs(\"IsFactTypeIdentifier\", [ \"Term\", data[0], \"Type\" ], factType);\n                identifier.push(data);\n                this._applyWithArgs(\"EmbedVar\", identifier, data);\n                bind = this._applyWithArgs(\"Bind\", identifier, bindings);\n                bind[2] = data;\n                return factType.push(identifier);\n            });\n            lf = this._or(function() {\n                return this._applyWithArgs(\"Junction\", \"VerbContinuation\", [ factType, bindings, parentIdentifier, parentBind ]);\n            }, function() {\n                return this._applyWithArgs(\"IsAtomicFormulation\", factType, bindings);\n            });\n            return null == quant ? lf : quant.concat([ termEntity.lf, lf ]);\n        },\n        VerbContinuation: function(factType, bindings, parentIdentifier, parentBind) {\n            var $elf = this, _fromIdx = this.input.idx, v;\n            v = this._applyWithArgs(\"Verb\", factType);\n            factType.push(v);\n            (function() {\n                if (null != parentIdentifier) {\n                    factType.push(parentIdentifier);\n                    bindings.push(parentBind);\n                }\n            }).call(this);\n            return this._or(function() {\n                return this._applyWithArgs(\"Junction\", \"RuleBody\", [ factType, bindings ]);\n            }, function() {\n                return this._applyWithArgs(\"IsAtomicFormulation\", factType, bindings);\n            });\n        },\n        Modifier: function() {\n            var $elf = this, _fromIdx = this.input.idx, r;\n            this._applyWithArgs(\"token\", \"It\");\n            this._applyWithArgs(\"token\", \"is\");\n            r = this._or(function() {\n                this._applyWithArgs(\"token\", \"obligatory\");\n                return [ \"ObligationFormulation\" ];\n            }, function() {\n                this._applyWithArgs(\"token\", \"necessary\");\n                return [ \"NecessityFormulation\" ];\n            }, function() {\n                this._or(function() {\n                    return this._applyWithArgs(\"token\", \"prohibited\");\n                }, function() {\n                    return this._applyWithArgs(\"token\", \"forbidden\");\n                });\n                return [ \"ObligationFormulation\", [ \"LogicalNegation\" ] ];\n            }, function() {\n                this._or(function() {\n                    return this._applyWithArgs(\"token\", \"impossible\");\n                }, function() {\n                    this._applyWithArgs(\"token\", \"not\");\n                    return this._applyWithArgs(\"token\", \"possible\");\n                });\n                return [ \"NecessityFormulation\", [ \"LogicalNegation\" ] ];\n            }, function() {\n                this._applyWithArgs(\"token\", \"possible\");\n                return [ \"PossibilityFormulation\" ];\n            }, function() {\n                this._applyWithArgs(\"token\", \"permitted\");\n                return [ \"PermissibilityFormulation\" ];\n            });\n            this._applyWithArgs(\"token\", \"that\");\n            return r;\n        },\n        Disjunction: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            this._applyWithArgs(\"Keyword\", \"or\");\n            return \"Disjunction\";\n        },\n        Conjunction: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            this._applyWithArgs(\"Keyword\", \"and\");\n            return \"Conjunction\";\n        },\n        JunctionType: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._apply(\"Disjunction\");\n            }, function() {\n                return this._apply(\"Conjunction\");\n            });\n        },\n        SerialCommaCheck: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            this._applyWithArgs(\"exactly\", \",\");\n            return this._or(function() {\n                return this._applyWithArgs(\"token\", \"and\");\n            }, function() {\n                return this._applyWithArgs(\"token\", \"or\");\n            });\n        },\n        UpcomingCommaJunction: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._lookahead(function() {\n                return this._or(function() {\n                    this._many(function() {\n                        this._not(function() {\n                            return this._apply(\"EOL\");\n                        });\n                        this._not(function() {\n                            return this._apply(\"SerialCommaCheck\");\n                        });\n                        return this.anything();\n                    });\n                    this._apply(\"SerialCommaCheck\");\n                    return !0;\n                }, function() {\n                    return !1;\n                });\n            });\n        },\n        SimpleJunction: function(ruleName, args) {\n            var $elf = this, _fromIdx = this.input.idx, junctioned, result, type;\n            result = this._applyWithArgs.apply(this, [ ruleName ].concat(_.cloneDeep(args)));\n            return this._or(function() {\n                type = this._apply(\"JunctionType\");\n                junctioned = this._applyWithArgs(\"SimpleJunction\", ruleName, args);\n                return [ type, result, junctioned ];\n            }, function() {\n                return result;\n            });\n        },\n        Junction: function(ruleName, args) {\n            var $elf = this, _fromIdx = this.input.idx, commaSeparated, junctioned, result, type, upcoming;\n            upcoming = this._apply(\"UpcomingCommaJunction\");\n            this._applyWithArgs(\"DisableCommas\", upcoming || this.disableCommas);\n            result = this._opt(function() {\n                result = this._applyWithArgs(\"SimpleJunction\", ruleName, args);\n                return this._or(function() {\n                    this._pred(upcoming);\n                    commaSeparated = this._many(function() {\n                        this._applyWithArgs(\"addComma\", !0);\n                        return this._applyWithArgs(\"SimpleJunction\", ruleName, args);\n                    });\n                    this._applyWithArgs(\"addComma\", !0);\n                    type = this._apply(\"JunctionType\");\n                    junctioned = this._applyWithArgs(\"Junction\", ruleName, args, !0);\n                    return [ type, result ].concat(commaSeparated).concat([ junctioned ]);\n                }, function() {\n                    return result;\n                });\n            });\n            upcoming = this._apply(\"UpcomingCommaJunction\");\n            this._applyWithArgs(\"DisableCommas\", upcoming);\n            this._pred(result);\n            return result;\n        },\n        StartRule: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._applyWithArgs(\"token\", \"R:\");\n            }, function() {\n                return this._applyWithArgs(\"token\", \"Rule:\");\n            });\n        },\n        NewRule: function() {\n            var $elf = this, _fromIdx = this.input.idx, mod, ruleLF, ruleText;\n            this._apply(\"StartRule\");\n            this._apply(\"spaces\");\n            ruleText = this._lookahead(function() {\n                return this._apply(\"toEOL\");\n            });\n            this.ruleVars = {};\n            this.ruleVarsCount = 0;\n            mod = this._apply(\"Modifier\");\n            ruleLF = this._applyWithArgs(\"Junction\", \"RuleBody\", [ [], [] ]);\n            this._apply(\"EOLTerminator\");\n            mod = _.cloneDeep(mod);\n            2 === mod.length ? mod[1][1] = ruleLF : mod[1] = ruleLF;\n            return [ \"Rule\", mod, [ \"StructuredEnglish\", ruleText ] ];\n        },\n        StartFactType: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._applyWithArgs(\"token\", \"F:\");\n            }, function() {\n                return this._applyWithArgs(\"token\", \"Fact type:\");\n            });\n        },\n        NewFactType: function() {\n            var $elf = this, _fromIdx = this.input.idx, factType, identifier, v;\n            this._apply(\"StartFactType\");\n            factType = [];\n            this._many1(function() {\n                identifier = this._apply(\"Identifier\");\n                v = this._apply(\"addVerb\");\n                return factType.push(identifier, v);\n            });\n            this._opt(function() {\n                identifier = this._apply(\"Identifier\");\n                return factType.push(identifier);\n            });\n            return function() {\n                $elf.AddFactType(factType, factType);\n                return [ \"FactType\" ].concat(factType).concat([ [ \"Attributes\" ] ]);\n            };\n        },\n        StartVocabulary: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            this._applyWithArgs(\"token\", \"Vocabulary:\");\n            return \"Vocabulary\";\n        },\n        StartTerm: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            this._or(function() {\n                return this._applyWithArgs(\"token\", \"T:\");\n            }, function() {\n                return this._applyWithArgs(\"token\", \"Term:\");\n            });\n            return \"Term\";\n        },\n        StartName: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            this._or(function() {\n                return this._applyWithArgs(\"token\", \"N:\");\n            }, function() {\n                return this._applyWithArgs(\"token\", \"Name:\");\n            });\n            return \"Name\";\n        },\n        NewIdentifier: function() {\n            var $elf = this, _fromIdx = this.input.idx, func, identifierType;\n            identifierType = this._or(function() {\n                return this._apply(\"StartVocabulary\");\n            }, function() {\n                return this._apply(\"StartTerm\");\n            }, function() {\n                return this._apply(\"StartName\");\n            });\n            this._apply(\"ClearSuggestions\");\n            func = this._applyWithArgs(\"AddIdentifier\", identifierType);\n            return function() {\n                return func().concat([ [ \"Attributes\" ] ]);\n            };\n        },\n        NewAttribute: function() {\n            var $elf = this, _fromIdx = this.input.idx, attrName, attrValOrFunc, currentLine;\n            currentLine = _.last(this.lines);\n            attrName = this._applyWithArgs(\"AllowedAttrs\", currentLine[0]);\n            attrName = attrName.replace(/ /g, \"\");\n            this._apply(\"spaces\");\n            attrValOrFunc = this._applyWithArgs(\"ApplyFirstExisting\", [ \"Attr\" + attrName, \"DefaultAttr\" ]);\n            return function() {\n                var lastLine = $elf.lines.pop(), attrVal = _.isFunction(attrValOrFunc) ? attrValOrFunc(lastLine) : attrValOrFunc;\n                _.last(lastLine).push([ attrName, attrVal ]);\n                return lastLine;\n            };\n        },\n        AllowedAttrs: function(termOrFactType) {\n            var $elf = this, _fromIdx = this.input.idx, attrName;\n            attrName = this._applyWithArgs(\"matchForAny\", \"seq\", this.branches.AllowedAttrs.call(this, termOrFactType));\n            return attrName.replace(\":\", \"\");\n        },\n        DefaultAttr: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._apply(\"toSBVREOL\");\n        },\n        AttrConceptType: function() {\n            var $elf = this, _fromIdx = this.input.idx, term;\n            term = this._apply(\"Term\");\n            return function(currentLine) {\n                var identifier;\n                if (\"FactType\" === currentLine[0]) {\n                    var attributes = _.last(currentLine), termForm = _.find(attributes, [ 0, \"TermForm\" ]);\n                    if (!termForm) throw new Error(\"Cannot have a concept type for a fact type that does not have a term-form.\");\n                    identifier = termForm[1];\n                } else identifier = currentLine.slice(0, 3);\n                var identifierName = identifier[1], identifierVocab = identifier[2];\n                if ($elf.vocabularies[identifierVocab].ConceptTypes.hasOwnProperty(identifier)) throw new Error(\"Two concept type attributes\");\n                if (\"FactType\" !== identifier[0]) {\n                    if ($elf.IdentifiersEqual(identifier, term)) throw new Error(\"A term cannot have itself as its concept type\");\n                    var termName = term[1], termVocab = term[2];\n                    $elf.vocabularies[identifierVocab].ConceptTypes[identifier] = term;\n                    $elf.vocabularies[termVocab].IdentifierChildren[termName].push(identifier.slice(1));\n                }\n                return term;\n            };\n        },\n        AttrDefinition: function() {\n            var $elf = this, _fromIdx = this.input.idx, moreValues, termEntity, value, values;\n            return this._or(function() {\n                this._opt(function() {\n                    return this._apply(\"addThe\");\n                });\n                this.ruleVars = {};\n                this.ruleVarsCount = 0;\n                termEntity = this._apply(\"TermEntity\");\n                this._apply(\"EOLTerminator\");\n                return function(currentLine) {\n                    if (\"FactType\" !== currentLine[0]) {\n                        $elf.vocabularies[currentLine[2]].ConceptTypes[currentLine.slice(0, 3)] = termEntity.term;\n                        $elf.vocabularies[currentLine[2]].IdentifierChildren[termEntity.term[1]].push([ currentLine[1], currentLine[2] ]);\n                    }\n                    return termEntity.lf;\n                };\n            }, function() {\n                value = this._apply(\"Value\");\n                values = this._many(function() {\n                    this._apply(\"addComma\");\n                    return this._apply(\"Value\");\n                });\n                this._or(function() {\n                    return moreValues = this._many1(function() {\n                        this._opt(function() {\n                            return this._apply(\"addComma\");\n                        });\n                        this._apply(\"Disjunction\");\n                        return this._apply(\"Value\");\n                    });\n                }, function() {\n                    return this._pred(0 === values.length);\n                });\n                return [ \"Enum\", value ].concat(values, moreValues);\n            });\n        },\n        AttrGuidanceType: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._applyWithArgs(\"matchForAny\", \"seq\", this.branches.AttrGuidanceType);\n        },\n        AttrNecessity: function() {\n            var $elf = this, _fromIdx = this.input.idx, lf, ruleText;\n            return this._or(function() {\n                ruleText = this._lookahead(function() {\n                    return this._apply(\"toEOL\");\n                });\n                this.ruleVars = {};\n                this.ruleVarsCount = 0;\n                lf = this._applyWithArgs(\"RuleBody\", [], []);\n                this._apply(\"EOLTerminator\");\n                return [ \"Rule\", [ \"NecessityFormulation\", lf ], [ \"StructuredEnglish\", \"It is necessary that \" + ruleText ] ];\n            }, function() {\n                return this._apply(\"toSBVREOL\");\n            });\n        },\n        AttrReferenceScheme: function() {\n            var $elf = this, _fromIdx = this.input.idx, t;\n            return this._or(function() {\n                t = this._apply(\"Term\");\n                this._apply(\"EOLTerminator\");\n                return t;\n            }, function() {\n                return this._apply(\"toSBVREOL\");\n            });\n        },\n        AttrSynonym: function() {\n            var $elf = this, _fromIdx = this.input.idx, currentLine;\n            currentLine = _.last(this.lines);\n            return this._applyWithArgs(\"AddIdentifier\", currentLine[0], currentLine[1]);\n        },\n        AttrSynonymousForm: function() {\n            var $elf = this, _fromIdx = this.input.idx, factType, identifier, v;\n            factType = [];\n            this._many1(function() {\n                identifier = this._apply(\"Identifier\");\n                v = this._apply(\"addVerb\");\n                return factType.push(identifier, v);\n            });\n            this._opt(function() {\n                identifier = this._apply(\"Identifier\");\n                return factType.push(identifier);\n            });\n            return function(currentLine) {\n                $elf.AddFactType(factType, currentLine.slice(1, -1));\n                return factType;\n            };\n        },\n        AttrTermForm: function() {\n            var $elf = this, _fromIdx = this.input.idx, func;\n            func = this._applyWithArgs(\"AddIdentifier\", \"Term\");\n            return function(currentLine) {\n                for (var term = func(), i = 0; i < currentLine.length; i++) if (\"Term\" === currentLine[i][0]) {\n                    var factType = [ term, [ \"Verb\", \"has\", !1 ], currentLine[i] ];\n                    $elf.AddFactType(factType, factType);\n                }\n                return term;\n            };\n        },\n        StartComment: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            this._applyWithArgs(\"exactly\", \"-\");\n            this._applyWithArgs(\"exactly\", \"-\");\n            return \"--\";\n        },\n        NewComment: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            this._apply(\"StartComment\");\n            return this._apply(\"toEOL\");\n        },\n        EOLTerminator: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            this._opt(function() {\n                return this._apply(\"Terminator\");\n            });\n            this._apply(\"spaces\");\n            return this._lookahead(function() {\n                return this._or(function() {\n                    return this._apply(\"EOL\");\n                }, function() {\n                    return this._apply(\"end\");\n                });\n            });\n        },\n        Terminator: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            this._apply(\"spaces\");\n            return this._applyWithArgs(\"Keyword\", \".\", !0);\n        },\n        space: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return SBVRLibs._superApplyWithArgs(this, \"space\");\n            }, function() {\n                return this._apply(\"NewComment\");\n            });\n        },\n        Line: function() {\n            var $elf = this, _fromIdx = this.input.idx, func, l;\n            this._apply(\"spaces\");\n            l = this._or(function() {\n                func = this._or(function() {\n                    return this._apply(\"NewIdentifier\");\n                }, function() {\n                    return this._apply(\"NewFactType\");\n                }, function() {\n                    return this._apply(\"NewAttribute\");\n                });\n                return func();\n            }, function() {\n                return this._apply(\"NewRule\");\n            });\n            this._apply(\"ClearSuggestions\");\n            this.lines.push(l);\n            return l;\n        },\n        Process: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            this._opt(function() {\n                return this._apply(\"EOLSpaces\");\n            });\n            this._opt(function() {\n                return this._apply(\"Line\");\n            });\n            this._many(function() {\n                this._apply(\"EOLSpaces\");\n                return this._apply(\"Line\");\n            });\n            this._many(function() {\n                return this._apply(\"space\");\n            });\n            this._apply(\"end\");\n            return this.lines;\n        }\n    });\n    SBVRParser.ClearSuggestions = function() {};\n    SBVRParser.initialize = function() {\n        this.builtInVocab = \"\";\n        this.builtInVocabInputHead = \"\";\n        this.allowedAttrLists = _.cloneDeep(defaultAllowedAttrLists);\n        this.reset();\n    };\n    SBVRParser._enableTokens = function() {\n        SBVRLibs._enableTokens.call(this, [ \"StartVocabulary\", \"StartTerm\", \"StartName\", \"StartFactType\", \"StartRule\", \"NewComment\", \"Vocabulary\", \"Term\", \"Name\", \"Modifier\", \"Verb\", \"Keyword\", \"AllowedAttrs\", \"AttrGuidanceType\", \"Number\", \"Value\" ]);\n    };\n    SBVRParser._sideEffectingRules = [ \"Process\", \"Line\" ];\n    SBVRParser._AddIdentifier = function(identifierType, identifier, baseSynonym) {\n        null == baseSynonym && (baseSynonym = identifier);\n        if (\"Vocabulary\" === identifierType) this.AddVocabulary(identifier, baseSynonym); else {\n            var vocabulary = this.vocabularies[this.currentVocabulary];\n            vocabulary.IdentifierChildren.hasOwnProperty(identifier) && this._pred(!1);\n            baseSynonym === identifier ? vocabulary.IdentifierChildren[baseSynonym] = [] : vocabulary.IdentifierChildren[identifier] = vocabulary.IdentifierChildren[baseSynonym];\n            vocabulary[identifierType][identifier] = baseSynonym;\n        }\n        this.longestIdentifier[identifierType] = Math.max(identifier.length, identifier.pluralize().length, this.longestIdentifier[identifierType]);\n        return \"Vocabulary\" === identifierType ? [ identifierType, identifier ] : [ identifierType, identifier, this.currentVocabulary ];\n    };\n    SBVRParser.BaseSynonym = function(identifier) {\n        var identifierType = identifier[0], identifierName = identifier[1], vocabulary = identifier[2], identifiers = this.vocabularies[vocabulary][identifierType];\n        if (identifiers.hasOwnProperty(identifierName)) identifierName = identifiers[identifierName]; else {\n            identifierName = identifierName.singularize();\n            this._pred(identifiers.hasOwnProperty(identifierName));\n            identifierName = identifiers[identifierName];\n        }\n        return [ identifierType, identifierName, vocabulary ];\n    };\n    SBVRParser.IsFactTypeIdentifier = function(identifier, factTypeSoFar) {\n        var identifierType = identifier[0], vocabulary = identifier[2], baseIdentifier = this.BaseSynonym(identifier), identifiers = this.branches[identifierType].call(this, factTypeSoFar, vocabulary);\n        this._pred(identifiers.indexOf(baseIdentifier[1]) !== -1);\n        return baseIdentifier;\n    };\n    SBVRParser.IsVerb = function(factTypeSoFar, verb) {\n        verb = [ \"Verb\", verb ];\n        var currentLevel = this._traverseFactType(factTypeSoFar);\n        this._pred(currentLevel !== !1);\n        if (!currentLevel.hasOwnProperty(verb)) {\n            this._pred(currentLevel.hasOwnProperty(\"__valid\"));\n            return this.IsVerb([], verb);\n        }\n    };\n    SBVRParser._verbForm = function(verb) {\n        return \"are\" === verb ? \"is\" : \"have\" === verb ? \"has\" : \"are \" === verb.slice(0, 4) ? \"is \" + verb.slice(4) : verb;\n    };\n    SBVRParser.IsFactType = function(factType) {\n        var currentLevel = this._traverseFactType(factType);\n        return currentLevel !== !1 && currentLevel.__valid;\n    };\n    var removeRegex = new RegExp(\"^(?:\" + [ [ \"Term\", \"\" ].toString(), [ \"Name\", \"\" ].toString(), [ \"Verb\", \"\" ].toString() ].join(\"|\") + \")(.*?)(?:,(.*))?$\"), defaultAllowedAttrLists = [ \"Concept Type:\", \"Definition:\", \"Definition (Informal):\", \"Description:\", \"Dictionary Basis:\", \"Example:\", \"General Concept:\", \"Namespace URI:\", \"Necessity:\", \"Note:\", \"Possibility:\", \"Reference Scheme:\", \"See:\", \"Source:\", \"Subject Field:\" ];\n    defaultAllowedAttrLists = {\n        Term: [ \"Synonym:\" ].concat(defaultAllowedAttrLists),\n        Name: [ \"Synonym:\" ].concat(defaultAllowedAttrLists),\n        FactType: [ \"Synonymous Form:\", \"Term Form:\" ].concat(defaultAllowedAttrLists),\n        Rule: [ \"Rule Name:\", \"Guidance Type:\", \"Source:\", \"Synonymous Statement:\", \"Note:\", \"Example:\", \"Enforcement Level:\" ]\n    };\n    var getValidFactTypeParts = function getValidFactTypeParts(vocabulary, identifierType, factTypeSoFar) {\n        var vocabularies = this.vocabularies;\n        if (null == factTypeSoFar || 0 === factTypeSoFar.length) {\n            var identifiers;\n            identifiers = null == vocabulary ? vocabularies[this.currentVocabulary][identifierType] : vocabularies[vocabulary][identifierType];\n            return _.keys(identifiers);\n        }\n        var factTypePart, currentLevel = this._traverseFactType(factTypeSoFar), factTypeParts = {}, followChildrenChain = function(vocabulary, identifier) {\n            vocabulary = vocabularies[vocabulary];\n            var identifiers = vocabulary[identifierType];\n            identifiers.hasOwnProperty(identifier) && (factTypeParts[identifiers[identifier]] = !0);\n            for (var i = 0; i < vocabulary.IdentifierChildren[identifier].length; i++) {\n                var child = vocabulary.IdentifierChildren[identifier][i];\n                followChildrenChain(child[1], child[0]);\n            }\n        };\n        for (factTypePart in currentLevel) if (currentLevel.hasOwnProperty(factTypePart)) {\n            var matches = removeRegex.exec(factTypePart), factTypePartVocabulary;\n            if (null != matches) {\n                factTypePart = matches[1];\n                if (matches[2]) {\n                    factTypePartVocabulary = matches[2];\n                    followChildrenChain(factTypePartVocabulary, factTypePart);\n                } else factTypeParts[factTypePart] = !0;\n            }\n        }\n        return _.keys(factTypeParts);\n    };\n    SBVRParser.reset = function() {\n        SBVRLibs.initialize.call(this);\n        this.branches = {\n            ClearSuggestions: [],\n            StartVocabulary: [ \"Vocabulary:\" ],\n            StartTerm: [ \"Term:      \" ],\n            StartName: [ \"Name:      \" ],\n            StartFactType: [ \"Fact type: \" ],\n            StartRule: [ \"Rule:      \" ],\n            Vocabulary: function(factTypeSoFar) {\n                return _.keys(this.vocabularies);\n            },\n            Term: function(factTypeSoFar, vocabulary) {\n                return getValidFactTypeParts.call(this, vocabulary, \"Term\", factTypeSoFar);\n            },\n            Name: function(factTypeSoFar, vocabulary) {\n                return getValidFactTypeParts.call(this, vocabulary, \"Name\", factTypeSoFar);\n            },\n            Verb: function(factTypeSoFar, vocabulary) {\n                return factTypeSoFar === !0 ? [] : getValidFactTypeParts.call(this, vocabulary, \"Verb\", factTypeSoFar);\n            },\n            AllowedAttrs: function(termOrFactType) {\n                return this.allowedAttrLists.hasOwnProperty(termOrFactType) ? this.allowedAttrLists[termOrFactType] : null == termOrFactType ? this.allowedAttrLists.Term.concat(this.allowedAttrLists.Name, this.allowedAttrLists.FactType) : [];\n            },\n            AttrGuidanceType: [ \"operative business rule\", \"structural business rule\", \"advice of permission\", \"advice of possibility\", \"advice of optionality\", \"advice of contingency\" ],\n            Modifier: [ \"It is obligatory that\", \"It is necessary that\", \"It is prohibited that\", \"It is forbidden that\", \"It is impossible that\", \"It is not possible that\", \"It is possible that\", \"It is permitted that\" ],\n            Quantifier: [ \"each\", \"a\", \"an\", \"some\", \"at most\", \"at least\", \"more than\", \"exactly\", \"no\" ],\n            JoiningQuantifier: [ \"and at most\" ],\n            Number: [ \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"one\" ],\n            addThat: [ \"that\", \"that the\" ],\n            addThe: [ \"the\" ],\n            addComma: [ \",\" ],\n            Disjunction: [ \"or\" ],\n            Conjunction: [ \"and\" ],\n            Terminator: [ \".\" ]\n        };\n        this.longestIdentifier = {\n            Vocabulary: 0,\n            Term: 0,\n            Name: 0\n        };\n        this.ruleVars = {};\n        this.ruleVarsCount = 0;\n        this.lines = [ \"Model\" ];\n        this.disableCommas = !1;\n        var origInputHead = this.inputHead;\n        if (\"\" !== this.builtInVocab) {\n            this.inputHead = this.builtInVocabInputHead;\n            this.matchAll(this.builtInVocab, \"Process\");\n            this.builtInVocabInputHead = this.inputHead;\n        }\n        this.inputHead = null;\n        this.inputHead = null;\n        this.matchAll(\"Vocabulary: Default\", \"Process\");\n        this.inputHead = origInputHead;\n    };\n    SBVRParser.AddBuiltInVocab = function(vocabulary) {\n        try {\n            var origInputHead = this.inputHead;\n            vocabulary += \"\\n\";\n            this.matchAll(vocabulary, \"Process\");\n            this.inputHead = origInputHead;\n            this.builtInVocab += vocabulary;\n        } catch (e) {\n            throw e;\n        } finally {\n            this.reset();\n        }\n    };\n    SBVRParser.AddCustomAttribute = function(attributeName, attachedTo) {\n        if (null == attachedTo) for (attachedTo in this.allowedAttrLists) this.allowedAttrLists.hasOwnProperty(attachedTo) && this.allowedAttrLists[attachedTo].push(attributeName); else {\n            if (!this.allowedAttrLists.hasOwnProperty(attachedTo)) throw new Error(\"Unknown attachment\");\n            this.allowedAttrLists[attachedTo].push(attributeName);\n        }\n    };\n    SBVRParser.matchForAny = function(rule, arr) {\n        for (var $elf = this, origInput = this.input, ref = {}, result = ref, idx = 0; idx < arr.length; idx++) {\n            try {\n                $elf.input = origInput;\n                result = $elf._applyWithArgs.call($elf, rule, arr[idx]);\n            } catch (e) {\n                if (!(e instanceof SyntaxError)) throw e;\n            } finally {}\n            if (result !== ref) return result;\n        }\n        throw this._fail();\n    };\n    SBVRParser.matchForAll = function(rule, arr) {\n        for (var idx = 0; idx < arr.length; idx++) this._applyWithArgs.call(this, rule, arr[idx]);\n    };\n    SBVRParser.exactly = function(wanted) {\n        if (wanted.toLowerCase() === this._apply(\"lowerCaseAnything\")) return wanted;\n        throw this._fail();\n    };\n    SBVRParser._disablePrependingInput();\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@resin/sbvr-parser/sbvr-parser.js\n// module id = 41\n// module chunks = 0","/*\nCopyright (c) 2010 Ryan Schuft (ryan.schuft@gmail.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\n/*\n  This code is based in part on the work done in Ruby to support\n  infection as part of Ruby on Rails in the ActiveSupport's Inflector\n  and Inflections classes.  It was initally ported to Javascript by\n  Ryan Schuft (ryan.schuft@gmail.com) in 2007.\n\n  The code is available at http://code.google.com/p/inflection-js/\n\n  The basic usage is:\n    1. Include this script on your web page.\n    2. Call functions on any String object in Javascript\n\n  Currently implemented functions:\n\n    String.pluralize(plural) == String\n      renders a singular English language noun into its plural form\n      normal results can be overridden by passing in an alternative\n\n    String.singularize(singular) == String\n      renders a plural English language noun into its singular form\n      normal results can be overridden by passing in an alterative\n\n    String.camelize(lowFirstLetter) == String\n      renders a lower case underscored word into camel case\n      the first letter of the result will be upper case unless you pass true\n      also translates \"/\" into \"::\" (underscore does the opposite)\n\n    String.underscore() == String\n      renders a camel cased word into words seperated by underscores\n      also translates \"::\" back into \"/\" (camelize does the opposite)\n\n    String.humanize(lowFirstLetter) == String\n      renders a lower case and underscored word into human readable form\n      defaults to making the first letter capitalized unless you pass true\n\n    String.capitalize() == String\n      renders all characters to lower case and then makes the first upper\n\n    String.dasherize() == String\n      renders all underbars and spaces as dashes\n\n    String.titleize() == String\n      renders words into title casing (as for book titles)\n\n    String.demodulize() == String\n      renders class names that are prepended by modules into just the class\n\n    String.tableize() == String\n      renders camel cased singular words into their underscored plural form\n\n    String.classify() == String\n      renders an underscored plural word into its camel cased singular form\n\n    String.foreign_key(dropIdUbar) == String\n      renders a class name (camel cased singular noun) into a foreign key\n      defaults to seperating the class from the id with an underbar unless\n      you pass true\n\n    String.ordinalize() == String\n      renders all numbers found in the string into their sequence like \"22nd\"\n*/\n\n/*\n  This sets up a container for some constants in its own namespace\n  We use the window (if available) to enable dynamic loading of this script\n  Window won't necessarily exist for non-browsers.\n*/\nif (typeof window !== \"undefined\" && !window.InflectionJS)\n{\n    window.InflectionJS = null;\n}\n\n/*\n  This sets up some constants for later use\n  This should use the window namespace variable if available\n*/\nInflectionJS =\n{\n    /*\n      This is a list of nouns that use the same form for both singular and plural.\n      This list should remain entirely in lower case to correctly match Strings.\n    */\n    uncountable_words: [\n        'equipment', 'information', 'rice', 'money', 'species', 'series',\n        'fish', 'sheep', 'moose', 'deer', 'news'\n    ],\n\n    /*\n      These rules translate from the singular form of a noun to its plural form.\n    */\n    plural_rules: [\n        [new RegExp('(m)an$', 'gi'),                 '$1en'],\n        [new RegExp('(pe)rson$', 'gi'),              '$1ople'],\n        [new RegExp('(child)$', 'gi'),               '$1ren'],\n        [new RegExp('^(ox)$', 'gi'),                 '$1en'],\n        [new RegExp('(ax|test)is$', 'gi'),           '$1es'],\n        [new RegExp('(octop|vir)us$', 'gi'),         '$1i'],\n        [new RegExp('(alias|status)$', 'gi'),        '$1es'],\n        [new RegExp('(bu)s$', 'gi'),                 '$1ses'],\n        [new RegExp('(buffal|tomat|potat)o$', 'gi'), '$1oes'],\n        [new RegExp('([ti])um$', 'gi'),              '$1a'],\n        [new RegExp('sis$', 'gi'),                   'ses'],\n        [new RegExp('(?:([^f])fe|([lr])f)$', 'gi'),  '$1$2ves'],\n        [new RegExp('(hive)$', 'gi'),                '$1s'],\n        [new RegExp('([^aeiouy]|qu)y$', 'gi'),       '$1ies'],\n        [new RegExp('(x|ch|ss|sh)$', 'gi'),          '$1es'],\n        [new RegExp('(matr|vert|ind)ix|ex$', 'gi'),  '$1ices'],\n        [new RegExp('([m|l])ouse$', 'gi'),           '$1ice'],\n        [new RegExp('(quiz)$', 'gi'),                '$1zes'],\n        [new RegExp('s$', 'gi'),                     's'],\n        [new RegExp('$', 'gi'),                      's']\n    ],\n\n    /*\n      These rules translate from the plural form of a noun to its singular form.\n    */\n    singular_rules: [\n        [new RegExp('(m)en$', 'gi'),                                                       '$1an'],\n        [new RegExp('(pe)ople$', 'gi'),                                                    '$1rson'],\n        [new RegExp('(child)ren$', 'gi'),                                                  '$1'],\n        [new RegExp('([ti])a$', 'gi'),                                                     '$1um'],\n        [new RegExp('((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$','gi'), '$1$2sis'],\n        [new RegExp('(hive)s$', 'gi'),                                                     '$1'],\n        [new RegExp('(tive)s$', 'gi'),                                                     '$1'],\n        [new RegExp('(curve)s$', 'gi'),                                                    '$1'],\n        [new RegExp('([lr])ves$', 'gi'),                                                   '$1f'],\n        [new RegExp('([^fo])ves$', 'gi'),                                                  '$1fe'],\n        [new RegExp('([^aeiouy]|qu)ies$', 'gi'),                                           '$1y'],\n        [new RegExp('(s)eries$', 'gi'),                                                    '$1eries'],\n        [new RegExp('(m)ovies$', 'gi'),                                                    '$1ovie'],\n        [new RegExp('(x|ch|ss|sh)es$', 'gi'),                                              '$1'],\n        [new RegExp('([m|l])ice$', 'gi'),                                                  '$1ouse'],\n        [new RegExp('(bus)es$', 'gi'),                                                     '$1'],\n        [new RegExp('(o)es$', 'gi'),                                                       '$1'],\n        [new RegExp('(shoe)s$', 'gi'),                                                     '$1'],\n        [new RegExp('(cris|ax|test)es$', 'gi'),                                            '$1is'],\n        [new RegExp('(octop|vir)i$', 'gi'),                                                '$1us'],\n        [new RegExp('(alias|status)es$', 'gi'),                                            '$1'],\n        [new RegExp('^(ox)en', 'gi'),                                                      '$1'],\n        [new RegExp('(vert|ind)ices$', 'gi'),                                              '$1ex'],\n        [new RegExp('(matr)ices$', 'gi'),                                                  '$1ix'],\n        [new RegExp('(quiz)zes$', 'gi'),                                                   '$1'],\n        [new RegExp('s$', 'gi'),                                                           '']\n    ],\n\n    /*\n      This is a list of words that should not be capitalized for title case\n    */\n    non_titlecased_words: [\n        'and', 'or', 'nor', 'a', 'an', 'the', 'so', 'but', 'to', 'of', 'at',\n        'by', 'from', 'into', 'on', 'onto', 'off', 'out', 'in', 'over',\n        'with', 'for'\n    ],\n\n    /*\n      These are regular expressions used for converting between String formats\n    */\n    id_suffix: new RegExp('(_ids|_id)$', 'g'),\n    underbar: new RegExp('_', 'g'),\n    space_or_underbar: new RegExp('[ _]', 'g'),\n    uppercase: new RegExp('([A-Z])', 'g'),\n    underbar_prefix: new RegExp('^_'),\n    \n    /*\n      This is a helper method that applies rules based replacement to a String\n      Signature:\n        InflectionJS.apply_rules(str, rules, skip, override) == String\n      Arguments:\n        str - String - String to modify and return based on the passed rules\n        rules - Array: [RegExp, String] - Regexp to match paired with String to use for replacement\n        skip - Array: [String] - Strings to skip if they match\n      Returns:\n        String - passed String modified by passed rules\n      Examples:\n        InflectionJS.apply_rules(\"cows\", InflectionJs.singular_rules) === 'cow'\n    */\n    apply_rules: function(str, rules, skip) {\n        if (skip.indexOf(str.toLowerCase()) === -1) {\n            for (var x = 0, l = rules.length; x < l; x++) {\n                if (rules[x][0].test(str)) {\n                    return str.replace(rules[x][0], rules[x][1]);\n                }\n            }\n        }\n        return str;\n    }\n};\n\n/*\n  This lets us detect if an Array contains a given element\n  Signature:\n    Array.indexOf(item, fromIndex, compareFunc) == Integer\n  Arguments:\n    item - Object - object to locate in the Array\n    fromIndex - Integer (optional) - starts checking from this position in the Array\n    compareFunc - Function (optional) - function used to compare Array item vs passed item\n  Returns:\n    Integer - index position in the Array of the passed item\n  Examples:\n    ['hi','there'].indexOf(\"guys\") === -1\n    ['hi','there'].indexOf(\"hi\") === 0\n*/\nif (!Array.prototype.indexOf)\n{\n    Array.prototype.indexOf = function(item, fromIndex, compareFunc)\n    {\n        if (!fromIndex)\n        {\n            fromIndex = -1;\n        }\n        var index = -1;\n        for (var i = fromIndex; i < this.length; i++)\n        {\n            if (this[i] === item || compareFunc && compareFunc(this[i], item))\n            {\n                index = i;\n                break;\n            }\n        }\n        return index;\n    };\n}\n\n/*\n  You can override this list for all Strings or just one depending on if you\n  set the new values on prototype or on a given String instance.\n*/\nif (!String.prototype._uncountable_words)\n{\n    String.prototype._uncountable_words = InflectionJS.uncountable_words;\n}\n\n/*\n  You can override this list for all Strings or just one depending on if you\n  set the new values on prototype or on a given String instance.\n*/\nif (!String.prototype._plural_rules)\n{\n    String.prototype._plural_rules = InflectionJS.plural_rules;\n}\n\n/*\n  You can override this list for all Strings or just one depending on if you\n  set the new values on prototype or on a given String instance.\n*/\nif (!String.prototype._singular_rules)\n{\n    String.prototype._singular_rules = InflectionJS.singular_rules;\n}\n\n/*\n  You can override this list for all Strings or just one depending on if you\n  set the new values on prototype or on a given String instance.\n*/\nif (!String.prototype._non_titlecased_words)\n{\n    String.prototype._non_titlecased_words = InflectionJS.non_titlecased_words;\n}\n\n/*\n  This function adds plurilization support to every String object\n    Signature:\n      String.pluralize(plural) == String\n    Arguments:\n      plural - String (optional) - overrides normal output with said String\n    Returns:\n      String - singular English language nouns are returned in plural form\n    Examples:\n      \"person\".pluralize() == \"people\"\n      \"octopus\".pluralize() == \"octopi\"\n      \"Hat\".pluralize() == \"Hats\"\n      \"person\".pluralize(\"guys\") == \"guys\"\n*/\nif (!String.prototype.pluralize) {\n    (function() {\n        var memo = {};\n        String.prototype.pluralize = function(plural) {\n            if(plural) {\n                return plural;\n            }\n            var thisString = this.toString();\n            if(!memo.hasOwnProperty(thisString)) {\n                memo[thisString] = InflectionJS.apply_rules(\n                    this.toString(),\n                    this._plural_rules,\n                    this._uncountable_words\n                );\n            }\n            return memo[thisString];\n        };\n    })();\n}\n\n/*\n  This function adds singularization support to every String object\n    Signature:\n      String.singularize(singular) == String\n    Arguments:\n      singular - String (optional) - overrides normal output with said String\n    Returns:\n      String - plural English language nouns are returned in singular form\n    Examples:\n      \"people\".singularize() == \"person\"\n      \"octopi\".singularize() == \"octopus\"\n      \"Hats\".singularize() == \"Hat\"\n      \"guys\".singularize(\"person\") == \"person\"\n*/\nif (!String.prototype.singularize) {\n    (function() {\n        var memo = {};\n        String.prototype.singularize = function(singular) {\n            if(singular) {\n                return singular;\n            }\n            var thisString = this.toString();\n            if(!memo.hasOwnProperty(thisString)) {\n                memo[thisString] = InflectionJS.apply_rules(\n                    thisString,\n                    this._singular_rules,\n                    this._uncountable_words\n                );\n            }\n            return memo[thisString];\n        };\n    })();\n}\n\n/*\n  This function adds camelization support to every String object\n    Signature:\n      String.camelize(lowFirstLetter) == String\n    Arguments:\n      lowFirstLetter - boolean (optional) - default is to capitalize the first\n        letter of the results... passing true will lowercase it\n    Returns:\n      String - lower case underscored words will be returned in camel case\n        additionally '/' is translated to '::'\n    Examples:\n      \"message_properties\".camelize() == \"MessageProperties\"\n      \"message_properties\".camelize(true) == \"messageProperties\"\n*/\nif (!String.prototype.camelize)\n{\n     String.prototype.camelize = function(lowFirstLetter)\n     {\n        var str = this.toLowerCase();\n        var str_path = str.split('/');\n        for (var i = 0; i < str_path.length; i++)\n        {\n            var str_arr = str_path[i].split('_');\n            var initX = ((lowFirstLetter && i + 1 === str_path.length) ? (1) : (0));\n            for (var x = initX; x < str_arr.length; x++)\n            {\n                str_arr[x] = str_arr[x].charAt(0).toUpperCase() + str_arr[x].substring(1);\n            }\n            str_path[i] = str_arr.join('');\n        }\n        str = str_path.join('::');\n        return str;\n    };\n}\n\n/*\n  This function adds underscore support to every String object\n    Signature:\n      String.underscore() == String\n    Arguments:\n      N/A\n    Returns:\n      String - camel cased words are returned as lower cased and underscored\n        additionally '::' is translated to '/'\n    Examples:\n      \"MessageProperties\".camelize() == \"message_properties\"\n      \"messageProperties\".underscore() == \"message_properties\"\n*/\nif (!String.prototype.underscore)\n{\n     String.prototype.underscore = function()\n     {\n        var str = this;\n        var str_path = str.split('::');\n        for (var i = 0; i < str_path.length; i++)\n        {\n            str_path[i] = str_path[i].replace(InflectionJS.uppercase, '_$1');\n            str_path[i] = str_path[i].replace(InflectionJS.underbar_prefix, '');\n        }\n        str = str_path.join('/').toLowerCase();\n        return str;\n    };\n}\n\n/*\n  This function adds humanize support to every String object\n    Signature:\n      String.humanize(lowFirstLetter) == String\n    Arguments:\n      lowFirstLetter - boolean (optional) - default is to capitalize the first\n        letter of the results... passing true will lowercase it\n    Returns:\n      String - lower case underscored words will be returned in humanized form\n    Examples:\n      \"message_properties\".humanize() == \"Message properties\"\n      \"message_properties\".humanize(true) == \"message properties\"\n*/\nif (!String.prototype.humanize)\n{\n    String.prototype.humanize = function(lowFirstLetter)\n    {\n        var str = this.toLowerCase();\n        str = str.replace(InflectionJS.id_suffix, '');\n        str = str.replace(InflectionJS.underbar, ' ');\n        if (!lowFirstLetter)\n        {\n            str = str.capitalize();\n        }\n        return str;\n    };\n}\n\n/*\n  This function adds capitalization support to every String object\n    Signature:\n      String.capitalize() == String\n    Arguments:\n      N/A\n    Returns:\n      String - all characters will be lower case and the first will be upper\n    Examples:\n      \"message_properties\".capitalize() == \"Message_properties\"\n      \"message properties\".capitalize() == \"Message properties\"\n*/\nif (!String.prototype.capitalize)\n{\n    String.prototype.capitalize = function()\n    {\n        var str = this.toLowerCase();\n        str = str.substring(0, 1).toUpperCase() + str.substring(1);\n        return str;\n    };\n}\n\n/*\n  This function adds dasherization support to every String object\n    Signature:\n      String.dasherize() == String\n    Arguments:\n      N/A\n    Returns:\n      String - replaces all spaces or underbars with dashes\n    Examples:\n      \"message_properties\".capitalize() == \"message-properties\"\n      \"Message Properties\".capitalize() == \"Message-Properties\"\n*/\nif (!String.prototype.dasherize)\n{\n    String.prototype.dasherize = function()\n    {\n        var str = this;\n        str = str.replace(InflectionJS.space_or_underbar, '-');\n        return str;\n    };\n}\n\n/*\n  This function adds titleize support to every String object\n    Signature:\n      String.titleize() == String\n    Arguments:\n      N/A\n    Returns:\n      String - capitalizes words as you would for a book title\n    Examples:\n      \"message_properties\".titleize() == \"Message Properties\"\n      \"message properties to keep\".titleize() == \"Message Properties to Keep\"\n*/\nif (!String.prototype.titleize)\n{\n    String.prototype.titleize = function()\n    {\n        var str = this.toLowerCase();\n        str = str.replace(InflectionJS.underbar, ' ');\n        var str_arr = str.split(' ');\n        for (var x = 0; x < str_arr.length; x++)\n        {\n            var d = str_arr[x].split('-');\n            for (var i = 0; i < d.length; i++)\n            {\n                if (this._non_titlecased_words.indexOf(d[i].toLowerCase()) < 0)\n                {\n                    d[i] = d[i].capitalize();\n                }\n            }\n            str_arr[x] = d.join('-');\n        }\n        str = str_arr.join(' ');\n        str = str.substring(0, 1).toUpperCase() + str.substring(1);\n        return str;\n    };\n}\n\n/*\n  This function adds demodulize support to every String object\n    Signature:\n      String.demodulize() == String\n    Arguments:\n      N/A\n    Returns:\n      String - removes module names leaving only class names (Ruby style)\n    Examples:\n      \"Message::Bus::Properties\".demodulize() == \"Properties\"\n*/\nif (!String.prototype.demodulize)\n{\n    String.prototype.demodulize = function()\n    {\n        var str = this;\n        var str_arr = str.split('::');\n        str = str_arr[str_arr.length - 1];\n        return str;\n    };\n}\n\n/*\n  This function adds tableize support to every String object\n    Signature:\n      String.tableize() == String\n    Arguments:\n      N/A\n    Returns:\n      String - renders camel cased words into their underscored plural form\n    Examples:\n      \"MessageBusProperty\".tableize() == \"message_bus_properties\"\n*/\nif (!String.prototype.tableize)\n{\n    String.prototype.tableize = function()\n    {\n        var str = this;\n        str = str.underscore().pluralize();\n        return str;\n    };\n}\n\n/*\n  This function adds classification support to every String object\n    Signature:\n      String.classify() == String\n    Arguments:\n      N/A\n    Returns:\n      String - underscored plural nouns become the camel cased singular form\n    Examples:\n      \"message_bus_properties\".classify() == \"MessageBusProperty\"\n*/\nif (!String.prototype.classify)\n{\n    String.prototype.classify = function()\n    {\n        var str = this;\n        str = str.camelize().singularize();\n        return str;\n    };\n}\n\n/*\n  This function adds foreign key support to every String object\n    Signature:\n      String.foreign_key(dropIdUbar) == String\n    Arguments:\n      dropIdUbar - boolean (optional) - default is to seperate id with an\n        underbar at the end of the class name, you can pass true to skip it\n    Returns:\n      String - camel cased singular class names become underscored with id\n    Examples:\n      \"MessageBusProperty\".foreign_key() == \"message_bus_property_id\"\n      \"MessageBusProperty\".foreign_key(true) == \"message_bus_propertyid\"\n*/\nif (!String.prototype.foreign_key)\n{\n    String.prototype.foreign_key = function(dropIdUbar)\n    {\n        var str = this;\n        str = str.demodulize().underscore() + ((dropIdUbar) ? ('') : ('_')) + 'id';\n        return str;\n    };\n}\n\n/*\n  This function adds ordinalize support to every String object\n    Signature:\n      String.ordinalize() == String\n    Arguments:\n      N/A\n    Returns:\n      String - renders all found numbers their sequence like \"22nd\"\n    Examples:\n      \"the 1 pitch\".ordinalize() == \"the 1st pitch\"\n*/\nif (!String.prototype.ordinalize)\n{\n    String.prototype.ordinalize = function()\n    {\n        var str = this;\n        var str_arr = str.split(' ');\n        for (var x = 0; x < str_arr.length; x++)\n        {\n            var i = parseInt(str_arr[x], 10);\n            if (i === NaN)\n            {\n                var ltd = str_arr[x].substring(str_arr[x].length - 2);\n                var ld = str_arr[x].substring(str_arr[x].length - 1);\n                var suf = \"th\";\n                if (ltd != \"11\" && ltd != \"12\" && ltd != \"13\")\n                {\n                    if (ld === \"1\")\n                    {\n                        suf = \"st\";\n                    }\n                    else if (ld === \"2\")\n                    {\n                        suf = \"nd\";\n                    }\n                    else if (ld === \"3\")\n                    {\n                        suf = \"rd\";\n                    }\n                }\n                str_arr[x] += suf;\n            }\n        }\n        str = str_arr.join(' ');\n        return str;\n    };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@resin/sbvr-parser/inflection.js\n// module id = 42\n// module chunks = 0","module.exports = \"Vocabulary: Type\\nTerm:       Integer\\nTerm:       Real\\nTerm:       Text\\nTerm:       Date\\nTerm:       Date Time\\nTerm:       Time\\nTerm:       Interval\\nTerm:       File\\n\\nTerm:       Serial\\n\\tConcept Type: Integer\\n\\tNote: An auto-incrementing 'Integer'.\\nTerm:       JSON\\n\\tConcept Type: Text\\n\\tNote: A 'Text' type that will only allow valid JSON.\\nTerm:       Hashed\\n\\tConcept Type: Text\\n\\tNote: A 'Text' type that will automatically be converted to a hash.\\n\\nTerm:       Length\\n\\tConcept Type: Integer\\n\\nFact type:  Text has Length\\n\\tNote: Length in characters\\n\\tNecessity: Each Text has exactly one Length\\n\\nFact type:  Integer1 is less than Integer2\\n\\tSynonymous Form: Integer2 is greater than Integer1\\nFact type: Integer1 is less than or equal to Integer2\\n\\tSynonymous Form: Integer2 is greater than or equal to Integer1\\nFact type:  Integer1 is equal to Integer2\\n\\tSynonymous Form: Integer2 is equal to Integer1\\n\\tSynonymous Form: Integer1 equals Integer2\\n\\tSynonymous Form: Integer2 equals Integer1\\n\\nFact type:  Real1 is less than Real2\\n\\tSynonymous Form: Real2 is greater than Real1\\nFact type: Real1 is less than or equal to Real2\\n\\tSynonymous Form: Real2 is greater than or equal to Real1\\nFact type:  Real1 is equal to Real2\\n\\tSynonymous Form: Real2 is equal to Real1\\n\\tSynonymous Form: Real1 equals Real2\\n\\tSynonymous Form: Real2 equals Real1\\n\\n\\nFact type:  Real is less than Integer\\n\\tSynonymous Form: Integer is greater than Real\\nFact type:  Integer is less than Real\\n\\tSynonymous Form: Real is greater than Integer\\n\\nFact type: Real is less than or equal to Integer\\n\\tSynonymous Form: Integer is greater than or equal to Real\\nFact type: Integer is less than or equal to Real\\n\\tSynonymous Form: Real is greater than or equal to Integer\\n\\nFact type:  Integer is equal to Real\\n\\tSynonymous Form: Real is equal to Integer\\n\\tSynonymous Form: Real equals Integer\\n\\tSynonymous Form: Integer equals Real\\n\\n\\nFact type:  Text1 is equal to Text2\\n\\tSynonymous Form: Text2 is equal to Text1\\n\\tSynonymous Form: Text1 equals Text2\\n\\tSynonymous Form: Text2 equals Text1\\n\\nTerm:       Short Text\\n\\tConcept Type: Text\\n\\t--Necessity: each Short Text has a Length that is less than or equal to 255.\\n\\nTerm:       Red Component\\n\\tConcept Type: Integer\\nTerm:       Green Component\\n\\tConcept Type: Integer\\nTerm:       Blue Component\\n\\tConcept Type: Integer\\nTerm:       Alpha Component\\n\\tConcept Type: Integer\\nTerm:       Color\\n\\tConcept Type: Integer\\nFact type:  Color has Red Component\\n\\tNecessity: Each Color has exactly one Red Component\\nFact type:  Color has Green Component\\n\\tNecessity: Each Color has exactly one Green Component\\nFact type:  Color has Blue Component\\n\\tNecessity: Each Color has exactly one Blue Component\\nFact type:  Color has Alpha Component\\n\\tNecessity: Each Color has exactly one Alpha Component\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@resin/sbvr-types/Type.sbvr\n// module id = 43\n// module chunks = 0","_ = require 'lodash'\nPromise = require 'bluebird'\nTypedError = require 'typed-error'\nmodelText = require './migrations.sbvr'\npermissions = require '../sbvr-api/permissions'\n\nexports.MigrationError = class MigrationError extends TypedError\n\nexports.run = (tx, model) ->\n\tif not _.some(model.migrations)\n\t\treturn Promise.fulfilled()\n\n\tmodelName = model.apiRoot\n\n\t# migrations only run if the model has been executed before,\n\t# to make changes that can't be automatically applied\n\t@checkModelAlreadyExists(tx, modelName)\n\t.then (exists) =>\n\t\tif not exists\n\t\t\t@logger.info('First time model has executed, skipping migrations')\n\t\t\treturn @setExecutedMigrations(tx, modelName, _.keys(model.migrations))\n\n\t\t@getExecutedMigrations(tx, modelName)\n\t\t.then (executedMigrations) =>\n\t\t\tpendingMigrations = @filterAndSortPendingMigrations(model.migrations, executedMigrations)\n\t\t\treturn if not _.some(pendingMigrations)\n\n\t\t\t@executeMigrations(tx, pendingMigrations)\n\t\t\t.then (newlyExecutedMigrations) =>\n\t\t\t\t@setExecutedMigrations(tx, modelName, [ executedMigrations..., newlyExecutedMigrations... ])\n\nexports.checkModelAlreadyExists = (tx, modelName) ->\n\t@sbvrUtils.api.dev.get\n\t\tresource: 'model'\n\t\tpassthrough:\n\t\t\ttx: tx\n\t\t\treq: permissions.rootRead\n\t\toptions:\n\t\t\tselect: [ 'vocabulary' ]\n\t\t\ttop: '1'\n\t\t\tfilter:\n\t\t\t\tvocabulary: modelName\n\t.then (results) ->\n\t\t_.some(results)\n\nexports.getExecutedMigrations = (tx, modelName) ->\n\t@migrationsApi.get\n\t\tresource: 'migration'\n\t\tid: modelName\n\t\tpassthrough:\n\t\t\ttx: tx\n\t\t\treq: permissions.rootRead\n\t\toptions:\n\t\t\tselect: [ 'executed_migrations' ]\n\t.then (data) ->\n\t\tdata?.executed_migrations || []\n\nexports.setExecutedMigrations = (tx, modelName, executedMigrations) ->\n\t@migrationsApi.put\n\t\tresource: 'migration'\n\t\tid: modelName\n\t\tpassthrough:\n\t\t\ttx: tx\n\t\t\treq: permissions.root\n\t\tbody:\n\t\t\tmodel_name: modelName\n\t\t\texecuted_migrations: executedMigrations\n\n\t# turns {\"key1\": migration, \"key3\": migration, \"key2\": migration}\n\t# into  [[\"key1\", migration], [\"key2\", migration], [\"key3\", migration]]\nexports.filterAndSortPendingMigrations = (migrations, executedMigrations) ->\n\t_(migrations)\n\t.omit(executedMigrations)\n\t.toPairs()\n\t.sortBy(_.head)\n\t.value()\n\nexports.executeMigrations = (tx, migrations = []) ->\n\tPromise.map(migrations, @executeMigration.bind(this, tx), concurrency: 1)\n\t.catch (err) =>\n\t\t@logger.error('Error while executing migrations, rolled back')\n\t\tthrow new MigrationError(err)\n\t.return(_.map(migrations, _.head)) # return migration keys\n\nexports.executeMigration = (tx, [ key, migration ]) ->\n\t@logger.info \"Running migration #{JSON.stringify key}\"\n\n\tswitch typeof migration\n\t\twhen 'function'\n\t\t\tmigration(tx, @sbvrUtils)\n\t\twhen 'string'\n\t\t\ttx.executeSql(migration)\n\nexports.config =\n\tmodels: [\n\t\tmodelName: 'migrations'\n\t\tapiRoot: 'migrations'\n\t\tmodelText: modelText\n\t\tcustomServerCode: exports\n\t]\n\nexports.setup = (app, @sbvrUtils, db, callback) ->\n\t@migrationsApi = @sbvrUtils.api.migrations\n\t@logger = @migrationsApi.logger\n\n\tcallback()\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/src/migrator/migrator.coffee","module.exports = \"Vocabulary: migrations\\n\\nTerm:       model name\\n\\tConcept Type: Short Text (Type)\\nTerm:       executed migrations\\n\\tConcept Type: JSON (Type)\\n\\nTerm:       migration\\n\\tReference Scheme:   model name\\n\\tDatabase ID Field:  model name\\nFact Type:  migration has model name\\n\\tNecessity: each migration has exactly one model name\\nFact Type:  migration has executed migrations\\n\\tNecessity: each migration has exactly one executed migrations\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/server/src/migrator/migrations.sbvr\n// module id = 45\n// module chunks = 0","_ = require 'lodash'\nPromise = require 'bluebird'\nBluebirdLRU = require 'bluebird-lru-cache'\nenv = require '../config-loader/env'\nuserModel = require './user.sbvr'\n{ metadataEndpoints } = require './uri-parser'\n{ ODataParser } = require '@resin/odata-parser'\nmemoize = require 'memoizee'\nTypedError = require 'typed-error'\n\nexports.PermissionError = class PermissionError extends TypedError\nexports.PermissionParsingError = class PermissionParsingError extends TypedError\nexports.root = user: permissions: [ 'resource.all' ]\nexports.rootRead = rootRead = user: permissions: [ 'resource.get' ]\nmethodPermissions =\n\tGET: or: ['get', 'read']\n\tPUT:\n\t\tor: [\n\t\t\t'set'\n\t\t\tand: ['create', 'update']\n\t\t]\n\tPOST: or: ['set', 'create']\n\tPATCH: or: ['set', 'update']\n\tMERGE: or: ['set', 'update']\n\tDELETE: 'delete'\n\nparsePermissions = do ->\n\todataParser = ODataParser.createInstance()\n\t_parsePermissions = memoize(\n\t\t(filter, bindsLength) ->\n\t\t\t# Continue with the same length of binds as before for the partial pass step,\n\t\t\t# except we don't care what those binds actually are)\n\t\t\todataParser.binds = new Array(bindsLength)\n\t\t\ttree = odataParser.matchAll(['FilterByExpression', filter], 'ProcessRule')\n\t\t\treturn {\n\t\t\t\ttree\n\t\t\t\textraBinds: odataParser.binds.slice(bindsLength)\n\t\t\t}\n\t\tprimitive: true\n\t)\n\n\treturn (filter, odataBinds) ->\n\t\t{ tree, extraBinds } = _parsePermissions(filter, odataBinds.length)\n\t\t# Add the extra binds we parsed onto our existing list of binds vars.\n\t\todataBinds.push(extraBinds...)\n\t\treturn tree\n\n# Traverses all values in `check`, actions for the following data types:\n# string: Calls `stringCallback` and uses the value returned instead\n# boolean: Used as-is\n# array: Treated as an AND of all elements\n# object: Must have only one key of either `AND` or `OR`, with an array value that will be treated according to the key.\nexports.nestedCheck = nestedCheck = (check, stringCallback) ->\n\tif _.isString(check)\n\t\tstringCallback(check)\n\telse if _.isBoolean(check)\n\t\treturn check\n\telse if _.isArray(check)\n\t\tresults = []\n\t\tfor subcheck in check\n\t\t\tresult = nestedCheck(subcheck, stringCallback)\n\t\t\tif result is false\n\t\t\t\treturn false\n\t\t\telse if result isnt true\n\t\t\t\tresults = results.concat(result)\n\t\tif results.length is 1\n\t\t\treturn results[0]\n\t\telse if results.length > 1\n\t\t\treturn _.uniq(results)\n\t\telse\n\t\t\treturn true\n\telse if _.isObject(check)\n\t\tcheckTypes = _.keys(check)\n\t\tif checkTypes.length > 1\n\t\t\tthrow new Error('More than one check type: ' + checkTypes)\n\t\tcheckType = checkTypes[0]\n\t\tswitch checkType.toUpperCase()\n\t\t\twhen 'AND'\n\t\t\t\treturn nestedCheck(check[checkType], stringCallback)\n\t\t\twhen 'OR'\n\t\t\t\tresults = []\n\t\t\t\tfor subcheck in check[checkType]\n\t\t\t\t\tresult = nestedCheck(subcheck, stringCallback)\n\t\t\t\t\tif result is true\n\t\t\t\t\t\treturn true\n\t\t\t\t\telse if result isnt false\n\t\t\t\t\t\tresults = results.concat(result)\n\t\t\t\tif results.length is 1\n\t\t\t\t\treturn results[0]\n\t\t\t\telse if results.length > 1\n\t\t\t\t\treturn _.uniq(results)\n\t\t\t\telse\n\t\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tthrow new Error('Cannot parse required checking logic: ' + checkType)\n\telse\n\t\tthrow new Error('Cannot parse required checks: ' + check)\n\ncollapsePermissionFilters = (v) ->\n\tif _.isArray(v)\n\t\tcollapsePermissionFilters(or: v)\n\telse if _.isObject(v)\n\t\tif v.hasOwnProperty('filter')\n\t\t\tv.filter\n\t\telse\n\t\t\t_(v)\n\t\t\t.toPairs()\n\t\t\t.flattenDeep()\n\t\t\t.map(collapsePermissionFilters)\n\t\t\t.value()\n\telse\n\t\tv\n\nexports.config =\n\tmodels: [\n\t\tapiRoot: 'Auth'\n\t\tmodelText: userModel\n\t\tcustomServerCode: exports\n\t]\nexports.setup = (app, sbvrUtils) ->\n\tsbvrUtils.addHook 'all', 'all', 'all',\n\t\tPREPARSE: ({ req }) ->\n\t\t\tapiKeyMiddleware(req)\n\t\tPOSTPARSE: ({ req, request }) ->\n\t\t\taddPermissions(req, request)\n\n\tsbvrUtils.addHook 'POST', 'Auth', 'user',\n\t\tPOSTPARSE: ({ request, api }) ->\n\t\t\tapi.post\n\t\t\t\tresource: 'actor'\n\t\t\t.then (result) ->\n\t\t\t\trequest.values.actor = result.id\n\n\tsbvrUtils.addHook 'DELETE', 'Auth', 'user',\n\t\tPOSTRUN: ({ request, api }) ->\n\t\t\tapi.delete\n\t\t\t\tresource: 'actor'\n\t\t\t\tid: request.values.actor\n\n\texports.checkPassword = (username, password, callback) ->\n\t\tauthApi = sbvrUtils.api.Auth\n\t\tauthApi.get\n\t\t\tresource: 'user'\n\t\t\tpassthrough: req: rootRead\n\t\t\toptions:\n\t\t\t\tselect: ['id', 'actor', 'password']\n\t\t\t\tfilter:\n\t\t\t\t\tusername: username\n\t\t.then (result) ->\n\t\t\tif result.length is 0\n\t\t\t\tthrow new Error('User not found')\n\t\t\thash = result[0].password\n\t\t\tuserId = result[0].id\n\t\t\tactorId = result[0].actor\n\t\t\tsbvrUtils.sbvrTypes.Hashed.compare(password, hash)\n\t\t\t.then (res) ->\n\t\t\t\tif !res\n\t\t\t\t\tthrow new Error('Passwords do not match')\n\t\t\t\tgetUserPermissions(userId)\n\t\t\t\t.then (permissions) ->\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: userId\n\t\t\t\t\t\tactor: actorId\n\t\t\t\t\t\tusername: username\n\t\t\t\t\t\tpermissions: permissions\n\t\t\t\t\t}\n\t\t.nodeify(callback)\n\n\tgetPermissions = (permsFilter, callback) ->\n\t\tauthApi = sbvrUtils.api.Auth\n\t\tauthApi.get\n\t\t\tresource: 'permission'\n\t\t\tpassthrough: req: rootRead\n\t\t\toptions:\n\t\t\t\tselect: 'name'\n\t\t\t\tfilter: permsFilter\n\t\t.map (permission) -> permission.name\n\t\t.catch (err) ->\n\t\t\tauthApi.logger.error('Error loading permissions', err, err.stack)\n\t\t\tthrow err\n\t\t.nodeify(callback)\n\n\texports.getUserPermissions = getUserPermissions = (userId, callback) ->\n\t\tif _.isString(userId)\n\t\t\tuserId = _.parseInt(userId)\n\t\tif !_.isFinite(userId)\n\t\t\treturn Promise.rejected(new Error('User ID has to be numeric, got: ' + typeof userId))\n\t\tpermsFilter = $or:\n\t\t\tuser__has__permission: $any:\n\t\t\t\t$alias: 'uhp'\n\t\t\t\t$expr:\n\t\t\t\t\tuhp: user: userId\n\t\t\t\t\t$or: [\n\t\t\t\t\t\tuhp: expiry_date: null\n\t\t\t\t\t,\tuhp: expiry_date: $gt: $now: null\n\t\t\t\t\t]\n\t\t\trole__has__permission: $any:\n\t\t\t\t$alias: 'rhp'\n\t\t\t\t$expr: rhp: role: $any:\n\t\t\t\t\t$alias: 'r'\n\t\t\t\t\t$expr: r: user__has__role: $any:\n\t\t\t\t\t\t$alias: 'uhr'\n\t\t\t\t\t\t$expr:\n\t\t\t\t\t\t\tuhr: user: userId\n\t\t\t\t\t\t\t$or: [\n\t\t\t\t\t\t\t\tuhr: expiry_date: null\n\t\t\t\t\t\t\t,\tuhr: expiry_date: $gt: $now: null\n\t\t\t\t\t\t\t]\n\t\treturn getPermissions(permsFilter, callback)\n\n\texports.getApiKeyPermissions = getApiKeyPermissions = do ->\n\t\tcache = new BluebirdLRU\n\t\t\tmax: env.apiKeys.permissionsCache.max\n\t\t\tmaxAge: env.apiKeys.permissionsCache.maxAge\n\t\t\tfetchFn: (apiKey) ->\n\t\t\t\tpermsFilter = $or:\n\t\t\t\t\tapi_key__has__permission: $any:\n\t\t\t\t\t\t$alias: 'khp'\n\t\t\t\t\t\t$expr: khp: api_key: $any:\n\t\t\t\t\t\t\t$alias: 'k'\n\t\t\t\t\t\t\t$expr: k: key: apiKey\n\t\t\t\t\trole__has__permission: $any:\n\t\t\t\t\t\t$alias: 'rhp'\n\t\t\t\t\t\t$expr: 'rhp': role: $any:\n\t\t\t\t\t\t\t$alias: 'r'\n\t\t\t\t\t\t\t$expr: r: api_key__has__role: $any:\n\t\t\t\t\t\t\t\t$alias: 'khr'\n\t\t\t\t\t\t\t\t$expr: khr: api_key: $any:\n\t\t\t\t\t\t\t\t\t$alias: 'k'\n\t\t\t\t\t\t\t\t\t$expr: k: key: apiKey\n\t\t\t\treturn getPermissions(permsFilter)\n\t\t(apiKey, callback) ->\n\t\t\tpromise =\n\t\t\t\tif _.isString(apiKey)\n\t\t\t\t\tcache.get(apiKey)\n\t\t\t\telse\n\t\t\t\t\tPromise.rejected(new Error('API key has to be a string, got: ' + typeof apiKey))\n\t\t\treturn promise.nodeify(callback)\n\n\tcheckApiKey = (req, apiKey) ->\n\t\tPromise.try ->\n\t\t\tif !apiKey? or req.apiKey?\n\t\t\t\treturn\n\t\t\tgetApiKeyPermissions(apiKey)\n\t\t\t.catch (err) ->\n\t\t\t\tconsole.warn('Error with API key:', err)\n\t\t\t\t# Ignore errors getting the api key and just use an empty permissions object\n\t\t\t\treturn []\n\t\t\t.then (permissions) ->\n\t\t\t\treq.apiKey =\n\t\t\t\t\tkey: apiKey\n\t\t\t\t\tpermissions: permissions\n\n\texports.customAuthorizationMiddleware = customAuthorizationMiddleware = (expectedScheme = 'Bearer') ->\n\t\texpectedScheme = expectedScheme.toLowerCase()\n\t\treturn (req, res, next) ->\n\t\t\tPromise.try ->\n\t\t\t\tauth = req.header('Authorization')\n\t\t\t\tif !auth\n\t\t\t\t\treturn\n\n\t\t\t\tparts = auth.split(' ')\n\t\t\t\tif parts.length isnt 2\n\t\t\t\t\treturn\n\n\t\t\t\t[ scheme, apiKey ] = parts\n\t\t\t\tif scheme.toLowerCase() isnt expectedScheme\n\t\t\t\t\treturn\n\n\t\t\t\tcheckApiKey(req, apiKey)\n\t\t\t.then ->\n\t\t\t\tnext?()\n\t\t\t\treturn\n\n\t# A default bearer middleware for convenience\n\texports.authorizationMiddleware = customAuthorizationMiddleware()\n\n\texports.customApiKeyMiddleware = customApiKeyMiddleware = (paramName = 'apikey') ->\n\t\treturn (req, res, next) ->\n\t\t\tapiKey = req.params[paramName] ? req.body[paramName] ? req.query[paramName]\n\t\t\tcheckApiKey(req, apiKey)\n\t\t\t.then ->\n\t\t\t\tnext?()\n\t\t\t\treturn\n\n\t# A default api key middleware for convenience\n\texports.apiKeyMiddleware = apiKeyMiddleware = customApiKeyMiddleware()\n\n\texports.checkPermissions = checkPermissions = do ->\n\t\t_getGuestPermissions = do ->\n\t\t\t# Start the guest permissions as null, having it as a reject promise either\n\t\t\t# causes an issue with an unhandled rejection, or with enabling long stack traces.\n\t\t\t_guestPermissions = null\n\t\t\treturn (callback) ->\n\t\t\t\tif !_guestPermissions? or _guestPermissions.isRejected()\n\t\t\t\t\t# Get guest user\n\t\t\t\t\t_guestPermissions = sbvrUtils.api.Auth.get\n\t\t\t\t\t\tresource: 'user'\n\t\t\t\t\t\tpassthrough: req: rootRead\n\t\t\t\t\t\toptions:\n\t\t\t\t\t\t\tselect: 'id'\n\t\t\t\t\t\t\tfilter:\n\t\t\t\t\t\t\t\tusername: 'guest'\n\t\t\t\t\t.then (result) ->\n\t\t\t\t\t\tif result.length is 0\n\t\t\t\t\t\t\tthrow new Error('No guest permissions')\n\t\t\t\t\t\tgetUserPermissions(result[0].id)\n\t\t\t\t_guestPermissions.nodeify(callback)\n\n\t\t# If not all optional arguments are specified, and the last one specified is a function then it is taken to be the callback.\n\t\t# req, actionList[, resourceName, vocabulary, apiKey, callback]\n\t\treturn (args...) ->\n\t\t\t# callbackArg needs to be the index of the last optional index\n\t\t\t# and then if the callback is a function it should be used and nullified so that it isn't used for another arg\n\t\t\tcallbackArg = Math.max(3, Math.min(6, args.length - 1))\n\t\t\tif _.isFunction(args[callbackArg])\n\t\t\t\tcallback = args[callbackArg]\n\t\t\t\targs[callbackArg] = null\n\t\t\t[req, actionList, resourceName, vocabulary] = args\n\n\t\t\tauthApi = sbvrUtils.api.Auth\n\n\t\t\t_checkPermissions = (permissions, actorID) ->\n\t\t\t\tif !actorID?\n\t\t\t\t\tthrow new Error('Actor ID cannot be null for _checkPermissions.')\n\t\t\t\tcheckObject = or: ['all', actionList]\n\t\t\t\treturn nestedCheck checkObject, (permissionCheck) ->\n\t\t\t\t\tresourcePermission = 'resource.' + permissionCheck\n\t\t\t\t\tif _.includes(permissions, resourcePermission)\n\t\t\t\t\t\treturn true\n\t\t\t\t\tif vocabulary?\n\t\t\t\t\t\tvocabularyPermission = vocabulary + '.' + permissionCheck\n\t\t\t\t\t\tif _.includes(permissions, vocabularyPermission)\n\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\tif resourceName?\n\t\t\t\t\t\t\tvocabularyResourcePermission = vocabulary + '.' + resourceName + '.' + permissionCheck\n\t\t\t\t\t\t\tif _.includes(permissions, vocabularyResourcePermission)\n\t\t\t\t\t\t\t\treturn true\n\n\t\t\t\t\tconditionalPermissions = _.map permissions, (permissionName) ->\n\t\t\t\t\t\tfor permission in [resourcePermission, vocabularyPermission, vocabularyResourcePermission] when permission?\n\t\t\t\t\t\t\t# Check if there are any matching permissions that contain a condition (condition indicated by a ? directly after the permission name).\n\t\t\t\t\t\t\tpermission = permission + '?'\n\t\t\t\t\t\t\tif permissionName[...permission.length] == permission\n\t\t\t\t\t\t\t\tcondition = permissionName[permission.length...]\n\t\t\t\t\t\t\t\tif _.isArray(actorID)\n\t\t\t\t\t\t\t\t\treturn _.map actorID, (id) -> condition.replace(/\\$ACTOR\\.ID/g, id)\n\t\t\t\t\t\t\t\treturn condition.replace(/\\$ACTOR\\.ID/g, actorID)\n\t\t\t\t\t\treturn false\n\t\t\t\t\t# Remove the false elements.\n\t\t\t\t\tconditionalPermissions = _.filter(conditionalPermissions)\n\n\t\t\t\t\tif conditionalPermissions.length is 1\n\t\t\t\t\t\treturn conditionalPermissions[0]\n\t\t\t\t\telse if conditionalPermissions.length > 1\n\t\t\t\t\t\treturn or: conditionalPermissions\n\t\t\t\t\treturn false\n\n\t\t\t# We default to a user id of 0 (the guest user) if not logged in.\n\t\t\tactorID = req.user?.actor ? 0\n\t\t\tapiKeyActorID = false\n\n\t\t\tPromise.try ->\n\t\t\t\tif req.user?\n\t\t\t\t\treturn _checkPermissions(req.user.permissions, actorID)\n\t\t\t\treturn false\n\t\t\t.catch (err) ->\n\t\t\t\tauthApi.logger.error('Error checking user permissions', req.user, err, err.stack)\n\t\t\t\treturn false\n\t\t\t.then (allowed) ->\n\t\t\t\tapiKeyPermissions = req.apiKey?.permissions\n\t\t\t\tif allowed is true or !apiKeyPermissions? or apiKeyPermissions.length is 0\n\t\t\t\t\treturn allowed\n\t\t\t\tauthApi.get\n\t\t\t\t\tresource: 'api_key'\n\t\t\t\t\tpassthrough: req: rootRead\n\t\t\t\t\toptions:\n\t\t\t\t\t\tselect: 'actor'\n\t\t\t\t\t\tfilter: key: req.apiKey.key\n\t\t\t\t.then (apiKeys) ->\n\t\t\t\t\tif apiKeys.length is 0\n\t\t\t\t\t\tthrow new Error('API key is not linked to a actor?!')\n\t\t\t\t\tapiKeyActorID = apiKeys[0].actor.__id\n\t\t\t\t\treturn _checkPermissions(apiKeyPermissions, apiKeyActorID)\n\t\t\t\t.catch (err) ->\n\t\t\t\t\tauthApi.logger.error('Error checking api key permissions', req.apiKey.key, err, err.stack)\n\t\t\t\t.then (apiKeyAllowed) ->\n\t\t\t\t\tif apiKeyAllowed is true\n\t\t\t\t\t\treturn true\n\t\t\t\t\treturn or: [allowed, apiKeyAllowed]\n\t\t\t.then (allowed) ->\n\t\t\t\tif allowed is true\n\t\t\t\t\treturn allowed\n\t\t\t\t_getGuestPermissions()\n\t\t\t\t.then (permissions) ->\n\t\t\t\t\tactorIDs =\n\t\t\t\t\t\tif apiKeyActorID isnt false\n\t\t\t\t\t\t\t[actorID, apiKeyActorID]\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tactorID\n\t\t\t\t\treturn _checkPermissions(permissions, actorIDs)\n\t\t\t\t.catch (err) ->\n\t\t\t\t\tauthApi.logger.error('Error checking guest permissions', err, err.stack)\n\t\t\t\t\treturn false\n\t\t\t\t.then (guestAllowed) ->\n\t\t\t\t\treturn or: [allowed, guestAllowed]\n\t\t\t.then (permissions) ->\n\t\t\t\t# Pass through the nestedCheck with no changes to strings, this optimises any ors/ands that can be.\n\t\t\t\tnestedCheck(permissions, _.identity)\n\t\t\t.nodeify(callback)\n\n\texports.checkPermissionsMiddleware = (action) ->\n\t\treturn (req, res, next) ->\n\t\t\tcheckPermissions(req, action)\n\t\t\t.then (allowed) ->\n\t\t\t\tswitch allowed\n\t\t\t\t\twhen false\n\t\t\t\t\t\tres.sendStatus(401)\n\t\t\t\t\twhen true\n\t\t\t\t\t\tnext()\n\t\t\t\t\telse\n\t\t\t\t\t\tthrow new Error('checkPermissionsMiddleware returned a conditional permission')\n\t\t\t.catch (err) ->\n\t\t\t\tsbvrUtils.api.Auth.logger.error('Error checking permissions', err, err.stack)\n\t\t\t\tres.sendStatus(503)\n\n\taddPermissions = do ->\n\t\t_addPermissions = (req, permissionType, vocabulary, resourceName, odataQuery, odataBinds) ->\n\t\t\tcheckPermissions(req, permissionType, resourceName, vocabulary)\n\t\t\t.then (conditionalPerms) ->\n\t\t\t\tif conditionalPerms is false\n\t\t\t\t\tthrow new PermissionError()\n\t\t\t\tif conditionalPerms isnt true\n\t\t\t\t\tpermissionFilters = nestedCheck conditionalPerms, (permissionCheck) ->\n\t\t\t\t\t\ttry\n\t\t\t\t\t\t\tpermissionCheck = parsePermissions(permissionCheck, odataBinds)\n\t\t\t\t\t\t\t# We use an object with filter key to avoid collapsing our filters later.\n\t\t\t\t\t\t\treturn filter: permissionCheck\n\t\t\t\t\t\tcatch e\n\t\t\t\t\t\t\tconsole.warn('Failed to parse conditional permissions: ', permissionCheck)\n\t\t\t\t\t\t\tthrow new PermissionParsingError(e)\n\n\t\t\t\t\tif permissionFilters is false\n\t\t\t\t\t\tthrow new PermissionError()\n\t\t\t\t\tif permissionFilters isnt true\n\t\t\t\t\t\tpermissionFilters = collapsePermissionFilters(permissionFilters)\n\t\t\t\t\t\todataQuery.options ?= {}\n\t\t\t\t\t\tif odataQuery.options.$filter?\n\t\t\t\t\t\t\todataQuery.options.$filter = ['and', odataQuery.options.$filter, permissionFilters]\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\todataQuery.options.$filter = permissionFilters\n\n\t\t\t\tif odataQuery.options?.$expand?.properties?\n\t\t\t\t\t# Make sure any relevant permission filters are also applied to expands.\n\t\t\t\t\tPromise.map odataQuery.options.$expand.properties, (expand) ->\n\t\t\t\t\t\t# Always use get for the $expands\n\t\t\t\t\t\t_addPermissions(req, methodPermissions.GET, vocabulary, expand.name, expand, odataBinds)\n\n\t\treturn (req, { method, vocabulary, resourceName, odataQuery, odataBinds, values, custom }) ->\n\t\t\tmethod = method.toUpperCase()\n\t\t\tisMetadataEndpoint = resourceName in metadataEndpoints or method is 'OPTIONS'\n\n\t\t\tpermissionType =\n\t\t\t\tif isMetadataEndpoint\n\t\t\t\t\t'model'\n\t\t\t\telse if methodPermissions[method]?\n\t\t\t\t\tmethodPermissions[method]\n\t\t\t\telse\n\t\t\t\t\tconsole.warn('Unknown method for permissions type check: ', method)\n\t\t\t\t\t'all'\n\n\t\t\t_addPermissions(req, permissionType, vocabulary, odataQuery.resource, odataQuery, odataBinds)\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/src/sbvr-api/permissions.coffee","module.exports = require(\"bluebird-lru-cache\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bluebird-lru-cache\"\n// module id = 47\n// module chunks = 0","exports.apiKeys =\n\tpermissionsCache:\n\t\tmax: 500\n\t\tmaxAge: 5 * 60 * 1000\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/src/config-loader/env.coffee","module.exports = \"Vocabulary: Auth\\n\\nTerm:       username\\n\\tConcept Type: Short Text (Type)\\nTerm:       password\\n\\tConcept Type: Hashed (Type)\\nTerm:       name\\n\\tConcept Type: Short Text (Type)\\nTerm:       key\\n\\tConcept Type: Short Text (Type)\\nTerm:       expiry date\\n\\tConcept Type: Date Time (Type)\\n\\nTerm:       permission\\n\\tReference Scheme: name\\nFact type:  permission has name\\n\\tNecessity: Each permission has exactly one name.\\n\\tNecessity: Each name is of exactly one permission.\\n\\nTerm:       role\\n\\tReference Scheme: name\\nFact type:  role has name\\n\\tNecessity: Each role has exactly one name.\\n\\tNecessity: Each name is of exactly one role.\\nFact type:  role has permission\\n\\nTerm:       actor\\n\\nTerm:       user\\n\\tReference Scheme: username\\n\\tConcept Type: actor\\nFact type:  user has username\\n\\tNecessity: Each user has exactly one username.\\n\\tNecessity: Each username is of exactly one user.\\nFact type:  user has password\\n\\tNecessity: Each user has exactly one password.\\nFact type:  user has role\\n\\tNote: A 'user' will inherit all the 'permissions' that the 'role' has.\\n\\tTerm Form: user role\\n\\tFact type: user role has expiry date\\n\\t\\tNecessity: Each user role has at most one expiry date.\\nFact type:  user has permission\\n\\tTerm Form: user permission\\n\\tFact type: user permission has expiry date\\n\\t\\tNecessity: Each user permission has at most one expiry date.\\n\\nTerm:       api key\\n\\tReference Scheme: key\\nFact type:  api key has key\\n\\tNecessity: each api key has exactly one key\\n\\tNecessity: each key is of exactly one api key\\nFact type:  api key has role\\n\\tNote: An 'api key' will inherit all the 'permissions' that the 'role' has.\\nFact type:  api key has permission\\nFact type:  api key is of actor\\n\\tNecessity: each api key is of exactly one actor\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/server/src/sbvr-api/user.sbvr\n// module id = 49\n// module chunks = 0","Promise = require 'bluebird'\nTypedError = require 'typed-error'\n{ ODataParser } = require '@resin/odata-parser'\n{ OData2AbstractSQL } = require '@resin/odata-to-abstract-sql'\nmemoize = require 'memoizee'\n_ = require 'lodash'\n\nexports.TranslationError = class TranslationError extends TypedError\nexports.ParsingError = class ParsingError extends TypedError\nexports.BadRequestError = class BadRequestError extends TypedError\n\nodataParser = ODataParser.createInstance()\nodata2AbstractSQL = {}\n\nmemoizedOdata2AbstractSQL = do ->\n\t_memoizedOdata2AbstractSQL = memoize(\n\t\t(vocabulary, odataQuery, method, bodyKeys) ->\n\t\t\ttry\n\t\t\t\treturn odata2AbstractSQL[vocabulary].match(odataQuery, 'Process', [method, bodyKeys])\n\t\t\tcatch e\n\t\t\t\tconsole.error('Failed to translate url: ', JSON.stringify(odataQuery, null, '\\t'), method, e, e.stack)\n\t\t\t\tthrow new TranslationError('Failed to translate url')\n\t\tnormalizer: JSON.stringify\n\t)\n\treturn (vocabulary, odataQuery, method, body) ->\n\t\t{ tree, extraBodyVars} = _memoizedOdata2AbstractSQL(vocabulary, odataQuery, method, _.keys(body).sort())\n\t\t_.assign(body, extraBodyVars)\n\t\treturn tree\n\nexports.metadataEndpoints = metadataEndpoints = ['$metadata', '$serviceroot']\n\nnotParsingError = (e) -> not (e instanceof ParsingError)\nexports.parseODataURI = (req) ->\n\tPromise.try ->\n\t\t{ method, url, body } = req\n\t\turl = url.split('/')\n\t\tapiRoot = url[1]\n\t\tif !apiRoot? or !odata2AbstractSQL[apiRoot]?\n\t\t\tthrow new ParsingError(\"No such api root: '#{apiRoot}'\")\n\t\turl = '/' + url[2...].join('/')\n\t\todata = odataParser.matchAll(url, 'Process')\n\n\t\treturn [{\n\t\t\tmethod\n\t\t\tvocabulary: apiRoot\n\t\t\tresourceName: odata.tree.resource\n\t\t\todataBinds: odata.binds\n\t\t\todataQuery: odata.tree\n\t\t\tvalues: body\n\t\t\tcustom: {}\n\t\t}]\n\t.catch SyntaxError, ->\n\t\tthrow new BadRequestError(\"Malformed url: '#{url}'\")\n\t.catch notParsingError, (e) ->\n\t\tconsole.error('Failed to parse url: ', method, url, e, e.stack)\n\t\tthrow new ParsingError(\"Failed to parse url: '#{url}'\")\n\nexports.translateUri = ({ method, vocabulary, resourceName, odataBinds, odataQuery, values, custom }) ->\n\tisMetadataEndpoint = resourceName in metadataEndpoints or method is 'OPTIONS'\n\tif !isMetadataEndpoint\n\t\tabstractSqlQuery = memoizedOdata2AbstractSQL(vocabulary, odataQuery, method, values)\n\t\treturn {\n\t\t\tmethod\n\t\t\tvocabulary\n\t\t\tresourceName\n\t\t\todataBinds\n\t\t\todataQuery\n\t\t\tabstractSqlQuery\n\t\t\tvalues\n\t\t\tcustom\n\t\t}\n\treturn {\n\t\tmethod\n\t\tvocabulary\n\t\tresourceName\n\t\tcustom\n\t}\n\nexports.addClientModel = (vocab, clientModel) ->\n\todata2AbstractSQL[vocab] = OData2AbstractSQL.createInstance()\n\todata2AbstractSQL[vocab].setClientModel(clientModel)\n\nexports.deleteClientModel = (vocab, clientModel) ->\n\tdelete odata2AbstractSQL[vocab]\n\n\n// WEBPACK FOOTER //\n// ./src/server/src/sbvr-api/uri-parser.coffee","!function(root, factory) {\n    \"function\" == typeof define && define.amd ? define([ \"require\", \"exports\", \"ometa-core\" ], factory) : \"object\" == typeof exports ? factory(require, exports, require(\"ometa-js\").core) : factory(function(moduleName) {\n        return root[moduleName];\n    }, root, root.OMeta);\n}(this, function(require, exports, OMeta) {\n    var ODataParser = exports.ODataParser = OMeta._extend({\n        Process: function() {\n            var $elf = this, _fromIdx = this.input.idx, tree;\n            this.reset();\n            tree = this._apply(\"OData\");\n            return {\n                tree: tree,\n                binds: this.binds\n            };\n        },\n        ProcessRule: function() {\n            var $elf = this, _fromIdx = this.input.idx, result, rule;\n            rule = this.anything();\n            this._form(function() {\n                return result = this._applyWithArgs(\"apply\", rule);\n            });\n            this._apply(\"end\");\n            return result;\n        },\n        OData: function() {\n            var $elf = this, _fromIdx = this.input.idx, model;\n            return this._or(function() {\n                model = this._apply(\"PathSegment\");\n                this._apply(\"end\");\n                return model;\n            }, function() {\n                switch (this.anything()) {\n                  case \"/\":\n                    return this._or(function() {\n                        switch (this.anything()) {\n                          case \"$\":\n                            this._applyWithArgs(\"exactly\", \"m\");\n                            this._applyWithArgs(\"exactly\", \"e\");\n                            this._applyWithArgs(\"exactly\", \"t\");\n                            this._applyWithArgs(\"exactly\", \"a\");\n                            this._applyWithArgs(\"exactly\", \"d\");\n                            this._applyWithArgs(\"exactly\", \"a\");\n                            this._applyWithArgs(\"exactly\", \"t\");\n                            this._applyWithArgs(\"exactly\", \"a\");\n                            return {\n                                resource: \"$metadata\"\n                            };\n\n                          default:\n                            throw this._fail();\n                        }\n                    }, function() {\n                        this._apply(\"end\");\n                        return {\n                            resource: \"$serviceroot\"\n                        };\n                    });\n\n                  default:\n                    throw this._fail();\n                }\n            });\n        },\n        QueryOptions: function() {\n            var $elf = this, _fromIdx = this.input.idx, options;\n            this._applyWithArgs(\"exactly\", \"?\");\n            options = this._applyWithArgs(\"listOf\", \"QueryOption\", \"&\");\n            return this._applyWithArgs(\"ParseOptionsObject\", options);\n        },\n        QueryOption: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._apply(\"SortOption\");\n            }, function() {\n                return this._apply(\"TopOption\");\n            }, function() {\n                return this._apply(\"SkipOption\");\n            }, function() {\n                return this._apply(\"ExpandOption\");\n            }, function() {\n                return this._apply(\"InlineCountOption\");\n            }, function() {\n                return this._apply(\"CountOption\");\n            }, function() {\n                return this._apply(\"FilterByOption\");\n            }, function() {\n                return this._apply(\"FormatOption\");\n            }, function() {\n                return this._apply(\"SelectOption\");\n            }, function() {\n                return this._apply(\"OperationParam\");\n            });\n        },\n        OperationParam: function() {\n            var $elf = this, _fromIdx = this.input.idx, name, value;\n            name = this._apply(\"Text\");\n            this._applyWithArgs(\"exactly\", \"=\");\n            value = this._apply(\"Text\");\n            return {\n                name: name,\n                value: value\n            };\n        },\n        SortOption: function() {\n            var $elf = this, _fromIdx = this.input.idx, properties;\n            this._applyWithArgs(\"RecognisedOption\", \"$orderby=\");\n            properties = this._applyWithArgs(\"listOf\", \"SortProperty\", \",\");\n            return {\n                name: \"$orderby\",\n                value: {\n                    properties: properties\n                }\n            };\n        },\n        SortProperty: function() {\n            var $elf = this, _fromIdx = this.input.idx, order, property;\n            property = this._apply(\"PropertyPath\");\n            this._apply(\"spaces\");\n            order = this._or(function() {\n                switch (this.anything()) {\n                  case \"a\":\n                    this._applyWithArgs(\"exactly\", \"s\");\n                    this._applyWithArgs(\"exactly\", \"c\");\n                    return \"asc\";\n\n                  case \"d\":\n                    this._applyWithArgs(\"exactly\", \"e\");\n                    this._applyWithArgs(\"exactly\", \"s\");\n                    this._applyWithArgs(\"exactly\", \"c\");\n                    return \"desc\";\n\n                  default:\n                    throw this._fail();\n                }\n            }, function() {\n                return \"desc\";\n            });\n            property.order = order;\n            return property;\n        },\n        TopOption: function() {\n            var $elf = this, _fromIdx = this.input.idx, value;\n            this._applyWithArgs(\"RecognisedOption\", \"$top=\");\n            value = this._apply(\"UnsignedInteger\");\n            return {\n                name: \"$top\",\n                value: value\n            };\n        },\n        SkipOption: function() {\n            var $elf = this, _fromIdx = this.input.idx, value;\n            this._applyWithArgs(\"RecognisedOption\", \"$skip=\");\n            value = this._apply(\"UnsignedInteger\");\n            return {\n                name: \"$skip\",\n                value: value\n            };\n        },\n        InlineCountOption: function() {\n            var $elf = this, _fromIdx = this.input.idx, value;\n            this._applyWithArgs(\"RecognisedOption\", \"$inlinecount=\");\n            value = this._or(function() {\n                switch (this.anything()) {\n                  case \"a\":\n                    this._applyWithArgs(\"exactly\", \"l\");\n                    this._applyWithArgs(\"exactly\", \"l\");\n                    this._applyWithArgs(\"exactly\", \"p\");\n                    this._applyWithArgs(\"exactly\", \"a\");\n                    this._applyWithArgs(\"exactly\", \"g\");\n                    this._applyWithArgs(\"exactly\", \"e\");\n                    this._applyWithArgs(\"exactly\", \"s\");\n                    return \"allpages\";\n\n                  case \"n\":\n                    this._applyWithArgs(\"exactly\", \"o\");\n                    this._applyWithArgs(\"exactly\", \"n\");\n                    this._applyWithArgs(\"exactly\", \"e\");\n                    return \"none\";\n\n                  default:\n                    throw this._fail();\n                }\n            }, function() {\n                this._apply(\"Text\");\n                return \"\";\n            });\n            return {\n                name: \"$inlinecount\",\n                value: value\n            };\n        },\n        CountOption: function() {\n            var $elf = this, _fromIdx = this.input.idx, value;\n            this._applyWithArgs(\"RecognisedOption\", \"$count=\");\n            value = this._apply(\"Boolean\");\n            return {\n                name: \"$count\",\n                value: value\n            };\n        },\n        ExpandOption: function() {\n            var $elf = this, _fromIdx = this.input.idx, properties;\n            this._applyWithArgs(\"RecognisedOption\", \"$expand=\");\n            properties = this._apply(\"ExpandPropertyPathList\");\n            return {\n                name: \"$expand\",\n                value: {\n                    properties: properties\n                }\n            };\n        },\n        SelectOption: function() {\n            var $elf = this, _fromIdx = this.input.idx, properties, value;\n            this._applyWithArgs(\"RecognisedOption\", \"$select=\");\n            value = this._or(function() {\n                switch (this.anything()) {\n                  case \"*\":\n                    return \"*\";\n\n                  default:\n                    throw this._fail();\n                }\n            }, function() {\n                properties = this._apply(\"PropertyPathList\");\n                return {\n                    properties: properties\n                };\n            });\n            return {\n                name: \"$select\",\n                value: value\n            };\n        },\n        FilterByOption: function() {\n            var $elf = this, _fromIdx = this.input.idx, expr;\n            this._applyWithArgs(\"RecognisedOption\", \"$filter=\");\n            expr = this._apply(\"FilterByExpression\");\n            return {\n                name: \"$filter\",\n                value: expr\n            };\n        },\n        FormatOption: function() {\n            var $elf = this, _fromIdx = this.input.idx, type;\n            this._applyWithArgs(\"RecognisedOption\", \"$format=\");\n            type = this._apply(\"ContentType\");\n            return {\n                name: \"$format\",\n                value: type\n            };\n        },\n        RecognisedOption: function(name) {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._applyWithArgs(\"seq\", name);\n        },\n        FilterByExpression: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._apply(\"FilterAndExpression\");\n        },\n        FilterAndExpression: function() {\n            var $elf = this, _fromIdx = this.input.idx, lhs, op, rhs;\n            return this._or(function() {\n                lhs = this._apply(\"FilterAndExpression\");\n                op = this._apply(\"FilterAndOperand\");\n                rhs = this._apply(\"FilterLogicalExpression\");\n                return this._or(function() {\n                    this._pred(op == lhs[0]);\n                    return [ op ].concat(lhs.slice(1), [ rhs ]);\n                }, function() {\n                    return [ op, lhs, rhs ];\n                });\n            }, function() {\n                return this._apply(\"FilterLogicalExpression\");\n            });\n        },\n        FilterLogicalExpression: function() {\n            var $elf = this, _fromIdx = this.input.idx, lhs, op, rhs;\n            return this._or(function() {\n                lhs = this._apply(\"FilterLogicalExpression\");\n                op = this._apply(\"FilterByOperand\");\n                rhs = this._apply(\"FilterSubExpression\");\n                return [ op, lhs, rhs ];\n            }, function() {\n                return this._apply(\"FilterSubExpression\");\n            });\n        },\n        FilterSubExpression: function() {\n            var $elf = this, _fromIdx = this.input.idx, lhs, op, rhs;\n            return this._or(function() {\n                lhs = this._apply(\"FilterSubExpression\");\n                this._apply(\"spaces\");\n                op = this._applyWithArgs(\"FilterRecognisedMathOperand\", \"sub\");\n                this._apply(\"spaces\");\n                rhs = this._apply(\"FilterAddExpression\");\n                return [ op, lhs, rhs ];\n            }, function() {\n                return this._apply(\"FilterAddExpression\");\n            });\n        },\n        FilterAddExpression: function() {\n            var $elf = this, _fromIdx = this.input.idx, lhs, op, rhs;\n            return this._or(function() {\n                lhs = this._apply(\"FilterAddExpression\");\n                this._apply(\"spaces\");\n                op = this._applyWithArgs(\"FilterRecognisedMathOperand\", \"add\");\n                this._apply(\"spaces\");\n                rhs = this._apply(\"FilterModExpression\");\n                return [ op, lhs, rhs ];\n            }, function() {\n                return this._apply(\"FilterModExpression\");\n            });\n        },\n        FilterModExpression: function() {\n            var $elf = this, _fromIdx = this.input.idx, lhs, op, rhs;\n            return this._or(function() {\n                lhs = this._apply(\"FilterModExpression\");\n                this._apply(\"spaces\");\n                op = this._applyWithArgs(\"FilterRecognisedMathOperand\", \"mod\");\n                this._apply(\"spaces\");\n                rhs = this._apply(\"FilterDivExpression\");\n                return [ op, lhs, rhs ];\n            }, function() {\n                return this._apply(\"FilterDivExpression\");\n            });\n        },\n        FilterDivExpression: function() {\n            var $elf = this, _fromIdx = this.input.idx, lhs, op, rhs;\n            return this._or(function() {\n                lhs = this._apply(\"FilterDivExpression\");\n                this._apply(\"spaces\");\n                op = this._applyWithArgs(\"FilterRecognisedMathOperand\", \"div\");\n                this._apply(\"spaces\");\n                rhs = this._apply(\"FilterMulExpression\");\n                return [ op, lhs, rhs ];\n            }, function() {\n                return this._apply(\"FilterMulExpression\");\n            });\n        },\n        FilterMulExpression: function() {\n            var $elf = this, _fromIdx = this.input.idx, lhs, op, rhs;\n            return this._or(function() {\n                lhs = this._apply(\"FilterMulExpression\");\n                this._apply(\"spaces\");\n                op = this._applyWithArgs(\"FilterRecognisedMathOperand\", \"mul\");\n                this._apply(\"spaces\");\n                rhs = this._apply(\"FilterByValue\");\n                return [ op, lhs, rhs ];\n            }, function() {\n                return this._apply(\"FilterByValue\");\n            });\n        },\n        FilterByValue: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._apply(\"FilterMethodCallExpression\");\n            }, function() {\n                return this._apply(\"FilterNegateExpression\");\n            }, function() {\n                return this._apply(\"NumberBind\");\n            }, function() {\n                return this._apply(\"Null\");\n            }, function() {\n                return this._apply(\"BooleanBind\");\n            }, function() {\n                return this._apply(\"QuotedTextBind\");\n            }, function() {\n                return this._apply(\"DateBind\");\n            }, function() {\n                return this._apply(\"Duration\");\n            }, function() {\n                return this._apply(\"LambdaPropertyPath\");\n            }, function() {\n                return this._apply(\"PropertyPath\");\n            }, function() {\n                return this._apply(\"GroupedPrecedenceExpression\");\n            });\n        },\n        GroupedPrecedenceExpression: function() {\n            var $elf = this, _fromIdx = this.input.idx, expr;\n            this._applyWithArgs(\"exactly\", \"(\");\n            this._apply(\"spaces\");\n            expr = this._apply(\"FilterByExpression\");\n            this._apply(\"spaces\");\n            this._applyWithArgs(\"exactly\", \")\");\n            return expr;\n        },\n        FilterRecognisedMathOperand: function(name) {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._applyWithArgs(\"seq\", name);\n        },\n        FilterAndOperand: function() {\n            var $elf = this, _fromIdx = this.input.idx, op;\n            this._apply(\"spaces\");\n            op = function() {\n                switch (this.anything()) {\n                  case \"a\":\n                    this._applyWithArgs(\"exactly\", \"n\");\n                    this._applyWithArgs(\"exactly\", \"d\");\n                    return \"and\";\n\n                  case \"o\":\n                    this._applyWithArgs(\"exactly\", \"r\");\n                    return \"or\";\n\n                  default:\n                    throw this._fail();\n                }\n            }.call(this);\n            this._apply(\"spaces\");\n            return op;\n        },\n        FilterByOperand: function() {\n            var $elf = this, _fromIdx = this.input.idx, op;\n            this._apply(\"spaces\");\n            op = function() {\n                switch (this.anything()) {\n                  case \"e\":\n                    this._applyWithArgs(\"exactly\", \"q\");\n                    return \"eq\";\n\n                  case \"g\":\n                    switch (this.anything()) {\n                      case \"e\":\n                        return \"ge\";\n\n                      case \"t\":\n                        return \"gt\";\n\n                      default:\n                        throw this._fail();\n                    }\n\n                  case \"l\":\n                    switch (this.anything()) {\n                      case \"e\":\n                        return \"le\";\n\n                      case \"t\":\n                        return \"lt\";\n\n                      default:\n                        throw this._fail();\n                    }\n\n                  case \"n\":\n                    this._applyWithArgs(\"exactly\", \"e\");\n                    return \"ne\";\n\n                  default:\n                    throw this._fail();\n                }\n            }.call(this);\n            this._apply(\"spaces\");\n            return op;\n        },\n        FilterNegateExpression: function() {\n            var $elf = this, _fromIdx = this.input.idx, expr, value;\n            this._apply(\"spaces\");\n            this._applyWithArgs(\"exactly\", \"n\");\n            this._applyWithArgs(\"exactly\", \"o\");\n            this._applyWithArgs(\"exactly\", \"t\");\n            this._apply(\"spaces\");\n            value = this._or(function() {\n                return this._apply(\"FilterByValue\");\n            }, function() {\n                switch (this.anything()) {\n                  case \"(\":\n                    this._apply(\"spaces\");\n                    expr = this._apply(\"FilterByExpression\");\n                    this._apply(\"spaces\");\n                    this._applyWithArgs(\"exactly\", \")\");\n                    return expr;\n\n                  default:\n                    throw this._fail();\n                }\n            });\n            return [ \"not\", value ];\n        },\n        FilterMethodCallExpression: function() {\n            var $elf = this, _fromIdx = this.input.idx, method;\n            method = this._or(function() {\n                return this._apply(\"ContainsMethodCall\");\n            }, function() {\n                return this._apply(\"EndsWithMethodCall\");\n            }, function() {\n                return this._apply(\"StartsWithMethodCall\");\n            }, function() {\n                return this._apply(\"LengthMethodCall\");\n            }, function() {\n                return this._apply(\"IndexOfMethodCall\");\n            }, function() {\n                return this._apply(\"SubstringMethodCall\");\n            }, function() {\n                return this._apply(\"ToLowerMethodCall\");\n            }, function() {\n                return this._apply(\"ToUpperMethodCall\");\n            }, function() {\n                return this._apply(\"TrimMethodCall\");\n            }, function() {\n                return this._apply(\"ConcatMethodCall\");\n            }, function() {\n                return this._apply(\"YearMethodCall\");\n            }, function() {\n                return this._apply(\"MonthMethodCall\");\n            }, function() {\n                return this._apply(\"DayMethodCall\");\n            }, function() {\n                return this._apply(\"HourMethodCall\");\n            }, function() {\n                return this._apply(\"MinuteMethodCall\");\n            }, function() {\n                return this._apply(\"SecondMethodCall\");\n            }, function() {\n                return this._apply(\"FractionalSecondsMethodCall\");\n            }, function() {\n                return this._apply(\"DateMethodCall\");\n            }, function() {\n                return this._apply(\"TimeMethodCall\");\n            }, function() {\n                return this._apply(\"TotalOffsetMinutesMethodCall\");\n            }, function() {\n                return this._apply(\"NowMethodCall\");\n            }, function() {\n                return this._apply(\"MaxDateTimeMethodCall\");\n            }, function() {\n                return this._apply(\"MinDateTimeMethodCall\");\n            }, function() {\n                return this._apply(\"TotalSecondsMethodCall\");\n            }, function() {\n                return this._apply(\"RoundMethodCall\");\n            }, function() {\n                return this._apply(\"FloorMethodCall\");\n            }, function() {\n                return this._apply(\"CeilingMethodCall\");\n            }, function() {\n                return this._apply(\"IsOfMethodCall\");\n            }, function() {\n                return this._apply(\"CastMethodCall\");\n            }, function() {\n                return this._apply(\"SubstringOfMethodCall\");\n            }, function() {\n                return this._apply(\"ReplaceMethodCall\");\n            });\n            return [ \"call\", method ];\n        },\n        ContainsMethodCall: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._applyWithArgs(\"MethodCall\", \"contains\", 2);\n        },\n        EndsWithMethodCall: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._applyWithArgs(\"MethodCall\", \"endswith\", 2);\n        },\n        StartsWithMethodCall: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._applyWithArgs(\"MethodCall\", \"startswith\", 2);\n        },\n        LengthMethodCall: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._applyWithArgs(\"MethodCall\", \"length\", 1);\n        },\n        IndexOfMethodCall: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._applyWithArgs(\"MethodCall\", \"indexof\", 2);\n        },\n        SubstringMethodCall: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._applyWithArgs(\"MethodCall\", \"substring\", 2);\n            }, function() {\n                return this._applyWithArgs(\"MethodCall\", \"substring\", 3);\n            });\n        },\n        ToLowerMethodCall: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._applyWithArgs(\"MethodCall\", \"tolower\", 1);\n        },\n        ToUpperMethodCall: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._applyWithArgs(\"MethodCall\", \"toupper\", 1);\n        },\n        TrimMethodCall: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._applyWithArgs(\"MethodCall\", \"trim\", 1);\n        },\n        ConcatMethodCall: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._applyWithArgs(\"MethodCall\", \"concat\", 2);\n        },\n        YearMethodCall: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._applyWithArgs(\"MethodCall\", \"year\", 1);\n        },\n        MonthMethodCall: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._applyWithArgs(\"MethodCall\", \"month\", 1);\n        },\n        DayMethodCall: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._applyWithArgs(\"MethodCall\", \"day\", 1);\n        },\n        HourMethodCall: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._applyWithArgs(\"MethodCall\", \"hour\", 1);\n        },\n        MinuteMethodCall: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._applyWithArgs(\"MethodCall\", \"minute\", 1);\n        },\n        SecondMethodCall: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._applyWithArgs(\"MethodCall\", \"second\", 1);\n        },\n        FractionalSecondsMethodCall: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._applyWithArgs(\"MethodCall\", \"fractionalseconds\", 1);\n        },\n        DateMethodCall: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._applyWithArgs(\"MethodCall\", \"date\", 1);\n        },\n        TimeMethodCall: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._applyWithArgs(\"MethodCall\", \"time\", 1);\n        },\n        TotalOffsetMinutesMethodCall: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._applyWithArgs(\"MethodCall\", \"totaloffsetminutes\", 1);\n        },\n        NowMethodCall: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._applyWithArgs(\"MethodCall\", \"now\", 0);\n        },\n        MaxDateTimeMethodCall: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._applyWithArgs(\"MethodCall\", \"maxdatetime\", 0);\n        },\n        MinDateTimeMethodCall: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._applyWithArgs(\"MethodCall\", \"mindatetime\", 0);\n        },\n        TotalSecondsMethodCall: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._applyWithArgs(\"MethodCall\", \"totalseconds\", 1);\n        },\n        RoundMethodCall: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._applyWithArgs(\"MethodCall\", \"round\", 1);\n        },\n        FloorMethodCall: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._applyWithArgs(\"MethodCall\", \"floor\", 1);\n        },\n        CeilingMethodCall: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._applyWithArgs(\"MethodCall\", \"ceiling\", 1);\n        },\n        IsOfMethodCall: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._applyWithArgs(\"MethodCall\", \"isof\", 1);\n            }, function() {\n                return this._applyWithArgs(\"MethodCall\", \"isof\", 2);\n            });\n        },\n        CastMethodCall: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._applyWithArgs(\"MethodCall\", \"cast\", 1);\n            }, function() {\n                return this._applyWithArgs(\"MethodCall\", \"cast\", 2);\n            });\n        },\n        SubstringOfMethodCall: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._applyWithArgs(\"MethodCall\", \"substringof\", 2);\n        },\n        ReplaceMethodCall: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._applyWithArgs(\"MethodCall\", \"replace\", 3);\n        },\n        MethodCall: function(name, arity) {\n            var $elf = this, _fromIdx = this.input.idx, args;\n            this._applyWithArgs(\"seq\", name);\n            this._applyWithArgs(\"exactly\", \"(\");\n            this._apply(\"spaces\");\n            args = this._applyWithArgs(\"numberOf\", \"FilterByExpression\", arity, \",\");\n            this._apply(\"spaces\");\n            this._applyWithArgs(\"exactly\", \")\");\n            return {\n                args: args,\n                method: name\n            };\n        },\n        LambdaMethodCall: function() {\n            var $elf = this, _fromIdx = this.input.idx, expression, identifier, name;\n            name = function() {\n                switch (this.anything()) {\n                  case \"a\":\n                    switch (this.anything()) {\n                      case \"l\":\n                        this._applyWithArgs(\"exactly\", \"l\");\n                        return \"all\";\n\n                      case \"n\":\n                        this._applyWithArgs(\"exactly\", \"y\");\n                        return \"any\";\n\n                      default:\n                        throw this._fail();\n                    }\n\n                  default:\n                    throw this._fail();\n                }\n            }.call(this);\n            this._applyWithArgs(\"exactly\", \"(\");\n            this._apply(\"spaces\");\n            identifier = this._apply(\"ResourceName\");\n            this._applyWithArgs(\"exactly\", \":\");\n            expression = this._apply(\"FilterByExpression\");\n            this._apply(\"spaces\");\n            this._applyWithArgs(\"exactly\", \")\");\n            return {\n                expression: expression,\n                identifier: identifier,\n                method: name\n            };\n        },\n        PropertyPathList: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._applyWithArgs(\"listOf\", \"PropertyPath\", \",\");\n        },\n        PropertyPath: function() {\n            var $elf = this, _fromIdx = this.input.idx, next, resource;\n            resource = this._apply(\"ResourceName\");\n            this._opt(function() {\n                this._applyWithArgs(\"exactly\", \"/\");\n                return next = this._apply(\"PropertyPath\");\n            });\n            return {\n                name: resource,\n                property: next\n            };\n        },\n        ExpandPropertyPathList: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._applyWithArgs(\"listOf\", \"ExpandPropertyPath\", \",\");\n        },\n        ExpandPropertyPath: function() {\n            var $elf = this, _fromIdx = this.input.idx, count, next, options, optionsObj, resource;\n            resource = this._apply(\"ResourceName\");\n            count = this._opt(function() {\n                this._applyWithArgs(\"exactly\", \"/\");\n                this._applyWithArgs(\"exactly\", \"$\");\n                this._applyWithArgs(\"exactly\", \"c\");\n                this._applyWithArgs(\"exactly\", \"o\");\n                this._applyWithArgs(\"exactly\", \"u\");\n                this._applyWithArgs(\"exactly\", \"n\");\n                this._applyWithArgs(\"exactly\", \"t\");\n                return !0;\n            });\n            this._opt(function() {\n                this._applyWithArgs(\"exactly\", \"(\");\n                options = this._applyWithArgs(\"listOf\", \"ExpandPathOption\", \"&\");\n                optionsObj = this._applyWithArgs(\"ParseOptionsObject\", options);\n                return this._applyWithArgs(\"exactly\", \")\");\n            });\n            this._opt(function() {\n                this._applyWithArgs(\"exactly\", \"/\");\n                return next = this._apply(\"PropertyPath\");\n            });\n            return {\n                name: resource,\n                property: next,\n                count: count,\n                options: optionsObj\n            };\n        },\n        ExpandPathOption: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._apply(\"SortOption\");\n            }, function() {\n                return this._apply(\"TopOption\");\n            }, function() {\n                return this._apply(\"SkipOption\");\n            }, function() {\n                return this._apply(\"ExpandOption\");\n            }, function() {\n                return this._apply(\"InlineCountOption\");\n            }, function() {\n                return this._apply(\"CountOption\");\n            }, function() {\n                return this._apply(\"FilterByOption\");\n            }, function() {\n                return this._apply(\"FormatOption\");\n            }, function() {\n                return this._apply(\"SelectOption\");\n            }, function() {\n                return this._apply(\"OperationParam\");\n            });\n        },\n        LambdaPropertyPath: function() {\n            var $elf = this, _fromIdx = this.input.idx, lambda, next, resource;\n            resource = this._apply(\"ResourceName\");\n            this._applyWithArgs(\"exactly\", \"/\");\n            return this._or(function() {\n                next = this._apply(\"LambdaPropertyPath\");\n                return {\n                    name: resource,\n                    property: next\n                };\n            }, function() {\n                lambda = this._apply(\"LambdaMethodCall\");\n                return {\n                    name: resource,\n                    lambda: lambda\n                };\n            });\n        },\n        Key: function() {\n            var $elf = this, _fromIdx = this.input.idx, key;\n            this._applyWithArgs(\"exactly\", \"(\");\n            key = this._or(function() {\n                return this._apply(\"NumberBind\");\n            }, function() {\n                return this._apply(\"QuotedTextBind\");\n            });\n            this._applyWithArgs(\"exactly\", \")\");\n            return key;\n        },\n        PathSegment: function() {\n            var $elf = this, _fromIdx = this.input.idx, count, key, link, next, options, resource;\n            this._applyWithArgs(\"exactly\", \"/\");\n            resource = this._apply(\"ResourceName\");\n            this._opt(function() {\n                return this._or(function() {\n                    key = this._apply(\"Key\");\n                    return this._opt(function() {\n                        return this._or(function() {\n                            switch (this.anything()) {\n                              case \"/\":\n                                this._applyWithArgs(\"exactly\", \"$\");\n                                this._applyWithArgs(\"exactly\", \"l\");\n                                this._applyWithArgs(\"exactly\", \"i\");\n                                this._applyWithArgs(\"exactly\", \"n\");\n                                this._applyWithArgs(\"exactly\", \"k\");\n                                this._applyWithArgs(\"exactly\", \"s\");\n                                return link = this._apply(\"SubPathSegment\");\n\n                              default:\n                                throw this._fail();\n                            }\n                        }, function() {\n                            return next = this._apply(\"SubPathSegment\");\n                        });\n                    });\n                }, function() {\n                    return count = this._opt(function() {\n                        this._applyWithArgs(\"exactly\", \"/\");\n                        this._applyWithArgs(\"exactly\", \"$\");\n                        this._applyWithArgs(\"exactly\", \"c\");\n                        this._applyWithArgs(\"exactly\", \"o\");\n                        this._applyWithArgs(\"exactly\", \"u\");\n                        this._applyWithArgs(\"exactly\", \"n\");\n                        this._applyWithArgs(\"exactly\", \"t\");\n                        return !0;\n                    });\n                });\n            });\n            options = this._opt(function() {\n                return this._apply(\"QueryOptions\");\n            });\n            return {\n                resource: resource,\n                key: key,\n                link: link,\n                property: next,\n                count: count,\n                options: options\n            };\n        },\n        SubPathSegment: function() {\n            var $elf = this, _fromIdx = this.input.idx, count, key, link, next, options, resource;\n            this._applyWithArgs(\"exactly\", \"/\");\n            resource = this._apply(\"ResourceName\");\n            key = this._opt(function() {\n                return this._apply(\"Key\");\n            });\n            this._opt(function() {\n                return this._or(function() {\n                    switch (this.anything()) {\n                      case \"/\":\n                        this._applyWithArgs(\"exactly\", \"$\");\n                        this._applyWithArgs(\"exactly\", \"l\");\n                        this._applyWithArgs(\"exactly\", \"i\");\n                        this._applyWithArgs(\"exactly\", \"n\");\n                        this._applyWithArgs(\"exactly\", \"k\");\n                        this._applyWithArgs(\"exactly\", \"s\");\n                        return link = this._apply(\"SubPathSegment\");\n\n                      default:\n                        throw this._fail();\n                    }\n                }, function() {\n                    return next = this._apply(\"SubPathSegment\");\n                });\n            });\n            count = this._opt(function() {\n                this._applyWithArgs(\"exactly\", \"/\");\n                this._applyWithArgs(\"exactly\", \"$\");\n                this._applyWithArgs(\"exactly\", \"c\");\n                this._applyWithArgs(\"exactly\", \"o\");\n                this._applyWithArgs(\"exactly\", \"u\");\n                this._applyWithArgs(\"exactly\", \"n\");\n                this._applyWithArgs(\"exactly\", \"t\");\n                return !0;\n            });\n            options = this._opt(function() {\n                return this._apply(\"QueryOptions\");\n            });\n            return {\n                resource: resource,\n                key: key,\n                link: link,\n                property: next,\n                count: count,\n                options: options\n            };\n        },\n        ContentType: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._consumedBy(function() {\n                this._many1(function() {\n                    return this._apply(\"letter\");\n                });\n                this._applyWithArgs(\"exactly\", \"/\");\n                this._many1(function() {\n                    return this._apply(\"letter\");\n                });\n                return this._opt(function() {\n                    this._applyWithArgs(\"exactly\", \"+\");\n                    return this._many1(function() {\n                        return this._apply(\"letter\");\n                    });\n                });\n            });\n        },\n        ResourceName: function() {\n            var $elf = this, _fromIdx = this.input.idx, resourceName;\n            resourceName = this._consumedBy(function() {\n                return this._many1(function() {\n                    this._not(function() {\n                        return this._or(function() {\n                            return this._apply(\"ReservedUriComponent\");\n                        }, function() {\n                            return this._apply(\"space\");\n                        });\n                    });\n                    return this.anything();\n                });\n            });\n            return decodeURIComponent(resourceName);\n        },\n        Number: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._apply(\"Decimal\");\n            }, function() {\n                return this._apply(\"Integer\");\n            });\n        },\n        Decimal: function() {\n            var $elf = this, _fromIdx = this.input.idx, d, sign;\n            sign = this._apply(\"Sign\");\n            d = this._consumedBy(function() {\n                this._many1(function() {\n                    return this._apply(\"digit\");\n                });\n                this._applyWithArgs(\"exactly\", \".\");\n                return this._many1(function() {\n                    return this._apply(\"digit\");\n                });\n            });\n            return Number(sign + d);\n        },\n        Integer: function() {\n            var $elf = this, _fromIdx = this.input.idx, d, sign;\n            sign = this._apply(\"Sign\");\n            d = this._consumedBy(function() {\n                return this._many1(function() {\n                    return this._apply(\"digit\");\n                });\n            });\n            return parseInt(sign + d, 10);\n        },\n        UnsignedInteger: function() {\n            var $elf = this, _fromIdx = this.input.idx, d;\n            d = this._consumedBy(function() {\n                return this._many1(function() {\n                    return this._apply(\"digit\");\n                });\n            });\n            return parseInt(d, 10);\n        },\n        Null: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            this._applyWithArgs(\"exactly\", \"n\");\n            this._applyWithArgs(\"exactly\", \"u\");\n            this._applyWithArgs(\"exactly\", \"l\");\n            this._applyWithArgs(\"exactly\", \"l\");\n            return null;\n        },\n        Boolean: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._apply(\"True\");\n            }, function() {\n                return this._apply(\"False\");\n            });\n        },\n        True: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            this._applyWithArgs(\"exactly\", \"t\");\n            this._applyWithArgs(\"exactly\", \"r\");\n            this._applyWithArgs(\"exactly\", \"u\");\n            this._applyWithArgs(\"exactly\", \"e\");\n            return !0;\n        },\n        False: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            this._applyWithArgs(\"exactly\", \"f\");\n            this._applyWithArgs(\"exactly\", \"a\");\n            this._applyWithArgs(\"exactly\", \"l\");\n            this._applyWithArgs(\"exactly\", \"s\");\n            this._applyWithArgs(\"exactly\", \"e\");\n            return !1;\n        },\n        Duration: function() {\n            var $elf = this, _fromIdx = this.input.idx, day, hour, minute, second, sign, timeExists;\n            this._applyWithArgs(\"exactly\", \"d\");\n            this._applyWithArgs(\"exactly\", \"u\");\n            this._applyWithArgs(\"exactly\", \"r\");\n            this._applyWithArgs(\"exactly\", \"a\");\n            this._applyWithArgs(\"exactly\", \"t\");\n            this._applyWithArgs(\"exactly\", \"i\");\n            this._applyWithArgs(\"exactly\", \"o\");\n            this._applyWithArgs(\"exactly\", \"n\");\n            this._apply(\"Apostrophe\");\n            sign = this._apply(\"Sign\");\n            this._applyWithArgs(\"exactly\", \"P\");\n            day = this._opt(function() {\n                return this._applyWithArgs(\"DurationInteger\", \"D\");\n            });\n            timeExists = this._opt(function() {\n                this._applyWithArgs(\"exactly\", \"T\");\n                hour = this._opt(function() {\n                    return this._applyWithArgs(\"DurationInteger\", \"H\");\n                });\n                minute = this._opt(function() {\n                    return this._applyWithArgs(\"DurationInteger\", \"M\");\n                });\n                second = this._opt(function() {\n                    return this._applyWithArgs(\"DurationNumber\", \"S\");\n                });\n                return this._pred(hour || minute || second);\n            });\n            this._pred(day || timeExists);\n            this._apply(\"Apostrophe\");\n            return {\n                negative: \"-\" == sign,\n                day: day,\n                hour: hour,\n                minute: minute,\n                second: second\n            };\n        },\n        DurationInteger: function(letter) {\n            var $elf = this, _fromIdx = this.input.idx, n;\n            n = this._apply(\"UnsignedInteger\");\n            this._applyWithArgs(\"exactly\", letter);\n            return n;\n        },\n        DurationNumber: function(letter) {\n            var $elf = this, _fromIdx = this.input.idx, d;\n            return this._or(function() {\n                return this._applyWithArgs(\"DurationInteger\", letter);\n            }, function() {\n                d = this._consumedBy(function() {\n                    this._many1(function() {\n                        return this._apply(\"digit\");\n                    });\n                    this._applyWithArgs(\"exactly\", \".\");\n                    return this._many1(function() {\n                        return this._apply(\"digit\");\n                    });\n                });\n                this._applyWithArgs(\"exactly\", letter);\n                return Number(d);\n            });\n        },\n        ReservedUriComponent: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._apply(\"GenDelim\");\n            }, function() {\n                return this._apply(\"SubDelim\");\n            });\n        },\n        GenDelim: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return function() {\n                switch (this.anything()) {\n                  case \"#\":\n                    return \"#\";\n\n                  case \"/\":\n                    return \"/\";\n\n                  case \":\":\n                    return \":\";\n\n                  case \"?\":\n                    return \"?\";\n\n                  case \"@\":\n                    return \"@\";\n\n                  case \"[\":\n                    return \"[\";\n\n                  case \"]\":\n                    return \"]\";\n\n                  default:\n                    throw this._fail();\n                }\n            }.call(this);\n        },\n        SubDelim: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                switch (this.anything()) {\n                  case \"!\":\n                    return \"!\";\n\n                  case \"$\":\n                    return \"$\";\n\n                  case \"*\":\n                    return \"*\";\n\n                  default:\n                    throw this._fail();\n                }\n            }, function() {\n                return this._apply(\"Apostrophe\");\n            }, function() {\n                switch (this.anything()) {\n                  case \"&\":\n                    return \"&\";\n\n                  case \"(\":\n                    return \"(\";\n\n                  case \")\":\n                    return \")\";\n\n                  case \"+\":\n                    return \"+\";\n\n                  case \",\":\n                    return \",\";\n\n                  case \";\":\n                    return \";\";\n\n                  case \"=\":\n                    return \"=\";\n\n                  default:\n                    throw this._fail();\n                }\n            });\n        },\n        Text: function() {\n            var $elf = this, _fromIdx = this.input.idx, text;\n            text = this._consumedBy(function() {\n                return this._many(function() {\n                    this._not(function() {\n                        return this._apply(\"ReservedUriComponent\");\n                    });\n                    return this.anything();\n                });\n            });\n            return decodeURIComponent(text);\n        },\n        Sign: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                switch (this.anything()) {\n                  case \"%\":\n                    this._applyWithArgs(\"exactly\", \"2\");\n                    this._applyWithArgs(\"exactly\", \"B\");\n                    return \"+\";\n\n                  case \"+\":\n                    return \"+\";\n\n                  case \"-\":\n                    return \"-\";\n\n                  default:\n                    throw this._fail();\n                }\n            }, function() {\n                return \"\";\n            });\n        },\n        Apostrophe: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return function() {\n                switch (this.anything()) {\n                  case \"%\":\n                    this._applyWithArgs(\"exactly\", \"2\");\n                    this._applyWithArgs(\"exactly\", \"7\");\n                    return \"'\";\n\n                  case \"'\":\n                    return \"'\";\n\n                  default:\n                    throw this._fail();\n                }\n            }.call(this);\n        },\n        QuotedText: function() {\n            var $elf = this, _fromIdx = this.input.idx, text;\n            this._apply(\"Apostrophe\");\n            text = this._many(function() {\n                return this._or(function() {\n                    this._apply(\"Apostrophe\");\n                    return this._apply(\"Apostrophe\");\n                }, function() {\n                    this._not(function() {\n                        return this._apply(\"Apostrophe\");\n                    });\n                    return this.anything();\n                });\n            });\n            this._apply(\"Apostrophe\");\n            return decodeURIComponent(text.join(\"\"));\n        },\n        space: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return OMeta._superApplyWithArgs(this, \"space\");\n            }, function() {\n                switch (this.anything()) {\n                  case \"%\":\n                    this._applyWithArgs(\"exactly\", \"2\");\n                    this._applyWithArgs(\"exactly\", \"0\");\n                    return \" \";\n\n                  default:\n                    throw this._fail();\n                }\n            });\n        },\n        Bind: function(type, value) {\n            var $elf = this, _fromIdx = this.input.idx;\n            this.binds.push([ type, value ]);\n            return {\n                bind: this.binds.length - 1\n            };\n        },\n        NumberBind: function() {\n            var $elf = this, _fromIdx = this.input.idx, n;\n            n = this._apply(\"Number\");\n            return this._applyWithArgs(\"Bind\", \"Real\", n);\n        },\n        DateBind: function() {\n            var $elf = this, _fromIdx = this.input.idx, date, type;\n            type = function() {\n                switch (this.anything()) {\n                  case \"d\":\n                    switch (this.anything()) {\n                      case \"a\":\n                        switch (this.anything()) {\n                          case \"t\":\n                            switch (this.anything()) {\n                              case \"e\":\n                                return this._or(function() {\n                                    switch (this.anything()) {\n                                      case \"t\":\n                                        this._applyWithArgs(\"exactly\", \"i\");\n                                        this._applyWithArgs(\"exactly\", \"m\");\n                                        this._applyWithArgs(\"exactly\", \"e\");\n                                        return \"Date Time\";\n\n                                      default:\n                                        throw this._fail();\n                                    }\n                                }, function() {\n                                    \"date\";\n                                    return \"Date\";\n                                });\n\n                              default:\n                                throw this._fail();\n                            }\n\n                          default:\n                            throw this._fail();\n                        }\n\n                      default:\n                        throw this._fail();\n                    }\n\n                  default:\n                    throw this._fail();\n                }\n            }.call(this);\n            date = this._apply(\"QuotedText\");\n            date = Date.parse(date);\n            this._pred(!isNaN(date));\n            return this._applyWithArgs(\"Bind\", type, date);\n        },\n        BooleanBind: function() {\n            var $elf = this, _fromIdx = this.input.idx, b;\n            b = this._apply(\"Boolean\");\n            return this._applyWithArgs(\"Bind\", \"Boolean\", b);\n        },\n        QuotedTextBind: function() {\n            var $elf = this, _fromIdx = this.input.idx, t;\n            t = this._apply(\"QuotedText\");\n            return this._applyWithArgs(\"Bind\", \"Text\", t);\n        }\n    });\n    ODataParser.initialize = ODataParser.reset = function() {\n        this.binds = [];\n    };\n    ODataParser.ParseOptionsObject = function(options) {\n        var optionsObj = {};\n        for (var i in options) optionsObj[options[i].name] = options[i].value;\n        return optionsObj;\n    };\n    ODataParser.numberOf = function(rule, count, separator) {\n        if (0 === count) return [];\n        for (var ret = [], i = 1; count > i; i++) {\n            ret.push(this._apply(rule));\n            this._apply(\"spaces\");\n            this._applyWithArgs(\"exactly\", separator);\n            this._apply(\"spaces\");\n        }\n        ret.push(this._apply(rule));\n        return ret;\n    };\n    ODataParser._enableTokens = function() {\n        OMeta._enableTokens.call(this, [ \"Text\", \"ResourceName\", \"Number\", \"RecognisedOption\", \"FilterAndOperand\", \"FilterByOperand\", \"FilterRecognisedMathOperand\" ]);\n    };\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@resin/odata-parser/odata-parser.js\n// module id = 51\n// module chunks = 0","!function(root, factory) {\n    \"function\" == typeof define && define.amd ? define([ \"require\", \"exports\", \"ometa-core\", \"lodash\", \"memoizee\" ], factory) : \"object\" == typeof exports ? factory(require, exports, require(\"ometa-js\").core) : factory(function(moduleName) {\n        return root[moduleName];\n    }, root, root.OMeta);\n}(this, function(require, exports, OMeta) {\n    var _ = require(\"lodash\"), memoize = require(\"memoizee\"), Query = function() {\n        _.extend(this, {\n            select: [],\n            from: [],\n            where: [],\n            extras: []\n        });\n    };\n    Query.prototype.merge = function(otherQuery) {\n        this.select = this.select.concat(otherQuery.select);\n        this.from = this.from.concat(otherQuery.from);\n        this.where = this.where.concat(otherQuery.where);\n        this.extras = this.extras.concat(otherQuery.extras);\n    };\n    Query.prototype.fromResource = function(resource) {\n        resource.tableName !== resource.tableAlias ? this.from.push([ resource.tableName, resource.tableAlias ]) : this.from.push(resource.tableName);\n    };\n    Query.prototype.compile = function(queryType) {\n        var compiled = [ queryType ], where = this.where;\n        \"SelectQuery\" === queryType && compiled.push([ \"Select\", this.select ]);\n        _.each(this.from, function(tableName) {\n            compiled.push([ \"From\", tableName ]);\n        });\n        if (where.length > 0) {\n            where.length > 1 && (where = [ [ \"And\" ].concat(where) ]);\n            compiled.push([ \"Where\" ].concat(where));\n        }\n        return compiled.concat(this.extras);\n    };\n    var OData2AbstractSQL = exports.OData2AbstractSQL = OMeta._extend({\n        Process: function(method, bodyKeys) {\n            var $elf = this, _fromIdx = this.input.idx, insertQuery, path, query, queryType, tree;\n            path = this.anything();\n            this._apply(\"end\");\n            tree = this._or(function() {\n                this._pred(_.isEmpty(path));\n                return [ \"$serviceroot\" ];\n            }, function() {\n                this._pred(_.includes([ \"$metadata\", \"$serviceroot\" ], path.resource));\n                return [ path.resource ];\n            }, function() {\n                this.reset();\n                query = this._applyWithArgs(\"PathSegment\", method, bodyKeys, path);\n                return this._or(function() {\n                    this._pred(\"PUT\" == method);\n                    this.reset();\n                    insertQuery = this._applyWithArgs(\"PathSegment\", \"PUT-INSERT\", bodyKeys, path);\n                    return [ \"UpsertQuery\", insertQuery.compile(\"InsertQuery\"), query.compile(\"UpdateQuery\") ];\n                }, function() {\n                    queryType = this._or(function() {\n                        this._pred(\"GET\" == method);\n                        return \"SelectQuery\";\n                    }, function() {\n                        this._pred(\"PATCH\" == method || \"MERGE\" == method);\n                        return \"UpdateQuery\";\n                    }, function() {\n                        this._pred(\"POST\" == method);\n                        return \"InsertQuery\";\n                    }, function() {\n                        this._pred(\"DELETE\" == method);\n                        return \"DeleteQuery\";\n                    });\n                    return query.compile(queryType);\n                });\n            });\n            return {\n                tree: tree,\n                extraBodyVars: this.extraBodyVars\n            };\n        },\n        PathSegment: function(method, bodyKeys, path) {\n            var $elf = this, _fromIdx = this.input.idx, aliasedField, bindVars, childQuery, linkResource, navigationWhere, propertyResource, query, referencedField, referencedIdField, resource, resourceMapping, subQuery, valuesIndex;\n            this._pred(path.resource);\n            resource = this._applyWithArgs(\"Resource\", path.resource, this.defaultResource);\n            this.defaultResource = resource;\n            query = new Query();\n            query.fromResource(resource);\n            referencedIdField = [ \"ReferencedField\", resource.tableAlias, resource.idField ];\n            this._applyWithArgs(\"PathKey\", path, query, resource, referencedIdField, bodyKeys);\n            this._or(function() {\n                return this._pred(!path.options);\n            }, function() {\n                return this._pred(!path.options.$expand);\n            }, function() {\n                return this._applyWithArgs(\"Expands\", resource, query, path.options.$expand.properties);\n            });\n            this._or(function() {\n                this._pred(path.property);\n                childQuery = this._applyWithArgs(\"PathSegment\", method, bodyKeys, path.property);\n                query.merge(childQuery);\n                this._or(function() {\n                    return this._pred(path.property.resource);\n                }, function() {\n                    return function() {\n                        throw new Error(\"PathSegment has a property without a resource?\");\n                    }.call(this);\n                });\n                propertyResource = this._applyWithArgs(\"Resource\", path.property.resource, resource);\n                navigationWhere = this._applyWithArgs(\"NavigateResources\", resource, propertyResource);\n                return query.where.push(navigationWhere);\n            }, function() {\n                this._pred(path.link);\n                this._or(function() {\n                    return this._pred(path.link.resource);\n                }, function() {\n                    return function() {\n                        throw new Error(\"PathSegment has a link without a resource?\");\n                    }.call(this);\n                });\n                linkResource = this._applyWithArgs(\"Resource\", path.link.resource, resource);\n                aliasedField = this._or(function() {\n                    this._applyWithArgs(\"FieldContainedIn\", linkResource.resourceName, resource);\n                    referencedField = this._applyWithArgs(\"ReferencedField\", resource, linkResource.resourceName);\n                    return [ referencedField, linkResource.resourceName ];\n                }, function() {\n                    this._applyWithArgs(\"FieldContainedIn\", resource.resourceName, linkResource);\n                    referencedField = this._applyWithArgs(\"ReferencedField\", linkResource, resource.resourceName);\n                    return [ referencedField, resource.resourceName ];\n                }, function() {\n                    return function() {\n                        throw new Error(\"Cannot navigate links\");\n                    }.call(this);\n                });\n                this._applyWithArgs(\"PathKey\", path.link, query, linkResource, referencedField, bodyKeys);\n                return query.select.push(aliasedField);\n            }, function() {\n                this._pred(\"PUT\" == method || \"PUT-INSERT\" == method || \"POST\" == method || \"PATCH\" == method || \"MERGE\" == method);\n                resourceMapping = this._applyWithArgs(\"ResourceMapping\", resource);\n                bindVars = this._applyWithArgs(\"BindVars\", method, bodyKeys, resource.resourceName, _.toPairs(resourceMapping));\n                query.extras.push([ \"Fields\", _.map(bindVars, 0) ]);\n                return query.extras.push([ \"Values\", _.map(bindVars, 1) ]);\n            }, function() {\n                return this._applyWithArgs(\"AddCountField\", path, query, resource);\n            }, function() {\n                return this._applyWithArgs(\"AddSelectFields\", path, query, resource);\n            });\n            this._or(function() {\n                return this._pred(!path.options);\n            }, function() {\n                this._or(function() {\n                    return this._pred(!path.options.$filter);\n                }, function() {\n                    this._pred(\"POST\" == method || \"PUT-INSERT\" == method);\n                    subQuery = this._applyWithArgs(\"InsertFilter\", path.options.$filter, resource, bindVars);\n                    valuesIndex = _.findIndex(query.extras, {\n                        0: \"Values\"\n                    });\n                    return query.extras[valuesIndex] = [ \"Values\", subQuery.compile(\"SelectQuery\") ];\n                }, function() {\n                    this._pred(\"PUT\" == method || \"PATCH\" == method || \"MERGE\" == method || \"DELETE\" == method);\n                    subQuery = this._applyWithArgs(\"UpdateFilter\", path.options.$filter, resource, referencedIdField);\n                    return query.where.push([ \"In\", referencedIdField, subQuery.compile(\"SelectQuery\") ]);\n                }, function() {\n                    return this._applyWithArgs(\"SelectFilter\", path.options.$filter, query, resource);\n                });\n                return this._applyWithArgs(\"AddExtraQueryOptions\", resource, path, query);\n            });\n            return query;\n        },\n        PathKey: function(path, query, resource, referencedField, bodyKeys) {\n            var $elf = this, _fromIdx = this.input.idx, key, qualifiedIDField;\n            return this._or(function() {\n                return this._pred(null == path.key);\n            }, function() {\n                qualifiedIDField = resource.resourceName + \".\" + resource.idField;\n                this._opt(function() {\n                    this._pred(!_.includes(bodyKeys, qualifiedIDField) && !_.includes(bodyKeys, resource.idField));\n                    bodyKeys.push(qualifiedIDField);\n                    return this.extraBodyVars[qualifiedIDField] = path.key;\n                });\n                key = this._or(function() {\n                    return this._applyWithArgs(\"Bind\", path.key);\n                }, function() {\n                    return this._applyWithArgs(\"Number\", path.key);\n                }, function() {\n                    return this._applyWithArgs(\"Text\", path.key);\n                });\n                return query.where.push([ \"Equals\", referencedField, key ]);\n            });\n        },\n        Bind: function() {\n            var $elf = this, _fromIdx = this.input.idx, bind;\n            bind = this.anything();\n            this._pred(null != bind);\n            this._pred(null != bind.bind);\n            return [ \"Bind\", bind.bind ];\n        },\n        SelectFilter: function(filter, query, resource) {\n            var $elf = this, _fromIdx = this.input.idx, filter;\n            this._applyWithArgs(\"AddExtraFroms\", filter, query, resource);\n            filter = this._applyWithArgs(\"Boolean\", filter);\n            return query.where.push(filter);\n        },\n        InsertFilter: function(filter, resource, bindVars) {\n            var $elf = this, _fromIdx = this.input.idx, query, where;\n            query = new Query();\n            this._applyWithArgs(\"AddExtraFroms\", filter, query, resource);\n            where = this._applyWithArgs(\"Boolean\", filter);\n            (function() {\n                query.select = _.map(bindVars, function(bindVar) {\n                    return [ \"ReferencedField\", resource.tableAlias, bindVar[0] ];\n                });\n                query.from.push([ [ \"SelectQuery\", [ \"Select\", _.map($elf.clientModel.resources[resource.resourceName].fields, function(field) {\n                    var cast, alias = field.fieldName, bindVar = _.find(bindVars, {\n                        0: alias\n                    });\n                    cast = bindVar ? [ \"Cast\", bindVar[1], field.dataType ] : \"Null\";\n                    return [ cast, alias ];\n                }) ] ], resource.tableAlias ]);\n                return query.where.push(where);\n            }).call(this);\n            return query;\n        },\n        UpdateFilter: function(filter, resource, referencedIdField) {\n            var $elf = this, _fromIdx = this.input.idx, query, where;\n            query = new Query();\n            this._applyWithArgs(\"AddExtraFroms\", filter, query, resource);\n            where = this._applyWithArgs(\"Boolean\", filter);\n            (function() {\n                query.select.push(referencedIdField);\n                query.fromResource(resource);\n                return query.where.push(where);\n            }).call(this);\n            return query;\n        },\n        OrderBy: function(orderby, query, resource) {\n            var $elf = this, _fromIdx = this.input.idx, orderby;\n            this._applyWithArgs(\"AddExtraFroms\", orderby.properties, query, resource);\n            orderby = this._applyWithArgs(\"OrderByProperties\", orderby.properties);\n            return query.extras.push([ \"OrderBy\" ].concat(orderby));\n        },\n        OrderByProperties: function() {\n            var $elf = this, _fromIdx = this.input.idx, field, orderby, ordering;\n            this._form(function() {\n                return orderby = this._many1(function() {\n                    ordering = this.anything();\n                    field = this._applyWithArgs(\"ReferencedProperty\", ordering);\n                    return [ ordering.order.toUpperCase(), field ];\n                });\n            });\n            return orderby;\n        },\n        BindVars: function(method, bodyKeys, resourceName) {\n            var $elf = this, _fromIdx = this.input.idx, fieldName, fields, mappedFieldName, mappedTableName;\n            this._form(function() {\n                return fields = this._many(function() {\n                    return this._or(function() {\n                        this._form(function() {\n                            this._applyWithArgs(\"exactly\", \"_name\");\n                            return this.anything();\n                        });\n                        return null;\n                    }, function() {\n                        this._form(function() {\n                            fieldName = this.anything();\n                            return this._form(function() {\n                                mappedTableName = this.anything();\n                                return mappedFieldName = this.anything();\n                            });\n                        });\n                        return this._or(function() {\n                            this._pred(!_.includes(bodyKeys, fieldName) && !_.includes(bodyKeys, resourceName + \".\" + fieldName));\n                            return this._or(function() {\n                                this._pred(\"PUT\" === method);\n                                return [ mappedFieldName, \"Default\" ];\n                            }, function() {\n                                return null;\n                            });\n                        }, function() {\n                            return [ mappedFieldName, [ \"Bind\", resourceName, fieldName ] ];\n                        });\n                    });\n                });\n            });\n            return _.compact(fields);\n        },\n        ResolveResourceAlias: function(aliasName) {\n            var $elf = this, _fromIdx = this.input.idx;\n            this._pred(this.resourceAliases[aliasName]);\n            return this.resourceAliases[aliasName];\n        },\n        Resource: function(resourceName, parentResource) {\n            var $elf = this, _fromIdx = this.input.idx, resource, resourceMapping, tableAlias;\n            return this._or(function() {\n                return this._applyWithArgs(\"ResolveResourceAlias\", resourceName);\n            }, function() {\n                resource = this.clientModel.resources[resourceName];\n                this._pred(resource);\n                resource = _.clone(resource);\n                this._or(function() {\n                    return this._pred(resource.tableName);\n                }, function() {\n                    resourceMapping = this._applyWithArgs(\"ResourceMapping\", resource);\n                    return resource.tableName = resourceMapping._name;\n                });\n                tableAlias = this._or(function() {\n                    this._pred(parentResource);\n                    return parentResource.tableAlias + \".\" + resource.tableName;\n                }, function() {\n                    return resource.tableName;\n                });\n                resource.tableAlias = this.checkAlias(tableAlias);\n                return resource;\n            }, function() {\n                return function() {\n                    throw new Error(\"Unknown resource: \" + resourceName);\n                }.call(this);\n            });\n        },\n        FieldContainedIn: function(fieldName, resource) {\n            var $elf = this, _fromIdx = this.input.idx, mappedField, mapping;\n            mapping = this._applyWithArgs(\"ResourceMapping\", resource);\n            mappedField = mapping[fieldName];\n            this._pred(mappedField);\n            this._pred(mappedField[0] == resource.tableAlias);\n            return this._pred(_.some(resource.fields, {\n                fieldName: mappedField[1]\n            }));\n        },\n        ResourceMapping: function(resource) {\n            var $elf = this, _fromIdx = this.input.idx, resourceMapping;\n            return this._or(function() {\n                this._pred(this.clientModel.resourceToSQLMappings[resource.resourceName]);\n                resourceMapping = this.clientModel.resourceToSQLMappings[resource.resourceName];\n                this._opt(function() {\n                    this._pred(resource.tableAlias);\n                    this._pred(resource.tableAlias != resourceMapping._name);\n                    return resourceMapping = _.mapValues(resourceMapping, function(mapping) {\n                        return _.isArray(mapping) ? [ resource.tableAlias, mapping[1] ] : resource.tableAlias;\n                    });\n                });\n                return resourceMapping;\n            }, function() {\n                return function() {\n                    throw new Error(\"Unknown resource: \" + resource.resourceName);\n                }.call(this);\n            });\n        },\n        AddCountField: function(path, query, resource) {\n            var $elf = this, _fromIdx = this.input.idx;\n            this._pred(path.count);\n            return query.select.push([ [ \"Count\", \"*\" ], \"$count\" ]);\n        },\n        AddSelectFields: function(path, query, resource) {\n            var $elf = this, _fromIdx = this.input.idx, fields, resourceMapping;\n            fields = this._or(function() {\n                this._pred(path.options);\n                this._pred(path.options.$select);\n                this._applyWithArgs(\"AddExtraFroms\", path.options.$select.properties, query, resource);\n                fields = this._applyWithArgs(\"Properties\", path.options.$select.properties);\n                return _(fields).reject(function(field) {\n                    return _.some(query.select, function(existingField) {\n                        return _.last(existingField) == field.name;\n                    });\n                }).map(function(field) {\n                    return $elf.AliasSelectField(field.resource, field.name);\n                }).value();\n            }, function() {\n                resourceMapping = this._applyWithArgs(\"ResourceMapping\", resource);\n                return _(resourceMapping).keys().reject(function(fieldName) {\n                    return \"_name\" === fieldName || _.some(query.select, function(existingField) {\n                        return _.last(existingField) == fieldName;\n                    });\n                }).map(_.bind(this.AliasSelectField, this, resource)).value();\n            });\n            return query.select = query.select.concat(fields);\n        },\n        AliasSelectField: function(resource, fieldName) {\n            var $elf = this, _fromIdx = this.input.idx, referencedField;\n            referencedField = this._applyWithArgs(\"ReferencedField\", resource, fieldName);\n            return this._or(function() {\n                this._pred(referencedField[2] === fieldName);\n                return referencedField;\n            }, function() {\n                return [ referencedField, fieldName ];\n            });\n        },\n        ReferencedField: function(resource, resourceField) {\n            var $elf = this, _fromIdx = this.input.idx, mapping;\n            mapping = this._applyWithArgs(\"ResourceMapping\", resource);\n            return this._or(function() {\n                this._pred(mapping[resourceField]);\n                return [ \"ReferencedField\" ].concat(mapping[resourceField]);\n            }, function() {\n                console.error(\"Unknown mapping: \", mapping, resource.resourceName, resourceField);\n                return function() {\n                    throw new Error(\"Unknown mapping: \" + resource.resourceName + \" : \" + resourceField);\n                }.call(this);\n            });\n        },\n        Boolean: function() {\n            var $elf = this, _fromIdx = this.input.idx, bool, op1, op2, operation;\n            return this._or(function() {\n                return this._apply(\"True\");\n            }, function() {\n                return this._apply(\"False\");\n            }, function() {\n                this._form(function() {\n                    return bool = this._or(function() {\n                        operation = function() {\n                            switch (this.anything()) {\n                              case \"eq\":\n                                return \"Equals\";\n\n                              case \"ge\":\n                                return \"GreaterThanOrEqual\";\n\n                              case \"gt\":\n                                return \"GreaterThan\";\n\n                              case \"le\":\n                                return \"LessThanOrEqual\";\n\n                              case \"lt\":\n                                return \"LessThan\";\n\n                              case \"ne\":\n                                return \"NotEquals\";\n\n                              default:\n                                throw this._fail();\n                            }\n                        }.call(this);\n                        op1 = this._apply(\"Operand\");\n                        op2 = this._apply(\"Operand\");\n                        return [ operation, op1, op2 ];\n                    }, function() {\n                        operation = function() {\n                            switch (this.anything()) {\n                              case \"and\":\n                                return \"And\";\n\n                              case \"or\":\n                                return \"Or\";\n\n                              default:\n                                throw this._fail();\n                            }\n                        }.call(this);\n                        op1 = this._apply(\"Boolean\");\n                        op2 = this._many1(function() {\n                            return this._apply(\"Boolean\");\n                        });\n                        return [ operation, op1 ].concat(op2);\n                    });\n                });\n                return bool;\n            }, function() {\n                this._form(function() {\n                    this._applyWithArgs(\"exactly\", \"not\");\n                    return bool = this._apply(\"Boolean\");\n                });\n                return [ \"Not\", bool ];\n            }, function() {\n                return this._apply(\"ReferencedProperty\");\n            }, function() {\n                return this._apply(\"BooleanFunction\");\n            });\n        },\n        True: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            this._apply(\"true\");\n            return [ \"Boolean\", !0 ];\n        },\n        False: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            this._apply(\"false\");\n            return [ \"Boolean\", !1 ];\n        },\n        BooleanFunction: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._applyWithArgs(\"Function\", \"contains\");\n            }, function() {\n                return this._applyWithArgs(\"Function\", \"endswith\");\n            }, function() {\n                return this._applyWithArgs(\"Function\", \"startswith\");\n            }, function() {\n                return this._applyWithArgs(\"Function\", \"isof\");\n            }, function() {\n                return this._applyWithArgs(\"Function\", \"substringof\");\n            });\n        },\n        NumberFunction: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._applyWithArgs(\"AliasedFunction\", \"length\", \"CharacterLength\");\n            }, function() {\n                return this._applyWithArgs(\"Function\", \"indexof\");\n            }, function() {\n                return this._applyWithArgs(\"Function\", \"year\");\n            }, function() {\n                return this._applyWithArgs(\"Function\", \"month\");\n            }, function() {\n                return this._applyWithArgs(\"Function\", \"day\");\n            }, function() {\n                return this._applyWithArgs(\"Function\", \"day\");\n            }, function() {\n                return this._applyWithArgs(\"Function\", \"hour\");\n            }, function() {\n                return this._applyWithArgs(\"Function\", \"minute\");\n            }, function() {\n                return this._applyWithArgs(\"Function\", \"second\");\n            }, function() {\n                return this._applyWithArgs(\"Function\", \"fractionalseconds\");\n            }, function() {\n                return this._applyWithArgs(\"Function\", \"totaloffsetminutes\");\n            }, function() {\n                return this._applyWithArgs(\"Function\", \"totalseconds\");\n            }, function() {\n                return this._applyWithArgs(\"Function\", \"round\");\n            }, function() {\n                return this._applyWithArgs(\"Function\", \"floor\");\n            }, function() {\n                return this._applyWithArgs(\"Function\", \"ceiling\");\n            });\n        },\n        TextFunction: function() {\n            var $elf = this, _fromIdx = this.input.idx, fn;\n            return this._or(function() {\n                fn = this._applyWithArgs(\"Function\", \"substring\");\n                fn[2] = [ \"Add\", fn[2], [ \"Number\", 1 ] ];\n                return fn;\n            }, function() {\n                return this._applyWithArgs(\"Function\", \"tolower\");\n            }, function() {\n                return this._applyWithArgs(\"Function\", \"toupper\");\n            }, function() {\n                return this._applyWithArgs(\"Function\", \"trim\");\n            }, function() {\n                return this._applyWithArgs(\"Function\", \"concat\");\n            }, function() {\n                return this._applyWithArgs(\"AliasedFunction\", \"date\", \"ToDate\");\n            }, function() {\n                return this._applyWithArgs(\"AliasedFunction\", \"time\", \"ToTime\");\n            }, function() {\n                return this._applyWithArgs(\"Function\", \"replace\");\n            });\n        },\n        DateFunction: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._applyWithArgs(\"Function\", \"now\");\n            }, function() {\n                return this._applyWithArgs(\"Function\", \"maxdatetime\");\n            }, function() {\n                return this._applyWithArgs(\"Function\", \"mindatetime\");\n            });\n        },\n        AliasedFunction: function(odataName, sqlName) {\n            var $elf = this, _fromIdx = this.input.idx, fn;\n            fn = this._applyWithArgs(\"Function\", odataName);\n            return [ sqlName ].concat(fn.slice(1));\n        },\n        Function: function(name) {\n            var $elf = this, _fromIdx = this.input.idx, args, properties;\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"call\");\n                properties = this.anything();\n                this._pred(properties.method == name);\n                return args = this._applyWithArgs(\"Arguments\", properties.args);\n            });\n            return [ _.capitalize(name) ].concat(args);\n        },\n        Arguments: function() {\n            var $elf = this, _fromIdx = this.input.idx, args;\n            this._form(function() {\n                return args = this._many(function() {\n                    return this._apply(\"Operand\");\n                });\n            });\n            return args;\n        },\n        Operand: function() {\n            var $elf = this, _fromIdx = this.input.idx;\n            return this._or(function() {\n                return this._apply(\"Bind\");\n            }, function() {\n                return this._apply(\"Null\");\n            }, function() {\n                return this._apply(\"Boolean\");\n            }, function() {\n                return this._apply(\"Number\");\n            }, function() {\n                return this._apply(\"Text\");\n            }, function() {\n                return this._apply(\"Date\");\n            }, function() {\n                return this._apply(\"Duration\");\n            }, function() {\n                return this._apply(\"Math\");\n            });\n        },\n        Math: function() {\n            var $elf = this, _fromIdx = this.input.idx, op1, op2, operation;\n            this._form(function() {\n                operation = function() {\n                    switch (this.anything()) {\n                      case \"add\":\n                        return \"Add\";\n\n                      case \"div\":\n                        return \"Divide\";\n\n                      case \"mul\":\n                        return \"Multiply\";\n\n                      case \"sub\":\n                        return \"Subtract\";\n\n                      default:\n                        throw this._fail();\n                    }\n                }.call(this);\n                op1 = this._apply(\"Operand\");\n                return op2 = this._apply(\"Operand\");\n            });\n            return [ operation, op1, op2 ];\n        },\n        Lambda: function(resource, lambda) {\n            var $elf = this, _fromIdx = this.input.idx, defaultResource, filter, query, resourceAliases, result;\n            resourceAliases = this.resourceAliases;\n            defaultResource = this.defaultResource;\n            (function() {\n                this.resourceAliases = _.clone(this.resourceAliases);\n                return this.resourceAliases[lambda.identifier] = resource;\n            }).call(this);\n            this._or(function() {\n                query = new Query();\n                this._applyWithArgs(\"AddNavigation\", query, this.defaultResource, resource);\n                this.defaultResource = resource;\n                this._applyWithArgs(\"AddExtraFroms\", lambda.expression, query, resource);\n                filter = this._applyWithArgs(\"Boolean\", lambda.expression);\n                query.where.push(filter);\n                query = query.compile(\"SelectQuery\");\n                result = this._or(function() {\n                    this._pred(\"any\" == lambda.method);\n                    return [ \"Exists\", query ];\n                }, function() {\n                    this._pred(\"all\" == lambda.method);\n                    return [ \"Not\", [ \"Exists\", _.map(query, function(queryPart) {\n                        return \"Where\" == queryPart[0] ? [ queryPart[0], [ \"Not\", queryPart[1] ] ] : queryPart;\n                    }) ] ];\n                });\n                this.resourceAliases = resourceAliases;\n                return this.defaultResource = defaultResource;\n            }, function() {\n                this.resourceAliases = resourceAliases;\n                this.defaultResource = defaultResource;\n                return this._pred(!1);\n            });\n            return result;\n        },\n        Properties: function() {\n            var $elf = this, _fromIdx = this.input.idx, props;\n            this._form(function() {\n                return props = this._many(function() {\n                    return this._apply(\"Property\");\n                });\n            });\n            return props;\n        },\n        ReferencedProperty: function() {\n            var $elf = this, _fromIdx = this.input.idx, prop;\n            prop = this._apply(\"Property\");\n            return this._or(function() {\n                this._pred(_.isArray(prop));\n                return prop;\n            }, function() {\n                return this._applyWithArgs(\"ReferencedField\", prop.resource, prop.name);\n            });\n        },\n        Property: function() {\n            var $elf = this, _fromIdx = this.input.idx, defaultResource, prop, propResource, resource, result;\n            prop = this.anything();\n            this._pred(prop.name);\n            return this._or(function() {\n                this._pred(prop.property);\n                defaultResource = this.defaultResource;\n                return this._or(function() {\n                    propResource = function() {\n                        try {\n                            return $elf.Resource(prop.name, this.defaultResource);\n                        } catch (e) {} finally {}\n                    }.call(this);\n                    this._pred(propResource);\n                    this.defaultResource = propResource;\n                    result = this._applyWithArgs(\"Property\", prop.property);\n                    this.defaultResource = defaultResource;\n                    return result;\n                }, function() {\n                    this.defaultResource = defaultResource;\n                    return this._applyWithArgs(\"Property\", prop.property);\n                });\n            }, function() {\n                this._pred(!prop.property);\n                this._pred(prop.lambda);\n                resource = this._applyWithArgs(\"Resource\", prop.name, this.defaultResource);\n                return this._applyWithArgs(\"Lambda\", resource, prop.lambda);\n            }, function() {\n                this._pred(!prop.property);\n                this._pred(!prop.lambda);\n                return {\n                    resource: this.defaultResource,\n                    name: prop.name\n                };\n            });\n        },\n        Number: function() {\n            var $elf = this, _fromIdx = this.input.idx, num;\n            return this._or(function() {\n                num = this._apply(\"number\");\n                return [ \"Number\", num ];\n            }, function() {\n                return this._apply(\"NumberFunction\");\n            });\n        },\n        Null: function() {\n            var $elf = this, _fromIdx = this.input.idx, x;\n            x = this.anything();\n            this._pred(null === x);\n            return \"Null\";\n        },\n        Text: function() {\n            var $elf = this, _fromIdx = this.input.idx, text;\n            return this._or(function() {\n                text = this._apply(\"string\");\n                return [ \"Text\", text ];\n            }, function() {\n                return this._apply(\"TextFunction\");\n            });\n        },\n        Date: function() {\n            var $elf = this, _fromIdx = this.input.idx, date;\n            return this._or(function() {\n                date = this.anything();\n                this._pred(_.isDate(date));\n                return [ \"Date\", date ];\n            }, function() {\n                return this._apply(\"DateFunction\");\n            });\n        },\n        Duration: function() {\n            var $elf = this, _fromIdx = this.input.idx, duration;\n            duration = this.anything();\n            this._pred(_.isObject(duration));\n            duration = _(duration).pick(\"negative\", \"day\", \"hour\", \"minute\", \"second\").omitBy(_.isNil).value();\n            this._pred(!_(duration).omit(\"negative\").isEmpty());\n            return [ \"Duration\", duration ];\n        },\n        Expands: function(resource, query) {\n            var $elf = this, _fromIdx = this.input.idx, defaultResource, expand, expandQuery, expandResource, navigationWhere, nestedExpandQuery;\n            defaultResource = this.defaultResource;\n            return this._form(function() {\n                return this._many1(function() {\n                    expand = this.anything();\n                    expandResource = this._applyWithArgs(\"Resource\", expand.name, defaultResource);\n                    this.defaultResource = expandResource;\n                    nestedExpandQuery = new Query();\n                    this._or(function() {\n                        return this._pred(!expand.property);\n                    }, function() {\n                        return this._applyWithArgs(\"Expands\", expandResource, nestedExpandQuery, [ expand.property ]);\n                    });\n                    this._or(function() {\n                        return this._pred(!expand.options);\n                    }, function() {\n                        return this._pred(!expand.options.$expand);\n                    }, function() {\n                        return this._applyWithArgs(\"Expands\", expandResource, nestedExpandQuery, expand.options.$expand.properties);\n                    });\n                    nestedExpandQuery.fromResource(expandResource);\n                    this._or(function() {\n                        return this._applyWithArgs(\"AddCountField\", expand, nestedExpandQuery, expandResource);\n                    }, function() {\n                        return this._applyWithArgs(\"AddSelectFields\", expand, nestedExpandQuery, expandResource);\n                    });\n                    this._or(function() {\n                        return this._pred(!expand.options);\n                    }, function() {\n                        this._or(function() {\n                            return this._pred(!expand.options.$filter);\n                        }, function() {\n                            return this._applyWithArgs(\"SelectFilter\", expand.options.$filter, nestedExpandQuery, expandResource);\n                        });\n                        return this._applyWithArgs(\"AddExtraQueryOptions\", expandResource, expand, nestedExpandQuery);\n                    });\n                    this.defaultResource = defaultResource;\n                    navigationWhere = this._applyWithArgs(\"NavigateResources\", resource, expandResource);\n                    nestedExpandQuery.where.push(navigationWhere);\n                    expandQuery = new Query();\n                    expandQuery.select.push([ [ \"AggregateJSON\", [ expandResource.tableAlias, \"*\" ] ], expandResource.resourceName ]);\n                    expandQuery.from.push([ nestedExpandQuery.compile(\"SelectQuery\"), expandResource.tableAlias ]);\n                    return query.select.push([ expandQuery.compile(\"SelectQuery\"), expandResource.resourceName ]);\n                });\n            });\n        },\n        AddExtraQueryOptions: function(resource, path, query) {\n            var $elf = this, _fromIdx = this.input.idx, limit, offset;\n            return this._or(function() {\n                return this._pred(path.count);\n            }, function() {\n                this._or(function() {\n                    return this._pred(!path.options.$orderby);\n                }, function() {\n                    return this._applyWithArgs(\"OrderBy\", path.options.$orderby, query, resource);\n                });\n                this._or(function() {\n                    return this._pred(!path.options.$top);\n                }, function() {\n                    limit = this._applyWithArgs(\"Number\", path.options.$top);\n                    return query.extras.push([ \"Limit\", limit ]);\n                });\n                return this._or(function() {\n                    return this._pred(!path.options.$skip);\n                }, function() {\n                    offset = this._applyWithArgs(\"Number\", path.options.$skip);\n                    return query.extras.push([ \"Offset\", offset ]);\n                });\n            });\n        },\n        NavigateResources: function(resource1, resource2) {\n            var $elf = this, _fromIdx = this.input.idx, fkField;\n            return this._or(function() {\n                this._applyWithArgs(\"FieldContainedIn\", resource1.resourceName, resource2);\n                fkField = this._applyWithArgs(\"ReferencedField\", resource2, resource1.resourceName);\n                return [ \"Equals\", [ \"ReferencedField\", resource1.tableAlias, resource1.idField ], fkField ];\n            }, function() {\n                this._applyWithArgs(\"FieldContainedIn\", resource2.resourceName, resource1);\n                fkField = this._applyWithArgs(\"ReferencedField\", resource1, resource2.resourceName);\n                return [ \"Equals\", [ \"ReferencedField\", resource2.tableAlias, resource2.idField ], fkField ];\n            }, function() {\n                return function() {\n                    throw new Error(\"Cannot navigate resources \" + resource1.tableName + \" and \" + resource2.tableName);\n                }.call(this);\n            });\n        },\n        AddExtraFroms: function(searchPoint, query, resource) {\n            var $elf = this, _fromIdx = this.input.idx, extraFroms;\n            extraFroms = this._applyWithArgs(\"ExtraFroms\", searchPoint);\n            return _.each(extraFroms, function(extraResource) {\n                var currentResource = resource;\n                _.isArray(extraResource) ? _.each(extraResource, function(extraResource) {\n                    $elf.AddNavigation(query, currentResource, extraResource);\n                    currentResource = extraResource;\n                }) : $elf.AddNavigation(query, currentResource, extraResource);\n            });\n        },\n        ExtraFroms: function() {\n            var $elf = this, _fromIdx = this.input.idx, extraFroms, froms, nextProp, parentResource, prop;\n            froms = [];\n            this._or(function() {\n                this._pred(_.isArray(this.input.hd));\n                return this._form(function() {\n                    return this._many(function() {\n                        extraFroms = this._apply(\"ExtraFroms\");\n                        return froms = froms.concat(extraFroms);\n                    });\n                });\n            }, function() {\n                nextProp = this.anything();\n                parentResource = this.defaultResource;\n                extraFroms = this._many1(function() {\n                    prop = nextProp;\n                    this._pred(prop);\n                    this._pred(prop.name);\n                    this._pred(prop.property);\n                    this._pred(prop.property.name);\n                    nextProp = prop.property;\n                    return parentResource = this._applyWithArgs(\"Resource\", prop.name, parentResource);\n                });\n                return this._or(function() {\n                    this._pred(1 == extraFroms.length);\n                    return froms.push(extraFroms[0]);\n                }, function() {\n                    return froms.push(extraFroms);\n                });\n            }, function() {\n                return this.anything();\n            });\n            return froms;\n        },\n        AddNavigation: function(query, resource, extraResource) {\n            var $elf = this, _fromIdx = this.input.idx, nagivationWhere;\n            return this._opt(function() {\n                this._pred(!_.some(query.from, function(from) {\n                    return from === extraResource.tableAlias || _.isArray(from) && from[1] === extraResource.tableAlias;\n                }));\n                nagivationWhere = this._applyWithArgs(\"NavigateResources\", resource, extraResource);\n                query.fromResource(extraResource);\n                return query.where.push(nagivationWhere);\n            });\n        }\n    });\n    OData2AbstractSQL.initialize = function() {\n        this.reset();\n    };\n    OData2AbstractSQL.reset = function() {\n        this.resourceAliases = {};\n        this.defaultResource = null;\n        this.extraBodyVars = {};\n    };\n    OData2AbstractSQL.checkAlias = _.identity;\n    var generateShortAliases = function(clientModel) {\n        var trie = {}, resourceNames = _.map(clientModel.resources, \"resourceName\");\n        _(resourceNames).reject(function(part) {\n            return _.includes(part, \"__\");\n        }).invokeMap(\"toLowerCase\").sort().each(function(resourceName) {\n            var node = trie;\n            _.each(resourceName, function(c, i) {\n                if (node.$suffix) {\n                    node[node.$suffix[0]] = {\n                        $suffix: node.$suffix.slice(1)\n                    };\n                    delete node.$suffix;\n                }\n                if (!node[c]) {\n                    node[c] = {\n                        $suffix: resourceName.slice(i + 1)\n                    };\n                    return !1;\n                }\n                node = node[c];\n            });\n        });\n        var shortAliases = {}, traverseNodes = function(str, node) {\n            _.each(node, function(value, key) {\n                if (\"$suffix\" === key) {\n                    var lowerCaseResourceName = str + value, origResourceName = _.find(resourceNames, function(resourceName) {\n                        return resourceName.toLowerCase() === lowerCaseResourceName;\n                    });\n                    shortAliases[origResourceName] = origResourceName.slice(0, str.length);\n                } else traverseNodes(str + key, value);\n            });\n        };\n        traverseNodes(\"\", trie);\n        _(resourceNames).invokeMap(\"split\", \"__\").filter(function(resource) {\n            return resource.length > 1;\n        }).each(function(factType) {\n            shortAliases[factType.join(\"__\")] = _.map(factType, function(part) {\n                return shortAliases[part] ? shortAliases[part] : part;\n            }).join(\"__\");\n        });\n        return shortAliases;\n    };\n    OData2AbstractSQL.setClientModel = function(clientModel) {\n        this.clientModel = clientModel;\n        var shortAliases = generateShortAliases(clientModel);\n        this.checkAlias = memoize(function(alias) {\n            var aliasLength = alias.length;\n            return aliasLength < 64 ? alias : _(alias).split(\".\").map(function(part) {\n                if (aliasLength < 64) return part;\n                aliasLength -= part.length;\n                var shortPart = shortAliases[part];\n                if (shortPart) {\n                    aliasLength += shortPart.length;\n                    return shortPart;\n                }\n                aliasLength += 1;\n                return part[0];\n            }).join(\".\");\n        });\n    };\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@resin/odata-to-abstract-sql/odata-to-abstract-sql.js\n// module id = 52\n// module chunks = 0","'use strict';\n\nvar normalizeOpts = require('es5-ext/object/normalize-options')\n  , resolveLength = require('./lib/resolve-length')\n  , plain         = require('./plain');\n\nmodule.exports = function (fn/*, options*/) {\n\tvar options = normalizeOpts(arguments[1]), length;\n\n\tif (!options.normalizer) {\n\t\tlength = options.length = resolveLength(options.length, fn.length, options.async);\n\t\tif (length !== 0) {\n\t\t\tif (options.primitive) {\n\t\t\t\tif (length === false) {\n\t\t\t\t\toptions.normalizer = require('./normalizers/primitive');\n\t\t\t\t} else if (length > 1) {\n\t\t\t\t\toptions.normalizer = require('./normalizers/get-primitive-fixed')(length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (length === false) options.normalizer = require('./normalizers/get')();\n\t\t\t\telse if (length === 1) options.normalizer = require('./normalizers/get-1')();\n\t\t\t\telse options.normalizer = require('./normalizers/get-fixed')(length);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Assure extensions\n\tif (options.async) require('./ext/async');\n\tif (options.dispose) require('./ext/dispose');\n\tif (options.maxAge) require('./ext/max-age');\n\tif (options.max) require('./ext/max');\n\tif (options.refCounter) require('./ext/ref-counter');\n\n\treturn plain(fn, options);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@resin/odata-to-abstract-sql/~/memoizee/index.js\n// module id = 53\n// module chunks = 0","'use strict';\n\nvar forEach = Array.prototype.forEach, create = Object.create;\n\nvar process = function (src, obj) {\n\tvar key;\n\tfor (key in src) obj[key] = src[key];\n};\n\nmodule.exports = function (options/*, …options*/) {\n\tvar result = create(null);\n\tforEach.call(arguments, function (options) {\n\t\tif (options == null) return;\n\t\tprocess(Object(options), result);\n\t});\n\treturn result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/object/normalize-options.js\n// module id = 54\n// module chunks = 0","'use strict';\n\nvar toPosInt = require('es5-ext/number/to-pos-integer');\n\nmodule.exports = function (optsLength, fnLength, isAsync) {\n\tvar length;\n\tif (isNaN(optsLength)) {\n\t\tlength = fnLength;\n\t\tif (!(length >= 0)) return 1;\n\t\tif (isAsync && length) return length - 1;\n\t\treturn length;\n\t}\n\tif (optsLength === false) return false;\n\treturn toPosInt(optsLength);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@resin/odata-to-abstract-sql/~/memoizee/lib/resolve-length.js\n// module id = 55\n// module chunks = 0","'use strict';\n\nvar toInteger = require('./to-integer')\n\n  , max = Math.max;\n\nmodule.exports = function (value) { return max(0, toInteger(value)); };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/number/to-pos-integer.js\n// module id = 56\n// module chunks = 0","'use strict';\n\nvar sign = require('../math/sign')\n\n  , abs = Math.abs, floor = Math.floor;\n\nmodule.exports = function (value) {\n\tif (isNaN(value)) return 0;\n\tvalue = Number(value);\n\tif ((value === 0) || !isFinite(value)) return value;\n\treturn sign(value) * floor(abs(value));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/number/to-integer.js\n// module id = 57\n// module chunks = 0","'use strict';\n\nmodule.exports = require('./is-implemented')()\n\t? Math.sign\n\t: require('./shim');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/math/sign/index.js\n// module id = 58\n// module chunks = 0","'use strict';\n\nmodule.exports = function () {\n\tvar sign = Math.sign;\n\tif (typeof sign !== 'function') return false;\n\treturn ((sign(10) === 1) && (sign(-20) === -1));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/math/sign/is-implemented.js\n// module id = 59\n// module chunks = 0","'use strict';\n\nmodule.exports = function (value) {\n\tvalue = Number(value);\n\tif (isNaN(value) || (value === 0)) return value;\n\treturn (value > 0) ? 1 : -1;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/math/sign/shim.js\n// module id = 60\n// module chunks = 0","'use strict';\n\nvar callable      = require('es5-ext/object/valid-callable')\n  , forEach       = require('es5-ext/object/for-each')\n  , extensions    = require('./lib/registered-extensions')\n  , configure     = require('./lib/configure-map')\n  , resolveLength = require('./lib/resolve-length')\n\n  , hasOwnProperty = Object.prototype.hasOwnProperty;\n\nmodule.exports = function self(fn/*, options */) {\n\tvar options, length, conf;\n\n\tcallable(fn);\n\toptions = Object(arguments[1]);\n\n\t// Do not memoize already memoized function\n\tif (hasOwnProperty.call(fn, '__memoized__') && !options.force) return fn;\n\n\t// Resolve length;\n\tlength = resolveLength(options.length, fn.length, options.async && extensions.async);\n\n\t// Configure cache map\n\tconf = configure(fn, length, options);\n\n\t// Bind eventual extensions\n\tforEach(extensions, function (fn, name) {\n\t\tif (options[name]) fn(options[name], conf, options);\n\t});\n\n\tif (self.__profiler__) self.__profiler__(conf);\n\n\tconf.updateEnv();\n\treturn conf.memoized;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@resin/odata-to-abstract-sql/~/memoizee/plain.js\n// module id = 61\n// module chunks = 0","'use strict';\n\nmodule.exports = function (fn) {\n\tif (typeof fn !== 'function') throw new TypeError(fn + \" is not a function\");\n\treturn fn;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/object/valid-callable.js\n// module id = 62\n// module chunks = 0","'use strict';\n\nmodule.exports = require('./_iterate')('forEach');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/object/for-each.js\n// module id = 63\n// module chunks = 0","// Internal method, used by iteration functions.\n// Calls a function for each key-value pair found in object\n// Optionally takes compareFn to iterate object in specific order\n\n'use strict';\n\nvar callable = require('./valid-callable')\n  , value    = require('./valid-value')\n\n  , bind = Function.prototype.bind, call = Function.prototype.call, keys = Object.keys\n  , propertyIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nmodule.exports = function (method, defVal) {\n\treturn function (obj, cb/*, thisArg, compareFn*/) {\n\t\tvar list, thisArg = arguments[2], compareFn = arguments[3];\n\t\tobj = Object(value(obj));\n\t\tcallable(cb);\n\n\t\tlist = keys(obj);\n\t\tif (compareFn) {\n\t\t\tlist.sort((typeof compareFn === 'function') ? bind.call(compareFn, obj) : undefined);\n\t\t}\n\t\tif (typeof method !== 'function') method = list[method];\n\t\treturn call.call(method, list, function (key, index) {\n\t\t\tif (!propertyIsEnumerable.call(obj, key)) return defVal;\n\t\t\treturn call.call(cb, thisArg, obj[key], key, obj, index);\n\t\t});\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/object/_iterate.js\n// module id = 64\n// module chunks = 0","'use strict';\n\nmodule.exports = function (value) {\n\tif (value == null) throw new TypeError(\"Cannot use null or undefined\");\n\treturn value;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/object/valid-value.js\n// module id = 65\n// module chunks = 0","'use strict';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@resin/odata-to-abstract-sql/~/memoizee/lib/registered-extensions.js\n// module id = 66\n// module chunks = 0","'use strict';\n\nvar customError      = require('es5-ext/error/custom')\n  , defineLength     = require('es5-ext/function/_define-length')\n  , d                = require('d')\n  , ee               = require('event-emitter').methods\n  , resolveResolve   = require('./resolve-resolve')\n  , resolveNormalize = require('./resolve-normalize')\n\n  , apply = Function.prototype.apply, call = Function.prototype.call\n  , create = Object.create, hasOwnProperty = Object.prototype.hasOwnProperty\n  , defineProperties = Object.defineProperties\n  , on = ee.on, emit = ee.emit;\n\nmodule.exports = function (original, length, options) {\n\tvar cache = create(null), conf, memLength, get, set, del, clear, extDel, normalizer\n\t  , getListeners, setListeners, deleteListeners, memoized, resolve;\n\tif (length !== false) memLength = length;\n\telse if (isNaN(original.length)) memLength = 1;\n\telse memLength = original.length;\n\n\tif (options.normalizer) {\n\t\tnormalizer = resolveNormalize(options.normalizer);\n\t\tget = normalizer.get;\n\t\tset = normalizer.set;\n\t\tdel = normalizer.delete;\n\t\tclear = normalizer.clear;\n\t}\n\tif (options.resolvers != null) resolve = resolveResolve(options.resolvers);\n\n\tif (get) {\n\t\tmemoized = defineLength(function (arg) {\n\t\t\tvar id, result, args = arguments;\n\t\t\tif (resolve) args = resolve(args);\n\t\t\tid = get(args);\n\t\t\tif (id !== null) {\n\t\t\t\tif (hasOwnProperty.call(cache, id)) {\n\t\t\t\t\tif (getListeners) conf.emit('get', id, args, this);\n\t\t\t\t\treturn cache[id];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (args.length === 1) result = call.call(original, this, args[0]);\n\t\t\telse result = apply.call(original, this, args);\n\t\t\tif (id === null) {\n\t\t\t\tid = get(args);\n\t\t\t\tif (id !== null) throw customError(\"Circular invocation\", 'CIRCULAR_INVOCATION');\n\t\t\t\tid = set(args);\n\t\t\t} else if (hasOwnProperty.call(cache, id)) {\n\t\t\t\tthrow customError(\"Circular invocation\", 'CIRCULAR_INVOCATION');\n\t\t\t}\n\t\t\tcache[id] = result;\n\t\t\tif (setListeners) conf.emit('set', id);\n\t\t\treturn result;\n\t\t}, memLength);\n\t} else if (length === 0) {\n\t\tmemoized = function () {\n\t\t\tvar result;\n\t\t\tif (hasOwnProperty.call(cache, 'data')) {\n\t\t\t\tif (getListeners) conf.emit('get', 'data', arguments, this);\n\t\t\t\treturn cache.data;\n\t\t\t}\n\t\t\tif (!arguments.length) result = call.call(original, this);\n\t\t\telse result = apply.call(original, this, arguments);\n\t\t\tif (hasOwnProperty.call(cache, 'data')) {\n\t\t\t\tthrow customError(\"Circular invocation\", 'CIRCULAR_INVOCATION');\n\t\t\t}\n\t\t\tcache.data = result;\n\t\t\tif (setListeners) conf.emit('set', 'data');\n\t\t\treturn result;\n\t\t};\n\t} else {\n\t\tmemoized = function (arg) {\n\t\t\tvar result, args = arguments, id;\n\t\t\tif (resolve) args = resolve(arguments);\n\t\t\tid = String(args[0]);\n\t\t\tif (hasOwnProperty.call(cache, id)) {\n\t\t\t\tif (getListeners) conf.emit('get', id, args, this);\n\t\t\t\treturn cache[id];\n\t\t\t}\n\t\t\tif (args.length === 1) result = call.call(original, this, args[0]);\n\t\t\telse result = apply.call(original, this, args);\n\t\t\tif (hasOwnProperty.call(cache, id)) {\n\t\t\t\tthrow customError(\"Circular invocation\", 'CIRCULAR_INVOCATION');\n\t\t\t}\n\t\t\tcache[id] = result;\n\t\t\tif (setListeners) conf.emit('set', id);\n\t\t\treturn result;\n\t\t};\n\t}\n\tconf = {\n\t\toriginal: original,\n\t\tmemoized: memoized,\n\t\tget: function (args) {\n\t\t\tif (resolve) args = resolve(args);\n\t\t\tif (get) return get(args);\n\t\t\treturn String(args[0]);\n\t\t},\n\t\thas: function (id) { return hasOwnProperty.call(cache, id); },\n\t\tdelete: function (id) {\n\t\t\tvar result;\n\t\t\tif (!hasOwnProperty.call(cache, id)) return;\n\t\t\tif (del) del(id);\n\t\t\tresult = cache[id];\n\t\t\tdelete cache[id];\n\t\t\tif (deleteListeners) conf.emit('delete', id, result);\n\t\t},\n\t\tclear: function () {\n\t\t\tvar oldCache = cache;\n\t\t\tif (clear) clear();\n\t\t\tcache = create(null);\n\t\t\tconf.emit('clear', oldCache);\n\t\t},\n\t\ton: function (type, listener) {\n\t\t\tif (type === 'get') getListeners = true;\n\t\t\telse if (type === 'set') setListeners = true;\n\t\t\telse if (type === 'delete') deleteListeners = true;\n\t\t\treturn on.call(this, type, listener);\n\t\t},\n\t\temit: emit,\n\t\tupdateEnv: function () { original = conf.original; }\n\t};\n\tif (get) {\n\t\textDel = defineLength(function (arg) {\n\t\t\tvar id, args = arguments;\n\t\t\tif (resolve) args = resolve(args);\n\t\t\tid = get(args);\n\t\t\tif (id === null) return;\n\t\t\tconf.delete(id);\n\t\t}, memLength);\n\t} else if (length === 0) {\n\t\textDel = function () { return conf.delete('data'); };\n\t} else {\n\t\textDel = function (arg) {\n\t\t\tif (resolve) arg = resolve(arguments)[0];\n\t\t\treturn conf.delete(arg);\n\t\t};\n\t}\n\tdefineProperties(memoized, {\n\t\t__memoized__: d(true),\n\t\tdelete: d(extDel),\n\t\tclear: d(conf.clear)\n\t});\n\treturn conf;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@resin/odata-to-abstract-sql/~/memoizee/lib/configure-map.js\n// module id = 67\n// module chunks = 0","'use strict';\n\nvar assign = require('../object/assign')\n\n  , captureStackTrace = Error.captureStackTrace;\n\nexports = module.exports = function (message/*, code, ext*/) {\n\tvar err = new Error(message), code = arguments[1], ext = arguments[2];\n\tif (ext == null) {\n\t\tif (code && (typeof code === 'object')) {\n\t\t\text = code;\n\t\t\tcode = null;\n\t\t}\n\t}\n\tif (ext != null) assign(err, ext);\n\tif (code != null) err.code = String(code);\n\tif (captureStackTrace) captureStackTrace(err, exports);\n\treturn err;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/error/custom.js\n// module id = 68\n// module chunks = 0","'use strict';\n\nmodule.exports = require('./is-implemented')()\n\t? Object.assign\n\t: require('./shim');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/object/assign/index.js\n// module id = 69\n// module chunks = 0","'use strict';\n\nmodule.exports = function () {\n\tvar assign = Object.assign, obj;\n\tif (typeof assign !== 'function') return false;\n\tobj = { foo: 'raz' };\n\tassign(obj, { bar: 'dwa' }, { trzy: 'trzy' });\n\treturn (obj.foo + obj.bar + obj.trzy) === 'razdwatrzy';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/object/assign/is-implemented.js\n// module id = 70\n// module chunks = 0","'use strict';\n\nvar keys  = require('../keys')\n  , value = require('../valid-value')\n\n  , max = Math.max;\n\nmodule.exports = function (dest, src/*, …srcn*/) {\n\tvar error, i, l = max(arguments.length, 2), assign;\n\tdest = Object(value(dest));\n\tassign = function (key) {\n\t\ttry { dest[key] = src[key]; } catch (e) {\n\t\t\tif (!error) error = e;\n\t\t}\n\t};\n\tfor (i = 1; i < l; ++i) {\n\t\tsrc = arguments[i];\n\t\tkeys(src).forEach(assign);\n\t}\n\tif (error !== undefined) throw error;\n\treturn dest;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/object/assign/shim.js\n// module id = 71\n// module chunks = 0","'use strict';\n\nmodule.exports = require('./is-implemented')()\n\t? Object.keys\n\t: require('./shim');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/object/keys/index.js\n// module id = 72\n// module chunks = 0","'use strict';\n\nmodule.exports = function () {\n\ttry {\n\t\tObject.keys('primitive');\n\t\treturn true;\n\t} catch (e) { return false; }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/object/keys/is-implemented.js\n// module id = 73\n// module chunks = 0","'use strict';\n\nvar keys = Object.keys;\n\nmodule.exports = function (object) {\n\treturn keys(object == null ? object : Object(object));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/object/keys/shim.js\n// module id = 74\n// module chunks = 0","'use strict';\n\nvar toPosInt = require('../number/to-pos-integer')\n\n  , test = function (a, b) {}, desc, defineProperty\n  , generate, mixin;\n\ntry {\n\tObject.defineProperty(test, 'length', { configurable: true, writable: false,\n\t\tenumerable: false, value: 1 });\n} catch (ignore) {}\n\nif (test.length === 1) {\n\t// ES6\n\tdesc = { configurable: true, writable: false, enumerable: false };\n\tdefineProperty = Object.defineProperty;\n\tmodule.exports = function (fn, length) {\n\t\tlength = toPosInt(length);\n\t\tif (fn.length === length) return fn;\n\t\tdesc.value = length;\n\t\treturn defineProperty(fn, 'length', desc);\n\t};\n} else {\n\tmixin = require('../object/mixin');\n\tgenerate = (function () {\n\t\tvar cache = [];\n\t\treturn function (l) {\n\t\t\tvar args, i = 0;\n\t\t\tif (cache[l]) return cache[l];\n\t\t\targs = [];\n\t\t\twhile (l--) args.push('a' + (++i).toString(36));\n\t\t\treturn new Function('fn', 'return function (' + args.join(', ') +\n\t\t\t\t') { return fn.apply(this, arguments); };');\n\t\t};\n\t}());\n\tmodule.exports = function (src, length) {\n\t\tvar target;\n\t\tlength = toPosInt(length);\n\t\tif (src.length === length) return src;\n\t\ttarget = generate(length)(src);\n\t\ttry { mixin(target, src); } catch (ignore) {}\n\t\treturn target;\n\t};\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/function/_define-length.js\n// module id = 75\n// module chunks = 0","'use strict';\n\nvar value = require('./valid-value')\n\n  , defineProperty = Object.defineProperty\n  , getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor\n  , getOwnPropertyNames = Object.getOwnPropertyNames\n  , getOwnPropertySymbols = Object.getOwnPropertySymbols;\n\nmodule.exports = function (target, source) {\n\tvar error, sourceObject = Object(value(source));\n\ttarget = Object(value(target));\n\tgetOwnPropertyNames(sourceObject).forEach(function (name) {\n\t\ttry {\n\t\t\tdefineProperty(target, name, getOwnPropertyDescriptor(source, name));\n\t\t} catch (e) { error = e; }\n\t});\n\tif (typeof getOwnPropertySymbols === 'function') {\n\t\tgetOwnPropertySymbols(sourceObject).forEach(function (symbol) {\n\t\t\ttry {\n\t\t\t\tdefineProperty(target, symbol, getOwnPropertyDescriptor(source, symbol));\n\t\t\t} catch (e) { error = e; }\n\t\t});\n\t}\n\tif (error !== undefined) throw error;\n\treturn target;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/object/mixin.js\n// module id = 76\n// module chunks = 0","'use strict';\n\nvar assign        = require('es5-ext/object/assign')\n  , normalizeOpts = require('es5-ext/object/normalize-options')\n  , isCallable    = require('es5-ext/object/is-callable')\n  , contains      = require('es5-ext/string/#/contains')\n\n  , d;\n\nd = module.exports = function (dscr, value/*, options*/) {\n\tvar c, e, w, options, desc;\n\tif ((arguments.length < 2) || (typeof dscr !== 'string')) {\n\t\toptions = value;\n\t\tvalue = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[2];\n\t}\n\tif (dscr == null) {\n\t\tc = w = true;\n\t\te = false;\n\t} else {\n\t\tc = contains.call(dscr, 'c');\n\t\te = contains.call(dscr, 'e');\n\t\tw = contains.call(dscr, 'w');\n\t}\n\n\tdesc = { value: value, configurable: c, enumerable: e, writable: w };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n};\n\nd.gs = function (dscr, get, set/*, options*/) {\n\tvar c, e, options, desc;\n\tif (typeof dscr !== 'string') {\n\t\toptions = set;\n\t\tset = get;\n\t\tget = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[3];\n\t}\n\tif (get == null) {\n\t\tget = undefined;\n\t} else if (!isCallable(get)) {\n\t\toptions = get;\n\t\tget = set = undefined;\n\t} else if (set == null) {\n\t\tset = undefined;\n\t} else if (!isCallable(set)) {\n\t\toptions = set;\n\t\tset = undefined;\n\t}\n\tif (dscr == null) {\n\t\tc = true;\n\t\te = false;\n\t} else {\n\t\tc = contains.call(dscr, 'c');\n\t\te = contains.call(dscr, 'e');\n\t}\n\n\tdesc = { get: get, set: set, configurable: c, enumerable: e };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d/index.js\n// module id = 77\n// module chunks = 0","// Deprecated\n\n'use strict';\n\nmodule.exports = function (obj) { return typeof obj === 'function'; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/object/is-callable.js\n// module id = 78\n// module chunks = 0","'use strict';\n\nmodule.exports = require('./is-implemented')()\n\t? String.prototype.contains\n\t: require('./shim');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/string/#/contains/index.js\n// module id = 79\n// module chunks = 0","'use strict';\n\nvar str = 'razdwatrzy';\n\nmodule.exports = function () {\n\tif (typeof str.contains !== 'function') return false;\n\treturn ((str.contains('dwa') === true) && (str.contains('foo') === false));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/string/#/contains/is-implemented.js\n// module id = 80\n// module chunks = 0","'use strict';\n\nvar indexOf = String.prototype.indexOf;\n\nmodule.exports = function (searchString/*, position*/) {\n\treturn indexOf.call(this, searchString, arguments[1]) > -1;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/string/#/contains/shim.js\n// module id = 81\n// module chunks = 0","'use strict';\n\nvar d        = require('d')\n  , callable = require('es5-ext/object/valid-callable')\n\n  , apply = Function.prototype.apply, call = Function.prototype.call\n  , create = Object.create, defineProperty = Object.defineProperty\n  , defineProperties = Object.defineProperties\n  , hasOwnProperty = Object.prototype.hasOwnProperty\n  , descriptor = { configurable: true, enumerable: false, writable: true }\n\n  , on, once, off, emit, methods, descriptors, base;\n\non = function (type, listener) {\n\tvar data;\n\n\tcallable(listener);\n\n\tif (!hasOwnProperty.call(this, '__ee__')) {\n\t\tdata = descriptor.value = create(null);\n\t\tdefineProperty(this, '__ee__', descriptor);\n\t\tdescriptor.value = null;\n\t} else {\n\t\tdata = this.__ee__;\n\t}\n\tif (!data[type]) data[type] = listener;\n\telse if (typeof data[type] === 'object') data[type].push(listener);\n\telse data[type] = [data[type], listener];\n\n\treturn this;\n};\n\nonce = function (type, listener) {\n\tvar once, self;\n\n\tcallable(listener);\n\tself = this;\n\ton.call(this, type, once = function () {\n\t\toff.call(self, type, once);\n\t\tapply.call(listener, this, arguments);\n\t});\n\n\tonce.__eeOnceListener__ = listener;\n\treturn this;\n};\n\noff = function (type, listener) {\n\tvar data, listeners, candidate, i;\n\n\tcallable(listener);\n\n\tif (!hasOwnProperty.call(this, '__ee__')) return this;\n\tdata = this.__ee__;\n\tif (!data[type]) return this;\n\tlisteners = data[type];\n\n\tif (typeof listeners === 'object') {\n\t\tfor (i = 0; (candidate = listeners[i]); ++i) {\n\t\t\tif ((candidate === listener) ||\n\t\t\t\t\t(candidate.__eeOnceListener__ === listener)) {\n\t\t\t\tif (listeners.length === 2) data[type] = listeners[i ? 0 : 1];\n\t\t\t\telse listeners.splice(i, 1);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif ((listeners === listener) ||\n\t\t\t\t(listeners.__eeOnceListener__ === listener)) {\n\t\t\tdelete data[type];\n\t\t}\n\t}\n\n\treturn this;\n};\n\nemit = function (type) {\n\tvar i, l, listener, listeners, args;\n\n\tif (!hasOwnProperty.call(this, '__ee__')) return;\n\tlisteners = this.__ee__[type];\n\tif (!listeners) return;\n\n\tif (typeof listeners === 'object') {\n\t\tl = arguments.length;\n\t\targs = new Array(l - 1);\n\t\tfor (i = 1; i < l; ++i) args[i - 1] = arguments[i];\n\n\t\tlisteners = listeners.slice();\n\t\tfor (i = 0; (listener = listeners[i]); ++i) {\n\t\t\tapply.call(listener, this, args);\n\t\t}\n\t} else {\n\t\tswitch (arguments.length) {\n\t\tcase 1:\n\t\t\tcall.call(listeners, this);\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tcall.call(listeners, this, arguments[1]);\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tcall.call(listeners, this, arguments[1], arguments[2]);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tl = arguments.length;\n\t\t\targs = new Array(l - 1);\n\t\t\tfor (i = 1; i < l; ++i) {\n\t\t\t\targs[i - 1] = arguments[i];\n\t\t\t}\n\t\t\tapply.call(listeners, this, args);\n\t\t}\n\t}\n};\n\nmethods = {\n\ton: on,\n\tonce: once,\n\toff: off,\n\temit: emit\n};\n\ndescriptors = {\n\ton: d(on),\n\tonce: d(once),\n\toff: d(off),\n\temit: d(emit)\n};\n\nbase = defineProperties({}, descriptors);\n\nmodule.exports = exports = function (o) {\n\treturn (o == null) ? create(base) : defineProperties(Object(o), descriptors);\n};\nexports.methods = methods;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/event-emitter/index.js\n// module id = 82\n// module chunks = 0","'use strict';\n\nvar toArray  = require('es5-ext/array/to-array')\n  , callable = require('es5-ext/object/valid-callable')\n\n  , slice = Array.prototype.slice\n  , resolveArgs;\n\nresolveArgs = function (args) {\n\treturn this.map(function (r, i) {\n\t\treturn r ? r(args[i]) : args[i];\n\t}).concat(slice.call(args, this.length));\n};\n\nmodule.exports = function (resolvers) {\n\tresolvers = toArray(resolvers);\n\tresolvers.forEach(function (r) {\n\t\tif (r != null) callable(r);\n\t});\n\treturn resolveArgs.bind(resolvers);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@resin/odata-to-abstract-sql/~/memoizee/lib/resolve-resolve.js\n// module id = 84\n// module chunks = 0","'use strict';\n\nvar from = require('./from')\n\n  , isArray = Array.isArray;\n\nmodule.exports = function (arrayLike) {\n\treturn isArray(arrayLike) ? arrayLike : from(arrayLike);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/array/to-array.js\n// module id = 85\n// module chunks = 0","'use strict';\n\nmodule.exports = require('./is-implemented')()\n\t? Array.from\n\t: require('./shim');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/array/from/index.js\n// module id = 86\n// module chunks = 0","'use strict';\n\nmodule.exports = function () {\n\tvar from = Array.from, arr, result;\n\tif (typeof from !== 'function') return false;\n\tarr = ['raz', 'dwa'];\n\tresult = from(arr);\n\treturn Boolean(result && (result !== arr) && (result[1] === 'dwa'));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/array/from/is-implemented.js\n// module id = 87\n// module chunks = 0","'use strict';\n\nvar iteratorSymbol = require('es6-symbol').iterator\n  , isArguments    = require('../../function/is-arguments')\n  , isFunction     = require('../../function/is-function')\n  , toPosInt       = require('../../number/to-pos-integer')\n  , callable       = require('../../object/valid-callable')\n  , validValue     = require('../../object/valid-value')\n  , isString       = require('../../string/is-string')\n\n  , isArray = Array.isArray, call = Function.prototype.call\n  , desc = { configurable: true, enumerable: true, writable: true, value: null }\n  , defineProperty = Object.defineProperty;\n\nmodule.exports = function (arrayLike/*, mapFn, thisArg*/) {\n\tvar mapFn = arguments[1], thisArg = arguments[2], Constructor, i, j, arr, l, code, iterator\n\t  , result, getIterator, value;\n\n\tarrayLike = Object(validValue(arrayLike));\n\n\tif (mapFn != null) callable(mapFn);\n\tif (!this || (this === Array) || !isFunction(this)) {\n\t\t// Result: Plain array\n\t\tif (!mapFn) {\n\t\t\tif (isArguments(arrayLike)) {\n\t\t\t\t// Source: Arguments\n\t\t\t\tl = arrayLike.length;\n\t\t\t\tif (l !== 1) return Array.apply(null, arrayLike);\n\t\t\t\tarr = new Array(1);\n\t\t\t\tarr[0] = arrayLike[0];\n\t\t\t\treturn arr;\n\t\t\t}\n\t\t\tif (isArray(arrayLike)) {\n\t\t\t\t// Source: Array\n\t\t\t\tarr = new Array(l = arrayLike.length);\n\t\t\t\tfor (i = 0; i < l; ++i) arr[i] = arrayLike[i];\n\t\t\t\treturn arr;\n\t\t\t}\n\t\t}\n\t\tarr = [];\n\t} else {\n\t\t// Result: Non plain array\n\t\tConstructor = this;\n\t}\n\n\tif (!isArray(arrayLike)) {\n\t\tif ((getIterator = arrayLike[iteratorSymbol]) !== undefined) {\n\t\t\t// Source: Iterator\n\t\t\titerator = callable(getIterator).call(arrayLike);\n\t\t\tif (Constructor) arr = new Constructor();\n\t\t\tresult = iterator.next();\n\t\t\ti = 0;\n\t\t\twhile (!result.done) {\n\t\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, result.value, i) : result.value;\n\t\t\t\tif (!Constructor) {\n\t\t\t\t\tarr[i] = value;\n\t\t\t\t} else {\n\t\t\t\t\tdesc.value = value;\n\t\t\t\t\tdefineProperty(arr, i, desc);\n\t\t\t\t}\n\t\t\t\tresult = iterator.next();\n\t\t\t\t++i;\n\t\t\t}\n\t\t\tl = i;\n\t\t} else if (isString(arrayLike)) {\n\t\t\t// Source: String\n\t\t\tl = arrayLike.length;\n\t\t\tif (Constructor) arr = new Constructor();\n\t\t\tfor (i = 0, j = 0; i < l; ++i) {\n\t\t\t\tvalue = arrayLike[i];\n\t\t\t\tif ((i + 1) < l) {\n\t\t\t\t\tcode = value.charCodeAt(0);\n\t\t\t\t\tif ((code >= 0xD800) && (code <= 0xDBFF)) value += arrayLike[++i];\n\t\t\t\t}\n\t\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, value, j) : value;\n\t\t\t\tif (!Constructor) {\n\t\t\t\t\tarr[j] = value;\n\t\t\t\t} else {\n\t\t\t\t\tdesc.value = value;\n\t\t\t\t\tdefineProperty(arr, j, desc);\n\t\t\t\t}\n\t\t\t\t++j;\n\t\t\t}\n\t\t\tl = j;\n\t\t}\n\t}\n\tif (l === undefined) {\n\t\t// Source: array or array-like\n\t\tl = toPosInt(arrayLike.length);\n\t\tif (Constructor) arr = new Constructor(l);\n\t\tfor (i = 0; i < l; ++i) {\n\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, arrayLike[i], i) : arrayLike[i];\n\t\t\tif (!Constructor) {\n\t\t\t\tarr[i] = value;\n\t\t\t} else {\n\t\t\t\tdesc.value = value;\n\t\t\t\tdefineProperty(arr, i, desc);\n\t\t\t}\n\t\t}\n\t}\n\tif (Constructor) {\n\t\tdesc.value = null;\n\t\tarr.length = l;\n\t}\n\treturn arr;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/array/from/shim.js\n// module id = 88\n// module chunks = 0","'use strict';\n\nmodule.exports = require('./is-implemented')() ? Symbol : require('./polyfill');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es6-symbol/index.js\n// module id = 89\n// module chunks = 0","'use strict';\n\nvar validTypes = { object: true, symbol: true };\n\nmodule.exports = function () {\n\tvar symbol;\n\tif (typeof Symbol !== 'function') return false;\n\tsymbol = Symbol('test symbol');\n\ttry { String(symbol); } catch (e) { return false; }\n\n\t// Return 'true' also for polyfills\n\tif (!validTypes[typeof Symbol.iterator]) return false;\n\tif (!validTypes[typeof Symbol.toPrimitive]) return false;\n\tif (!validTypes[typeof Symbol.toStringTag]) return false;\n\n\treturn true;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es6-symbol/is-implemented.js\n// module id = 90\n// module chunks = 0","// ES2015 Symbol polyfill for environments that do not (or partially) support it\n\n'use strict';\n\nvar d              = require('d')\n  , validateSymbol = require('./validate-symbol')\n\n  , create = Object.create, defineProperties = Object.defineProperties\n  , defineProperty = Object.defineProperty, objPrototype = Object.prototype\n  , NativeSymbol, SymbolPolyfill, HiddenSymbol, globalSymbols = create(null)\n  , isNativeSafe;\n\nif (typeof Symbol === 'function') {\n\tNativeSymbol = Symbol;\n\ttry {\n\t\tString(NativeSymbol());\n\t\tisNativeSafe = true;\n\t} catch (ignore) {}\n}\n\nvar generateName = (function () {\n\tvar created = create(null);\n\treturn function (desc) {\n\t\tvar postfix = 0, name, ie11BugWorkaround;\n\t\twhile (created[desc + (postfix || '')]) ++postfix;\n\t\tdesc += (postfix || '');\n\t\tcreated[desc] = true;\n\t\tname = '@@' + desc;\n\t\tdefineProperty(objPrototype, name, d.gs(null, function (value) {\n\t\t\t// For IE11 issue see:\n\t\t\t// https://connect.microsoft.com/IE/feedbackdetail/view/1928508/\n\t\t\t//    ie11-broken-getters-on-dom-objects\n\t\t\t// https://github.com/medikoo/es6-symbol/issues/12\n\t\t\tif (ie11BugWorkaround) return;\n\t\t\tie11BugWorkaround = true;\n\t\t\tdefineProperty(this, name, d(value));\n\t\t\tie11BugWorkaround = false;\n\t\t}));\n\t\treturn name;\n\t};\n}());\n\n// Internal constructor (not one exposed) for creating Symbol instances.\n// This one is used to ensure that `someSymbol instanceof Symbol` always return false\nHiddenSymbol = function Symbol(description) {\n\tif (this instanceof HiddenSymbol) throw new TypeError('Symbol is not a constructor');\n\treturn SymbolPolyfill(description);\n};\n\n// Exposed `Symbol` constructor\n// (returns instances of HiddenSymbol)\nmodule.exports = SymbolPolyfill = function Symbol(description) {\n\tvar symbol;\n\tif (this instanceof Symbol) throw new TypeError('Symbol is not a constructor');\n\tif (isNativeSafe) return NativeSymbol(description);\n\tsymbol = create(HiddenSymbol.prototype);\n\tdescription = (description === undefined ? '' : String(description));\n\treturn defineProperties(symbol, {\n\t\t__description__: d('', description),\n\t\t__name__: d('', generateName(description))\n\t});\n};\ndefineProperties(SymbolPolyfill, {\n\tfor: d(function (key) {\n\t\tif (globalSymbols[key]) return globalSymbols[key];\n\t\treturn (globalSymbols[key] = SymbolPolyfill(String(key)));\n\t}),\n\tkeyFor: d(function (s) {\n\t\tvar key;\n\t\tvalidateSymbol(s);\n\t\tfor (key in globalSymbols) if (globalSymbols[key] === s) return key;\n\t}),\n\n\t// To ensure proper interoperability with other native functions (e.g. Array.from)\n\t// fallback to eventual native implementation of given symbol\n\thasInstance: d('', (NativeSymbol && NativeSymbol.hasInstance) || SymbolPolyfill('hasInstance')),\n\tisConcatSpreadable: d('', (NativeSymbol && NativeSymbol.isConcatSpreadable) ||\n\t\tSymbolPolyfill('isConcatSpreadable')),\n\titerator: d('', (NativeSymbol && NativeSymbol.iterator) || SymbolPolyfill('iterator')),\n\tmatch: d('', (NativeSymbol && NativeSymbol.match) || SymbolPolyfill('match')),\n\treplace: d('', (NativeSymbol && NativeSymbol.replace) || SymbolPolyfill('replace')),\n\tsearch: d('', (NativeSymbol && NativeSymbol.search) || SymbolPolyfill('search')),\n\tspecies: d('', (NativeSymbol && NativeSymbol.species) || SymbolPolyfill('species')),\n\tsplit: d('', (NativeSymbol && NativeSymbol.split) || SymbolPolyfill('split')),\n\ttoPrimitive: d('', (NativeSymbol && NativeSymbol.toPrimitive) || SymbolPolyfill('toPrimitive')),\n\ttoStringTag: d('', (NativeSymbol && NativeSymbol.toStringTag) || SymbolPolyfill('toStringTag')),\n\tunscopables: d('', (NativeSymbol && NativeSymbol.unscopables) || SymbolPolyfill('unscopables'))\n});\n\n// Internal tweaks for real symbol producer\ndefineProperties(HiddenSymbol.prototype, {\n\tconstructor: d(SymbolPolyfill),\n\ttoString: d('', function () { return this.__name__; })\n});\n\n// Proper implementation of methods exposed on Symbol.prototype\n// They won't be accessible on produced symbol instances as they derive from HiddenSymbol.prototype\ndefineProperties(SymbolPolyfill.prototype, {\n\ttoString: d(function () { return 'Symbol (' + validateSymbol(this).__description__ + ')'; }),\n\tvalueOf: d(function () { return validateSymbol(this); })\n});\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toPrimitive, d('', function () {\n\tvar symbol = validateSymbol(this);\n\tif (typeof symbol === 'symbol') return symbol;\n\treturn symbol.toString();\n}));\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d('c', 'Symbol'));\n\n// Proper implementaton of toPrimitive and toStringTag for returned symbol instances\ndefineProperty(HiddenSymbol.prototype, SymbolPolyfill.toStringTag,\n\td('c', SymbolPolyfill.prototype[SymbolPolyfill.toStringTag]));\n\n// Note: It's important to define `toPrimitive` as last one, as some implementations\n// implement `toPrimitive` natively without implementing `toStringTag` (or other specified symbols)\n// And that may invoke error in definition flow:\n// See: https://github.com/medikoo/es6-symbol/issues/13#issuecomment-164146149\ndefineProperty(HiddenSymbol.prototype, SymbolPolyfill.toPrimitive,\n\td('c', SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive]));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es6-symbol/polyfill.js\n// module id = 91\n// module chunks = 0","'use strict';\n\nvar isSymbol = require('./is-symbol');\n\nmodule.exports = function (value) {\n\tif (!isSymbol(value)) throw new TypeError(value + \" is not a symbol\");\n\treturn value;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es6-symbol/validate-symbol.js\n// module id = 93\n// module chunks = 0","'use strict';\n\nmodule.exports = function (x) {\n\tif (!x) return false;\n\tif (typeof x === 'symbol') return true;\n\tif (!x.constructor) return false;\n\tif (x.constructor.name !== 'Symbol') return false;\n\treturn (x[x.constructor.toStringTag] === 'Symbol');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es6-symbol/is-symbol.js\n// module id = 94\n// module chunks = 0","'use strict';\n\nvar toString = Object.prototype.toString\n\n  , id = toString.call((function () { return arguments; }()));\n\nmodule.exports = function (x) { return (toString.call(x) === id); };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/function/is-arguments.js\n// module id = 95\n// module chunks = 0","'use strict';\n\nvar toString = Object.prototype.toString\n\n  , id = toString.call(require('./noop'));\n\nmodule.exports = function (f) {\n\treturn (typeof f === \"function\") && (toString.call(f) === id);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/function/is-function.js\n// module id = 96\n// module chunks = 0","'use strict';\n\nmodule.exports = function () {};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/function/noop.js\n// module id = 97\n// module chunks = 0","'use strict';\n\nvar toString = Object.prototype.toString\n\n  , id = toString.call('');\n\nmodule.exports = function (x) {\n\treturn (typeof x === 'string') || (x && (typeof x === 'object') &&\n\t\t((x instanceof String) || (toString.call(x) === id))) || false;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/string/is-string.js\n// module id = 98\n// module chunks = 0","'use strict';\n\nvar callable = require('es5-ext/object/valid-callable');\n\nmodule.exports = function (userNormalizer) {\n\tvar normalizer;\n\tif (typeof userNormalizer === 'function') return { set: userNormalizer, get: userNormalizer };\n\tnormalizer = { get: callable(userNormalizer.get) };\n\tif (userNormalizer.set !== undefined) {\n\t\tnormalizer.set = callable(userNormalizer.set);\n\t\tnormalizer.delete = callable(userNormalizer.delete);\n\t\tnormalizer.clear = callable(userNormalizer.clear);\n\t\treturn normalizer;\n\t}\n\tnormalizer.set = normalizer.get;\n\treturn normalizer;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@resin/odata-to-abstract-sql/~/memoizee/lib/resolve-normalize.js\n// module id = 99\n// module chunks = 0","'use strict';\n\nmodule.exports = function (args) {\n\tvar id, i, length = args.length;\n\tif (!length) return '\\u0002';\n\tid = String(args[i = 0]);\n\twhile (--length) id += '\\u0001' + args[++i];\n\treturn id;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@resin/odata-to-abstract-sql/~/memoizee/normalizers/primitive.js\n// module id = 100\n// module chunks = 0","'use strict';\n\nmodule.exports = function (length) {\n\tif (!length) {\n\t\treturn function () { return ''; };\n\t}\n\treturn function (args) {\n\t\tvar id = String(args[0]), i = 0, l = length;\n\t\twhile (--l) { id += '\\u0001' + args[++i]; }\n\t\treturn id;\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@resin/odata-to-abstract-sql/~/memoizee/normalizers/get-primitive-fixed.js\n// module id = 101\n// module chunks = 0","'use strict';\n\nvar indexOf = require('es5-ext/array/#/e-index-of')\n  , create = Object.create;\n\nmodule.exports = function () {\n\tvar lastId = 0, map = [], cache = create(null);\n\treturn {\n\t\tget: function (args) {\n\t\t\tvar index = 0, set = map, i, length = args.length;\n\t\t\tif (length === 0) return set[length] || null;\n\t\t\tif ((set = set[length])) {\n\t\t\t\twhile (index < (length - 1)) {\n\t\t\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\t\t\tif (i === -1) return null;\n\t\t\t\t\tset = set[1][i];\n\t\t\t\t\t++index;\n\t\t\t\t}\n\t\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\t\tif (i === -1) return null;\n\t\t\t\treturn set[1][i] || null;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tset: function (args) {\n\t\t\tvar index = 0, set = map, i, length = args.length;\n\t\t\tif (length === 0) {\n\t\t\t\tset[length] = ++lastId;\n\t\t\t} else {\n\t\t\t\tif (!set[length]) {\n\t\t\t\t\tset[length] = [[], []];\n\t\t\t\t}\n\t\t\t\tset = set[length];\n\t\t\t\twhile (index < (length - 1)) {\n\t\t\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\t\t\tif (i === -1) {\n\t\t\t\t\t\ti = set[0].push(args[index]) - 1;\n\t\t\t\t\t\tset[1].push([[], []]);\n\t\t\t\t\t}\n\t\t\t\t\tset = set[1][i];\n\t\t\t\t\t++index;\n\t\t\t\t}\n\t\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\t\tif (i === -1) {\n\t\t\t\t\ti = set[0].push(args[index]) - 1;\n\t\t\t\t}\n\t\t\t\tset[1][i] = ++lastId;\n\t\t\t}\n\t\t\tcache[lastId] = args;\n\t\t\treturn lastId;\n\t\t},\n\t\tdelete: function (id) {\n\t\t\tvar index = 0, set = map, i, args = cache[id], length = args.length\n\t\t\t  , path = [];\n\t\t\tif (length === 0) {\n\t\t\t\tdelete set[length];\n\t\t\t} else if ((set = set[length])) {\n\t\t\t\twhile (index < (length - 1)) {\n\t\t\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\t\t\tif (i === -1) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tpath.push(set, i);\n\t\t\t\t\tset = set[1][i];\n\t\t\t\t\t++index;\n\t\t\t\t}\n\t\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\t\tif (i === -1) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tid = set[1][i];\n\t\t\t\tset[0].splice(i, 1);\n\t\t\t\tset[1].splice(i, 1);\n\t\t\t\twhile (!set[0].length && path.length) {\n\t\t\t\t\ti = path.pop();\n\t\t\t\t\tset = path.pop();\n\t\t\t\t\tset[0].splice(i, 1);\n\t\t\t\t\tset[1].splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdelete cache[id];\n\t\t},\n\t\tclear: function () {\n\t\t\tmap = [];\n\t\t\tcache = create(null);\n\t\t}\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@resin/odata-to-abstract-sql/~/memoizee/normalizers/get.js\n// module id = 102\n// module chunks = 0","'use strict';\n\nvar toPosInt = require('../../number/to-pos-integer')\n  , value    = require('../../object/valid-value')\n\n  , indexOf = Array.prototype.indexOf\n  , hasOwnProperty = Object.prototype.hasOwnProperty\n  , abs = Math.abs, floor = Math.floor;\n\nmodule.exports = function (searchElement/*, fromIndex*/) {\n\tvar i, l, fromIndex, val;\n\tif (searchElement === searchElement) { //jslint: ignore\n\t\treturn indexOf.apply(this, arguments);\n\t}\n\n\tl = toPosInt(value(this).length);\n\tfromIndex = arguments[1];\n\tif (isNaN(fromIndex)) fromIndex = 0;\n\telse if (fromIndex >= 0) fromIndex = floor(fromIndex);\n\telse fromIndex = toPosInt(this.length) - floor(abs(fromIndex));\n\n\tfor (i = fromIndex; i < l; ++i) {\n\t\tif (hasOwnProperty.call(this, i)) {\n\t\t\tval = this[i];\n\t\t\tif (val !== val) return i; //jslint: ignore\n\t\t}\n\t}\n\treturn -1;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/array/#/e-index-of.js\n// module id = 103\n// module chunks = 0","'use strict';\n\nvar indexOf = require('es5-ext/array/#/e-index-of');\n\nmodule.exports = function () {\n\tvar lastId = 0, argsMap = [], cache = [];\n\treturn {\n\t\tget: function (args) {\n\t\t\tvar index = indexOf.call(argsMap, args[0]);\n\t\t\treturn (index === -1) ? null : cache[index];\n\t\t},\n\t\tset: function (args) {\n\t\t\targsMap.push(args[0]);\n\t\t\tcache.push(++lastId);\n\t\t\treturn lastId;\n\t\t},\n\t\tdelete: function (id) {\n\t\t\tvar index = indexOf.call(cache, id);\n\t\t\tif (index !== -1) {\n\t\t\t\targsMap.splice(index, 1);\n\t\t\t\tcache.splice(index, 1);\n\t\t\t}\n\t\t},\n\t\tclear: function () {\n\t\t\targsMap = [];\n\t\t\tcache = [];\n\t\t}\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@resin/odata-to-abstract-sql/~/memoizee/normalizers/get-1.js\n// module id = 104\n// module chunks = 0","'use strict';\n\nvar indexOf = require('es5-ext/array/#/e-index-of')\n  , create = Object.create;\n\nmodule.exports = function (length) {\n\tvar lastId = 0, map = [[], []], cache = create(null);\n\treturn {\n\t\tget: function (args) {\n\t\t\tvar index = 0, set = map, i;\n\t\t\twhile (index < (length - 1)) {\n\t\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\t\tif (i === -1) return null;\n\t\t\t\tset = set[1][i];\n\t\t\t\t++index;\n\t\t\t}\n\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\tif (i === -1) return null;\n\t\t\treturn set[1][i] || null;\n\t\t},\n\t\tset: function (args) {\n\t\t\tvar index = 0, set = map, i;\n\t\t\twhile (index < (length - 1)) {\n\t\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\t\tif (i === -1) {\n\t\t\t\t\ti = set[0].push(args[index]) - 1;\n\t\t\t\t\tset[1].push([[], []]);\n\t\t\t\t}\n\t\t\t\tset = set[1][i];\n\t\t\t\t++index;\n\t\t\t}\n\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\tif (i === -1) {\n\t\t\t\ti = set[0].push(args[index]) - 1;\n\t\t\t}\n\t\t\tset[1][i] = ++lastId;\n\t\t\tcache[lastId] = args;\n\t\t\treturn lastId;\n\t\t},\n\t\tdelete: function (id) {\n\t\t\tvar index = 0, set = map, i, path = [], args = cache[id];\n\t\t\twhile (index < (length - 1)) {\n\t\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\t\tif (i === -1) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tpath.push(set, i);\n\t\t\t\tset = set[1][i];\n\t\t\t\t++index;\n\t\t\t}\n\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\tif (i === -1) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tid = set[1][i];\n\t\t\tset[0].splice(i, 1);\n\t\t\tset[1].splice(i, 1);\n\t\t\twhile (!set[0].length && path.length) {\n\t\t\t\ti = path.pop();\n\t\t\t\tset = path.pop();\n\t\t\t\tset[0].splice(i, 1);\n\t\t\t\tset[1].splice(i, 1);\n\t\t\t}\n\t\t\tdelete cache[id];\n\t\t},\n\t\tclear: function () {\n\t\t\tmap = [[], []];\n\t\t\tcache = create(null);\n\t\t}\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@resin/odata-to-abstract-sql/~/memoizee/normalizers/get-fixed.js\n// module id = 105\n// module chunks = 0","// Support for asynchronous functions\n\n'use strict';\n\nvar aFrom        = require('es5-ext/array/from')\n  , mixin        = require('es5-ext/object/mixin')\n  , defineLength = require('es5-ext/function/_define-length')\n  , nextTick     = require('next-tick')\n\n  , slice = Array.prototype.slice\n  , apply = Function.prototype.apply, create = Object.create\n  , hasOwnProperty = Object.prototype.hasOwnProperty;\n\nrequire('../lib/registered-extensions').async = function (tbi, conf) {\n\tvar waiting = create(null), cache = create(null)\n\t  , base = conf.memoized, original = conf.original\n\t  , currentCallback, currentContext, currentArgs;\n\n\t// Initial\n\tconf.memoized = defineLength(function (arg) {\n\t\tvar args = arguments, last = args[args.length - 1];\n\t\tif (typeof last === 'function') {\n\t\t\tcurrentCallback = last;\n\t\t\targs = slice.call(args, 0, -1);\n\t\t}\n\t\treturn base.apply(currentContext = this, currentArgs = args);\n\t}, base);\n\ttry { mixin(conf.memoized, base); } catch (ignore) {}\n\n\t// From cache (sync)\n\tconf.on('get', function (id) {\n\t\tvar cb, context, args;\n\t\tif (!currentCallback) return;\n\n\t\t// Unresolved\n\t\tif (waiting[id]) {\n\t\t\tif (typeof waiting[id] === 'function') waiting[id] = [waiting[id], currentCallback];\n\t\t\telse waiting[id].push(currentCallback);\n\t\t\tcurrentCallback = null;\n\t\t\treturn;\n\t\t}\n\n\t\t// Resolved, assure next tick invocation\n\t\tcb = currentCallback;\n\t\tcontext = currentContext;\n\t\targs = currentArgs;\n\t\tcurrentCallback = currentContext = currentArgs = null;\n\t\tnextTick(function () {\n\t\t\tvar data;\n\t\t\tif (hasOwnProperty.call(cache, id)) {\n\t\t\t\tdata = cache[id];\n\t\t\t\tconf.emit('getasync', id, args, context);\n\t\t\t\tapply.call(cb, data.context, data.args);\n\t\t\t} else {\n\t\t\t\t// Purged in a meantime, we shouldn't rely on cached value, recall\n\t\t\t\tcurrentCallback = cb;\n\t\t\t\tcurrentContext = context;\n\t\t\t\tcurrentArgs = args;\n\t\t\t\tbase.apply(context, args);\n\t\t\t}\n\t\t});\n\t});\n\n\t// Not from cache\n\tconf.original = function () {\n\t\tvar args, cb, origCb, result;\n\t\tif (!currentCallback) return apply.call(original, this, arguments);\n\t\targs = aFrom(arguments);\n\t\tcb = function self(err) {\n\t\t\tvar cb, args, id = self.id;\n\t\t\tif (id == null) {\n\t\t\t\t// Shouldn't happen, means async callback was called sync way\n\t\t\t\tnextTick(apply.bind(self, this, arguments));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tdelete self.id;\n\t\t\tcb = waiting[id];\n\t\t\tdelete waiting[id];\n\t\t\tif (!cb) {\n\t\t\t\t// Already processed,\n\t\t\t\t// outcome of race condition: asyncFn(1, cb), asyncFn.clear(), asyncFn(1, cb)\n\t\t\t\treturn;\n\t\t\t}\n\t\t\targs = aFrom(arguments);\n\t\t\tif (conf.has(id)) {\n\t\t\t\tif (err) {\n\t\t\t\t\tconf.delete(id);\n\t\t\t\t} else {\n\t\t\t\t\tcache[id] = { context: this, args: args };\n\t\t\t\t\tconf.emit('setasync', id, (typeof cb === 'function') ? 1 : cb.length);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof cb === 'function') {\n\t\t\t\tresult = apply.call(cb, this, args);\n\t\t\t} else {\n\t\t\t\tcb.forEach(function (cb) { result = apply.call(cb, this, args); }, this);\n\t\t\t}\n\t\t\treturn result;\n\t\t};\n\t\torigCb = currentCallback;\n\t\tcurrentCallback = currentContext = currentArgs = null;\n\t\targs.push(cb);\n\t\tresult = apply.call(original, this, args);\n\t\tcb.cb = origCb;\n\t\tcurrentCallback = cb;\n\t\treturn result;\n\t};\n\n\t// After not from cache call\n\tconf.on('set', function (id) {\n\t\tif (!currentCallback) {\n\t\t\tconf.delete(id);\n\t\t\treturn;\n\t\t}\n\t\tif (waiting[id]) {\n\t\t\t// Race condition: asyncFn(1, cb), asyncFn.clear(), asyncFn(1, cb)\n\t\t\tif (typeof waiting[id] === 'function') waiting[id] = [waiting[id], currentCallback.cb];\n\t\t\telse waiting[id].push(currentCallback.cb);\n\t\t} else {\n\t\t\twaiting[id] = currentCallback.cb;\n\t\t}\n\t\tdelete currentCallback.cb;\n\t\tcurrentCallback.id = id;\n\t\tcurrentCallback = null;\n\t});\n\n\t// On delete\n\tconf.on('delete', function (id) {\n\t\tvar result;\n\t\t// If false, we don't have value yet, so we assume that intention is not\n\t\t// to memoize this call. After value is obtained we don't cache it but\n\t\t// gracefully pass to callback\n\t\tif (hasOwnProperty.call(waiting, id)) return;\n\t\tif (!cache[id]) return;\n\t\tresult = cache[id];\n\t\tdelete cache[id];\n\t\tconf.emit('deleteasync', id, result);\n\t});\n\n\t// On clear\n\tconf.on('clear', function () {\n\t\tvar oldCache = cache;\n\t\tcache = create(null);\n\t\tconf.emit('clearasync', oldCache);\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@resin/odata-to-abstract-sql/~/memoizee/ext/async.js\n// module id = 106\n// module chunks = 0","'use strict';\n\nvar callable, byObserver;\n\ncallable = function (fn) {\n\tif (typeof fn !== 'function') throw new TypeError(fn + \" is not a function\");\n\treturn fn;\n};\n\nbyObserver = function (Observer) {\n\tvar node = document.createTextNode(''), queue, i = 0;\n\tnew Observer(function () {\n\t\tvar data;\n\t\tif (!queue) return;\n\t\tdata = queue;\n\t\tqueue = null;\n\t\tif (typeof data === 'function') {\n\t\t\tdata();\n\t\t\treturn;\n\t\t}\n\t\tdata.forEach(function (fn) { fn(); });\n\t}).observe(node, { characterData: true });\n\treturn function (fn) {\n\t\tcallable(fn);\n\t\tif (queue) {\n\t\t\tif (typeof queue === 'function') queue = [queue, fn];\n\t\t\telse queue.push(fn);\n\t\t\treturn;\n\t\t}\n\t\tqueue = fn;\n\t\tnode.data = (i = ++i % 2);\n\t};\n};\n\nmodule.exports = (function () {\n\t// Node.js\n\tif ((typeof process !== 'undefined') && process &&\n\t\t\t(typeof process.nextTick === 'function')) {\n\t\treturn process.nextTick;\n\t}\n\n\t// MutationObserver=\n\tif ((typeof document === 'object') && document) {\n\t\tif (typeof MutationObserver === 'function') {\n\t\t\treturn byObserver(MutationObserver);\n\t\t}\n\t\tif (typeof WebKitMutationObserver === 'function') {\n\t\t\treturn byObserver(WebKitMutationObserver);\n\t\t}\n\t}\n\n\t// W3C Draft\n\t// http://dvcs.w3.org/hg/webperf/raw-file/tip/specs/setImmediate/Overview.html\n\tif (typeof setImmediate === 'function') {\n\t\treturn function (cb) { setImmediate(callable(cb)); };\n\t}\n\n\t// Wide available standard\n\tif (typeof setTimeout === 'function') {\n\t\treturn function (cb) { setTimeout(callable(cb), 0); };\n\t}\n\n\treturn null;\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/next-tick/index.js\n// module id = 107\n// module chunks = 0","// Call dispose callback on each cache purge\n\n'use strict';\n\nvar callable   = require('es5-ext/object/valid-callable')\n  , forEach    = require('es5-ext/object/for-each')\n  , extensions = require('../lib/registered-extensions')\n\n  , slice = Array.prototype.slice, apply = Function.prototype.apply;\n\nextensions.dispose = function (dispose, conf, options) {\n\tvar del;\n\tcallable(dispose);\n\tif (options.async && extensions.async) {\n\t\tconf.on('deleteasync', del = function (id, result) {\n\t\t\tapply.call(dispose, null, slice.call(result.args, 1));\n\t\t});\n\t\tconf.on('clearasync', function (cache) {\n\t\t\tforEach(cache, function (result, id) { del(id, result); });\n\t\t});\n\t\treturn;\n\t}\n\tconf.on('delete', del = function (id, result) { dispose(result); });\n\tconf.on('clear', function (cache) {\n\t\tforEach(cache, function (result, id) { del(id, result); });\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@resin/odata-to-abstract-sql/~/memoizee/ext/dispose.js\n// module id = 108\n// module chunks = 0","// Timeout cached values\n\n'use strict';\n\nvar aFrom      = require('es5-ext/array/from')\n  , noop       = require('es5-ext/function/noop')\n  , forEach    = require('es5-ext/object/for-each')\n  , timeout    = require('timers-ext/valid-timeout')\n  , extensions = require('../lib/registered-extensions')\n\n  , max = Math.max, min = Math.min, create = Object.create;\n\nextensions.maxAge = function (maxAge, conf, options) {\n\tvar timeouts, postfix, preFetchAge, preFetchTimeouts;\n\n\tmaxAge = timeout(maxAge);\n\tif (!maxAge) return;\n\n\ttimeouts = create(null);\n\tpostfix = (options.async && extensions.async) ? 'async' : '';\n\tconf.on('set' + postfix, function (id) {\n\t\ttimeouts[id] = setTimeout(function () { conf.delete(id); }, maxAge);\n\t\tif (!preFetchTimeouts) return;\n\t\tif (preFetchTimeouts[id]) clearTimeout(preFetchTimeouts[id]);\n\t\tpreFetchTimeouts[id] = setTimeout(function () {\n\t\t\tdelete preFetchTimeouts[id];\n\t\t}, preFetchAge);\n\t});\n\tconf.on('delete' + postfix, function (id) {\n\t\tclearTimeout(timeouts[id]);\n\t\tdelete timeouts[id];\n\t\tif (!preFetchTimeouts) return;\n\t\tclearTimeout(preFetchTimeouts[id]);\n\t\tdelete preFetchTimeouts[id];\n\t});\n\n\tif (options.preFetch) {\n\t\tif ((options.preFetch === true) || isNaN(options.preFetch)) {\n\t\t\tpreFetchAge = 0.333;\n\t\t} else {\n\t\t\tpreFetchAge = max(min(Number(options.preFetch), 1), 0);\n\t\t}\n\t\tif (preFetchAge) {\n\t\t\tpreFetchTimeouts = {};\n\t\t\tpreFetchAge = (1 - preFetchAge) * maxAge;\n\t\t\tconf.on('get' + postfix, function (id, args, context) {\n\t\t\t\tif (!preFetchTimeouts[id]) {\n\t\t\t\t\tpreFetchTimeouts[id] =  setTimeout(function () {\n\t\t\t\t\t\tdelete preFetchTimeouts[id];\n\t\t\t\t\t\tconf.delete(id);\n\t\t\t\t\t\tif (options.async) {\n\t\t\t\t\t\t\targs = aFrom(args);\n\t\t\t\t\t\t\targs.push(noop);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconf.memoized.apply(context, args);\n\t\t\t\t\t}, 0);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tconf.on('clear' + postfix, function () {\n\t\tforEach(timeouts, function (id) { clearTimeout(id); });\n\t\ttimeouts = {};\n\t\tif (preFetchTimeouts) {\n\t\t\tforEach(preFetchTimeouts, function (id) { clearTimeout(id); });\n\t\t\tpreFetchTimeouts = {};\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@resin/odata-to-abstract-sql/~/memoizee/ext/max-age.js\n// module id = 109\n// module chunks = 0","'use strict';\n\nvar toPosInt   = require('es5-ext/number/to-pos-integer')\n  , maxTimeout = require('./max-timeout');\n\nmodule.exports = function (value) {\n\tvalue = toPosInt(value);\n\tif (value > maxTimeout) throw new TypeError(value + \" exceeds maximum possible timeout\");\n\treturn value;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/timers-ext/valid-timeout.js\n// module id = 110\n// module chunks = 0","'use strict';\n\nmodule.exports = 2147483647;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/timers-ext/max-timeout.js\n// module id = 111\n// module chunks = 0","// Limit cache size, LRU (least recently used) algorithm.\n\n'use strict';\n\nvar toPosInteger = require('es5-ext/number/to-pos-integer')\n  , lruQueue     = require('lru-queue')\n  , extensions   = require('../lib/registered-extensions');\n\nextensions.max = function (max, conf, options) {\n\tvar postfix, queue, hit;\n\n\tmax = toPosInteger(max);\n\tif (!max) return;\n\n\tqueue = lruQueue(max);\n\tpostfix = (options.async && extensions.async) ? 'async' : '';\n\n\tconf.on('set' + postfix, hit = function (id) {\n\t\tid = queue.hit(id);\n\t\tif (id === undefined) return;\n\t\tconf.delete(id);\n\t});\n\tconf.on('get' + postfix, hit);\n\tconf.on('delete' + postfix, queue.delete);\n\tconf.on('clear' + postfix, queue.clear);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@resin/odata-to-abstract-sql/~/memoizee/ext/max.js\n// module id = 112\n// module chunks = 0","'use strict';\n\nvar toPosInt = require('es5-ext/number/to-pos-integer')\n\n  , create = Object.create, hasOwnProperty = Object.prototype.hasOwnProperty;\n\nmodule.exports = function (limit) {\n\tvar size = 0, base = 1, queue = create(null), map = create(null), index = 0, del;\n\tlimit = toPosInt(limit);\n\treturn {\n\t\thit: function (id) {\n\t\t\tvar oldIndex = map[id], nuIndex = ++index;\n\t\t\tqueue[nuIndex] = id;\n\t\t\tmap[id] = nuIndex;\n\t\t\tif (!oldIndex) {\n\t\t\t\t++size;\n\t\t\t\tif (size <= limit) return;\n\t\t\t\tid = queue[base];\n\t\t\t\tdel(id);\n\t\t\t\treturn id;\n\t\t\t}\n\t\t\tdelete queue[oldIndex];\n\t\t\tif (base !== oldIndex) return;\n\t\t\twhile (!hasOwnProperty.call(queue, ++base)) continue; //jslint: skip\n\t\t},\n\t\tdelete: del = function (id) {\n\t\t\tvar oldIndex = map[id];\n\t\t\tif (!oldIndex) return;\n\t\t\tdelete queue[oldIndex];\n\t\t\tdelete map[id];\n\t\t\t--size;\n\t\t\tif (base !== oldIndex) return;\n\t\t\tif (!size) {\n\t\t\t\tindex = 0;\n\t\t\t\tbase = 1;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\twhile (!hasOwnProperty.call(queue, ++base)) continue; //jslint: skip\n\t\t},\n\t\tclear: function () {\n\t\t\tsize = 0;\n\t\t\tbase = 1;\n\t\t\tqueue = create(null);\n\t\t\tmap = create(null);\n\t\t\tindex = 0;\n\t\t}\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lru-queue/index.js\n// module id = 113\n// module chunks = 0","// Reference counter, useful for garbage collector like functionality\n\n'use strict';\n\nvar d          = require('d')\n  , extensions = require('../lib/registered-extensions')\n\n  , create = Object.create, defineProperties = Object.defineProperties;\n\nextensions.refCounter = function (ignore, conf, options) {\n\tvar cache, postfix;\n\n\tcache = create(null);\n\tpostfix = (options.async && extensions.async) ? 'async' : '';\n\n\tconf.on('set' + postfix, function (id, length) { cache[id] = length || 1; });\n\tconf.on('get' + postfix, function (id) { ++cache[id]; });\n\tconf.on('delete' + postfix, function (id) { delete cache[id]; });\n\tconf.on('clear' + postfix, function () { cache = {}; });\n\n\tdefineProperties(conf.memoized, {\n\t\tdeleteRef: d(function () {\n\t\t\tvar id = conf.get(arguments);\n\t\t\tif (id === null) return null;\n\t\t\tif (!cache[id]) return null;\n\t\t\tif (!--cache[id]) {\n\t\t\t\tconf.delete(id);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}),\n\t\tgetRefCount: d(function () {\n\t\t\tvar id = conf.get(arguments);\n\t\t\tif (id === null) return 0;\n\t\t\tif (!cache[id]) return 0;\n\t\t\treturn cache[id];\n\t\t})\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@resin/odata-to-abstract-sql/~/memoizee/ext/ref-counter.js\n// module id = 114\n// module chunks = 0","'use strict';\n\nvar normalizeOpts = require('es5-ext/object/normalize-options')\n  , resolveLength = require('./lib/resolve-length')\n  , plain         = require('./plain');\n\nmodule.exports = function (fn/*, options*/) {\n\tvar options = normalizeOpts(arguments[1]), length;\n\n\tif (!options.normalizer) {\n\t\tlength = options.length = resolveLength(options.length, fn.length, options.async);\n\t\tif (length !== 0) {\n\t\t\tif (options.primitive) {\n\t\t\t\tif (length === false) {\n\t\t\t\t\toptions.normalizer = require('./normalizers/primitive');\n\t\t\t\t} else if (length > 1) {\n\t\t\t\t\toptions.normalizer = require('./normalizers/get-primitive-fixed')(length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (length === false) options.normalizer = require('./normalizers/get')();\n\t\t\t\telse if (length === 1) options.normalizer = require('./normalizers/get-1')();\n\t\t\t\telse options.normalizer = require('./normalizers/get-fixed')(length);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Assure extensions\n\tif (options.async) require('./ext/async');\n\tif (options.promise) require('./ext/promise');\n\tif (options.dispose) require('./ext/dispose');\n\tif (options.maxAge) require('./ext/max-age');\n\tif (options.max) require('./ext/max');\n\tif (options.refCounter) require('./ext/ref-counter');\n\n\treturn plain(fn, options);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/memoizee/index.js\n// module id = 115\n// module chunks = 0","'use strict';\n\nvar callable      = require('es5-ext/object/valid-callable')\n  , forEach       = require('es5-ext/object/for-each')\n  , extensions    = require('./lib/registered-extensions')\n  , configure     = require('./lib/configure-map')\n  , resolveLength = require('./lib/resolve-length')\n\n  , hasOwnProperty = Object.prototype.hasOwnProperty;\n\nmodule.exports = function self(fn/*, options */) {\n\tvar options, length, conf;\n\n\tcallable(fn);\n\toptions = Object(arguments[1]);\n\n\tif (options.async && options.promise) {\n\t\tthrow new Error(\"Options 'async' and 'promise' cannot be used together\");\n\t}\n\n\t// Do not memoize already memoized function\n\tif (hasOwnProperty.call(fn, '__memoized__') && !options.force) return fn;\n\n\t// Resolve length;\n\tlength = resolveLength(options.length, fn.length, options.async && extensions.async);\n\n\t// Configure cache map\n\tconf = configure(fn, length, options);\n\n\t// Bind eventual extensions\n\tforEach(extensions, function (fn, name) {\n\t\tif (options[name]) fn(options[name], conf, options);\n\t});\n\n\tif (self.__profiler__) self.__profiler__(conf);\n\n\tconf.updateEnv();\n\treturn conf.memoized;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/memoizee/plain.js\n// module id = 117\n// module chunks = 0","'use strict';\n\nvar customError      = require('es5-ext/error/custom')\n  , defineLength     = require('es5-ext/function/_define-length')\n  , d                = require('d')\n  , ee               = require('event-emitter').methods\n  , resolveResolve   = require('./resolve-resolve')\n  , resolveNormalize = require('./resolve-normalize')\n\n  , apply = Function.prototype.apply, call = Function.prototype.call\n  , create = Object.create, hasOwnProperty = Object.prototype.hasOwnProperty\n  , defineProperties = Object.defineProperties\n  , on = ee.on, emit = ee.emit;\n\nmodule.exports = function (original, length, options) {\n\tvar cache = create(null), conf, memLength, get, set, del, clear, extDel,\n\t\textGet, extHas, normalizer, getListeners, setListeners, deleteListeners, memoized, resolve;\n\tif (length !== false) memLength = length;\n\telse if (isNaN(original.length)) memLength = 1;\n\telse memLength = original.length;\n\n\tif (options.normalizer) {\n\t\tnormalizer = resolveNormalize(options.normalizer);\n\t\tget = normalizer.get;\n\t\tset = normalizer.set;\n\t\tdel = normalizer.delete;\n\t\tclear = normalizer.clear;\n\t}\n\tif (options.resolvers != null) resolve = resolveResolve(options.resolvers);\n\n\tif (get) {\n\t\tmemoized = defineLength(function (arg) {\n\t\t\tvar id, result, args = arguments;\n\t\t\tif (resolve) args = resolve(args);\n\t\t\tid = get(args);\n\t\t\tif (id !== null) {\n\t\t\t\tif (hasOwnProperty.call(cache, id)) {\n\t\t\t\t\tif (getListeners) conf.emit('get', id, args, this);\n\t\t\t\t\treturn cache[id];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (args.length === 1) result = call.call(original, this, args[0]);\n\t\t\telse result = apply.call(original, this, args);\n\t\t\tif (id === null) {\n\t\t\t\tid = get(args);\n\t\t\t\tif (id !== null) throw customError(\"Circular invocation\", 'CIRCULAR_INVOCATION');\n\t\t\t\tid = set(args);\n\t\t\t} else if (hasOwnProperty.call(cache, id)) {\n\t\t\t\tthrow customError(\"Circular invocation\", 'CIRCULAR_INVOCATION');\n\t\t\t}\n\t\t\tcache[id] = result;\n\t\t\tif (setListeners) conf.emit('set', id, null, result);\n\t\t\treturn result;\n\t\t}, memLength);\n\t} else if (length === 0) {\n\t\tmemoized = function () {\n\t\t\tvar result;\n\t\t\tif (hasOwnProperty.call(cache, 'data')) {\n\t\t\t\tif (getListeners) conf.emit('get', 'data', arguments, this);\n\t\t\t\treturn cache.data;\n\t\t\t}\n\t\t\tif (!arguments.length) result = call.call(original, this);\n\t\t\telse result = apply.call(original, this, arguments);\n\t\t\tif (hasOwnProperty.call(cache, 'data')) {\n\t\t\t\tthrow customError(\"Circular invocation\", 'CIRCULAR_INVOCATION');\n\t\t\t}\n\t\t\tcache.data = result;\n\t\t\tif (setListeners) conf.emit('set', 'data', null, result);\n\t\t\treturn result;\n\t\t};\n\t} else {\n\t\tmemoized = function (arg) {\n\t\t\tvar result, args = arguments, id;\n\t\t\tif (resolve) args = resolve(arguments);\n\t\t\tid = String(args[0]);\n\t\t\tif (hasOwnProperty.call(cache, id)) {\n\t\t\t\tif (getListeners) conf.emit('get', id, args, this);\n\t\t\t\treturn cache[id];\n\t\t\t}\n\t\t\tif (args.length === 1) result = call.call(original, this, args[0]);\n\t\t\telse result = apply.call(original, this, args);\n\t\t\tif (hasOwnProperty.call(cache, id)) {\n\t\t\t\tthrow customError(\"Circular invocation\", 'CIRCULAR_INVOCATION');\n\t\t\t}\n\t\t\tcache[id] = result;\n\t\t\tif (setListeners) conf.emit('set', id, null, result);\n\t\t\treturn result;\n\t\t};\n\t}\n\tconf = {\n\t\toriginal: original,\n\t\tmemoized: memoized,\n\t\tget: function (args) {\n\t\t\tif (resolve) args = resolve(args);\n\t\t\tif (get) return get(args);\n\t\t\treturn String(args[0]);\n\t\t},\n\t\thas: function (id) { return hasOwnProperty.call(cache, id); },\n\t\tdelete: function (id) {\n\t\t\tvar result;\n\t\t\tif (!hasOwnProperty.call(cache, id)) return;\n\t\t\tif (del) del(id);\n\t\t\tresult = cache[id];\n\t\t\tdelete cache[id];\n\t\t\tif (deleteListeners) conf.emit('delete', id, result);\n\t\t},\n\t\tclear: function () {\n\t\t\tvar oldCache = cache;\n\t\t\tif (clear) clear();\n\t\t\tcache = create(null);\n\t\t\tconf.emit('clear', oldCache);\n\t\t},\n\t\ton: function (type, listener) {\n\t\t\tif (type === 'get') getListeners = true;\n\t\t\telse if (type === 'set') setListeners = true;\n\t\t\telse if (type === 'delete') deleteListeners = true;\n\t\t\treturn on.call(this, type, listener);\n\t\t},\n\t\temit: emit,\n\t\tupdateEnv: function () { original = conf.original; }\n\t};\n\tif (get) {\n\t\textDel = defineLength(function (arg) {\n\t\t\tvar id, args = arguments;\n\t\t\tif (resolve) args = resolve(args);\n\t\t\tid = get(args);\n\t\t\tif (id === null) return;\n\t\t\tconf.delete(id);\n\t\t}, memLength);\n\t} else if (length === 0) {\n\t\textDel = function () { return conf.delete('data'); };\n\t} else {\n\t\textDel = function (arg) {\n\t\t\tif (resolve) arg = resolve(arguments)[0];\n\t\t\treturn conf.delete(arg);\n\t\t};\n\t}\n\textGet = defineLength(function () {\n\t\tvar id, args = arguments;\n\t\tif (resolve) args = resolve(args);\n\t\tid = get(args);\n\t\treturn cache[id];\n\t});\n\textHas = defineLength(function () {\n\t\tvar id, args = arguments;\n\t\tif (resolve) args = resolve(args);\n\t\tid = get(args);\n\t\tif (id === null) return false;\n\t\treturn conf.has(id);\n\t});\n\tdefineProperties(memoized, {\n\t\t__memoized__: d(true),\n\t\tdelete: d(extDel),\n\t\tclear: d(conf.clear),\n\t\t_get: d(extGet),\n\t\t_has: d(extHas)\n\t});\n\treturn conf;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/memoizee/lib/configure-map.js\n// module id = 119\n// module chunks = 0","'use strict';\n\nvar callable = require('es5-ext/object/valid-callable');\n\nmodule.exports = function (userNormalizer) {\n\tvar normalizer;\n\tif (typeof userNormalizer === 'function') return { set: userNormalizer, get: userNormalizer };\n\tnormalizer = { get: callable(userNormalizer.get) };\n\tif (userNormalizer.set !== undefined) {\n\t\tnormalizer.set = callable(userNormalizer.set);\n\t\tif (userNormalizer.delete) normalizer.delete = callable(userNormalizer.delete);\n\t\tif (userNormalizer.clear) normalizer.clear = callable(userNormalizer.clear);\n\t\treturn normalizer;\n\t}\n\tnormalizer.set = normalizer.get;\n\treturn normalizer;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/memoizee/lib/resolve-normalize.js\n// module id = 122\n// module chunks = 0","// Support for asynchronous functions\n\n'use strict';\n\nvar aFrom        = require('es5-ext/array/from')\n  , objectMap    = require('es5-ext/object/map')\n  , mixin        = require('es5-ext/object/mixin')\n  , defineLength = require('es5-ext/function/_define-length')\n  , nextTick     = require('next-tick')\n\n  , slice = Array.prototype.slice\n  , apply = Function.prototype.apply, create = Object.create\n  , hasOwnProperty = Object.prototype.hasOwnProperty;\n\nrequire('../lib/registered-extensions').async = function (tbi, conf) {\n\tvar waiting = create(null), cache = create(null)\n\t  , base = conf.memoized, original = conf.original\n\t  , currentCallback, currentContext, currentArgs;\n\n\t// Initial\n\tconf.memoized = defineLength(function (arg) {\n\t\tvar args = arguments, last = args[args.length - 1];\n\t\tif (typeof last === 'function') {\n\t\t\tcurrentCallback = last;\n\t\t\targs = slice.call(args, 0, -1);\n\t\t}\n\t\treturn base.apply(currentContext = this, currentArgs = args);\n\t}, base);\n\ttry { mixin(conf.memoized, base); } catch (ignore) {}\n\n\t// From cache (sync)\n\tconf.on('get', function (id) {\n\t\tvar cb, context, args;\n\t\tif (!currentCallback) return;\n\n\t\t// Unresolved\n\t\tif (waiting[id]) {\n\t\t\tif (typeof waiting[id] === 'function') waiting[id] = [waiting[id], currentCallback];\n\t\t\telse waiting[id].push(currentCallback);\n\t\t\tcurrentCallback = null;\n\t\t\treturn;\n\t\t}\n\n\t\t// Resolved, assure next tick invocation\n\t\tcb = currentCallback;\n\t\tcontext = currentContext;\n\t\targs = currentArgs;\n\t\tcurrentCallback = currentContext = currentArgs = null;\n\t\tnextTick(function () {\n\t\t\tvar data;\n\t\t\tif (hasOwnProperty.call(cache, id)) {\n\t\t\t\tdata = cache[id];\n\t\t\t\tconf.emit('getasync', id, args, context);\n\t\t\t\tapply.call(cb, data.context, data.args);\n\t\t\t} else {\n\t\t\t\t// Purged in a meantime, we shouldn't rely on cached value, recall\n\t\t\t\tcurrentCallback = cb;\n\t\t\t\tcurrentContext = context;\n\t\t\t\tcurrentArgs = args;\n\t\t\t\tbase.apply(context, args);\n\t\t\t}\n\t\t});\n\t});\n\n\t// Not from cache\n\tconf.original = function () {\n\t\tvar args, cb, origCb, result;\n\t\tif (!currentCallback) return apply.call(original, this, arguments);\n\t\targs = aFrom(arguments);\n\t\tcb = function self(err) {\n\t\t\tvar cb, args, id = self.id;\n\t\t\tif (id == null) {\n\t\t\t\t// Shouldn't happen, means async callback was called sync way\n\t\t\t\tnextTick(apply.bind(self, this, arguments));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tdelete self.id;\n\t\t\tcb = waiting[id];\n\t\t\tdelete waiting[id];\n\t\t\tif (!cb) {\n\t\t\t\t// Already processed,\n\t\t\t\t// outcome of race condition: asyncFn(1, cb), asyncFn.clear(), asyncFn(1, cb)\n\t\t\t\treturn;\n\t\t\t}\n\t\t\targs = aFrom(arguments);\n\t\t\tif (conf.has(id)) {\n\t\t\t\tif (err) {\n\t\t\t\t\tconf.delete(id);\n\t\t\t\t} else {\n\t\t\t\t\tcache[id] = { context: this, args: args };\n\t\t\t\t\tconf.emit('setasync', id, (typeof cb === 'function') ? 1 : cb.length);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof cb === 'function') {\n\t\t\t\tresult = apply.call(cb, this, args);\n\t\t\t} else {\n\t\t\t\tcb.forEach(function (cb) { result = apply.call(cb, this, args); }, this);\n\t\t\t}\n\t\t\treturn result;\n\t\t};\n\t\torigCb = currentCallback;\n\t\tcurrentCallback = currentContext = currentArgs = null;\n\t\targs.push(cb);\n\t\tresult = apply.call(original, this, args);\n\t\tcb.cb = origCb;\n\t\tcurrentCallback = cb;\n\t\treturn result;\n\t};\n\n\t// After not from cache call\n\tconf.on('set', function (id) {\n\t\tif (!currentCallback) {\n\t\t\tconf.delete(id);\n\t\t\treturn;\n\t\t}\n\t\tif (waiting[id]) {\n\t\t\t// Race condition: asyncFn(1, cb), asyncFn.clear(), asyncFn(1, cb)\n\t\t\tif (typeof waiting[id] === 'function') waiting[id] = [waiting[id], currentCallback.cb];\n\t\t\telse waiting[id].push(currentCallback.cb);\n\t\t} else {\n\t\t\twaiting[id] = currentCallback.cb;\n\t\t}\n\t\tdelete currentCallback.cb;\n\t\tcurrentCallback.id = id;\n\t\tcurrentCallback = null;\n\t});\n\n\t// On delete\n\tconf.on('delete', function (id) {\n\t\tvar result;\n\t\t// If false, we don't have value yet, so we assume that intention is not\n\t\t// to memoize this call. After value is obtained we don't cache it but\n\t\t// gracefully pass to callback\n\t\tif (hasOwnProperty.call(waiting, id)) return;\n\t\tif (!cache[id]) return;\n\t\tresult = cache[id];\n\t\tdelete cache[id];\n\t\tconf.emit('deleteasync', id, slice.call(result.args, 1));\n\t});\n\n\t// On clear\n\tconf.on('clear', function () {\n\t\tvar oldCache = cache;\n\t\tcache = create(null);\n\t\tconf.emit('clearasync', objectMap(oldCache, function (data) {\n\t\t\treturn slice.call(data.args, 1);\n\t\t}));\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/memoizee/ext/async.js\n// module id = 128\n// module chunks = 0","'use strict';\n\nvar callable = require('./valid-callable')\n  , forEach  = require('./for-each')\n\n  , call = Function.prototype.call;\n\nmodule.exports = function (obj, cb/*, thisArg*/) {\n\tvar o = {}, thisArg = arguments[2];\n\tcallable(cb);\n\tforEach(obj, function (value, key, obj, index) {\n\t\to[key] = call.call(cb, thisArg, value, key, obj, index);\n\t});\n\treturn o;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/object/map.js\n// module id = 129\n// module chunks = 0","'use strict';\n\nvar callable, byObserver;\n\ncallable = function (fn) {\n\tif (typeof fn !== 'function') throw new TypeError(fn + \" is not a function\");\n\treturn fn;\n};\n\nbyObserver = function (Observer) {\n\tvar node = document.createTextNode(''), queue, currentQueue, i = 0;\n\tnew Observer(function () {\n\t\tvar callback;\n\t\tif (!queue) {\n\t\t\tif (!currentQueue) return;\n\t\t\tqueue = currentQueue;\n\t\t} else if (currentQueue) {\n\t\t\tqueue = currentQueue.concat(queue);\n\t\t}\n\t\tcurrentQueue = queue;\n\t\tqueue = null;\n\t\tif (typeof currentQueue === 'function') {\n\t\t\tcallback = currentQueue;\n\t\t\tcurrentQueue = null;\n\t\t\tcallback();\n\t\t\treturn;\n\t\t}\n\t\tnode.data = (i = ++i % 2); // Invoke other batch, to handle leftover callbacks in case of crash\n\t\twhile (currentQueue) {\n\t\t\tcallback = currentQueue.shift();\n\t\t\tif (!currentQueue.length) currentQueue = null;\n\t\t\tcallback();\n\t\t}\n\t}).observe(node, { characterData: true });\n\treturn function (fn) {\n\t\tcallable(fn);\n\t\tif (queue) {\n\t\t\tif (typeof queue === 'function') queue = [queue, fn];\n\t\t\telse queue.push(fn);\n\t\t\treturn;\n\t\t}\n\t\tqueue = fn;\n\t\tnode.data = (i = ++i % 2);\n\t};\n};\n\nmodule.exports = (function () {\n\t// Node.js\n\tif ((typeof process === 'object') && process && (typeof process.nextTick === 'function')) {\n\t\treturn process.nextTick;\n\t}\n\n\t// MutationObserver\n\tif ((typeof document === 'object') && document) {\n\t\tif (typeof MutationObserver === 'function') return byObserver(MutationObserver);\n\t\tif (typeof WebKitMutationObserver === 'function') return byObserver(WebKitMutationObserver);\n\t}\n\n\t// W3C Draft\n\t// http://dvcs.w3.org/hg/webperf/raw-file/tip/specs/setImmediate/Overview.html\n\tif (typeof setImmediate === 'function') {\n\t\treturn function (cb) { setImmediate(callable(cb)); };\n\t}\n\n\t// Wide available standard\n\tif ((typeof setTimeout === 'function') || (typeof setTimeout === 'object')) {\n\t\treturn function (cb) { setTimeout(callable(cb), 0); };\n\t}\n\n\treturn null;\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/memoizee/~/next-tick/index.js\n// module id = 130\n// module chunks = 0","// Support for functions returning promise\n\n'use strict';\n\nvar objectMap = require('es5-ext/object/map')\n  , isPromise = require('is-promise')\n  , nextTick  = require('next-tick')\n\n  , create = Object.create, hasOwnProperty = Object.prototype.hasOwnProperty;\n\nrequire('../lib/registered-extensions').promise = function (mode, conf) {\n\tvar waiting = create(null), cache = create(null), promises = create(null);\n\n\t// After not from cache call\n\tconf.on('set', function (id, ignore, promise) {\n\t\tvar isFailed = false;\n\n\t\tif (!isPromise(promise)) {\n\t\t\t// Non promise result\n\t\t\tcache[id] = promise;\n\t\t\tconf.emit('setasync', id, 1);\n\t\t\treturn;\n\t\t}\n\t\twaiting[id] = 1;\n\t\tpromises[id] = promise;\n\t\tvar onSuccess = function (result) {\n\t\t\tvar count = waiting[id];\n\t\t\tif (isFailed) {\n\t\t\t\tthrow new Error(\"Memoizee error: Promise resolved with both failure and success,\" +\n\t\t\t\t\t\" this can be result of unordered done & finally resolution.\\n\" +\n\t\t\t\t\t\"Instead of `promise: true` consider configuring memoization via `promise: 'then'` or \" +\n\t\t\t\t\t\"`promise: 'done'\");\n\t\t\t}\n\t\t\tif (!count) return; // deleted from cache before resolved\n\t\t\tdelete waiting[id];\n\t\t\tcache[id] = result;\n\t\t\tconf.emit('setasync', id, count);\n\t\t};\n\t\tvar onFailure = function () {\n\t\t\tisFailed = true;\n\t\t\tif (!waiting[id]) return; // deleted from cache (or succeed in case of finally)\n\t\t\tdelete waiting[id];\n\t\t\tdelete promises[id];\n\t\t\tconf.delete(id);\n\t\t};\n\n\t\tif ((mode !== 'then') && (typeof promise.done === 'function')) {\n\t\t\t// Optimal promise resolution\n\t\t\tif ((mode !== 'done') && (typeof promise.finally === 'function')) {\n\t\t\t\t// Use 'finally' to not register error handling (still proper behavior is subject to\n\t\t\t\t// used implementation, if library throws unconditionally even on handled errors\n\t\t\t\t// switch to 'then' mode)\n\t\t\t\tpromise.done(onSuccess);\n\t\t\t\tpromise.finally(onFailure);\n\t\t\t} else {\n\t\t\t\t// With no `finally` side effect is that it mutes any eventual\n\t\t\t\t// \"Unhandled error\" events on returned promise\n\t\t\t\tpromise.done(onSuccess, onFailure);\n\t\t\t}\n\t\t} else {\n\t\t\t// With no `done` it's best we can do.\n\t\t\t// Side effect is that it mutes any eventual \"Unhandled error\" events on returned promise\n\t\t\tpromise.then(function (result) {\n\t\t\t\tnextTick(onSuccess.bind(this, result));\n\t\t\t}, function () {\n\t\t\t\tnextTick(onFailure);\n\t\t\t});\n\t\t}\n\t});\n\n\t// From cache (sync)\n\tconf.on('get', function (id, args, context) {\n\t\tvar promise;\n\t\tif (waiting[id]) {\n\t\t\t++waiting[id]; // Still waiting\n\t\t\treturn;\n\t\t}\n\t\tpromise = promises[id];\n\t\tvar emit = function () { conf.emit('getasync', id, args, context); };\n\t\tif (isPromise(promise)) {\n\t\t\tif (typeof promise.done === 'function') promise.done(emit);\n\t\t\telse promise.then(function () { nextTick(emit); });\n\t\t} else {\n\t\t\temit();\n\t\t}\n\t});\n\n\t// On delete\n\tconf.on('delete', function (id) {\n\t\tdelete promises[id];\n\t\tif (waiting[id]) {\n\t\t\tdelete waiting[id];\n\t\t\treturn; // Not yet resolved\n\t\t}\n\t\tif (!hasOwnProperty.call(cache, id)) return;\n\t\tvar result = cache[id];\n\t\tdelete cache[id];\n\t\tconf.emit('deleteasync', id, [result]);\n\t});\n\n\t// On clear\n\tconf.on('clear', function () {\n\t\tvar oldCache = cache;\n\t\tcache = create(null);\n\t\twaiting = create(null);\n\t\tpromises = create(null);\n\t\tconf.emit('clearasync', objectMap(oldCache, function (data) { return [data]; }));\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/memoizee/ext/promise.js\n// module id = 131\n// module chunks = 0","module.exports = isPromise;\n\nfunction isPromise(obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/is-promise/index.js\n// module id = 132\n// module chunks = 0","// Call dispose callback on each cache purge\n\n'use strict';\n\nvar callable   = require('es5-ext/object/valid-callable')\n  , forEach    = require('es5-ext/object/for-each')\n  , extensions = require('../lib/registered-extensions')\n\n  , apply = Function.prototype.apply;\n\nextensions.dispose = function (dispose, conf, options) {\n\tvar del;\n\tcallable(dispose);\n\tif ((options.async && extensions.async) || (options.promise && extensions.promise)) {\n\t\tconf.on('deleteasync', del = function (id, resultArray) {\n\t\t\tapply.call(dispose, null, resultArray);\n\t\t});\n\t\tconf.on('clearasync', function (cache) {\n\t\t\tforEach(cache, function (result, id) { del(id, result); });\n\t\t});\n\t\treturn;\n\t}\n\tconf.on('delete', del = function (id, result) { dispose(result); });\n\tconf.on('clear', function (cache) {\n\t\tforEach(cache, function (result, id) { del(id, result); });\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/memoizee/ext/dispose.js\n// module id = 133\n// module chunks = 0","// Timeout cached values\n\n'use strict';\n\nvar aFrom      = require('es5-ext/array/from')\n  , forEach    = require('es5-ext/object/for-each')\n  , nextTick   = require('next-tick')\n  , isPromise  = require('is-promise')\n  , timeout    = require('timers-ext/valid-timeout')\n  , extensions = require('../lib/registered-extensions')\n\n  , noop = Function.prototype\n  , max = Math.max, min = Math.min, create = Object.create;\n\nextensions.maxAge = function (maxAge, conf, options) {\n\tvar timeouts, postfix, preFetchAge, preFetchTimeouts;\n\n\tmaxAge = timeout(maxAge);\n\tif (!maxAge) return;\n\n\ttimeouts = create(null);\n\tpostfix = ((options.async && extensions.async) || (options.promise && extensions.promise))\n\t\t? 'async' : '';\n\tconf.on('set' + postfix, function (id) {\n\t\ttimeouts[id] = setTimeout(function () { conf.delete(id); }, maxAge);\n\t\tif (!preFetchTimeouts) return;\n\t\tif (preFetchTimeouts[id]) {\n\t\t\tif (preFetchTimeouts[id] !== 'nextTick') clearTimeout(preFetchTimeouts[id]);\n\t\t}\n\t\tpreFetchTimeouts[id] = setTimeout(function () {\n\t\t\tdelete preFetchTimeouts[id];\n\t\t}, preFetchAge);\n\t});\n\tconf.on('delete' + postfix, function (id) {\n\t\tclearTimeout(timeouts[id]);\n\t\tdelete timeouts[id];\n\t\tif (!preFetchTimeouts) return;\n\t\tif (preFetchTimeouts[id] !== 'nextTick') clearTimeout(preFetchTimeouts[id]);\n\t\tdelete preFetchTimeouts[id];\n\t});\n\n\tif (options.preFetch) {\n\t\tif ((options.preFetch === true) || isNaN(options.preFetch)) {\n\t\t\tpreFetchAge = 0.333;\n\t\t} else {\n\t\t\tpreFetchAge = max(min(Number(options.preFetch), 1), 0);\n\t\t}\n\t\tif (preFetchAge) {\n\t\t\tpreFetchTimeouts = {};\n\t\t\tpreFetchAge = (1 - preFetchAge) * maxAge;\n\t\t\tconf.on('get' + postfix, function (id, args, context) {\n\t\t\t\tif (!preFetchTimeouts[id]) {\n\t\t\t\t\tpreFetchTimeouts[id] = 'nextTick';\n\t\t\t\t\tnextTick(function () {\n\t\t\t\t\t\tvar result;\n\t\t\t\t\t\tif (preFetchTimeouts[id] !== 'nextTick') return;\n\t\t\t\t\t\tdelete preFetchTimeouts[id];\n\t\t\t\t\t\tconf.delete(id);\n\t\t\t\t\t\tif (options.async) {\n\t\t\t\t\t\t\targs = aFrom(args);\n\t\t\t\t\t\t\targs.push(noop);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult = conf.memoized.apply(context, args);\n\t\t\t\t\t\tif (options.promise) {\n\t\t\t\t\t\t\t// Supress eventual error warnings\n\t\t\t\t\t\t\tif (isPromise(result)) {\n\t\t\t\t\t\t\t\tif (typeof result.done === 'function') result.done(noop, noop);\n\t\t\t\t\t\t\t\telse result.then(noop, noop);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tconf.on('clear' + postfix, function () {\n\t\tforEach(timeouts, function (id) { clearTimeout(id); });\n\t\ttimeouts = {};\n\t\tif (preFetchTimeouts) {\n\t\t\tforEach(preFetchTimeouts, function (id) {\n\t\t\t\tif (id !== 'nextTick') clearTimeout(id);\n\t\t\t});\n\t\t\tpreFetchTimeouts = {};\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/memoizee/ext/max-age.js\n// module id = 134\n// module chunks = 0","// Limit cache size, LRU (least recently used) algorithm.\n\n'use strict';\n\nvar toPosInteger = require('es5-ext/number/to-pos-integer')\n  , lruQueue     = require('lru-queue')\n  , extensions   = require('../lib/registered-extensions');\n\nextensions.max = function (max, conf, options) {\n\tvar postfix, queue, hit;\n\n\tmax = toPosInteger(max);\n\tif (!max) return;\n\n\tqueue = lruQueue(max);\n\tpostfix = ((options.async && extensions.async) || (options.promise && extensions.promise))\n\t\t? 'async' : '';\n\n\tconf.on('set' + postfix, hit = function (id) {\n\t\tid = queue.hit(id);\n\t\tif (id === undefined) return;\n\t\tconf.delete(id);\n\t});\n\tconf.on('get' + postfix, hit);\n\tconf.on('delete' + postfix, queue.delete);\n\tconf.on('clear' + postfix, queue.clear);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/memoizee/ext/max.js\n// module id = 135\n// module chunks = 0","// Reference counter, useful for garbage collector like functionality\n\n'use strict';\n\nvar d          = require('d')\n  , extensions = require('../lib/registered-extensions')\n\n  , create = Object.create, defineProperties = Object.defineProperties;\n\nextensions.refCounter = function (ignore, conf, options) {\n\tvar cache, postfix;\n\n\tcache = create(null);\n\tpostfix = ((options.async && extensions.async) || (options.promise && extensions.promise))\n\t\t? 'async' : '';\n\n\tconf.on('set' + postfix, function (id, length) { cache[id] = length || 1; });\n\tconf.on('get' + postfix, function (id) { ++cache[id]; });\n\tconf.on('delete' + postfix, function (id) { delete cache[id]; });\n\tconf.on('clear' + postfix, function () { cache = {}; });\n\n\tdefineProperties(conf.memoized, {\n\t\tdeleteRef: d(function () {\n\t\t\tvar id = conf.get(arguments);\n\t\t\tif (id === null) return null;\n\t\t\tif (!cache[id]) return null;\n\t\t\tif (!--cache[id]) {\n\t\t\t\tconf.delete(id);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}),\n\t\tgetRefCount: d(function () {\n\t\t\tvar id = conf.get(arguments);\n\t\t\tif (id === null) return 0;\n\t\t\tif (!cache[id]) return 0;\n\t\t\treturn cache[id];\n\t\t})\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/memoizee/ext/ref-counter.js\n// module id = 136\n// module chunks = 0","// Generated by CoffeeScript 1.10.0\n(function() {\n  var _, getField;\n\n  _ = require('lodash');\n\n  getField = function(table, fieldName) {\n    var i, len, tableField, tableFields;\n    fieldName = fieldName.replace(/_/g, ' ');\n    tableFields = table.fields;\n    for (i = 0, len = tableFields.length; i < len; i++) {\n      tableField = tableFields[i];\n      if (tableField.fieldName === fieldName) {\n        return tableField;\n      }\n    }\n    console.error('Cannot find field', table, fieldName);\n    throw new Error('Cannot find field: ' + table.name + ' : ' + fieldName);\n  };\n\n  module.exports = function(sqlModel) {\n    var addMapping, fieldName, i, idPart, idParts, len, part, ref, resourceField, resourceName, resourceToSQLMappings, resources, sqlFieldName, sqlTable, sqlTableName, table, tables;\n    tables = sqlModel.tables;\n    resources = {};\n    resourceToSQLMappings = {};\n\n    /**\n    \t*\tresourceToSQLMappings =\n    \t*\t\t[resourceName][resourceField] = [sqlTableName, sqlFieldName]\n     */\n    addMapping = function(resourceName, resourceField, sqlTableName, sqlFieldName) {\n      return resourceToSQLMappings[resourceName][resourceField] = [sqlTableName, sqlFieldName];\n    };\n    for (resourceName in tables) {\n      table = tables[resourceName];\n      if (!(table.exists !== false)) {\n        continue;\n      }\n      idParts = resourceName.split('-');\n      resourceName = ((function() {\n        var i, len, results;\n        results = [];\n        for (i = 0, len = idParts.length; i < len; i++) {\n          idPart = idParts[i];\n          results.push(idPart.split(/[ -]/).join('_'));\n        }\n        return results;\n      })()).join('__');\n      resourceToSQLMappings[resourceName] = {};\n      if (_.isString(table)) {\n        sqlTable = tables[idParts[0]];\n        resourceToSQLMappings[resourceName]._name = sqlTable.name;\n        sqlFieldName = sqlTable.idField;\n        resourceField = sqlTableName = sqlTable.name;\n        addMapping(resourceName, resourceField, sqlTableName, sqlFieldName);\n        resources[resourceName] = {\n          resourceName: resourceName,\n          modelName: ((function() {\n            var i, len, results;\n            results = [];\n            for (i = 0, len = idParts.length; i < len; i++) {\n              part = idParts[i];\n              results.push(part.replace(/_/g, ' '));\n            }\n            return results;\n          })()).join(' '),\n          topLevel: idParts.length === 1,\n          fields: [\n            {\n              dataType: 'ForeignKey',\n              fieldName: resourceField,\n              required: true,\n              index: null,\n              references: {\n                tableName: sqlTableName,\n                fieldName: sqlFieldName\n              }\n            }\n          ],\n          idField: resourceField,\n          referenceScheme: resourceField,\n          actions: ['view', 'add', 'delete']\n        };\n        switch (table) {\n          case 'Attribute':\n          case 'ForeignKey':\n            resourceField = sqlFieldName = idParts[2].replace(/_/g, ' ');\n            sqlTableName = sqlTable.name;\n            addMapping(resourceName, resourceField, sqlTableName, sqlFieldName);\n            resources[resourceName].fields.push(getField(sqlTable, sqlFieldName));\n            resources[resourceName].referenceScheme = resourceField;\n            break;\n          case 'BooleanAttribute':\n            resourceField = sqlFieldName = idParts[1].replace(/_/g, ' ');\n            sqlTableName = sqlTable.name;\n            addMapping(resourceName, resourceField, sqlTableName, sqlFieldName);\n            resources[resourceName].fields.push(getField(sqlTable, sqlFieldName));\n            resources[resourceName].referenceScheme = resourceField;\n            break;\n          default:\n            throw new Error('Unrecognised table type');\n        }\n      } else {\n        resourceToSQLMappings[resourceName]._name = table.name;\n        resources[resourceName] = {\n          resourceName: resourceName,\n          modelName: ((function() {\n            var i, len, results;\n            results = [];\n            for (i = 0, len = idParts.length; i < len; i++) {\n              part = idParts[i];\n              results.push(part.replace(/_/g, ' '));\n            }\n            return results;\n          })()).join(' '),\n          topLevel: idParts.length === 1,\n          fields: table.fields,\n          idField: table.idField,\n          actions: ['view', 'add', 'edit', 'delete']\n        };\n        if (table.referenceScheme != null) {\n          resources[resourceName].referenceScheme = table.referenceScheme;\n        }\n        ref = table.fields;\n        for (i = 0, len = ref.length; i < len; i++) {\n          fieldName = ref[i].fieldName;\n          addMapping(resourceName, fieldName.replace(/\\ /g, '_'), table.name, fieldName);\n        }\n      }\n    }\n    return {\n      resources: resources,\n      resourceToSQLMappings: resourceToSQLMappings\n    };\n  };\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@resin/abstract-sql-to-odata-schema/AbstractSQL2ODataSchema.js\n// module id = 137\n// module chunks = 0","_ = require 'lodash'\nsbvrTypes = require '@resin/sbvr-types'\n\ngetResourceName = (resourceName) ->\n\tidParts = resourceName.split('-')\n\t(\n\t\tfor idPart in idParts\n\t\t\tidPart.split(/[ -]/).join('_')\n\t).join('__')\n\nforEachUniqueTable = (model, callback) ->\n\tusedTableNames = {}\n\tfor key, table of model when !_.isString(model[key]) and !table.primitive and !usedTableNames[table.name]\n\t\tusedTableNames[table.name] = true\n\t\tcallback(key, table)\n\nmodule.exports = (vocabulary, sqlModel) ->\n\tcomplexTypes = {}\n\tresolveDataType = (fieldType) ->\n\t\tif sbvrTypes[fieldType]?\n\t\t\tif sbvrTypes[fieldType].types.odata.complexType?\n\t\t\t\tcomplexTypes[fieldType] = sbvrTypes[fieldType].types.odata.complexType\n\t\t\tsbvrTypes[fieldType].types.odata.name\n\t\telse\n\t\t\tconsole.error('Could not resolve type', fieldType)\n\t\t\tthrow new Error('Could not resolve type' + fieldType)\n\n\n\tmodel = sqlModel.tables\n\tassociations = []\n\tforEachUniqueTable model, (key, { name: resourceName, fields }) ->\n\t\tresourceName = getResourceName(resourceName)\n\t\tfor { dataType, required, references }, i in fields when dataType == 'ForeignKey'\n\t\t\t{ tableName: referencedResource } = references\n\t\t\treferencedResource = getResourceName(referencedResource)\n\t\t\tassociations.push(\n\t\t\t\tname: resourceName + referencedResource\n\t\t\t\tends: [\n\t\t\t\t\t{ resourceName, cardinality: if required then '1' else '0..1' }\n\t\t\t\t\t{ resourceName: referencedResource, cardinality: '*' }\n\t\t\t\t]\n\t\t\t)\n\n\treturn \"\"\"\n\t\t<?xml version=\"1.0\" encoding=\"iso-8859-1\" standalone=\"yes\"?>\n\t\t<edmx:Edmx Version=\"1.0\" xmlns:edmx=\"http://schemas.microsoft.com/ado/2007/06/edmx\">\n\t\t\t<edmx:DataServices xmlns:m=\"http://schemas.microsoft.com/ado/2007/08/dataservices/metadata\" m:DataServiceVersion=\"2.0\">\n\t\t\t\t<Schema Namespace=\"#{vocabulary}\"\n\t\t\t\t\txmlns:d=\"http://schemas.microsoft.com/ado/2007/08/dataservices\"\n\t\t\t\t\txmlns:m=\"http://schemas.microsoft.com/ado/2007/08/dataservices/metadata\"\n\t\t\t\t\txmlns=\"http://schemas.microsoft.com/ado/2008/09/edm\">\n\n\t\t\t\t\"\"\" +\n\t\t\t\tforEachUniqueTable(model, (key, { idField, name: resourceName, fields }) ->\n\t\t\t\t\tresourceName = getResourceName(resourceName)\n\t\t\t\t\t\"\"\"\n\t\t\t\t\t<EntityType Name=\"#{resourceName}\">\n\t\t\t\t\t\t<Key>\n\t\t\t\t\t\t\t<PropertyRef Name=\"#{idField}\" />\n\t\t\t\t\t\t</Key>\n\n\t\t\t\t\t\t\"\"\" + (\n\t\t\t\t\t\tfor { dataType, fieldName, required } in fields when dataType != 'ForeignKey'\n\t\t\t\t\t\t\tdataType = resolveDataType(dataType)\n\t\t\t\t\t\t\tfieldName = getResourceName(fieldName)\n\t\t\t\t\t\t\t\"\"\"<Property Name=\"#{fieldName}\" Type=\"#{dataType}\" Nullable=\"#{not required}\" />\"\"\"\n\t\t\t\t\t\t).join('\\n') + '\\n' + (\n\t\t\t\t\t\tfor { dataType, fieldName, references } in fields when dataType == 'ForeignKey'\n\t\t\t\t\t\t\t{ tableName: referencedResource } = references\n\t\t\t\t\t\t\tfieldName = getResourceName(fieldName)\n\t\t\t\t\t\t\treferencedResource = getResourceName(referencedResource)\n\t\t\t\t\t\t\t\"\"\"<NavigationProperty Name=\"#{fieldName}\" Relationship=\"#{vocabulary}.#{resourceName + referencedResource}\" FromRole=\"#{resourceName}\" ToRole=\"#{referencedResource}\" />\"\"\"\n\t\t\t\t\t\t).join('\\n') + '\\n' + '''\n\t\t\t\t\t</EntityType>'''\n\t\t\t\t).join('\\n\\n') + (\n\t\t\t\t\tfor { name, ends } in associations\n\t\t\t\t\t\tname = getResourceName(name)\n\t\t\t\t\t\t\"\"\"<Association Name=\"#{name}\">\"\"\" + '\\n\\t' + (\n\t\t\t\t\t\t\tfor { resourceName, cardinality } in ends\n\t\t\t\t\t\t\t\t\"\"\"<End Role=\"#{resourceName}\" Type=\"#{vocabulary}.#{resourceName}\" Multiplicity=\"#{cardinality}\" />\"\"\"\n\t\t\t\t\t\t\t).join('\\n\\t') + '\\n' +\n\t\t\t\t\t\t'''</Association>'''\n\t\t\t\t).join('\\n') + \"\"\"\n\t\t\t\t\t<EntityContainer Name=\"#{vocabulary}Service\" m:IsDefaultEntityContainer=\"true\">\n\n\t\t\t\t\t\"\"\" +\n\t\t\t\t\t\tforEachUniqueTable(model, (key, { name: resourceName }) ->\n\t\t\t\t\t\t\tresourceName = getResourceName(resourceName)\n\t\t\t\t\t\t\t\"\"\"<EntitySet Name=\"#{resourceName}\" EntityType=\"#{vocabulary}.#{resourceName}\" />\"\"\"\n\t\t\t\t\t\t).join('\\n') + '\\n' + (\n\t\t\t\t\t\t\tfor { name, ends } in associations\n\t\t\t\t\t\t\t\tname = getResourceName(name)\n\t\t\t\t\t\t\t\t\"\"\"<AssociationSet Name=\"#{name}\" Association=\"#{vocabulary}.#{name}\">\"\"\" + '\\n\\t' + (\n\t\t\t\t\t\t\t\t\tfor { resourceName, cardinality } in ends\n\t\t\t\t\t\t\t\t\t\t\"\"\"<End Role=\"#{resourceName}\" EntitySet=\"#{vocabulary}.#{resourceName}\" />\"\"\"\n\t\t\t\t\t\t\t\t\t).join('\\n\\t') + '''\n\t\t\t\t\t\t\t\t</AssociationSet>'''\n\t\t\t\t\t\t\t).join('\\n') +\n\t\t\t\t\t\t# <FunctionImport Name=\"GetProductsByRating\" EntitySet=\"Products\" ReturnType=\"Collection(ODataDemo.Product)\" m:HttpMethod=\"GET\">\n\t\t\t\t\t\t\t# <Parameter Name=\"rating\" Type=\"Edm.Int32\" Mode=\"In\" />\n\t\t\t\t\t\t# </FunctionImport>\n\t\t\t\t\t'''\n\t\t\t\t\t</EntityContainer>''' + (\n\t\t\t\t\t\tfor typeName, complexType of complexTypes\n\t\t\t\t\t\t\tcomplexType\n\t\t\t\t\t).join('\\n') + '''\n\t\t\t\t</Schema>\n\t\t\t</edmx:DataServices>\n\t\t</edmx:Edmx>'''\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/src/sbvr-compiler/ODataMetadataGenerator.coffee","module.exports = \"Vocabulary: dev\\n\\nTerm:       model value\\n\\tConcept Type: JSON (Type)\\nTerm:       model\\n\\tReference Scheme: model value\\nTerm:       vocabulary\\n\\tConcept Type: Short Text (Type)\\nTerm:       model type\\n\\tConcept Type: Short Text (Type)\\n\\nFact Type: model is of vocabulary\\n\\tNecessity: Each model is of exactly one vocabulary\\nFact Type: model has model type\\n\\tNecessity: Each model has exactly one model type\\nFact Type: model has model value\\n\\tNecessity: Each model has exactly one model value\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/server/src/sbvr-api/dev.sbvr\n// module id = 139\n// module chunks = 0","_ = require 'lodash'\nPromise = require 'bluebird'\nsbvrUtils = require '../sbvr-api/sbvr-utils'\npermissions = require '../sbvr-api/permissions'\nfs = Promise.promisifyAll(require('fs'))\n\n# Setup function\nexports.setup = (app) ->\n\tloadConfig = (data) ->\n\t\tsbvrUtils.db.transaction()\n\t\t.then (tx) ->\n\t\t\tPromise.map data.models, (model) ->\n\t\t\t\tif model.modelText?\n\t\t\t\t\tsbvrUtils.executeModel(tx, model)\n\t\t\t\t\t.then ->\n\t\t\t\t\t\tconsole.info('Sucessfully executed ' + model.modelName + ' model.')\n\t\t\t\t\t.catch (err) ->\n\t\t\t\t\t\tthrow new Error(['Failed to execute ' + model.modelName + ' model from ' + model.modelFile, err, err.stack])\n\t\t\t.then ->\n\t\t\t\tauthApiTx = sbvrUtils.api.Auth.clone\n\t\t\t\t\tpassthrough:\n\t\t\t\t\t\ttx: tx\n\t\t\t\t\t\treq: permissions.root\n\n\t\t\t\tif data.users?\n\t\t\t\t\tpermissions = {}\n\t\t\t\t\tfor user in data.users when user.permissions?\n\t\t\t\t\t\t_.each user.permissions, (permissionName) ->\n\t\t\t\t\t\t\tpermissions[permissionName] ?=\n\t\t\t\t\t\t\t\tauthApiTx.get\n\t\t\t\t\t\t\t\t\tresource: 'permission'\n\t\t\t\t\t\t\t\t\toptions:\n\t\t\t\t\t\t\t\t\t\tselect: 'id'\n\t\t\t\t\t\t\t\t\t\tfilter:\n\t\t\t\t\t\t\t\t\t\t\tname: permissionName\n\t\t\t\t\t\t\t\t.then (result) ->\n\t\t\t\t\t\t\t\t\tif result.length is 0\n\t\t\t\t\t\t\t\t\t\tauthApiTx.post\n\t\t\t\t\t\t\t\t\t\t\tresource: 'permission'\n\t\t\t\t\t\t\t\t\t\t\tbody:\n\t\t\t\t\t\t\t\t\t\t\t\tname: permissionName\n\t\t\t\t\t\t\t\t\t\t.get('id')\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\treturn result[0].id\n\t\t\t\t\t\t\t\t.catch (e) ->\n\t\t\t\t\t\t\t\t\te.message = 'Could not create or find permission \"' + permissionName + '\": ' + e.message\n\t\t\t\t\t\t\t\t\tthrow e\n\n\t\t\t\t\tPromise.map data.users, (user) ->\n\t\t\t\t\t\tauthApiTx.get\n\t\t\t\t\t\t\tresource: 'user'\n\t\t\t\t\t\t\toptions:\n\t\t\t\t\t\t\t\tselect: 'id'\n\t\t\t\t\t\t\t\tfilter:\n\t\t\t\t\t\t\t\t\tusername: user.username\n\t\t\t\t\t\t.then (result) ->\n\t\t\t\t\t\t\tif result.length is 0\n\t\t\t\t\t\t\t\tauthApiTx.post\n\t\t\t\t\t\t\t\t\tresource: 'user'\n\t\t\t\t\t\t\t\t\tbody:\n\t\t\t\t\t\t\t\t\t\tusername: user.username\n\t\t\t\t\t\t\t\t\t\tpassword: user.password\n\t\t\t\t\t\t\t\t.get('id')\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\treturn result[0].id\n\t\t\t\t\t\t.then (userID) ->\n\t\t\t\t\t\t\tif user.permissions?\n\t\t\t\t\t\t\t\tPromise.map user.permissions, (permissionName) ->\n\t\t\t\t\t\t\t\t\tpermissions[permissionName]\n\t\t\t\t\t\t\t\t\t.then (permissionID) ->\n\t\t\t\t\t\t\t\t\t\tauthApiTx.get\n\t\t\t\t\t\t\t\t\t\t\tresource: 'user__has__permission'\n\t\t\t\t\t\t\t\t\t\t\toptions:\n\t\t\t\t\t\t\t\t\t\t\t\tselect: 'id'\n\t\t\t\t\t\t\t\t\t\t\t\tfilter:\n\t\t\t\t\t\t\t\t\t\t\t\t\tuser: userID\n\t\t\t\t\t\t\t\t\t\t\t\t\tpermission: permissionID\n\t\t\t\t\t\t\t\t\t\t.then (result) ->\n\t\t\t\t\t\t\t\t\t\t\tif result.length is 0\n\t\t\t\t\t\t\t\t\t\t\t\tauthApiTx.post\n\t\t\t\t\t\t\t\t\t\t\t\t\tresource: 'user__has__permission'\n\t\t\t\t\t\t\t\t\t\t\t\t\tbody:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tuser: userID\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpermission: permissionID\n\t\t\t\t\t\t.catch (e) ->\n\t\t\t\t\t\t\te.message = 'Could not create or find user \"' + user.username + '\": ' + e.message\n\t\t\t\t\t\t\tthrow e\n\t\t\t.catch (err) ->\n\t\t\t\ttx.rollback()\n\t\t\t\tthrow err\n\t\t\t.then ->\n\t\t\t\ttx.end()\n\t\t\t\tPromise.map data.models, (model) ->\n\t\t\t\t\tif model.modelText?\n\t\t\t\t\t\tapiRoute = '/' + model.apiRoot + '/*'\n\t\t\t\t\t\tapp.options(apiRoute, (req, res) -> res.sendStatus(200))\n\t\t\t\t\t\tapp.all(apiRoute, sbvrUtils.handleODataRequest)\n\n\t\t\t\t\tif model.customServerCode?\n\t\t\t\t\t\tif _.isObject(model.customServerCode)\n\t\t\t\t\t\t\tcustomCode = model.customServerCode\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\ttry\n\t\t\t\t\t\t\t\tcustomCode = nodeRequire(model.customServerCode)\n\t\t\t\t\t\t\tcatch e\n\t\t\t\t\t\t\t\te.message = 'Error loading custom server code: ' + e.message\n\t\t\t\t\t\t\t\tthrow e\n\n\t\t\t\t\t\tif !_.isFunction(customCode.setup)\n\t\t\t\t\t\t\treturn\n\n\t\t\t\t\t\ttry\n\t\t\t\t\t\t\tnew Promise (resolve, reject) ->\n\t\t\t\t\t\t\t\tpromise = customCode.setup app, sbvrUtils, sbvrUtils.db, (err) ->\n\t\t\t\t\t\t\t\t\tif err\n\t\t\t\t\t\t\t\t\t\treject(err)\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\tresolve()\n\n\t\t\t\t\t\t\t\tif Promise.is(promise)\n\t\t\t\t\t\t\t\t\tresolve(promise)\n\t\t\t\t\t\tcatch e\n\t\t\t\t\t\t\te.message = 'Error running custom server code: ' + e.message\n\t\t\t\t\t\t\tthrow e\n\n\tloadJSON = (path) ->\n\t\tconsole.info('Loading JSON:', path)\n\t\tjson = fs.readFileSync(path, 'utf8')\n\t\treturn JSON.parse(json)\n\n\tloadApplicationConfig = (config) ->\n\t\ttry # Try to register the coffee-script loader - ignore if it fails though, since that probably just means it is not available/needed.\n\t\t\trequire('coffee-script/register')\n\n\t\tpath = require('path')\n\n\t\tconsole.info('Loading application config')\n\t\tswitch typeof config\n\t\t\twhen 'undefined'\n\t\t\t\troot = process.argv[2] or __dirname\n\t\t\t\tconfig = loadJSON(path.join(root, 'config.json'))\n\t\t\twhen 'string'\n\t\t\t\troot = path.dirname(config)\n\t\t\t\tconfig = loadJSON(config)\n\t\t\twhen 'object'\n\t\t\t\troot = process.cwd()\n\n\t\tPromise.map config.models, (model) ->\n\t\t\tfs.readFileAsync(path.join(root, model.modelFile), 'utf8')\n\t\t\t.then (modelText) ->\n\t\t\t\tmodel.modelText = modelText\n\t\t\t\tif model.customServerCode?\n\t\t\t\t\tmodel.customServerCode = root + '/' + model.customServerCode\n\t\t\t.then ->\n\t\t\t\tmodel.migrations ||= {}\n\n\t\t\t\tif model.migrationsPath\n\t\t\t\t\tmigrationsPath = path.join(root, model.migrationsPath)\n\t\t\t\t\tdelete model.migrationsPath\n\n\t\t\t\t\tfs.readdirAsync(migrationsPath)\n\t\t\t\t\t.map (filename) ->\n\t\t\t\t\t\tfilePath = path.join(migrationsPath, filename)\n\t\t\t\t\t\tmigrationKey = filename.split('-')[0]\n\n\t\t\t\t\t\tswitch path.extname(filename)\n\t\t\t\t\t\t\twhen '.coffee', '.js'\n\t\t\t\t\t\t\t\tfn = nodeRequire(filePath)\n\t\t\t\t\t\t\t\tmodel.migrations[migrationKey] = fn\n\t\t\t\t\t\t\twhen '.sql'\n\t\t\t\t\t\t\t\tfs.readFileAsync(filePath)\n\t\t\t\t\t\t\t\t.then (sqlBuffer) ->\n\t\t\t\t\t\t\t\t\tmodel.migrations[migrationKey] = sqlBuffer.toString()\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tconsole.error(\"Unrecognised migration file extension, skipping: #{path.extname filename}\")\n\t\t.then ->\n\t\t\tloadConfig(config)\n\t\t.catch (err) ->\n\t\t\tconsole.error('Error loading application config', err, err.stack)\n\t\t\tprocess.exit()\n\n\treturn {\n\t\tloadConfig\n\t\tloadApplicationConfig\n\t}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/src/config-loader/config-loader.coffee","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 141\n// module chunks = 0","module.exports = require(\"coffee-script/register\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"coffee-script/register\"\n// module id = 142\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 143\n// module chunks = 0","_ = require 'lodash'\nexpressSession = require 'express-session'\npermissions = require '../sbvr-api/permissions'\n\nsessionAPI = null\n\nsessionModel = '''\n\tVocabulary: session\n\n\tTerm:       session id\n\t\tConcept Type: Short Text (Type)\n\tTerm:       data\n\t\tConcept Type: JSON (Type)\n\tTerm:       expiry time\n\t\tConcept type: Date Time (Type)\n\n\tTerm:       session\n\t\tDatabase ID Field: session id\n\t\tReference Scheme: session id\n\n\tFact type:  session has data\n\t\tNecessity: Each session has exactly 1 data\n\tFact type:  session has session id\n\t\tNecessity: Each session has exactly 1 session id\n\t\tNecessity: Each session id is of exactly 1 session\n\tFact type:  session has expiry time\n\t\tNecessity: Each session has at most 1 expiry time'''\n\nclass PinejsSessionStore extends expressSession.Store\n\tconstructor: ->\n\tget: (sid, callback) ->\n\t\tsessionAPI.get\n\t\t\tresource: 'session'\n\t\t\tid: sid\n\t\t\tpassthrough: req: permissions.rootRead\n\t\t\toptions:\n\t\t\t\tselect: 'data'\n\t\t.then (session) ->\n\t\t\treturn session?.data\n\t\t.nodeify(callback)\n\n\tset: (sid, data, callback) ->\n\t\tbody =\n\t\t\tsession_id: sid\n\t\t\tdata: data\n\t\t\texpiry_time: data?.cookie?.expires ? null\n\t\tsessionAPI.put\n\t\t\tresource: 'session'\n\t\t\tid: sid\n\t\t\tpassthrough: req: permissions.root\n\t\t\tbody: body\n\t\t.nodeify(callback)\n\n\tdestroy: (sid, callback) ->\n\t\tsessionAPI.delete\n\t\t\tresource: 'session'\n\t\t\tid: sid\n\t\t\tpassthrough: req: permissions.root\n\t\t.nodeify(callback)\n\n\tall: (callback) ->\n\t\tsessionAPI.get\n\t\t\tresource: 'session'\n\t\t\tpassthrough: req: permissions.root\n\t\t\toptions:\n\t\t\t\tselect: 'session_id'\n\t\t\t\tfilter: expiry_time: $ge: Date.now()\n\t\t.then (sessions) ->\n\t\t\t_.map(sessions, 'session_id')\n\t\t.nodeify(callback)\n\n\tclear: (callback) ->\n\t\t# TODO: Use a truncate\n\t\tsessionAPI.delete\n\t\t\tresource: 'session'\n\t\t\tpassthrough: req: permissions.root\n\t\t.nodeify(callback)\n\n\tlength: (callback) ->\n\t\t# TODO: Use a proper count\n\t\tsessionAPI.get\n\t\t\tresource: 'session'\n\t\t\tpassthrough: req: permissions.rootRead\n\t\t\toptions:\n\t\t\t\tselect: 'session_id'\n\t\t\t\tfilter: expiry_time: $ge: Date.now()\n\t\t.then (sessions) ->\n\t\t\tsessions.length\n\t\t.nodeify(callback)\nPinejsSessionStore.config =\n\tmodels: [\n\t\tmodelName: 'session',\n\t\tmodelText: sessionModel\n\t\tapiRoot: 'session'\n\t\tlogging:\n\t\t\tdefault: false\n\t\t\terror: true\n\t\tcustomServerCode: PinejsSessionStore\n\t]\nPinejsSessionStore.setup = (app, sbvrUtils, db, callback) ->\n\tsessionAPI = sbvrUtils.api.session\n\tcallback()\n\nmodule.exports = PinejsSessionStore\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/src/pinejs-session-store/pinejs-session-store.coffee","module.exports = require(\"express-session\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express-session\"\n// module id = 145\n// module chunks = 0","Promise = require 'bluebird'\npermissions = require '../sbvr-api/permissions'\n\nuiModel = '''\n\t\tVocabulary: ui\n\n\t\tTerm:       text\n\t\t\tConcept type: Text (Type)\n\t\tTerm:       name\n\t\t\tConcept type: Short Text (Type)\n\t\tTerm:       textarea\n\t\t\t--Database id Field: name\n\t\t\tReference Scheme: text\n\t\tFact type:  textarea is disabled\n\t\tFact type:  textarea has name\n\t\t\tNecessity: Each textarea has exactly 1 name\n\t\t\tNecessity: Each name is of exactly 1 textarea\n\t\tFact type:  textarea has text\n\t\t\tNecessity: Each textarea has exactly 1 text'''\n\n# Middleware\nisServerOnAir = do ->\n\tresolve = null\n\tpromise = new Promise (_resolve) ->\n\t\tresolve = _resolve\n\t(value) ->\n\t\tif value?\n\t\t\tif promise.isPending()\n\t\t\t\tresolve(value)\n\t\t\t\tresolve = null\n\t\t\telse\n\t\t\t\tpromise = Promise.fulfilled(value)\n\t\treturn promise\n\nserverIsOnAir = (req, res, next) ->\n\tisServerOnAir().then (onAir) ->\n\t\tif onAir\n\t\t\tnext()\n\t\telse\n\t\t\tnext('route')\n\n# Setup function\nexports.config =\n\tmodels: [\n\t\tmodelName: 'ui',\n\t\tmodelText: uiModel\n\t\tapiRoot: 'ui'\n\t\tcustomServerCode: exports\n\t]\nexports.setup = (app, sbvrUtils, db) ->\n\tuiApi = sbvrUtils.api.ui\n\tdevApi = sbvrUtils.api.dev\n\tsetupModels = (tx) ->\n\t\tuiApiTx = uiApi.clone\n\t\t\tpassthrough:\n\t\t\t\ttx: tx\n\t\t\t\treq: permissions.root\n\t\tuiApiTx.get\n\t\t\tresource: 'textarea'\n\t\t\toptions:\n\t\t\t\tselect: 'id'\n\t\t\t\tfilter:\n\t\t\t\t\tname: 'model_area'\n\t\t.then (result) ->\n\t\t\tif result.length is 0\n\t\t\t\t# Add a model_area entry if it doesn't already exist.\n\t\t\t\tuiApiTx.post\n\t\t\t\t\tresource: 'textarea'\n\t\t\t\t\tbody:\n\t\t\t\t\t\tname: 'model_area'\n\t\t\t\t\t\ttext: ' '\n\t\t.then ->\n\t\t\tdevApi.get\n\t\t\t\tresource: 'model'\n\t\t\t\tpassthrough:\n\t\t\t\t\ttx: tx\n\t\t\t\t\treq: permissions.rootRead\n\t\t\t\toptions:\n\t\t\t\t\tselect: ['vocabulary', 'model_value']\n\t\t\t\t\tfilter:\n\t\t\t\t\t\tmodel_type: 'se'\n\t\t\t\t\t\tvocabulary: 'data'\n\t\t.then (result) ->\n\t\t\tif result.length is 0\n\t\t\t\tthrow new Error('No SE data model found')\n\t\t\tinstance = result[0]\n\t\t\tsbvrUtils.executeModel(tx,\n\t\t\t\tapiRoot: instance.vocabulary\n\t\t\t\tmodelText: instance.model_value\n\t\t\t)\n\t\t.then ->\n\t\t\tisServerOnAir(true)\n\t\t.catch (err) ->\n\t\t\tisServerOnAir(false)\n\n\tapp.get '/onAir', (req, res, next) ->\n\t\tisServerOnAir()\n\t\t.then (onAir) ->\n\t\t\tres.json(onAir)\n\n\tapp.post '/update', permissions.checkPermissionsMiddleware('all'), serverIsOnAir, (req, res, next) ->\n\t\tres.sendStatus(404)\n\n\tapp.post '/execute', permissions.checkPermissionsMiddleware('all'), (req, res, next) ->\n\t\tuiApi.get\n\t\t\tresource: 'textarea'\n\t\t\tpassthrough: req: permissions.rootRead\n\t\t\toptions:\n\t\t\t\tselect: 'text'\n\t\t\t\tfilter:\n\t\t\t\t\tname: 'model_area'\n\t\t.then (result) ->\n\t\t\tif result.length is 0\n\t\t\t\tthrow new Error('Could not find the model to execute')\n\t\t\tmodelText = result[0].text\n\t\t\tdb.transaction()\n\t\t\t.then (tx) ->\n\t\t\t\tsbvrUtils.executeModel(tx,\n\t\t\t\t\tapiRoot: 'data'\n\t\t\t\t\tmodelText: modelText\n\t\t\t\t)\n\t\t\t\t.then ->\n\t\t\t\t\tuiApi.patch\n\t\t\t\t\t\tresource: 'textarea'\n\t\t\t\t\t\tpassthrough:\n\t\t\t\t\t\t\ttx: tx\n\t\t\t\t\t\t\treq: permissions.root\n\t\t\t\t\t\toptions:\n\t\t\t\t\t\t\tfilter:\n\t\t\t\t\t\t\t\tname: 'model_area'\n\t\t\t\t\t\tbody:\n\t\t\t\t\t\t\tis_disabled: true\n\t\t\t\t.then ->\n\t\t\t\t\ttx.end()\n\t\t\t\t.catch (err) ->\n\t\t\t\t\ttx.rollback()\n\t\t\t\t\tthrow err\n\t\t.then ->\n\t\t\tisServerOnAir(true)\n\t\t\tres.sendStatus(200)\n\t\t.catch (err) ->\n\t\t\tisServerOnAir(false)\n\t\t\tres.status(404).json(err)\n\tapp.post '/validate', permissions.checkPermissionsMiddleware('get'), (req, res, next) ->\n\t\tsbvrUtils.runRule('data', req.body.rule)\n\t\t.then (results) ->\n\t\t\tres.json(results)\n\t\t.catch (err) ->\n\t\t\tconsole.log('Error validating', err)\n\t\t\tres.sendStatus(404)\n\tapp.delete '/cleardb', permissions.checkPermissionsMiddleware('delete'), (req, res, next) ->\n\t\tdb.transaction (tx) ->\n\t\t\ttx.tableList()\n\t\t\t.then (result) ->\n\t\t\t\tPromise.all result.rows.map (table) ->\n\t\t\t\t\ttx.dropTable(table.name)\n\t\t\t.then ->\n\t\t\t\tsbvrUtils.executeStandardModels(tx)\n\t\t\t.then ->\n\t\t\t\t# TODO: HACK: This is usually done by config-loader and should be done there\n\t\t\t\t# In general cleardb is very destructive and should really go through a full \"reboot\" procedure to set everything up again.\n\t\t\t\tconsole.warn('DEL /cleardb is very destructive and should really be followed by a full restart/reload.')\n\t\t\t\tsbvrUtils.executeModels(tx, exports.config.models)\n\t\t\t.then ->\n\t\t\t\tsetupModels(tx)\n\t\t\t.then ->\n\t\t\t\ttx.end()\n\t\t\t\tres.sendStatus(200)\n\t\t\t.catch (err) ->\n\t\t\t\tconsole.error('Error clearing db', err, err.stack)\n\t\t\t\ttx.rollback()\n\t\t\t\tres.sendStatus(503)\n\tapp.put '/importdb', permissions.checkPermissionsMiddleware('set'), (req, res, next) ->\n\t\tqueries = req.body.split(';')\n\t\tdb.transaction (tx) ->\n\t\t\tPromise.reduce(\n\t\t\t\tqueries\n\t\t\t\t(result, query) ->\n\t\t\t\t\tquery = query.trim()\n\t\t\t\t\tif query.length > 0\n\t\t\t\t\t\ttx.executeSql(query).catch((err) ->\n\t\t\t\t\t\t\tthrow [query, err]\n\t\t\t\t\t\t)\n\t\t\t\tnull\n\t\t\t).then ->\n\t\t\t\ttx.end()\n\t\t\t\tres.sendStatus(200)\n\t\t\t.catch (err) ->\n\t\t\t\tconsole.error('Error importing db', err, err.stack)\n\t\t\t\ttx.rollback()\n\t\t\t\tres.sendStatus(404)\n\tapp.get '/exportdb', permissions.checkPermissionsMiddleware('get'), (req, res, next) ->\n\t\tdb.transaction (tx) ->\n\t\t\ttx.tableList(\"name NOT LIKE '%_buk'\")\n\t\t\t.then (result) ->\n\t\t\t\texported = ''\n\t\t\t\tPromise.all result.rows.map (table) ->\n\t\t\t\t\ttableName = table.name\n\t\t\t\t\texported += 'DROP TABLE IF EXISTS \"' + tableName + '\";\\n'\n\t\t\t\t\texported += table.sql + ';\\n'\n\t\t\t\t\ttx.executeSql('SELECT * FROM \"' + tableName + '\";')\n\t\t\t\t\t.then (result) ->\n\t\t\t\t\t\tinsQuery = ''\n\t\t\t\t\t\tresult.rows.forEach (currRow) ->\n\t\t\t\t\t\t\tnotFirst = false\n\t\t\t\t\t\t\tinsQuery += 'INSERT INTO \"' + tableName + '\" ('\n\t\t\t\t\t\t\tvalQuery = ''\n\t\t\t\t\t\t\tfor own propName of currRow\n\t\t\t\t\t\t\t\tif notFirst\n\t\t\t\t\t\t\t\t\tinsQuery += ','\n\t\t\t\t\t\t\t\t\tvalQuery += ','\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tnotFirst = true\n\t\t\t\t\t\t\t\tinsQuery += '\"' + propName + '\"'\n\t\t\t\t\t\t\t\tvalQuery += \"'\" + currRow[propName] + \"'\"\n\t\t\t\t\t\t\tinsQuery += ') values (' + valQuery + ');\\n'\n\t\t\t\t\t\texported += insQuery\n\t\t\t\t.then ->\n\t\t\t\t\ttx.end()\n\t\t\t\t\tres.json(exported)\n\t\t\t.catch (err) ->\n\t\t\t\tconsole.error('Error exporting db', err, err.stack)\n\t\t\t\ttx.rollback()\n\t\t\t\tres.sendStatus(503)\n\tapp.post '/backupdb', permissions.checkPermissionsMiddleware('all'), serverIsOnAir, (req, res, next) ->\n\t\tdb.transaction (tx) ->\n\t\t\ttx.tableList(\"name NOT LIKE '%_buk'\")\n\t\t\t.then (result) ->\n\t\t\t\tPromise.all result.rows.map (currRow) ->\n\t\t\t\t\ttableName = currRow.name\n\t\t\t\t\ttx.dropTable(tableName + '_buk', true)\n\t\t\t\t\t.then ->\n\t\t\t\t\t\ttx.executeSql('ALTER TABLE \"' + tableName + '\" RENAME TO \"' + tableName + '_buk\";')\n\t\t\t.then ->\n\t\t\t\ttx.end()\n\t\t\t\tres.sendStatus(200)\n\t\t\t.catch (err) ->\n\t\t\t\ttx.rollback()\n\t\t\t\tconsole.error('Error backing up db', err, err.stack)\n\t\t\t\tres.sendStatus(404)\n\tapp.post '/restoredb', permissions.checkPermissionsMiddleware('all'), serverIsOnAir, (req, res, next) ->\n\t\tdb.transaction (tx) ->\n\t\t\ttx.tableList(\"name LIKE '%_buk'\")\n\t\t\t.then (result) ->\n\t\t\t\tPromise.all result.rows.map (currRow) ->\n\t\t\t\t\ttableName = currRow.name\n\t\t\t\t\ttx.dropTable(tableName[0...-4], true)\n\t\t\t\t\t.then ->\n\t\t\t\t\t\ttx.executeSql('ALTER TABLE \"' + tableName + '\" RENAME TO \"' + tableName[0...-4] + '\";')\n\t\t\t.then ->\n\t\t\t\ttx.end()\n\t\t\t\tres.sendStatus(200)\n\t\t\t.catch (err) ->\n\t\t\t\ttx.rollback()\n\t\t\t\tconsole.error('Error restoring db', err, err.stack)\n\t\t\t\tres.sendStatus(404)\n\n\tapp.all('/data/*', serverIsOnAir, sbvrUtils.handleODataRequest)\n\tapp.get('/Auth/*', serverIsOnAir, sbvrUtils.handleODataRequest)\n\tapp.merge('/ui/*', sbvrUtils.handleODataRequest)\n\tapp.patch('/ui/*', sbvrUtils.handleODataRequest)\n\n\n\tapp.delete '/', serverIsOnAir, (req, res, next) ->\n\t\tPromise.all([\n\t\t\tuiApi.patch\n\t\t\t\tresource: 'textarea'\n\t\t\t\tpassthrough: req: permissions.root\n\t\t\t\toptions:\n\t\t\t\t\tfilter:\n\t\t\t\t\t\tname: 'model_area'\n\t\t\t\tbody:\n\t\t\t\t\ttext: ''\n\t\t\t\t\tname: 'model_area'\n\t\t\t\t\tis_disabled: false\n\t\t\tsbvrUtils.deleteModel('data')\n\t\t]).then ->\n\t\t\tisServerOnAir(false)\n\t\t\tres.sendStatus(200)\n\n\tdb.transaction()\n\t.then (tx) ->\n\t\tsetupModels(tx)\n\t\t.then ->\n\t\t\ttx.end()\n\t\t.catch (err) ->\n\t\t\ttx.rollback()\n\t\t\tthrow err\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/src/data-server/SBVRServer.coffee","_ = require 'lodash'\nPromise = require 'bluebird'\ntransactionModel = require './transaction.sbvr'\n\nexports.config =\n\tmodels: [\n\t\tapiRoot: 'transaction'\n\t\tmodelText: transactionModel\n\t\tcustomServerCode: exports\n\t]\nexports.setup = (app, sbvrUtils) ->\n\texports.addModelHooks = (modelName) ->\n\t\t# TODO: Add checks on POST/PATCH requests as well.\n\t\tsbvrUtils.addHook 'PUT', modelName, 'all', ({ tx, request }) ->\n\t\t\tvocab = request.vocabulary\n\t\t\t{ logger } = sbvrUtils.api[vocab]\n\t\t\tid = sbvrUtils.getID(vocab, request)\n\t\t\ttx.executeSql('''\n\t\t\t\tSELECT NOT EXISTS(\n\t\t\t\t\tSELECT 1\n\t\t\t\t\tFROM \"resource\" r\n\t\t\t\t\tJOIN \"resource-is_under-lock\" AS rl ON rl.\"resource\" = r.\"id\"\n\t\t\t\t\tWHERE r.\"resource type\" = ?\n\t\t\t\t\tAND r.\"resource id\" = ?\n\t\t\t\t) AS result;''', [request.resourceName, id]\n\t\t\t)\n\t\t\t.catch (err) ->\n\t\t\t\tlogger.error('Unable to check resource locks', err, err.stack)\n\t\t\t\tthrow new Error('Unable to check resource locks')\n\t\t\t.then (result) ->\n\t\t\t\tif result.rows.item(0).result in [false, 0, '0']\n\t\t\t\t\tthrow new Error('The resource is locked and cannot be edited')\n\n\t\tendTransaction = (transactionID) ->\n\t\t\tsbvrUtils.db.transaction()\n\t\t\t.then (tx) ->\n\t\t\t\tplaceholders = {}\n\t\t\t\tgetLockedRow = (lockID) ->\n\t\t\t\t\t# 'GET', '/transaction/resource?$select=resource_id&$filter=resource__is_under__lock/lock eq ?'\n\t\t\t\t\ttx.executeSql('''SELECT \"resource\".\"resource id\" AS \"resource_id\"\n\t\t\t\t\t\t\t\t\tFROM \"resource\",\n\t\t\t\t\t\t\t\t\t\t\"resource-is_under-lock\"\n\t\t\t\t\t\t\t\t\tWHERE \"resource\".\"id\" = \"resource-is_under-lock\".\"resource\"\n\t\t\t\t\t\t\t\t\tAND \"resource-is_under-lock\".\"lock\" = ?;''', [lockID])\n\t\t\t\tgetFieldsObject = (conditionalResourceID, clientModel) ->\n\t\t\t\t\t# 'GET', '/transaction/conditional_field?$select=field_name,field_value&$filter=conditional_resource eq ?'\n\t\t\t\t\ttx.executeSql('''SELECT \"conditional_field\".\"field name\" AS \"field_name\", \"conditional_field\".\"field value\" AS \"field_value\"\n\t\t\t\t\t\t\t\t\tFROM \"conditional_field\"\n\t\t\t\t\t\t\t\t\tWHERE \"conditional_field\".\"conditional resource\" = ?;''', [conditionalResourceID])\n\t\t\t\t\t.then (fields) ->\n\t\t\t\t\t\tfieldsObject = {}\n\t\t\t\t\t\tPromise.all fields.rows.map (field) ->\n\t\t\t\t\t\t\tfieldName = field.field_name.replace(clientModel.resourceName + '.', '')\n\t\t\t\t\t\t\tfieldValue = field.field_value\n\t\t\t\t\t\t\tmodelField = _.find(clientModel.fields, { fieldName })\n\t\t\t\t\t\t\tif modelField.dataType == 'ForeignKey' and _.isNaN(Number(fieldValue))\n\t\t\t\t\t\t\t\tif !placeholders.hasOwnProperty(fieldValue)\n\t\t\t\t\t\t\t\t\tthrow new Error('Cannot resolve placeholder' + fieldValue)\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tplaceholders[fieldValue].promise\n\t\t\t\t\t\t\t\t\t.then (resolvedID) ->\n\t\t\t\t\t\t\t\t\t\tfieldsObject[fieldName] = resolvedID\n\t\t\t\t\t\t\t\t\t.catch ->\n\t\t\t\t\t\t\t\t\t\tthrow new Error('Placeholder failed' + fieldValue)\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tfieldsObject[fieldName] = fieldValue\n\t\t\t\t\t\t.then ->\n\t\t\t\t\t\t\treturn fieldsObject\n\n\t\t\t\t# 'GET', '/transaction/conditional_resource?$select=id,lock,resource_type,conditional_type,placeholder&$filter=transaction eq ?'\n\t\t\t\ttx.executeSql('''\n\t\t\t\t\tSELECT \"conditional_resource\".\"id\", \"conditional_resource\".\"lock\", \"conditional_resource\".\"resource type\" AS \"resource_type\", \"conditional_resource\".\"conditional type\" AS \"conditional_type\", \"conditional_resource\".\"placeholder\"\n\t\t\t\t\tFROM \"conditional_resource\"\n\t\t\t\t\tWHERE \"conditional_resource\".\"transaction\" = ?;\n\t\t\t\t''', [transactionID])\n\t\t\t\t.then (conditionalResources) ->\n\t\t\t\t\tconditionalResources.rows.forEach (conditionalResource) ->\n\t\t\t\t\t\tplaceholder = conditionalResource.placeholder\n\t\t\t\t\t\tif placeholder? and placeholder.length > 0\n\t\t\t\t\t\t\tplaceholders[placeholder] = {}\n\t\t\t\t\t\t\tplaceholders[placeholder].promise = new Promise (resolve, reject) ->\n\t\t\t\t\t\t\t\tplaceholders[placeholder].resolve = resolve\n\t\t\t\t\t\t\t\tplaceholders[placeholder].reject = reject\n\n\t\t\t\t\t# get conditional resources (if exist)\n\t\t\t\t\tPromise.all conditionalResources.rows.map (conditionalResource) ->\n\t\t\t\t\t\tplaceholder = conditionalResource.placeholder\n\t\t\t\t\t\tlockID = conditionalResource.lock\n\t\t\t\t\t\tdoCleanup = ->\n\t\t\t\t\t\t\tPromise.all([\n\t\t\t\t\t\t\t\ttx.executeSql('DELETE FROM \"conditional_field\" WHERE \"conditional resource\" = ?;', [conditionalResource.id])\n\t\t\t\t\t\t\t\ttx.executeSql('DELETE FROM \"conditional_resource\" WHERE \"lock\" = ?;', [lockID])\n\t\t\t\t\t\t\t\ttx.executeSql('DELETE FROM \"resource-is_under-lock\" WHERE \"lock\" = ?;', [lockID])\n\t\t\t\t\t\t\t\ttx.executeSql('DELETE FROM \"lock\" WHERE \"id\" = ?;', [lockID])\n\t\t\t\t\t\t\t])\n\n\t\t\t\t\t\tpassthrough = { tx }\n\n\t\t\t\t\t\tclientModel = clientModels[modelName].resources[conditionalResource.resource_type]\n\t\t\t\t\t\turl = modelName + '/' + conditionalResource.resource_type\n\t\t\t\t\t\tswitch conditionalResource.conditional_type\n\t\t\t\t\t\t\twhen 'DELETE'\n\t\t\t\t\t\t\t\tgetLockedRow(lockID)\n\t\t\t\t\t\t\t\t.then (lockedRow) ->\n\t\t\t\t\t\t\t\t\tlockedRow = lockedRow.rows.item(0)\n\t\t\t\t\t\t\t\t\turl = url + '?$filter=' + clientModel.idField + ' eq ' + lockedRow.resource_id\n\t\t\t\t\t\t\t\t\tsbvrUtils.PinejsClient::delete({ url, passthrough })\n\t\t\t\t\t\t\t\t.then(doCleanup)\n\t\t\t\t\t\t\twhen 'EDIT'\n\t\t\t\t\t\t\t\tgetLockedRow(lockID)\n\t\t\t\t\t\t\t\t.then (lockedRow) ->\n\t\t\t\t\t\t\t\t\tlockedRow = lockedRow.rows.item(0)\n\t\t\t\t\t\t\t\t\tgetFieldsObject(conditionalResource.id, clientModel)\n\t\t\t\t\t\t\t\t\t.then (body) ->\n\t\t\t\t\t\t\t\t\t\tbody[clientModel.idField] = lockedRow.resource_id\n\t\t\t\t\t\t\t\t\t\tsbvrUtils.PinejsClient::put({ url, body, passthrough })\n\t\t\t\t\t\t\t\t.then(doCleanup)\n\t\t\t\t\t\t\twhen 'ADD'\n\t\t\t\t\t\t\t\tgetFieldsObject(conditionalResource.id, clientModel)\n\t\t\t\t\t\t\t\t.then (body) ->\n\t\t\t\t\t\t\t\t\tsbvrUtils.PinejsClient::post({ url, body, passthrough })\n\t\t\t\t\t\t\t\t.then (result) ->\n\t\t\t\t\t\t\t\t\tplaceholders[placeholder].resolve(result.id)\n\t\t\t\t\t\t\t\t.then(doCleanup)\n\t\t\t\t\t\t\t\t.catch (err) ->\n\t\t\t\t\t\t\t\t\tplaceholders[placeholder].reject(err)\n\t\t\t\t\t\t\t\t\tthrow err\n\t\t\t\t.then (err) ->\n\t\t\t\t\ttx.executeSql('DELETE FROM \"transaction\" WHERE \"id\" = ?;', [transactionID])\n\t\t\t\t.then (result) ->\n\t\t\t\t\tsbvrUtils.validateModel(tx, modelName)\n\t\t\t\t.catch (err) ->\n\t\t\t\t\ttx.rollback()\n\t\t\t\t\tthrow err\n\t\t\t\t.then ->\n\t\t\t\t\ttx.end()\n\n\t\t# TODO: these really should be specific to the model - currently they will only work for the first model added\n\t\tapp.post '/transaction/execute', (req, res, next) ->\n\t\t\tid = Number(req.body.id)\n\t\t\tif _.isNaN(id)\n\t\t\t\tres.sendStatus(404)\n\t\t\telse\n\t\t\t\tendTransaction(id)\n\t\t\t\t.then ->\n\t\t\t\t\tres.sendStatus(200)\n\t\t\t\t.catch (err) ->\n\t\t\t\t\tconsole.error('Error ending transaction', err, err.stack)\n\t\t\t\t\tres.status(404).json(err)\n\t\tapp.get '/transaction', (req, res, next) ->\n\t\t\tres.json(\n\t\t\t\ttransactionURI: '/transaction/transaction'\n\t\t\t\tconditionalResourceURI: '/transaction/conditional_resource'\n\t\t\t\tconditionalFieldURI: '/transaction/conditional_field'\n\t\t\t\tlockURI: '/transaction/lock'\n\t\t\t\ttransactionLockURI: '/transaction/lock__belongs_to__transaction'\n\t\t\t\tresourceURI: '/transaction/resource'\n\t\t\t\tlockResourceURI: '/transaction/resource__is_under__lock'\n\t\t\t\texclusiveLockURI: '/transaction/lock__is_exclusive'\n\t\t\t\tcommitTransactionURI: '/transaction/execute'\n\t\t\t)\n\t\tapp.all('/transaction/*', sbvrUtils.handleODataRequest)\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/src/http-transactions/transactions.coffee","module.exports = \"Vocabulary: transaction\\n\\nTerm:       resource id\\n\\tConcept type: Text (Type)\\nTerm:       resource type\\n\\tConcept type: Text (Type)\\nTerm:       field name\\n\\tConcept type: Text (Type)\\nTerm:       field value\\n\\tConcept type: Text (Type)\\nTerm:       placeholder\\n\\tConcept type: Short Text (Type)\\n\\nTerm:       resource\\n\\tReference Scheme: resource id\\nFact type: resource has resource id\\n\\tNecessity: Each resource has exactly 1 resource id.\\nFact type: resource has resource type\\n\\tNecessity: Each resource has exactly 1 resource type.\\n\\nTerm:       transaction\\n\\nTerm:       lock\\nFact type:  lock is exclusive\\nFact type:  lock belongs to transaction\\n\\tNecessity: Each lock belongs to exactly 1 transaction.\\nFact type:  resource is under lock\\n\\tSynonymous Form: lock is on resource\\nRule:       It is obligatory that each resource that is under a lock that is exclusive, is under at most 1 lock.\\n\\nTerm:       conditional type\\n\\tConcept Type: Short Text (Type)\\n\\tDefinition: \\\"ADD\\\", \\\"EDIT\\\" or \\\"DELETE\\\"\\n\\nTerm:       conditional resource\\nFact type:  conditional resource belongs to transaction\\n\\tNecessity: Each conditional resource belongs to exactly 1 transaction.\\nFact type:  conditional resource has lock\\n\\tNecessity: Each conditional resource has at most 1 lock.\\nFact type:  conditional resource has resource type\\n\\tNecessity: Each conditional resource has exactly 1 resource type.\\nFact type:  conditional resource has conditional type\\n\\tNecessity: Each conditional resource has exactly 1 conditional type.\\nFact type:  conditional resource has placeholder\\n\\tNecessity: Each conditional resource has at most 1 placeholder.\\n--Rule:       It is obligatory that each conditional resource that has a placeholder, has a conditional type that is of \\\"ADD\\\".\\n\\nTerm:       conditional field\\n\\tReference Scheme: field name\\nFact type:  conditional field has field name\\n\\tNecessity: Each conditional field has exactly 1 field name.\\nFact type:  conditional field has field value\\n\\tNecessity: Each conditional field has at most 1 field value.\\nFact type:  conditional field is of conditional resource\\n\\tNecessity: Each conditional field is of exactly 1 conditional resource.\\n\\n--Rule:       It is obligatory that each conditional resource that has a conditional type that is of \\\"EDIT\\\" or \\\"DELETE\\\", has a lock that is exclusive\\nRule:       It is obligatory that each conditional resource that has a lock, has a resource type that is of a resource that the lock is on.\\nRule:       It is obligatory that each conditional resource that has a lock, belongs to a transaction that the lock belongs to.\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/server/src/http-transactions/transaction.sbvr\n// module id = 148\n// module chunks = 0","Promise = require 'bluebird'\npermissions = require '../sbvr-api/permissions'\n\nexports.config =\n\tmodels: [\n\t\tcustomServerCode: exports\n\t]\nexports.setup = (app, sbvrUtils) ->\n\texports.checkPassword = checkPassword = (username, password, done) ->\n\t\tpermissions.checkPassword(username, password)\n\t\t.catch ->\n\t\t\treturn false\n\t\t.then (user) ->\n\t\t\tdone(null, user)\n\n\tif !process.browser\n\t\tpassport = require('passport')\n\t\tapp.use(passport.initialize())\n\t\tapp.use(passport.session())\n\n\t\tLocalStrategy = require('passport-local').Strategy\n\n\t\tpassport.serializeUser (user, done)  ->\n\t\t\tdone(null, user)\n\n\t\tpassport.deserializeUser (user, done) ->\n\t\t\tdone(null, user)\n\n\t\tpassport.use(new LocalStrategy(checkPassword))\n\n\t\tlogin = (fn) ->\n\t\t\t(req, res, next) ->\n\t\t\t\tpassport.authenticate('local', (err, user) ->\n\t\t\t\t\tif err or !user\n\t\t\t\t\t\tfn(err, user, req, res, next)\n\t\t\t\t\t\treturn\n\t\t\t\t\treq.login user, (err) ->\n\t\t\t\t\t\tfn(err, user, req, res, next)\n\t\t\t\t)(req, res, next)\n\n\t\tlogout = (req, res, next) ->\n\t\t\treq.logout()\n\t\t\tnext()\n\telse\n\t\tdo ->\n\t\t\t_user = false\n\t\t\tapp.use (req, res, next) ->\n\t\t\t\tif _user isnt false\n\t\t\t\t\treq.user = _user\n\t\t\t\tnext()\n\n\t\t\tlogin = (fn) ->\n\t\t\t\t(req, res, next) ->\n\t\t\t\t\tcheckPassword req.body.username, req.body.password, (err, user) ->\n\t\t\t\t\t\tif user\n\t\t\t\t\t\t\t_user = user\n\t\t\t\t\t\tfn(err, user, req, res, next)\n\n\t\t\tlogout = (req, res, next) ->\n\t\t\t\treq.user = null\n\t\t\t\t_user = false\n\t\t\t\tnext()\n\t# Takes a fn with signature (req, res, next, err, user) - a standard express signature with the addition of the err/user entries.\n\t# And returns a middleware that will handle logging in using `username` and `password` body properties\n\texports.login = login\n\t# Returns a middleware that logs the user out and then calls next()\n\texports.logout = logout\n\treturn Promise.resolve()\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/src/passport-pinejs/passport-pinejs.coffee","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 150\n// module chunks = 0"],"sourceRoot":""}