{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"lodash\"","webpack:///./node_modules/@balena/sbvr-types/out/type-utils.js","webpack:///./node_modules/es5-ext/object/valid-callable.js","webpack:///./node_modules/d/index.js","webpack:///./node_modules/es5-ext/object/valid-value.js","webpack:///./src/sbvr-api/sbvr-utils.ts","webpack:///./node_modules/es5-ext/object/is-value.js","webpack:///./node_modules/safe-buffer/index.js","webpack:///./node_modules/ometa-js/lib/ometajs/core.js","webpack:///./node_modules/es5-ext/number/to-pos-integer.js","webpack:///./node_modules/es6-symbol/index.js","webpack:///./src/config-loader/env.ts","webpack:///./node_modules/@balena/sbvr-types/out/index.js","webpack:///./node_modules/inherits/inherits.js","webpack:///./node_modules/sha.js/hash.js","webpack:///./node_modules/@balena/odata-to-abstract-sql/out/odata-to-abstract-sql.js","webpack:///./node_modules/memoizee/index.js","webpack:///./node_modules/type/value/is.js","webpack:///./src/sbvr-api/permissions.ts","webpack:///./src/sbvr-api/errors.ts","webpack:///./node_modules/es5-ext/array/from/index.js","webpack:///external \"bluebird\"","webpack:///./node_modules/@balena/abstract-sql-compiler/out/AbstractSQLCompiler.js","webpack:///./node_modules/es5-ext/object/normalize-options.js","webpack:///./node_modules/es5-ext/object/for-each.js","webpack:///./node_modules/es5-ext/object/assign/index.js","webpack:///./node_modules/es5-ext/function/_define-length.js","webpack:///./node_modules/ext/global-this/index.js","webpack:///./node_modules/es5-ext/function/is-arguments.js","webpack:///./node_modules/es5-ext/string/is-string.js","webpack:///./src/sbvr-api/hooks.ts","webpack:///./node_modules/memoizee/weak.js","webpack:///./src/server-glue/module.ts","webpack:///external \"typed-error\"","webpack:///external \"fs\"","webpack:///./node_modules/@balena/abstract-sql-compiler/out/AbstractSQLOptimiser.js","webpack:///external \"crypto\"","webpack:///./node_modules/@balena/sbvr-parser/sbvr-libs.js","webpack:///./node_modules/memoizee/lib/resolve-length.js","webpack:///./node_modules/es5-ext/object/is-object.js","webpack:///./node_modules/type/object/is.js","webpack:///./node_modules/es5-ext/array/#/e-index-of.js","webpack:///./node_modules/es5-ext/object/map.js","webpack:///./node_modules/next-tick/index.js","webpack:///./node_modules/deep-freeze/index.js","webpack:///./node_modules/es5-ext/object/set-prototype-of/index.js","webpack:///./src/database-layer/db.ts","webpack:///./node_modules/@balena/abstract-sql-compiler/out/AbstractSQLRules2SQL.js","webpack:///./node_modules/sha.js/sha256.js","webpack:///./node_modules/sha.js/sha512.js","webpack:///./node_modules/@balena/lf-to-abstract-sql/sbvr-compiler-libs.js","webpack:///./node_modules/es5-ext/error/custom.js","webpack:///./node_modules/es5-ext/object/mixin.js","webpack:///./node_modules/type/plain-function/is.js","webpack:///./node_modules/es5-ext/string/#/contains/index.js","webpack:///./node_modules/memoizee/lib/resolve-resolve.js","webpack:///./node_modules/es6-symbol/validate-symbol.js","webpack:///./node_modules/memoizee/lib/resolve-normalize.js","webpack:///./node_modules/es5-ext/object/is-callable.js","webpack:///./node_modules/is-promise/index.js","webpack:///./node_modules/randomstring/index.js","webpack:///./src/extended-sbvr-parser/extended-sbvr-parser.ts","webpack:///./src/migrator/migrator.ts","webpack:///./node_modules/@balena/odata-parser/odata-parser.js","webpack:///./src/sbvr-api/control-flow.ts","webpack:///./src/sbvr-api/uri-parser.ts","webpack:///./node_modules/es5-ext/object/copy.js","webpack:///./node_modules/es5-ext/object/set-prototype-of/is-implemented.js","webpack:///./node_modules/es5-ext/object/set-prototype-of/shim.js","webpack:///./node_modules/es6-iterator/get.js","webpack:///./node_modules/es6-iterator/index.js","webpack:///./node_modules/type/lib/resolve-exception.js","webpack:///./src/sbvr-api/abstract-sql.ts","webpack:///./src/server-glue/server.ts","webpack:///./src/server-glue/sbvr-loader.ts","webpack:///./node_modules/eventemitter3/index.js","webpack:///external \"pg\"","webpack:///./node_modules/pg-connection-string/index.js","webpack:///external \"url\"","webpack:///external \"mysql\"","webpack:///./src/config-loader/config-loader.ts","webpack:///external \"path\"","webpack:///./src/sbvr-api/cached-compile.ts","webpack:///./node_modules/@balena/sbvr-types/out/types/big-integer.js","webpack:///./node_modules/@balena/sbvr-types/out/types/boolean.js","webpack:///./node_modules/@balena/sbvr-types/out/types/case-insensitive-text.js","webpack:///./node_modules/@balena/sbvr-types/out/types/color.js","webpack:///./node_modules/@balena/sbvr-types/out/types/concept-type.js","webpack:///./node_modules/@balena/sbvr-types/out/types/date.js","webpack:///./node_modules/@balena/sbvr-types/out/types/date-time.js","webpack:///./node_modules/@balena/sbvr-types/out/types/file.js","webpack:///./node_modules/@balena/sbvr-types/out/types/foreign-key.js","webpack:///./node_modules/@balena/sbvr-types/out/types/hashed.js","webpack:///external \"bcrypt\"","webpack:///external \"bcryptjs\"","webpack:///./node_modules/@balena/sbvr-types/out/types/integer.js","webpack:///./node_modules/@balena/sbvr-types/out/types/interval.js","webpack:///./node_modules/@balena/sbvr-types/out/types/json.js","webpack:///./node_modules/@balena/sbvr-types/out/types/real.js","webpack:///./node_modules/@balena/sbvr-types/out/types/serial.js","webpack:///./node_modules/@balena/sbvr-types/out/types/sha.js","webpack:///./node_modules/sha.js/index.js","webpack:///./node_modules/sha.js/sha.js","webpack:///external \"util\"","webpack:///./node_modules/inherits/inherits_browser.js","webpack:///external \"buffer\"","webpack:///./node_modules/sha.js/sha1.js","webpack:///./node_modules/sha.js/sha224.js","webpack:///./node_modules/sha.js/sha384.js","webpack:///./node_modules/@balena/sbvr-types/out/types/short-text.js","webpack:///./node_modules/@balena/sbvr-types/out/types/text.js","webpack:///./node_modules/@balena/sbvr-types/out/types/time.js","webpack:///./node_modules/@balena/abstract-sql-compiler/out/AbstractSQLSchemaOptimiser.js","webpack:///./node_modules/@balena/abstract-sql-compiler/out/referenced-fields.js","webpack:///./node_modules/@balena/lf-to-abstract-sql/index.js","webpack:///./node_modules/@balena/lf-to-abstract-sql/lf-to-abstract-sql-prep.js","webpack:///./node_modules/@balena/sbvr-parser/lf-optimiser.js","webpack:///./node_modules/@balena/sbvr-parser/lf-validator.js","webpack:///./node_modules/@balena/lf-to-abstract-sql/lf-to-abstract-sql.js","webpack:///./node_modules/es5-ext/function/noop.js","webpack:///./node_modules/es5-ext/number/to-integer.js","webpack:///./node_modules/es5-ext/math/sign/index.js","webpack:///./node_modules/es5-ext/math/sign/is-implemented.js","webpack:///./node_modules/es5-ext/math/sign/shim.js","webpack:///./node_modules/memoizee/plain.js","webpack:///./node_modules/es5-ext/object/_iterate.js","webpack:///./node_modules/memoizee/lib/configure-map.js","webpack:///./node_modules/es5-ext/object/assign/is-implemented.js","webpack:///./node_modules/es5-ext/object/assign/shim.js","webpack:///./node_modules/es5-ext/object/keys/index.js","webpack:///./node_modules/es5-ext/object/keys/is-implemented.js","webpack:///./node_modules/es5-ext/object/keys/shim.js","webpack:///./node_modules/type/function/is.js","webpack:///./node_modules/type/prototype/is.js","webpack:///./node_modules/es5-ext/string/#/contains/is-implemented.js","webpack:///./node_modules/es5-ext/string/#/contains/shim.js","webpack:///./node_modules/event-emitter/index.js","webpack:///./node_modules/es5-ext/array/to-array.js","webpack:///./node_modules/es5-ext/array/from/is-implemented.js","webpack:///./node_modules/es5-ext/array/from/shim.js","webpack:///./node_modules/es6-symbol/is-implemented.js","webpack:///./node_modules/ext/global-this/is-implemented.js","webpack:///./node_modules/ext/global-this/implementation.js","webpack:///./node_modules/es6-symbol/polyfill.js","webpack:///./node_modules/es6-symbol/is-symbol.js","webpack:///./node_modules/es6-symbol/lib/private/generate-name.js","webpack:///./node_modules/es6-symbol/lib/private/setup/standard-symbols.js","webpack:///./node_modules/es6-symbol/lib/private/setup/symbol-registry.js","webpack:///./node_modules/es5-ext/function/is-function.js","webpack:///./node_modules/memoizee/normalizers/primitive.js","webpack:///./node_modules/memoizee/normalizers/get-primitive-fixed.js","webpack:///./node_modules/memoizee/normalizers/get.js","webpack:///./node_modules/es5-ext/number/is-nan/index.js","webpack:///./node_modules/es5-ext/number/is-nan/is-implemented.js","webpack:///./node_modules/es5-ext/number/is-nan/shim.js","webpack:///./node_modules/memoizee/normalizers/get-1.js","webpack:///./node_modules/memoizee/normalizers/get-fixed.js","webpack:///./node_modules/memoizee/ext/async.js","webpack:///./node_modules/memoizee/ext/promise.js","webpack:///./node_modules/es5-ext/object/primitive-set.js","webpack:///./node_modules/es5-ext/object/validate-stringifiable-value.js","webpack:///./node_modules/es5-ext/object/validate-stringifiable.js","webpack:///./node_modules/es5-ext/to-short-string-representation.js","webpack:///./node_modules/es5-ext/safe-to-string.js","webpack:///./node_modules/memoizee/ext/dispose.js","webpack:///./node_modules/memoizee/ext/max-age.js","webpack:///./node_modules/timers-ext/valid-timeout.js","webpack:///./node_modules/timers-ext/max-timeout.js","webpack:///./node_modules/memoizee/ext/max.js","webpack:///./node_modules/lru-queue/index.js","webpack:///./node_modules/memoizee/ext/ref-counter.js","webpack:///./node_modules/randomstring/lib/randomstring.js","webpack:///./node_modules/randomstring/node_modules/randombytes/index.js","webpack:///./node_modules/randomstring/lib/charset.js","webpack:///./node_modules/array-uniq/index.js","webpack:///external \"pinejs-client-core\"","webpack:///./node_modules/@balena/sbvr-parser/sbvr-parser.js","webpack:///./node_modules/@balena/sbvr-parser/inflection.js","webpack:///./node_modules/@balena/sbvr-types/Type.sbvr","webpack:///./src/migrator/migrations.sbvr","webpack:///./src/odata-metadata/odata-metadata-generator.ts","webpack:///./src/sbvr-api/dev.sbvr","webpack:///./node_modules/memoizee/lib/weak.js","webpack:///./node_modules/es5-ext/function/#/partial.js","webpack:///./node_modules/es6-weak-map/index.js","webpack:///./node_modules/es6-weak-map/is-implemented.js","webpack:///./node_modules/es6-weak-map/polyfill.js","webpack:///./node_modules/es5-ext/object/create.js","webpack:///./node_modules/es5-ext/object/valid-object.js","webpack:///./node_modules/es5-ext/string/random-uniq.js","webpack:///./node_modules/es6-iterator/array.js","webpack:///./node_modules/es5-ext/array/#/clear.js","webpack:///./node_modules/d/auto-bind.js","webpack:///./node_modules/type/value/ensure.js","webpack:///./node_modules/type/string/coerce.js","webpack:///./node_modules/type/lib/to-short-string.js","webpack:///./node_modules/type/lib/safe-to-string.js","webpack:///./node_modules/type/plain-function/ensure.js","webpack:///./node_modules/es6-iterator/string.js","webpack:///./node_modules/es6-iterator/valid-iterable.js","webpack:///./node_modules/es6-iterator/is-iterable.js","webpack:///./node_modules/es6-iterator/for-of.js","webpack:///./node_modules/es6-weak-map/is-native-implemented.js","webpack:///./src/sbvr-api/user.sbvr","webpack:///./src/sbvr-api/odata-response.ts","webpack:///./src/config-loader sync","webpack:///./src/pinejs-session-store/pinejs-session-store.ts","webpack:///external \"express-session\"","webpack:///./src/data-server/sbvr-server.js","webpack:///./src/http-transactions/transactions.js","webpack:///./src/http-transactions/transaction.sbvr","webpack:///./src/passport-pinejs/passport-pinejs.ts","webpack:///./src/express-emulator/express.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","require","validate","nativeFactTypeTemplates","checkRequired","validateFn","async","runCheck","required","Error","equality","from","to","comparison","integer","processedValue","parseInt","Number","isNaN","text","length","date","processedDate","Date","getTime","fn","TypeError","isValue","isPlainFunction","assign","normalizeOpts","contains","dscr","e","w","options","desc","arguments","configurable","writable","gs","set","undefined","sbvrTypes","devModel","addPureHook","addSideEffectHook","db","resolveOdataBind","LF2AbstractSQLTranslator","LF2AbstractSQL","createTranslator","LF2AbstractSQLTranslatorVersion","models","memoizedResolvedSynonym","memoizeWeak","abstractSqlModel","resourceName","sqlName","odataNameToSqlName","_","split","map","namePart","synonym","synonyms","join","primitive","resolveSynonym","request","getAbstractSqlModel","memoizedResolveNavigationResource","navigationName","navigation","flatMap","concat","resolvedResourceName","mapping","relationships","sqlNameToODataName","tables","resolveNavigationResource","prettifyConstraintError","err","ConstraintError","matches","UniqueConstraintError","engine","exec","message","RegExp","columns","ExclusionConstraintError","ForeignKeyConstraintError","tableName","CheckConstraintError","table","checks","checkName","check","find","description","BadRequestError","validateModel","tx","modelName","Promise","all","sql","rules","rule","isRuleAffected","values","getAndCheckBindValues","vocabulary","odataBinds","bindings","result","await","v","executeSql","rows","SbvrValidationError","structuredEnglish","generateLfModel","seModel","cachedCompile","ExtendedSBVRParser","version","matchAll","generateAbstractSqlModel","lfModel","generateSqlModel","abstractSql","targetDatabaseEngine","AbstractSQLCompiler","compileSchema","generateModels","model","apiRoot","vocab","modelText","se","maybeAbstractSql","lf","console","error","odataMetadata","generateODataMetadata","executeModel","executeModels","execModels","compiledModels","migrator","run","compiledModel","createStatement","createSchema","promise","catch","warn","postRun","odataResponse","prepareModel","deepFreeze","api","PinejsClient","logger","logging","defaultSetting","default","k","keys","noop","updateModel","modelType","dev","delete","resource","passthrough","req","permissions","root","$filter","is_of__vocabulary","model_type","rootRead","$select","method","uri","body","model_value","id","runURI","cleanupModel","deleteModel","transaction","dropStatements","dropSchema","dropStatement","isWhereNode","x","isEqualsNode","getID","abstractSqlQuery","idField","whereClause","slice","runRule","LF2AbstractSQLPrepHack","LF2AbstractSQLPrep","_extend","this","_pred","translator","createInstance","addTypes","slfModel","ruleLF","pop","match","push","reset","formulationType","fetchingViolators","ruleAbs","last","ruleBody","node","wantNonViolators","queryPart","compiledRule","compileRule","Array","isArray","query","odataIdField","ids","row","filter","uniq","odataResult","__formulationType","__resourceName","PinejsClientCore","url","custom","InternalRequestError","user","apiKey","isObject","stack","actor","forEach","emulatedReq","on","params","runODataRequest","response","isError","responseBody","status","ErrorClass","statusCodeToError","HttpError","getIdField","getAffectedIds","args","affectedIds","pendingAffectedIds","$getAffectedIds","includes","uriParser","parseOData","resourceTable","odataQuery","properties","$expand","addPermissions","translateUri","compileRequest","runQuery","runTransaction","newTx","env","DEBUG","log","reqHooks","getHooks","transactions","tryCancelRequest","isClosed","rollback","rollbackRequestHooks","mapSeries","controlFlow","getMappingFn","headers","runHooks","requests","batch","data","prepareRequest","$request","hooks","translatedRequest","results","responses","requestPart","Bluebird","changeSetResults","Map","changeSetRunner","runChangeSet","runRequest","convertToHttpError","handleODataRequest","res","next","getResponseBody","headerValue","headerName","json","sendStatus","sendMulti","send","PermissionError","UnauthorizedError","ConflictError","SqlCompilationError","TranslationError","ParsingError","PermissionParsingError","DatabaseError","NotFoundError","runGet","runPost","runPut","runDelete","SyntaxError","EvalError","RangeError","ReferenceError","URIError","prepareResponse","updateBinds","_defer","tag","ref","parseId","respondGet","respondPost","respondPut","respondDelete","respondOptions","MethodNotAllowedError","callback","queryIndex","returningIdField","sqlQuery","sqlResult","_req","format","$format","metadata","process","includeMetadata","contentType","rowsAffected","insertId","location","resourceURI","returnResource","Location","executeStandardModels","migrations","config","info","setup","_app","$db","exit","_undefined","val","buffer","Buffer","copyProps","src","dst","alloc","allocUnsafe","allocUnsafeSlow","SafeBuffer","arg","encodingOrOffset","size","fill","encoding","buf","SlowBuffer","fail","OMeta","child","objectThatDelegatesTo","obj","props","clone","isSequenceable","getTag","_id_","isImmutable","lookup","success","fallback","always","after","identity","ans","returnTrue","returnFalse","throwFail","OMInputStream","hd","tl","memo","lst","idx","head","tail","type","constructor","upTo","that","curr","String","OMInputStreamEnd","ListOMInputStream","makeListOMInputStream","makeOMInputStreamProxy","target","_fail","_enableTokens","rulesToTrack","_tokensEnabled","_addToken","startInput","endInput","ruleArgs","indexOf","tokens","_enableBranchTracking","branches","_addBranch","input","_getBranches","_not","self","origInput","origAddBranch","origAddToken","_apply","memoRec","nextInput","failer","sentinel","lookupFunc","_superApply","recv","_applyWithArgs","ruleFn","ruleFnArity","Math","min","_prependInput","apply","_superApplyWithArgs","_disablePrependingInput","memoizeParameterizedRules","newInput","b","_lookahead","_or","argIdx","_xor","ruleName","disableXORs","_opt","_many","y","resetAndReturnFalse","_many1","_form","anything","_consumedBy","_idxConsumedBy","fromIdx","toIdx","_interleave","currInput","allDone","f","_currIdx","lowerCaseAnything","toLowerCase","end","pos","empty","foreign","grammar","grammarInstance","exactly","wanted","number","string","space","charCodeAt","spaces","digit","lower","upper","letter","letterOrDigit","firstAndRest","first","rest","seq","xs","notLast","listOf","delim","token","cs","fromTo","hexDigit","escapedChar","fromCharCode","initialize","matchFailed","listyObj","setInput","inputHead","realArgs","source","char","start","line","col","charAt","aRule","enableReusingMemoizations","sideEffectingRules","previousText","divergencePoint","test","cleanInput","secondaryDivergencePoint","memoTokens","ruleNames","duplicateTokens","splice","factory","toInteger","max","cache","permissionsLookup","parsePermissions","odataToAbstractSql","abstractSqlCompiler","timeoutMS","TRANSACTION_TIMEOUT_MS","poolSize","idleTimeoutMillis","statementTimeout","queryTimeout","connectionTimeoutMillis","keepAlive","rollbackTimeout","lockTimeout","lockFailDelay","BigInteger","Boolean","CaseInsensitiveText","Color","ConceptType","DateTime","File","ForeignKey","Hashed","Integer","Interval","JSON","Real","Serial","SHA","ShortText","Text","Time","util","inherits","Hash","blockSize","finalSize","_block","_finalSize","_blockSize","_len","update","enc","block","accum","offset","assigned","remainder","_update","digest","rem","bits","writeUInt32BE","lowBits","highBits","hash","_hash","toString","OData2AbstractSQL","isBindReference","rewriteBinds","memoize","randomstring","convertToModernDefinition","definition","binds","extraBinds","eq","ne","gt","ge","lt","le","operations","add","sub","mul","div","rewriteComputed","computed","tableAlias","rewrittenComputed","cloneDeep","modifyAbstractSql","referencedField","containsQueryOption","opts","Query","select","where","extras","otherQuery","bypassDefinition","rewriteDefinition","extraBindVars","bindVarsLength","queryType","compiled","replace","odataName","abstractSqlComponent","existingBinds","inc","maybeBind","addBodyKey","fieldName","bodyKeys","extraBodyVars","qualifiedIDField","clientModel","methods","resourceAliases","MAX_ALIAS_LENGTH","RANDOM_ALIAS_LENGTH","shortAliases","generateShortAliases","checkAlias","alias","aliasLength","part","shortAlias","part2","part3","shortPart2","shortPart","randStr","generate","path","savedMethods","tree","isEmpty","PathSegment","putReset","insertQuery","compile","_a","hasQueryOpts","Resource","defaultResource","fromResource","referencedIdField","pathKeyWhere","PathKey","addPathKey","bindVars","Expands","childQuery","merge","NavigateResources","link","linkResource","aliasedField","FieldContainedIn","ReferencedField","Bind","resourceMapping","ResourceMapping","BindVars","entries","subQuery","bindVar","bindVarSelectQuery","fields","field","dataType","unionResource","isTable","found","AddQueryOptions","count","AddCountField","AddSelectFields","fieldNames","sqlFieldNames","sort","resourceField","index","indexes","some","isEqual","namedKeys","optional","AddExtraFroms","BooleanMatch","orderby","OrderByProperties","orderings","ordering","ReferencedProperty","order","toUpperCase","mappedFieldName","compact","parentResource","resourceAlias","relationshipMapping","ResolveRelationship","Synonym","resourceAlias2","verb","resourceMappings","relationship","resourceRelations","relationshipPath","$","odataFieldNames","prop","Property","differenceWith","a","AliasSelectField","op1","Operand","op2","capitalize","bool","FunctionMatch","matcher","NullMatch","NumberMatch","TextMatch","DateMatch","DurationMatch","lambda","AddNavigation","identifier","expression","Method","Lambda","propResource","AliasedFunction","_optional","isDate","duration","pick","omitBy","isNil","omit","expands","expand","expandResource","nestedExpandQuery","expandQuery","SelectFilter","$orderby","OrderBy","$top","limit","$skip","linkedResource","linkedTableAlias","nextProp","extraResource","rewrittenDefinition","referencedResource","subDefinition","computedFieldQuery","addAliases","origAliasParts","trie","buildTrie","aliasPart","$suffix","traverseNodes","str","lowerCaseAliasParts","origAliasPart","getRelationships","nestedRelationships","relationshipKeys","aliasParts","union","reject","resolveLength","plain","normalizer","dispose","maxAge","refCounter","userModel","DEFAULT_ACTOR_BIND","DEFAULT_ACTOR_BIND_REGEX","escapeRegExp","methodPermissions","GET","PUT","and","POST","PATCH","MERGE","DELETE","$parsePermissions","ODataParser","parse","startRule","bindsLength","cloneDeepWith","isInteger","odata","isAnd","isOr","nestedCheck","stringCallback","subcheck","checkTypes","checkType","or","collapsePermissionFilters","namespaceRelationships","getPermissionsLookup","permission","condition","$checkPermissions","actionList","checkObject","permissionCheck","resourcePermission","vocabularyPermission","vocabularyResourcePermission","maybeVocabularyPermission","maybeVocabularyResourcePermission","conditionalPermissions","convertToLambda","replaceObject","element","rewriteSubPermissionBindings","counter","rewrite","buildODataPermission","conditionalPerms","constrainedPermissionError","permissionFilters","collapsedPermissionFilters","generateConstrainedAbstractSql","abstractSQLModel","sbvrUtils","memoizedParseOdata","lambdaAlias","canAccessTrace","canAccessFunction","targetResource","targetResourceName","parentOdata","collapsedParentPermissionFilters","lambdaId","memoizedGetOData2AbstractSQL","canAccess","selectIndex","findIndex","selectField","maybeField","fieldType","onceGetter","propName","nullableFn","thrownErr","deepFreezeExceptDefinition","freeze","getOwnPropertyNames","createBypassDefinition","endsWith","getAlias","permissionsJSON","rewriteRelationship","odata2AbstractSQL","escapedName","possibleTargetResourceName","targetResourceEscaped","foundCanAccessLink","targetResourceAST","currentResourceName","rewriteRelationships","originalAbstractSQLModel","newRelationships","forOwn","stringifiedGetPermissions","stringify","getBoundConstrainedMemoizer","constrainedAbstractSqlModel","origSynonyms","Proxy","permissionSynonym","canonicalForm","origRelationships","bypassResourceName","permissionResourceName","permissionsTable","memoizedGetConstrainedModel","getCheckPasswordQuery","once","Auth","prepare","username","checkPassword","password","userId","actorId","compare","getUserPermissions","getUserPermissionsQuery","$or","is_of__user","$any","$alias","$expr","uhp","expiry_date","$gt","$now","is_of__role","rhp","role","uhr","isFinite","getApiKeyPermissionsQuery","is_of__api_key","khp","api_key","khr","getApiKeyPermissions","getApiKeyActorIdQuery","apiActorPermissionError","getApiKeyActorId","apiKeyResult","apiKeyActorID","is_of__actor","__id","checkApiKey","resolvedApiKey","resolveAuthHeader","expectedScheme","auth","header","parts","scheme","customAuthorizationMiddleware","_res","authorizationMiddleware","resolveApiKey","paramName","customApiKeyMiddleware","apiKeyMiddleware","checkPermissions","getReqPermissions","checkPermissionsMiddleware","action","allowed","getGuestPermissions","guestPermissions","actorIndex","addActorPermissions","actorPermissions","actorBind","actorPermission","isMetadataEndpoint","metadataEndpoints","permissionType","methodPermission","customServerCode","addHook","sideEffects","readOnlyTx","PREPARSE","POSTPARSE","isAction","PRERESPOND","post","POSTRUN","TypedError","super","PaymentRequired","ForbiddenError","NotAcceptableError","ProxyAuthenticationRequiredError","RequestTimeoutError","GoneError","LengthRequiredError","PreconditionFailedError","PayloadTooLargeError","URITooLongError","UnsupportedMediaTypeError","RequestedRangeNotSatisfiableError","ExpectationFailedError","MisdirectedRequestError","UnprocessableEntityError","LockedError","FailedDependencyError","UpgradeRequiredError","PreconditionRequiredError","TooManyRequestsError","RequestHeaderFieldsTooLargeError","UnavailableForLegalReasonsError","NotImplementedError","BadGatewayError","ServiceUnavailableError","GatewayTimeoutError","HTTPVersionNotSupportedError","VariantAlsoNegotiatesError","InsufficientStorageError","LoopDetectedError","NotExtendedError","NetworkAuthenticationRequiredError","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","421","422","423","424","426","428","429","431","451","500","501","502","503","504","505","506","507","508","510","511","websql","mysql","postgres","isResourceNode","isTableNode","isFromNode","Engines","AbstractSQLOptimiser_1","AbstractSQLRules2SQL_1","AbstractSQLSchemaOptimiser_1","referenced_fields_1","validateTypes","mapValues","dataTypeValidate","dataTypeGen","defaultValue","_b","requiredStr","checksString","dbType","types","containsNode","checkNodeTypeFn","abstractSQL","noBinds","AbstractSQLOptimiser","AbstractSQLRules2SQL","ifNotExists","ifNotExistsStr","orReplaceStr","createSchemaStatements","alterSchemaStatements","dropSchemaStatements","fns","functions","fnName","fnDefinition","language","hasDependants","schemaDependencyMap","definitionAbstractSql","createSQL","dropSQL","depends","foreignKeys","createSqlElements","references","referencedTable","fkDefinition","schemaInfo","comment","constraintName","createTriggers","dropTriggers","triggers","trigger","triggerName","when","operation","level","resourceNames","unsolvedDependency","dependency","reverse","ruleStatements","ruleBodyNode","ruleSENode","ruleSE","ruleSQL","ruleBindings","referencedFields","ruleReferencedFields","getReferencedFields","getRuleReferencedFields","generateExport","optimizeSchema","getModifiedFields","opts1","toPosInt","arg1","arg2","mixin","ignore","Function","globalThis","objToString","hookNames","isValidHook","Hook","hook","hookFn","SideEffectHook","rollbackFns","rolledBack","try","settleMapSeries","instantiateHooks","typeHooks","mergeHooks","mergeWith","getResourceHooks","vocabHooks","getVocabHooks","methodHooks","getMethodHooks","apiHooks","clear","OPTIONS","origResourceName","apiRootHooks","resourceHooks","blueprintedHooks","hookName","hookType","defineApi","hooksList","readOnlyArgs","asReadOnly","PinejsSessionStore","envDatabaseOptions","dbModule","engines","databaseURL","DATABASE_URL","init","app","databaseOptions","connect","cfgLoader","configLoader","loadConfig","promises","sbvrServer","then","addModelHooks","isAbstractSqlQuery","getAbstractSqlQuery","checkArgs","checkMinArgs","isNotNullable","escapeForLike","helped","Helper","isEmptySelectQuery","maybeBool","rewriteMatch","matchers","rewriteFn","matchArgs","tryMatches","AnyValue","typeRules","isJSONValue","isDateValue","isTextValue","isNumericValue","isBooleanValue","isDurationValue","UnknownValue","MatchValue","TextValue","NumericValue","BooleanValue","DateValue","DurationValue","isFieldValue","Field","AnyNotNullValue","FieldOp","FieldEquals","FieldNotEquals","Comparison","mathOps","MathOp","ExtractNumericDatePart","Concatenate","Value","FromMatch","MaybeAlias","matchFn","Lower","Upper","JoinMatch","joinType","UnionQuery","SelectQuery","groups","Where","GroupBy","Limit","Offset","Select","From","Join","LeftJoin","RightJoin","FullJoin","CrossJoin","Count","Average","Sum","Cast","EmbeddedText","Null","CurrentTimestamp","CurrentDate","AggregateJSON","Equals","valueIndex","NotEquals","GreaterThan","GreaterThanOrEqual","LessThan","LessThanOrEqual","Like","IsNotDistinctFrom","IsDistinctFrom","Add","Subtract","Multiply","Divide","Year","Month","Day","Hour","Minute","Second","Fractionalseconds","Totalseconds","Concat","Replace","CharacterLength","StrPos","Substring","nums","Right","Tolower","ToLower","Toupper","ToUpper","Trim","Round","Floor","Ceiling","ToDate","ToTime","Coalesce","Case","resultValue","And","maybeHelped","conditions","containsFalse","fieldBuckets","others","fieldBool","fieldRef","fieldBucket","Or","containsTrue","Duration","Exists","NotExists","Not","NotIn","In","vals","InsertQuery","valuesArray","valuesType","valuesRest","UpdateQuery","DeleteQuery","Now","Contains","haystack","needle","Substringof","Startswith","Endswith","IndexOf","Indexof","$noBinds","updateQuery","SBVRLibs","currentVocabulary","vocabularies","factTypes","ApplyFirstExisting","IdentifiersEqual","FollowConceptType","conceptTypes","ConceptTypes","AddVocabulary","baseSynonym","Term","Name","IdentifierChildren","formatFactType","factType","AddFactType","realFactType","mappedFactType","matchingFactTypes","realFactTypePart","mappingFound","j","factTypePart","_traverseFactType","$elf","traverseRecurse","currentFactTypePart","remainingFactType","currentLevel","__valid","finalLevel","finalLevels","optsLength","fnLength","isAsync","function","possibleTypes","numberIsNaN","objHasOwnProperty","abs","floor","searchElement","fromIndex","callable","cb","thisArg","targetObj","ensureCallable","byObserver","Observer","document","createTextNode","queue","currentQueue","shift","observe","characterData","nextTick","queueMicrotask","MutationObserver","WebKitMutationObserver","setImmediate","setTimeout","isFrozen","setPrototypeOf","metrics","EventEmitter","isSqlError","code","TransactionClosedError","ReadOnlyViolationError","wrapDatabaseError","emit","alwaysExport","atomicExecuteSql","asyncTryFn","resolve","getRejectedFunctions","rejectionValue","rejectFn","onEnd","onRollback","AutomaticClose","stackTraceErr","pending","automaticClose","automaticCloseTimeout","clearTimeout","Tx","readOnly","closed","listeners","cancelPending","$executeSql","incrementPending","t0","now","_executeSql","decrementPending","queryTime","_rollback","closeTransaction","clearListeners","_commit","ifExists","ifExistsStr","getStackTraceErr","createTransaction","createFunc","maybePg","maybeMysql","pg","connectString","PG_UNIQUE_VIOLATION","PG_FOREIGN_KEY_VIOLATION","PG_CHECK_CONSTRAINT_VIOLATION","PG_EXCLUSION_CONSTRAINT_VIOLATION","pgConnectionString","statement_timeout","query_timeout","pool","Pool","PG_SCHEMA","client","createResult","rowCount","PostgresTx","addReturning","queryQueue","handleError","connection","timeout","release","extraWhereClause","readTransaction","MYSQL_UNIQUE_VIOLATION","MYSQL_FOREIGN_KEY_VIOLATION","MYSQL_CHECK_CONSTRAINT_VIOLATION","createPool","getConnectionAsync","promisify","getConnection","context","affectedRows","MySqlTx","close","fromCallback","database","window","openDatabase","databaseName","WEBSQL_CONSTRAINT_ERR","getInsertId","item","WebSqlTx","commit","WebSqlWrapper","running","asyncRecurse","debug","successCallback","_tx","errorCallback","comparisons","fieldOrderings","fieldOrderingsLookup","NestedIndent","indent","escapeField","nestedIndent","isNotDistinctFrom","aSql","bSql","aIsNotNullable","bIsNotNullable","isNotNullChecks","orBothNull","sqlJoinType","fractionalSecondsFormat","websqlBasicDateFormat","websqlDateFormats","basicDateFormat","dateFormats","AddBind","matchName","num","SelectMatch","nestedindent","existingBindIndex","nextID","joins","joinStr","boolNode","typeName","castType","comparators","replacement","clauses","_c","_d","negative","day","hour","minute","second","toLocaleString","minimumFractionDigits","sets","toSqlResult","$engine","insertSql","insert","updateSql","K","W","Sha256","_w","_e","_f","_g","_h","ch","z","maj","sigma0","sigma1","gamma0","gamma1","M","g","h","readInt32BE","T1","T2","H","writeInt32BE","Sha512","_ah","_bh","_ch","_dh","_eh","_fh","_gh","_hh","_al","_bl","_cl","_dl","_el","_fl","_gl","_hl","Ch","xl","Gamma0","Gamma0l","Gamma1","Gamma1l","getCarry","ah","bh","dh","eh","fh","gh","hh","al","bl","cl","dl","el","fl","gl","hl","xh","gamma0l","gamma1l","Wi7h","Wi7l","Wi16h","Wi16l","Wil","Wih","majh","majl","sigma0h","sigma0l","sigma1h","sigma1l","Kih","Kil","chh","chl","t1l","t1h","t2l","t2h","writeInt64BE","SBVRCompilerLibs","ResolveSynonym","_fromIdx","TYPE_VOCAB","IsPrimitive","term","IsChild","parent","MappedFactType","traverseInfo","UnmappedFactType","GetResourceName","termOrFactType","GetTable","termNameOrFactType","GetTableID","GetTableField","fieldID","GetTableFieldID","tableFields","captureStackTrace","ext","getOwnPropertyDescriptor","getOwnPropertySymbols","sourceObject","symbol","isFunction","classRe","functionToString","toArray","resolveArgs","resolvers","isSymbol","userNormalizer","isPromise","Types","SBVRParser","AddCustomAttribute","AddBuiltInVocab","MigrationError","strings","bindNums","initSql","exists","checkModelAlreadyExists","using","lockMigrations","setExecutedMigrations","executedMigrations","getExecutedMigrations","pendingMigrations","filterAndSortPendingMigrations","newlyExecutedMigrations","executeMigrations","tableList","executed_migrations","stringifiedMigrations","toPairs","sortBy","migrationKey","delay","disposer","migration","executeMigration","peg$subclass","C","peg$SyntaxError","expected","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","class","escapedParts","classEscape","inverted","any","other","not","describeExpectation","hex","describeExpected","descriptions","describeFound","peg$parse","peg$FAILED","peg$startRuleFunctions","Process","peg$parseProcess","ProcessRule","peg$parseProcessRule","peg$startRuleFunction","peg$c0","peg$c1","peg$c2","peg$c3","peg$c4","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","peg$c10","peg$c11","peg$c12","peg$c13","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","peg$c63","peg$c64","peg$c65","peg$c66","peg$c67","peg$c68","peg$c69","peg$c70","peg$c71","peg$c72","peg$c73","peg$c74","peg$c75","peg$c76","peg$c77","peg$c78","peg$c79","peg$c80","peg$c81","peg$c82","peg$c83","peg$c84","peg$c85","peg$c86","peg$c87","peg$c88","peg$c89","peg$c90","peg$c91","peg$c92","peg$c93","peg$c94","peg$c95","peg$c96","peg$c97","peg$c98","peg$c99","peg$c100","peg$c101","peg$c102","peg$r0","peg$r1","peg$r2","peg$r3","peg$r4","peg$e0","peg$literalExpectation","peg$e1","peg$e2","peg$e3","peg$otherExpectation","peg$e4","peg$e5","peg$e6","peg$e7","peg$e8","peg$e9","peg$e10","peg$e11","peg$e12","peg$e13","peg$e14","peg$e15","peg$e16","peg$e17","peg$e18","peg$e19","peg$e20","peg$classExpectation","peg$e21","peg$e22","peg$e23","peg$e24","peg$e25","peg$e26","peg$e27","peg$e28","peg$e29","peg$e30","peg$e31","peg$e32","peg$e33","peg$e34","peg$e35","peg$e36","peg$e37","peg$e38","peg$e39","peg$e40","peg$e41","peg$e42","peg$e43","peg$e44","peg$e45","peg$e46","peg$e47","peg$e48","peg$e49","peg$e50","peg$e51","peg$e52","peg$e53","peg$e54","peg$e55","peg$e56","peg$e57","peg$e58","peg$e59","peg$e60","peg$e61","peg$e62","peg$e63","peg$e64","peg$e65","peg$e66","peg$e67","peg$e68","peg$e69","peg$e70","peg$e71","peg$e72","peg$e73","peg$e74","peg$e75","peg$e76","peg$e77","peg$e78","peg$e79","peg$e80","peg$e81","peg$e82","peg$e83","peg$e84","peg$e85","peg$e86","peg$e87","peg$e88","peg$e89","peg$e90","peg$e91","peg$e92","peg$e93","peg$e94","peg$e95","peg$e96","peg$e97","peg$e98","peg$e99","peg$e100","peg$e101","peg$e102","peg$e103","peg$e104","peg$anyExpectation","peg$e105","peg$e106","peg$e107","peg$e108","peg$f0","peg$f1","peg$f2","eval","peg$f3","peg$f4","peg$f5","peg$f6","option","CollapseObjectArray","peg$f7","peg$f8","peg$f9","peg$f10","peg$f11","peg$f12","peg$f13","peg$f14","peg$f15","peg$f16","peg$f17","peg$f18","peg$f19","peg$f20","peg$f21","peg$f22","peg$f23","peg$f24","expr","peg$f25","peg$f26","peg$f27","precedence","peg$f28","peg$f29","minPrecedence","peg$f30","lhs","op","operatorPrecedence","peg$f31","rhs","peg$f32","peg$f33","peg$f34","peg$f35","peg$parseFilterByExpressionLoop","peg$f36","peg$f37","methodName","peg$f38","peg$f39","peg$f40","peg$f41","peg$f42","paths","peg$f43","peg$f44","peg$f45","peg$f46","peg$f47","peg$f48","optionsObj","peg$f49","peg$f50","peg$f51","peg$f52","keyBind","keyBinds","peg$f53","peg$f54","peg$f55","peg$f56","peg$f57","peg$f58","peg$f59","peg$f60","peg$f61","decodeURIComponent","peg$f62","sign","peg$f63","peg$f64","peg$f65","peg$f66","peg$f67","peg$f68","peg$f69","time","peg$f70","peg$f71","peg$f72","peg$f73","peg$f74","peg$f75","peg$f76","param","peg$f77","peg$f78","peg$f79","peg$f80","peg$f81","peg$f82","peg$f83","peg$f84","peg$f85","peg$f86","peg$currPos","peg$savedPos","peg$posDetailsCache","column","peg$expected","peg$silentFails","peg$resultsCache","peg$result","ignoreCase","peg$endExpectation","peg$computePosDetails","details","peg$computeLocation","startPos","endPos","loc","startPosDetails","endPosDetails","peg$begin","variants","peg$expect","top","peg$end","invert","peg$buildSimpleError","peg$buildStructuredError","peg$buildError","failPos","s0","s1","s2","rule$expects","cached","rule$expectations","nextPos","expectations","peg$parseOData","peg$parsePathSegment","substr","peg$parseQueryOptions","s3","s4","s5","peg$parseQueryOption","peg$parseDollar","peg$parseSelectOption","peg$parseFilterByOption","peg$parseExpandOption","peg$parseSortOption","peg$parseTopOption","peg$parseSkipOption","peg$parseCountOption","peg$parseInlineCountOption","peg$parseFormatOption","peg$parseOperationParam","peg$parseParameterAliasOption","peg$parseText","peg$parseNumber","peg$parseBoolean","peg$parseQuotedText","peg$parseDate","s6","peg$parseSortProperty","peg$parsePropertyPath","peg$parseboundary","peg$parseUnsignedInteger","peg$parseExpandPropertyPathList","peg$parsePropertyPathList","peg$parseFilterByExpression","peg$parseContentType","s7","s8","substring","s9","peg$parseFilterByValue","peg$parseFilterByOperand","peg$parseGroupedPrimitive","peg$parseGroupedPrecedenceExpression","peg$parseFilterMethodCallExpression","peg$parseFilterNegateExpression","peg$parseParameterAlias","peg$parsePrimitive","peg$parsespaces","peg$parseQuotedTextBind","peg$parseNumberBind","peg$parseBooleanBind","peg$parseNull","peg$parseDateBind","peg$parseDuration","peg$parseLambdaPropertyPath","s10","s11","peg$parseLambdaMethodCall","peg$parseResourceName","peg$parseResourceMethodCall","peg$parseExpandPropertyPath","peg$parseKey","peg$parseKeyBind","peg$parseNamedKeyBind","peg$parseLinks","peg$parseSubPathSegment","peg$parseContentReference","peg$parseSign","s12","peg$parseApostrophe","peg$parseDurationNumber","peg$parsespace","cast","ceiling","endswith","fractionalseconds","indexof","isof","maxdatetime","mindatetime","month","round","startswith","substringof","tolower","totaloffsetminutes","totalseconds","toupper","trim","year","mod","ensureError","mapTill","prefer","parseOdata","_memoizedParseOdata","queryParamsIndex","parameterAliases","URLSearchParams","queryParams","startsWith","append","parameterAliasesString","parsed","parsedParams","memoizedOdata2AbstractSQL","$memoizedOdata2AbstractSQL","existingBindVarsLength","_abstractSqlModel","sortedBody","_isChangeSet","changeSet","sortedCS","csReferences","parseODataChangeset","splitApiRoot","contentId","mustExtractHeader","has","defer","parseResult","urlParts","aFrom","copy","propertyNames","propertyName","ensure","getPrototypeOf","plainObject","customCreate","objIsPrototypeOf","isPrototypeOf","nullDesc","__proto__","isNullBase","nullPolyfill","tmpObj1","tmpObj2","isArguments","isString","ArrayIterator","StringIterator","iterable","iteratorSymbol","iterator","autoBind","defineProperties","Iterator","list","__list__","__context__","__nextIndex__","_onAdd","_onDelete","_onClear","_next","__redo__","_unBind","_createResult","done","_resolve","off","redo","stringCoerce","toShortString","resolveMessage","defaultMessage","inputOptions","isOptional","errorMessage","getMemoizedCompileRule","modifiedFields","sqlModelTables","binding","bindValue","referencedName","sqlTableName","sqlFieldName","checkModifiedFields","refs","intersection","partial","express","initialised","Pinejs","passportPinejs","DISABLE_DEFAULT_AUTH","login","xhr","redirect","logout","listen","PORT","prefix","Events","EE","addListener","emitter","event","listener","evt","_events","_eventsCount","clearEvent","eventNames","names","events","handlers","ee","listenerCount","a1","a2","a3","a4","a5","len","removeListener","removeAllListeners","prefixed","fs","host","encodeURI","port","protocol","decodeURI","pathname","client_encoding","hostname","pathnameSplit","ssl","sslcert","sslkey","sslrootcert","sslmode","cert","readFileSync","ca","rejectUnauthorized","getOrCreate","authApiTx","uniqueFields","extraFields","getOrCreatePermission","permissionName","users","permissionsCache","userID","permissionID","apiRoute","modelFile","customCode","nodeRequire","loadConfigFile","configPath","loadApplicationConfig","configObj","argv","__dirname","dirname","cwd","resolvePath","isAbsolute","readFile","migrationsPath","fileNames","readdir","filename","filePath","extname","initSqlPath","cacheFile","PINEJS_CACHE_FILE","SAVE_DEBOUNCE_TIME","saveCache","debounce","writeFile","clearCache","nativeFactTypes","TypeUtils","fetchProcessing","typeFunc","necessity","originalValue","nativeProperties","complexType","component","componentValue","nativeNames","isBuffer","bcrypt","salt","genSalt","parseFloat","mysqlType","websqlType","validateSync","sha256","crypto","createHash","shajs","algorithm","Algorithm","sha","sha1","sha224","sha384","sha512","Sha","rotl5","rotl30","ft","ctor","superCtor","super_","TempCtor","Sha1","rotl1","Sha224","SHA512","Sha384","Length","toLocaleTimeString","AbstractSQLCompiler_1","countFroms","selectQueryNodes","every","fromNode","whereNodes","whereNode","convertReferencedFieldsToFields","IsSafe","getRuleReferencedScope","rulePart","scope","isSafe","fromNodes","nested","$getRuleReferencedFields","aliasName","Insert","Delete","Unknown","tableRefs","checkQuery","froms","translate","LFOptimiser","AttrConceptType","termName","conceptType","primitives","AttrDatabaseAttribute","attrVal","newAttrVal","attributes","AttrDatabasePrimitive","AttrTermForm","termForms","UniversalQuantification","AtMostNQuantification","maxCard","CardinalityOptimisation2","v1","actualFactType","atomicForm","card","v2","uniqueKeys","CardinalityOptimisation","NecessityOptimisation","ObligationOptimisation","Rule","defaultAttributes","attrsFound","attrs","SetHelped","Unique","___MISMATCHED_UNIQUE_KEY___","die","___MISMATCHED_FOREIGN_KEY___","LFValidator","Helped","AtLeastNQuantification","NumericalRangeQuantification","LogicalNegation","ExactQuantification","_didSomething","trans","letters","Model","FactType","Vocabulary","Verb","negated","Disjunction","Conjunction","addAttributes","attrName","DefaultAttr","tableID","AttrDefinition","AttrNecessity","AttrSynonymousForm","synForm","StructuredEnglish","ObligationFormulation","NecessityFormulation","PossibilityFormulation","PermissibilityFormulation","quant","ExistentialQuantification","Cardinality","MinimumCardinality","MaximumCardinality","Variable","RoleBinding","bindIdentifier","AtomicFormulation","termOrVerb","updateModifiedAt","LINK_RESOLVE_QUEUED","LINK_RESOLVE_DONE","Identifier","IdentifierName","identifierName","Attributes","attrOrder","attributeName","attributeVals","each","conceptTable","conceptTerm","identifierTable","referenceScheme","AttrDatabaseIDField","AttrReferenceScheme","AttrDatabaseTableName","baseTable","linkResourceName","attributeTable","AttrForeignKey","factTypeResourceName","fkName","fkTable","foreignTerm","synonymousForms","AddRelationship","synResourceName","reverseReferences","GetReference","AttrUnique","uniqueField","AttrSynonym","fromTable","linkRef","linkTable","termForm","linkVerb","hasFactType","extraFactType","termTable","FactTypeFieldName","linkHasFactType","linkVerbFactType","cardinality","checkConceptTypeResolver","selectBody","varNum","whereBody","bindAttributes","RoleBindings","baseTermName","baseBind","conceptTypeResolver","nativeNameBinding","conceptTypeResolvers","used","NativeNameBinding","ReconstructIdentifier","NativeProperty","operator","NativeFactType","secondPrimitive","___NativeFactTypeMatchingFailed___","LinkTableAlias","bindNumbers","identifierType","partAlias","LinkTable","baseIdentifierName","partName","CreateLinkTableResolver","bindFrom","bindTo","tableTo","___ForeignKeyMatchingFailed___","BooleanAttribute","___BooleanAttributeMatchingFailed___","Attribute","bindAttr","bindReal","___AttributeMatchingFailed___","AtLeast","minCard","variable","Exactly","Range","Negation","RulePart","RuleBody","ProcessAtomicFormulations","bindAttributeDepth","nonPrimitiveExists","ProcessAtomicFormulationsRecurse","depth","unmappedFactType","ProcessAtomicFormulationsNonPrimitive","ProcessAtomicFormulationsAttributes","attrBinding","attrFieldName","baseAttrFactType","baseBinding","bindNumber","ProcessAtomicFormulationsNativeProperties","ruleText","trigger_update_modified_at","CreateTable","AddTableField","AddTableTrigger","forceHas","strippedFactType","relationReference","AddWhereClause","CreateConceptTypesResolver","parentAlias","concept","conceptTypeResolutions","untilConcept","conceptAlias","ResolveLinkTable","linkTableResolvers","linkTableAlias","linkTableResolver","existingLinkTableResolver","ResetRuleState","extensions","configure","conf","force","extFn","__profiler__","updateEnv","memoized","objPropertyIsEnumerable","propertyIsEnumerable","defVal","compareFn","customError","defineLength","resolveResolve","resolveNormalize","original","memLength","del","extDel","extGet","extHas","getListeners","setListeners","deleteListeners","profileName","oldCache","__memoized__","_get","_has","foo","bar","trzy","dest","isPrototype","searchString","descriptor","descriptors","base","__eeOnceListener__","__ee__","candidate","arrayLike","arr","validValue","mapFn","Context","getIterator","global","validTypes","toPrimitive","naiveFallback","__global__","validateSymbol","NativeSymbol","generateName","setupStandardSymbols","setupSymbolRegistry","SymbolPolyfill","HiddenSymbol","isNativeSafe","__description__","__name__","valueOf","objPrototype","created","postfix","ie11BugWorkaround","hasInstance","isConcatSpreadable","search","species","unscopables","registry","for","keyFor","isFunctionStringTag","currentLength","lastId","NaN","argsMap","objectMap","tbi","waiting","currentCallback","currentContext","currentArgs","origCb","primitiveSet","ensureString","supportedModes","isFailed","onSuccess","onFailure","resolvedMode","nextTickFailure","finally","ensureValue","stringifiable","isCallable","safeToString","reNewLine","resultArray","timeouts","preFetchAge","preFetchTimeouts","unref","preFetch","maxTimeout","toPosInteger","lruQueue","hit","oldIndex","nuIndex","deleteRef","getRefCount","randomBytes","Charset","safeRandomBytes","processString","initialString","chars","reqLen","maxByte","randomByte","readUInt8","getAsyncString","generatedString","charset","capitalization","setType","setcapitalization","readable","removeUnreadable","removeDuplicates","charsLen","ceil","arrayUniq","numbers","charsLower","charsUpper","hexChars","binaryChars","octalChars","unreadableChars","charMap","uniqNoSet","ret","uniqSet","seen","Set","uniqSetWithForEach","doesForEachActuallyWork","isEOL","isSpace","EOL","EOLSpaces","eol","IdentifierKey","identifierKey","varNumber","ruleVars","toSBVREOL","toEOL","AddIdentifier","_AddIdentifier","InformalIdentifier","factTypeSoFar","noAutoComplete","FindIdentifier","quote","FindIdentifierNest","identifierSoFar","longestIdentifier","FindVocabulary","bracket","FindVocabularyNest","vocabularySoFar","IdentifierPart","addVerb","FindVerb","bracketed","verbSoFar","_verbForm","JoiningQuantifier","Quantifier","Keyword","word","noToken","addThat","addThe","DisableCommas","disableCommas","addComma","CreateVar","ruleVarsCount","EmbedVar","IsAtomicFormulation","ClosedProjection","TermEntity","thatLF","varLF","parentIdentifier","parentBind","termEntity","VerbContinuation","Modifier","JunctionType","SerialCommaCheck","UpcomingCommaJunction","SimpleJunction","junctioned","Junction","commaSeparated","upcoming","StartRule","NewRule","StartFactType","NewFactType","synFactType","StartVocabulary","StartTerm","StartName","NewIdentifier","func","NewAttribute","attrValOrFunc","currentLine","lines","lastLine","AllowedAttrs","identifierVocab","termVocab","moreValues","AttrGuidanceType","StartComment","NewComment","EOLTerminator","Terminator","Line","ClearSuggestions","builtInVocab","builtInVocabInputHead","allowedAttrLists","defaultAllowedAttrLists","_sideEffectingRules","pluralize","BaseSynonym","identifiers","singularize","IsFactTypeIdentifier","baseIdentifier","IsVerb","IsFactType","removeRegex","getValidFactTypeParts","factTypeParts","followChildrenChain","factTypePartVocabulary","origInputHead","attachedTo","matchForAny","matchForAll","matchUntil","InflectionJS","uncountable_words","plural_rules","singular_rules","non_titlecased_words","id_suffix","underbar","space_or_underbar","uppercase","underbar_prefix","apply_rules","skip","compareFunc","_uncountable_words","_plural_rules","_singular_rules","_non_titlecased_words","plural","thisString","singular","camelize","lowFirstLetter","str_path","str_arr","initX","underscore","humanize","dasherize","titleize","demodulize","tableize","classify","foreign_key","dropIdUbar","ordinalize","ltd","ld","suf","getResourceName","forEachUniqueTable","usedTableNames","complexTypes","resolveDataType","associations","_key","ends","WeakMap","memoizer","weakMap","randomUniq","forOf","toStringTagSymbol","isNative","WeakMapPoly","__weakMapData__","shim","nullObject","polyProps","generated","random","kind","__kind__","ensurePlainFunction","normalizeOptions","define","dgs","overwriteDefinition","resolveContext","resolveException","is","objectToString","valueToString","error2","__length__","isIterable","doBreak","broken","checkForExpansion","parentResourceName","mappingResourceName","expandedField","__deferred","encodeURIComponent","getLocalFields","localFields","getFetchProcessingFields","fetchProcessingFields","fromPairs","$count","sqlResourceName","processedFields","expandableFields","__metadata","webpackEmptyContext","Store","sessionModel","asCallback","$err","sid","session","session_id","expiry_time","cookie","expires","put","destroy","$ge","sessions","uiModel","isServerOnAir","$resolve","serverIsOnAir","onAir","uiApi","ui","devApi","setupModels","uiApiTx","instance","patch","is_disabled","dropTable","queries","exported","insQuery","currRow","notFirst","valQuery","transactionModel","endTransaction","transactionID","placeholders","getLockedRow","lockID","getFieldsObject","conditionalResourceID","fieldsObject","field_name","fieldValue","field_value","modelField","resolvedID","conditionalResources","conditionalResource","placeholder","$reject","lock","doCleanup","resource_type","conditional_type","lockedResult","lockedRow","resource_id","transactionURI","conditionalResourceURI","conditionalFieldURI","lockURI","transactionLockURI","lockResourceURI","exclusiveLockURI","commitTransactionURI","loggedIn","loggedInUser","use","GLOBAL_PERMISSIONS","ready","enabled","appVars","USE","addHandler","handlerName","middleware","newMatch","paramMatch","flattenDeep","_user","statusCode","methodHandlers","route","checkMethodHandlers"],"mappings":"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C,QAAQ6/B;YACd,OAAO,MAAM+S,eADC/S,UAAU3zB,MAAM+F,MAAM2gC,gBACAF,SAAS;;UACjD;YACI,MAAM,IAAI5gD,MAAM,gCAAgCoa;;OAGtDm0B,aAAcle,WAAY,CAACngB,MAAM0wC;QACnC,OAAOxmC,SAAS+F,QAAQjQ;QACxB,OAAImgB,QAAQjW,QACD2zB,UAAU3zB,MAAM+F,MAAMygC,UAE1BtS,aAAap+B,MAAM0wC;OAExB1S,cAAe9zB,QACA,YAATA,QACK,WAATA,QACS,mBAATA,QACS,kBAATA,QACS,YAATA,QACS,YAATA,QACS,WAATA,QACS,cAATA,QACS,gBAATA,QACS,YAATA;IAERhd,QAAQ8wC,cAAcA;IACtB,MAAMM,YAAYD,WAAWnxC,QAAQ8wC,cAC/BC,iBAAkB/zB,QACH,aAATA,QACK,WAATA,QACS,cAATA,QACS,UAATA,QACS,eAATA,QACS,eAATA,QACS,aAATA,QACS,iBAATA,QACS,wBAATA,QACS,sBAATA,QACS,aAATA,QACS,WAATA,QACS,YAATA,QACS,UAATA,QACS,WAATA,QACS,aAATA,QACS,aAATA,QACS,wBAATA,QACS,mBAATA,QACS,YAATA,QACS,YAATA,QACS,cAATA,QACS,YAATA,QACS,cAATA,QACS,UAATA;IAERhd,QAAQ+wC,iBAAiBA;IACzB,MAAMM,eAAeF,WAAWnxC,QAAQ+wC,iBAClCC,iBAAkBh0B,QACH,cAATA,QACK,UAATA,QACS,UAATA,QACS,SAATA,QACS,aAATA,QACS,gBAATA,QACS,cAATA,QACS,SAATA,QACS,YAATA,QACS,aAATA,QACS,kBAATA,QACS,yBAATA,QACS,eAATA,QACS,sBAATA,QACS,gBAATA,QACS,WAATA,QACS,wBAATA,QACS,qBAATA;IAERhd,QAAQgxC,iBAAiBA;IACzB,MAAMM,eAAeH,WAAWnxC,QAAQgxC,iBAClCH,cAAe7zB,QACA,WAATA,QACK,aAATA,QACS,aAATA,QACS,uBAATA,QACS,kBAATA;IAERhd,QAAQ6wC,cAAcA;IACtB,MAAMU,YAAYJ,WAAWnxC,QAAQ6wC,cAC/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","file":"out/pine.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 75);\n","module.exports = require(\"lodash\");","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validate = exports.nativeFactTypeTemplates = void 0;\nconst checkRequired = (validateFn) => {\n    async function runCheck(value, required) {\n        if (value == null) {\n            if (required) {\n                throw new Error('cannot be null');\n            }\n            return null;\n        }\n        return validateFn(value);\n    }\n    return runCheck;\n};\nconst equality = {\n    'is equal to': (from, to) => ['Equals', from, to],\n};\nexports.nativeFactTypeTemplates = {\n    equality,\n    comparison: {\n        'is less than': (from, to) => ['LessThan', from, to],\n        'is less than or equal to': (from, to) => [\n            'LessThanOrEqual',\n            from,\n            to,\n        ],\n        ...equality,\n    },\n};\nexports.validate = {\n    checkRequired,\n    integer: checkRequired((value) => {\n        const processedValue = parseInt(value, 10);\n        if (Number.isNaN(processedValue)) {\n            throw new Error('is not a number: ' + value);\n        }\n        return processedValue;\n    }),\n    text: (length) => checkRequired((value) => {\n        if (typeof value !== 'string') {\n            throw new Error('is not a string: ' + value);\n        }\n        if (length != null && value.length > length) {\n            throw new Error('longer than ' + length + ' characters (' + value.length + ')');\n        }\n        return value;\n    }),\n    date: checkRequired((value) => {\n        let processedValue = Number(value);\n        if (Number.isNaN(processedValue)) {\n            processedValue = value;\n        }\n        const processedDate = new Date(processedValue);\n        if (Number.isNaN(processedDate.getTime())) {\n            throw new Error('is not a valid date: ' + value);\n        }\n        return processedDate;\n    }),\n};\n//# sourceMappingURL=type-utils.js.map","\"use strict\";\n\nmodule.exports = function (fn) {\n\tif (typeof fn !== \"function\") throw new TypeError(fn + \" is not a function\");\n\treturn fn;\n};\n","\"use strict\";\n\nvar isValue         = require(\"type/value/is\")\n  , isPlainFunction = require(\"type/plain-function/is\")\n  , assign          = require(\"es5-ext/object/assign\")\n  , normalizeOpts   = require(\"es5-ext/object/normalize-options\")\n  , contains        = require(\"es5-ext/string/#/contains\");\n\nvar d = (module.exports = function (dscr, value/*, options*/) {\n\tvar c, e, w, options, desc;\n\tif (arguments.length < 2 || typeof dscr !== \"string\") {\n\t\toptions = value;\n\t\tvalue = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[2];\n\t}\n\tif (isValue(dscr)) {\n\t\tc = contains.call(dscr, \"c\");\n\t\te = contains.call(dscr, \"e\");\n\t\tw = contains.call(dscr, \"w\");\n\t} else {\n\t\tc = w = true;\n\t\te = false;\n\t}\n\n\tdesc = { value: value, configurable: c, enumerable: e, writable: w };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n});\n\nd.gs = function (dscr, get, set/*, options*/) {\n\tvar c, e, options, desc;\n\tif (typeof dscr !== \"string\") {\n\t\toptions = set;\n\t\tset = get;\n\t\tget = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[3];\n\t}\n\tif (!isValue(get)) {\n\t\tget = undefined;\n\t} else if (!isPlainFunction(get)) {\n\t\toptions = get;\n\t\tget = set = undefined;\n\t} else if (!isValue(set)) {\n\t\tset = undefined;\n\t} else if (!isPlainFunction(set)) {\n\t\toptions = set;\n\t\tset = undefined;\n\t}\n\tif (isValue(dscr)) {\n\t\tc = contains.call(dscr, \"c\");\n\t\te = contains.call(dscr, \"e\");\n\t} else {\n\t\tc = true;\n\t\te = false;\n\t}\n\n\tdesc = { get: get, set: set, configurable: c, enumerable: e };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n};\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) throw new TypeError(\"Cannot use null or undefined\");\n\treturn value;\n};\n","import type * as Express from 'express';\nimport type * as Db from '../database-layer/db';\nimport type { Model } from '../config-loader/config-loader';\nimport type { AnyObject, RequiredField } from './common-types';\n\ndeclare global {\n\tnamespace Express {\n\t\texport interface Request {\n\t\t\ttx?: Db.Tx;\n\t\t\tbatch?: uriParser.UnparsedRequest[];\n\t\t}\n\t}\n}\n\nimport * as Bluebird from 'bluebird';\nimport * as _ from 'lodash';\n\nimport { TypedError } from 'typed-error';\nimport { cachedCompile } from './cached-compile';\n\ntype LFModel = any[];\nimport * as AbstractSQLCompiler from '@balena/abstract-sql-compiler';\nimport { version as AbstractSQLCompilerVersion } from '@balena/abstract-sql-compiler/package.json';\nimport * as LF2AbstractSQL from '@balena/lf-to-abstract-sql';\n\nimport {\n\todataNameToSqlName,\n\tsqlNameToODataName,\n\tSupportedMethod,\n} from '@balena/odata-to-abstract-sql';\nimport * as sbvrTypes from '@balena/sbvr-types';\nimport deepFreeze = require('deep-freeze');\nimport { PinejsClientCore, PromiseResultTypes } from 'pinejs-client-core';\n\nimport { ExtendedSBVRParser } from '../extended-sbvr-parser/extended-sbvr-parser';\n\nimport * as migrator from '../migrator/migrator';\nimport { generateODataMetadata } from '../odata-metadata/odata-metadata-generator';\n\n// tslint:disable-next-line:no-var-requires\nconst devModel = require('./dev.sbvr');\nimport * as permissions from './permissions';\nimport {\n\tBadRequestError,\n\tConflictError,\n\tHttpError,\n\tInternalRequestError,\n\tMethodNotAllowedError,\n\tNotFoundError,\n\tParsingError,\n\tPermissionError,\n\tPermissionParsingError,\n\tSbvrValidationError,\n\tSqlCompilationError,\n\tstatusCodeToError,\n\tTranslationError,\n\tUnauthorizedError,\n} from './errors';\nimport * as uriParser from './uri-parser';\nimport {\n\tHookReq,\n\tHookArgs,\n\trollbackRequestHooks,\n\tgetHooks,\n\trunHooks,\n} from './hooks';\nexport {\n\tHookReq,\n\tHookArgs,\n\tHookResponse,\n\tHooks,\n\taddPureHook,\n\taddSideEffectHook,\n} from './hooks';\n// TODO-MAJOR: Remove\nexport type HookRequest = uriParser.ODataRequest;\n\nimport memoizeWeak = require('memoizee/weak');\nimport * as controlFlow from './control-flow';\n\nexport let db = undefined as any as Db.Database;\n\nexport { sbvrTypes };\n\nimport { version as LF2AbstractSQLVersion } from '@balena/lf-to-abstract-sql/package.json';\nimport { version as sbvrTypesVersion } from '@balena/sbvr-types/package.json';\nimport {\n\tcompileRequest,\n\tgetAndCheckBindValues,\n\tisRuleAffected,\n} from './abstract-sql';\nexport { resolveOdataBind } from './abstract-sql';\nimport * as odataResponse from './odata-response';\nimport { env } from '../server-glue/module';\n\nconst LF2AbstractSQLTranslator = LF2AbstractSQL.createTranslator(sbvrTypes);\nconst LF2AbstractSQLTranslatorVersion = `${LF2AbstractSQLVersion}+${sbvrTypesVersion}`;\n\nexport type ExecutableModel =\n\t| RequiredField<Model, 'apiRoot' | 'modelText'>\n\t| RequiredField<Model, 'apiRoot' | 'abstractSql'>;\n\ninterface CompiledModel {\n\tvocab: string;\n\tse?: string;\n\tlf?: LFModel;\n\tabstractSql: AbstractSQLCompiler.AbstractSqlModel;\n\tsql: AbstractSQLCompiler.SqlModel;\n\todataMetadata: ReturnType<typeof generateODataMetadata>;\n}\nconst models: {\n\t[vocabulary: string]: CompiledModel;\n} = {};\n\nexport interface Actor {\n\tpermissions?: string[];\n}\n\nexport interface User extends Actor {\n\tid: number;\n\tactor: number;\n}\n\nexport interface ApiKey extends Actor {\n\tkey: string;\n\tactor?: number;\n}\n\ninterface Response {\n\tstatus?: number;\n\theaders?: {\n\t\t[headerName: string]: any;\n\t};\n\tbody?: AnyObject | string;\n}\n\nconst memoizedResolvedSynonym = memoizeWeak(\n\t(\n\t\tabstractSqlModel: AbstractSQLCompiler.AbstractSqlModel,\n\t\tresourceName: string,\n\t): string => {\n\t\tconst sqlName = odataNameToSqlName(resourceName);\n\t\treturn _(sqlName)\n\t\t\t.split('-')\n\t\t\t.map((namePart) => {\n\t\t\t\tconst synonym = abstractSqlModel.synonyms[namePart];\n\t\t\t\tif (synonym != null) {\n\t\t\t\t\treturn synonym;\n\t\t\t\t}\n\t\t\t\treturn namePart;\n\t\t\t})\n\t\t\t.join('-');\n\t},\n\t{ primitive: true },\n);\n\nexport const resolveSynonym = (\n\trequest: Pick<\n\t\turiParser.ODataRequest,\n\t\t'abstractSqlModel' | 'resourceName' | 'vocabulary'\n\t>,\n): string => {\n\tconst abstractSqlModel = getAbstractSqlModel(request);\n\treturn memoizedResolvedSynonym(abstractSqlModel, request.resourceName);\n};\n\nconst memoizedResolveNavigationResource = memoizeWeak(\n\t(\n\t\tabstractSqlModel: AbstractSQLCompiler.AbstractSqlModel,\n\t\tresourceName: string,\n\t\tnavigationName: string,\n\t): string => {\n\t\tconst navigation = _(odataNameToSqlName(navigationName))\n\t\t\t.split('-')\n\t\t\t.flatMap((namePart) =>\n\t\t\t\tmemoizedResolvedSynonym(abstractSqlModel, namePart).split('-'),\n\t\t\t)\n\t\t\t.concat('$')\n\t\t\t.value();\n\t\tconst resolvedResourceName = memoizedResolvedSynonym(\n\t\t\tabstractSqlModel,\n\t\t\tresourceName,\n\t\t);\n\t\tconst mapping = _.get(\n\t\t\tabstractSqlModel.relationships[resolvedResourceName],\n\t\t\tnavigation,\n\t\t) as undefined | AbstractSQLCompiler.RelationshipMapping;\n\t\tif (mapping == null) {\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot navigate from '${resourceName}' to '${navigationName}'`,\n\t\t\t);\n\t\t}\n\t\tif (mapping.length < 2) {\n\t\t\tthrow new Error(\n\t\t\t\t`'${resourceName}' to '${navigationName}' is a field not a navigation`,\n\t\t\t);\n\t\t}\n\t\t// we do check the length above, but typescript thinks the second\n\t\t// element could be undefined\n\t\treturn sqlNameToODataName(abstractSqlModel.tables[mapping[1]![0]].name);\n\t},\n\t{ primitive: true },\n);\nexport const resolveNavigationResource = (\n\trequest: Pick<\n\t\turiParser.ODataRequest,\n\t\t'resourceName' | 'vocabulary' | 'abstractSqlModel'\n\t>,\n\tnavigationName: string,\n): string => {\n\tconst abstractSqlModel = getAbstractSqlModel(request);\n\treturn memoizedResolveNavigationResource(\n\t\tabstractSqlModel,\n\t\trequest.resourceName,\n\t\tnavigationName,\n\t);\n};\n\n// TODO: Clean this up and move it into the db module.\nconst prettifyConstraintError = (\n\terr: Error | TypedError,\n\trequest: uriParser.ODataRequest,\n) => {\n\tif (err instanceof db.ConstraintError) {\n\t\tlet matches: RegExpExecArray | null = null;\n\t\tif (err instanceof db.UniqueConstraintError) {\n\t\t\tswitch (db.engine) {\n\t\t\t\tcase 'mysql':\n\t\t\t\t\tmatches =\n\t\t\t\t\t\t/ER_DUP_ENTRY: Duplicate entry '.*?[^\\\\]' for key '(.*?[^\\\\])'/.exec(\n\t\t\t\t\t\t\terr.message,\n\t\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'postgres':\n\t\t\t\t\tconst resourceName = resolveSynonym(request);\n\t\t\t\t\tconst abstractSqlModel = getAbstractSqlModel(request);\n\t\t\t\t\tmatches = new RegExp(\n\t\t\t\t\t\t'\"' + abstractSqlModel.tables[resourceName].name + '_(.*?)_key\"',\n\t\t\t\t\t).exec(err.message);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// We know it's the right error type, so if matches exists just throw a generic error message, since we have failed to get the info for a more specific one.\n\t\t\tif (matches == null) {\n\t\t\t\tthrow new db.UniqueConstraintError('Unique key constraint violated');\n\t\t\t}\n\t\t\tconst columns = matches[1].split('_');\n\t\t\tthrow new db.UniqueConstraintError(\n\t\t\t\t'\"' +\n\t\t\t\t\tcolumns.map(sqlNameToODataName).join('\" and \"') +\n\t\t\t\t\t'\" must be unique.',\n\t\t\t);\n\t\t}\n\n\t\tif (err instanceof db.ExclusionConstraintError) {\n\t\t\t// Rewrite to a generic message as we don't yet have a way to get a more specific error message\n\t\t\tthrow new db.ExclusionConstraintError('Exclusion constraint violated');\n\t\t}\n\n\t\tif (err instanceof db.ForeignKeyConstraintError) {\n\t\t\tswitch (db.engine) {\n\t\t\t\tcase 'mysql':\n\t\t\t\t\tmatches =\n\t\t\t\t\t\t/ER_ROW_IS_REFERENCED_: Cannot delete or update a parent row: a foreign key constraint fails \\(\".*?\"\\.(\".*?\").*/.exec(\n\t\t\t\t\t\t\terr.message,\n\t\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'postgres':\n\t\t\t\t\tconst resourceName = resolveSynonym(request);\n\t\t\t\t\tconst abstractSqlModel = getAbstractSqlModel(request);\n\t\t\t\t\tconst tableName = abstractSqlModel.tables[resourceName].name;\n\t\t\t\t\tmatches = new RegExp(\n\t\t\t\t\t\t'\"' +\n\t\t\t\t\t\t\ttableName +\n\t\t\t\t\t\t\t'\" violates foreign key constraint \".*?\" on table \"(.*?)\"',\n\t\t\t\t\t).exec(err.message);\n\t\t\t\t\tif (matches == null) {\n\t\t\t\t\t\tmatches = new RegExp(\n\t\t\t\t\t\t\t'\"' +\n\t\t\t\t\t\t\t\ttableName +\n\t\t\t\t\t\t\t\t'\" violates foreign key constraint \"' +\n\t\t\t\t\t\t\t\ttableName +\n\t\t\t\t\t\t\t\t'_(.*?)_fkey\"',\n\t\t\t\t\t\t).exec(err.message);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// We know it's the right error type, so if no matches exists just throw a generic error message,\n\t\t\t// since we have failed to get the info for a more specific one.\n\t\t\tif (matches == null) {\n\t\t\t\tthrow new db.ForeignKeyConstraintError(\n\t\t\t\t\t'Foreign key constraint violated',\n\t\t\t\t);\n\t\t\t}\n\t\t\tthrow new db.ForeignKeyConstraintError(\n\t\t\t\t'Data is referenced by ' + sqlNameToODataName(matches[1]) + '.',\n\t\t\t);\n\t\t}\n\n\t\tif (err instanceof db.CheckConstraintError) {\n\t\t\tconst resourceName = resolveSynonym(request);\n\t\t\tconst abstractSqlModel = getAbstractSqlModel(request);\n\t\t\tconst table = abstractSqlModel.tables[resourceName];\n\t\t\tif (table.checks) {\n\t\t\t\tswitch (db.engine) {\n\t\t\t\t\tcase 'postgres':\n\t\t\t\t\t\tmatches = new RegExp(\n\t\t\t\t\t\t\t'new row for relation \"' +\n\t\t\t\t\t\t\t\ttable.name +\n\t\t\t\t\t\t\t\t'\" violates check constraint \"(.*?)\"',\n\t\t\t\t\t\t).exec(err.message);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (matches != null) {\n\t\t\t\tconst checkName = matches[1];\n\t\t\t\tconst check = table.checks!.find((c) => c.name === checkName);\n\t\t\t\tif (check?.description != null) {\n\t\t\t\t\tthrow new BadRequestError(check.description);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// We know it's the right error type, so just throw a generic error message\n\t\t\t// if we have failed to get the info for a more specific one.\n\t\t\tthrow new BadRequestError('Check constraint violated');\n\t\t}\n\n\t\t// Override the error message so we don't leak any internal db info\n\t\terr.message = 'Constraint failed';\n\t\tthrow err;\n\t}\n};\n\nexport const validateModel = async (\n\ttx: Db.Tx,\n\tmodelName: string,\n\trequest?: uriParser.ODataRequest,\n): Promise<void> => {\n\tawait Promise.all(\n\t\tmodels[modelName].sql.rules.map(async (rule) => {\n\t\t\tif (!isRuleAffected(rule, request)) {\n\t\t\t\t// If none of the fields intersect we don't need to run the rule! :D\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst values = await getAndCheckBindValues(\n\t\t\t\t{\n\t\t\t\t\tvocabulary: modelName,\n\t\t\t\t\todataBinds: [],\n\t\t\t\t\tvalues: {},\n\t\t\t\t\tengine: db.engine,\n\t\t\t\t},\n\t\t\t\trule.bindings,\n\t\t\t);\n\t\t\tconst result = await tx.executeSql(rule.sql, values);\n\n\t\t\tconst v = result.rows[0].result;\n\t\t\tif (v === false || v === 0 || v === '0') {\n\t\t\t\tthrow new SbvrValidationError(rule.structuredEnglish);\n\t\t\t}\n\t\t}),\n\t);\n};\n\nexport const generateLfModel = (seModel: string): LFModel =>\n\tcachedCompile('lfModel', ExtendedSBVRParser.version, seModel, () =>\n\t\tExtendedSBVRParser.matchAll(seModel, 'Process'),\n\t);\n\nexport const generateAbstractSqlModel = (\n\tlfModel: LFModel,\n): AbstractSQLCompiler.AbstractSqlModel =>\n\tcachedCompile(\n\t\t'abstractSqlModel',\n\t\tLF2AbstractSQLTranslatorVersion,\n\t\tlfModel,\n\t\t() => LF2AbstractSQLTranslator(lfModel, 'Process'),\n\t);\n\nexport const generateSqlModel = (\n\tabstractSql: AbstractSQLCompiler.AbstractSqlModel,\n\ttargetDatabaseEngine: AbstractSQLCompiler.Engines,\n): AbstractSQLCompiler.SqlModel =>\n\tcachedCompile(\n\t\t'sqlModel',\n\t\tAbstractSQLCompilerVersion + '+' + targetDatabaseEngine,\n\t\tabstractSql,\n\t\t() => AbstractSQLCompiler[targetDatabaseEngine].compileSchema(abstractSql),\n\t);\n\nexport const generateModels = (\n\tmodel: ExecutableModel,\n\ttargetDatabaseEngine: AbstractSQLCompiler.Engines,\n): CompiledModel => {\n\tconst { apiRoot: vocab, modelText: se } = model;\n\tlet { abstractSql: maybeAbstractSql } = model;\n\n\tlet lf: ReturnType<typeof generateLfModel> | undefined;\n\tif (se) {\n\t\ttry {\n\t\t\tlf = generateLfModel(se);\n\t\t} catch (e) {\n\t\t\tconsole.error(`Error parsing model '${vocab}':`, e);\n\t\t\tthrow new Error(`Error parsing model '${vocab}': ` + e);\n\t\t}\n\n\t\ttry {\n\t\t\tmaybeAbstractSql = generateAbstractSqlModel(lf);\n\t\t} catch (e) {\n\t\t\tconsole.error(`Error translating model '${vocab}':`, e);\n\t\t\tthrow new Error(`Error translating model '${vocab}': ` + e);\n\t\t}\n\t}\n\tconst abstractSql = maybeAbstractSql!;\n\n\tconst odataMetadata = cachedCompile(\n\t\t'metadata',\n\t\tgenerateODataMetadata.version,\n\t\t{ vocab, abstractSqlModel: abstractSql },\n\t\t() => generateODataMetadata(vocab, abstractSql),\n\t);\n\n\tlet sql: ReturnType<AbstractSQLCompiler.EngineInstance['compileSchema']>;\n\ttry {\n\t\tsql = generateSqlModel(abstractSql, targetDatabaseEngine);\n\t} catch (e) {\n\t\tconsole.error(`Error compiling model '${vocab}':`, e);\n\t\tthrow new Error(`Error compiling model '${vocab}': ` + e);\n\t}\n\n\treturn { vocab, se, lf, abstractSql, sql, odataMetadata };\n};\n\nexport const executeModel = (\n\ttx: Db.Tx,\n\tmodel: ExecutableModel,\n): Promise<void> => executeModels(tx, [model]);\n\nexport const executeModels = async (\n\ttx: Db.Tx,\n\texecModels: ExecutableModel[],\n): Promise<void> => {\n\ttry {\n\t\tconst compiledModels = await Promise.all(\n\t\t\texecModels.map(async (model) => {\n\t\t\t\tconst { apiRoot } = model;\n\n\t\t\t\tawait migrator.run(tx, model);\n\t\t\t\tconst compiledModel = generateModels(model, db.engine);\n\n\t\t\t\t// Create tables related to terms and fact types\n\t\t\t\t// Run statements sequentially, as the order of the CREATE TABLE statements matters (eg. for foreign keys).\n\t\t\t\tfor (const createStatement of compiledModel.sql.createSchema) {\n\t\t\t\t\tconst promise = tx.executeSql(createStatement);\n\t\t\t\t\tif (db.engine === 'websql') {\n\t\t\t\t\t\tpromise.catch((err) => {\n\t\t\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\t\t\"Ignoring errors in the create table statements for websql as it doesn't support CREATE IF NOT EXISTS\",\n\t\t\t\t\t\t\t\terr,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tawait promise;\n\t\t\t\t}\n\t\t\t\tawait migrator.postRun(tx, model);\n\n\t\t\t\todataResponse.prepareModel(compiledModel.abstractSql);\n\t\t\t\tdeepFreeze(compiledModel.abstractSql);\n\t\t\t\tmodels[apiRoot] = compiledModel;\n\n\t\t\t\t// Validate the [empty] model according to the rules.\n\t\t\t\t// This may eventually lead to entering obligatory data.\n\t\t\t\t// For the moment it blocks such models from execution.\n\t\t\t\tawait validateModel(tx, apiRoot);\n\n\t\t\t\t// TODO: Can we do this without the cast?\n\t\t\t\tapi[apiRoot] = new PinejsClient('/' + apiRoot + '/') as LoggingClient;\n\t\t\t\tapi[apiRoot].logger = { ...console };\n\t\t\t\tif (model.logging != null) {\n\t\t\t\t\tconst defaultSetting = model.logging?.default ?? true;\n\t\t\t\t\tfor (const k of Object.keys(model.logging)) {\n\t\t\t\t\t\tconst key = k as keyof Console;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ttypeof api[apiRoot].logger[key] === 'function' &&\n\t\t\t\t\t\t\t!(model.logging?.[key] ?? defaultSetting)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tapi[apiRoot].logger[key] = _.noop;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn compiledModel;\n\t\t\t\t// Only update the dev models once all models have finished executing.\n\t\t\t}),\n\t\t);\n\t\tawait Promise.all(\n\t\t\tcompiledModels.map(async (model: CompiledModel) => {\n\t\t\t\tconst updateModel = async (modelType: keyof CompiledModel) => {\n\t\t\t\t\tif (model[modelType] == null) {\n\t\t\t\t\t\treturn await api.dev.delete({\n\t\t\t\t\t\t\tresource: 'model',\n\t\t\t\t\t\t\tpassthrough: {\n\t\t\t\t\t\t\t\ttx,\n\t\t\t\t\t\t\t\treq: permissions.root,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t$filter: {\n\t\t\t\t\t\t\t\t\tis_of__vocabulary: model.vocab,\n\t\t\t\t\t\t\t\t\tmodel_type: modelType,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tconst result = (await api.dev.get({\n\t\t\t\t\t\tresource: 'model',\n\t\t\t\t\t\tpassthrough: {\n\t\t\t\t\t\t\ttx,\n\t\t\t\t\t\t\treq: permissions.rootRead,\n\t\t\t\t\t\t},\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t$select: 'id',\n\t\t\t\t\t\t\t$filter: {\n\t\t\t\t\t\t\t\tis_of__vocabulary: model.vocab,\n\t\t\t\t\t\t\t\tmodel_type: modelType,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t})) as Array<{ id: number }>;\n\n\t\t\t\t\tlet method: SupportedMethod = 'POST';\n\t\t\t\t\tlet uri = '/dev/model';\n\t\t\t\t\tconst body: AnyObject = {\n\t\t\t\t\t\tis_of__vocabulary: model.vocab,\n\t\t\t\t\t\tmodel_value: model[modelType],\n\t\t\t\t\t\tmodel_type: modelType,\n\t\t\t\t\t};\n\t\t\t\t\tconst id = result?.[0]?.id;\n\t\t\t\t\tif (id != null) {\n\t\t\t\t\t\turi += '(' + id + ')';\n\t\t\t\t\t\tmethod = 'PATCH';\n\t\t\t\t\t\tbody.id = id;\n\t\t\t\t\t} else {\n\t\t\t\t\t\turi += '?returnResource=false';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn await runURI(method, uri, body, tx, permissions.root);\n\t\t\t\t};\n\n\t\t\t\tawait Promise.all(\n\t\t\t\t\t['se', 'lf', 'abstractSql', 'sql', 'odataMetadata'].map(updateModel),\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\t} catch (err) {\n\t\tawait Promise.all(\n\t\t\texecModels.map(async ({ apiRoot }) => {\n\t\t\t\tawait cleanupModel(apiRoot);\n\t\t\t}),\n\t\t);\n\t\tthrow err;\n\t}\n};\n\nconst cleanupModel = (vocab: string) => {\n\tdelete models[vocab];\n\tdelete api[vocab];\n};\n\nexport const deleteModel = async (vocabulary: string) => {\n\tawait db.transaction(async (tx) => {\n\t\tconst dropStatements: Array<Promise<any>> = models[\n\t\t\tvocabulary\n\t\t].sql.dropSchema.map((dropStatement) => tx.executeSql(dropStatement));\n\t\tawait Promise.all(\n\t\t\tdropStatements.concat([\n\t\t\t\tapi.dev.delete({\n\t\t\t\t\tresource: 'model',\n\t\t\t\t\tpassthrough: {\n\t\t\t\t\t\ttx,\n\t\t\t\t\t\treq: permissions.root,\n\t\t\t\t\t},\n\t\t\t\t\toptions: {\n\t\t\t\t\t\t$filter: {\n\t\t\t\t\t\t\tis_of__vocabulary: vocabulary,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t]),\n\t\t);\n\t});\n\tawait cleanupModel(vocabulary);\n};\n\nconst isWhereNode = (\n\tx: AbstractSQLCompiler.AbstractSqlType,\n): x is AbstractSQLCompiler.WhereNode => x[0] === 'Where';\nconst isEqualsNode = (\n\tx: AbstractSQLCompiler.AbstractSqlType,\n): x is AbstractSQLCompiler.EqualsNode => x[0] === 'Equals';\nexport const getID = (vocab: string, request: uriParser.ODataRequest) => {\n\tif (request.abstractSqlQuery == null) {\n\t\tthrow new Error('Can only get the id if an abstractSqlQuery is provided');\n\t}\n\tconst { idField } = models[vocab].abstractSql.tables[request.resourceName];\n\tfor (const whereClause of request.abstractSqlQuery) {\n\t\tif (isWhereNode(whereClause)) {\n\t\t\tfor (const comparison of whereClause.slice(1)) {\n\t\t\t\tif (isEqualsNode(comparison)) {\n\t\t\t\t\tif (comparison[1][2] === idField) {\n\t\t\t\t\t\treturn comparison[2][1];\n\t\t\t\t\t}\n\t\t\t\t\tif (comparison[2][2] === idField) {\n\t\t\t\t\t\treturn comparison[1][1];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n};\n\nexport const runRule = (() => {\n\tconst LF2AbstractSQLPrepHack = LF2AbstractSQL.LF2AbstractSQLPrep._extend({\n\t\tCardinalityOptimisation() {\n\t\t\tthis._pred(false);\n\t\t},\n\t});\n\tconst translator = LF2AbstractSQL.LF2AbstractSQL.createInstance();\n\ttranslator.addTypes(sbvrTypes);\n\treturn async (vocab: string, rule: string) => {\n\t\tconst seModel = models[vocab].se;\n\t\tconst { logger } = api[vocab];\n\t\tlet lfModel: LFModel;\n\t\tlet slfModel: LFModel;\n\t\tlet abstractSqlModel: AbstractSQLCompiler.AbstractSqlModel;\n\n\t\ttry {\n\t\t\tlfModel = ExtendedSBVRParser.matchAll(\n\t\t\t\tseModel + '\\nRule: ' + rule,\n\t\t\t\t'Process',\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tlogger.error('Error parsing rule', rule, e);\n\t\t\tthrow new Error(`Error parsing rule'${rule}': ${e}`);\n\t\t}\n\n\t\tconst ruleLF = lfModel.pop();\n\n\t\ttry {\n\t\t\tslfModel = LF2AbstractSQL.LF2AbstractSQLPrep.match(lfModel, 'Process');\n\t\t\tslfModel.push(ruleLF);\n\t\t\tslfModel = LF2AbstractSQLPrepHack.match(slfModel, 'Process');\n\n\t\t\ttranslator.reset();\n\t\t\tabstractSqlModel = translator.match(slfModel, 'Process');\n\t\t} catch (e) {\n\t\t\tlogger.error('Error compiling rule', rule, e);\n\t\t\tthrow new Error(`Error compiling rule '${rule}': ${e}`);\n\t\t}\n\n\t\tconst formulationType = ruleLF[1][0];\n\t\tlet resourceName: string;\n\t\tif (ruleLF[1][1][0] === 'LogicalNegation') {\n\t\t\tresourceName = ruleLF[1][1][1][1][2][1];\n\t\t} else {\n\t\t\tresourceName = ruleLF[1][1][1][2][1];\n\t\t}\n\n\t\tlet fetchingViolators = false;\n\t\tconst ruleAbs = _.last(abstractSqlModel.rules);\n\t\tif (ruleAbs == null) {\n\t\t\tthrow new Error('Unable to generate rule');\n\t\t}\n\t\tconst ruleBody = ruleAbs.find((node) => node[0] === 'Body') as [\n\t\t\t'Body',\n\t\t\t...any[]\n\t\t];\n\t\tif (\n\t\t\truleBody[1][0] === 'Not' &&\n\t\t\truleBody[1][1][0] === 'Exists' &&\n\t\t\truleBody[1][1][1][0] === 'SelectQuery'\n\t\t) {\n\t\t\t// Remove the not exists\n\t\t\truleBody[1] = ruleBody[1][1][1];\n\t\t\tfetchingViolators = true;\n\t\t} else if (\n\t\t\truleBody[1][0] === 'Exists' &&\n\t\t\truleBody[1][1][0] === 'SelectQuery'\n\t\t) {\n\t\t\t// Remove the exists\n\t\t\truleBody[1] = ruleBody[1][1];\n\t\t} else {\n\t\t\tthrow new Error('Unsupported rule formulation');\n\t\t}\n\n\t\tconst wantNonViolators =\n\t\t\tformulationType in\n\t\t\t['PossibilityFormulation', 'PermissibilityFormulation'];\n\t\tif (wantNonViolators === fetchingViolators) {\n\t\t\t// What we want is the opposite of what we're getting, so add a not to the where clauses\n\t\t\truleBody[1] = ruleBody[1].map(\n\t\t\t\t(queryPart: AbstractSQLCompiler.AbstractSqlQuery) => {\n\t\t\t\t\tif (queryPart[0] !== 'Where') {\n\t\t\t\t\t\treturn queryPart;\n\t\t\t\t\t}\n\t\t\t\t\tif (queryPart.length > 2) {\n\t\t\t\t\t\tthrow new Error('Unsupported rule formulation');\n\t\t\t\t\t}\n\t\t\t\t\treturn ['Where', ['Not', queryPart[1]]];\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\n\t\t// Select all\n\t\truleBody[1] = ruleBody[1].map(\n\t\t\t(queryPart: AbstractSQLCompiler.AbstractSqlQuery) => {\n\t\t\t\tif (queryPart[0] !== 'Select') {\n\t\t\t\t\treturn queryPart;\n\t\t\t\t}\n\t\t\t\treturn ['Select', '*'];\n\t\t\t},\n\t\t);\n\t\tconst compiledRule = AbstractSQLCompiler[db.engine].compileRule(ruleBody);\n\t\tif (Array.isArray(compiledRule)) {\n\t\t\tthrow new Error('Unexpected query generated');\n\t\t}\n\t\tconst values = await getAndCheckBindValues(\n\t\t\t{\n\t\t\t\tvocabulary: vocab,\n\t\t\t\todataBinds: [],\n\t\t\t\tvalues: {},\n\t\t\t\tengine: db.engine,\n\t\t\t},\n\t\t\tcompiledRule.bindings,\n\t\t);\n\t\tconst result = await db.executeSql(compiledRule.query, values);\n\n\t\tconst table = models[vocab].abstractSql.tables[resourceName];\n\t\tconst odataIdField = sqlNameToODataName(table.idField);\n\t\tlet ids = result.rows.map((row) => row[table.idField]);\n\t\tids = _.uniq(ids);\n\t\tids = ids.map((id) => odataIdField + ' eq ' + id);\n\t\tlet filter: string;\n\t\tif (ids.length > 0) {\n\t\t\tfilter = ids.join(' or ');\n\t\t} else {\n\t\t\tfilter = '0 eq 1';\n\t\t}\n\t\tconst odataResult = (await runURI(\n\t\t\t'GET',\n\t\t\t'/' +\n\t\t\t\tvocab +\n\t\t\t\t'/' +\n\t\t\t\tsqlNameToODataName(table.resourceName) +\n\t\t\t\t'?$filter=' +\n\t\t\t\tfilter,\n\t\t\tundefined,\n\t\t\tundefined,\n\t\t\tpermissions.rootRead,\n\t\t)) as AnyObject;\n\n\t\todataResult.__formulationType = formulationType;\n\t\todataResult.__resourceName = resourceName;\n\t\treturn odataResult;\n\t};\n})();\n\nexport type Passthrough = AnyObject & {\n\treq?: {\n\t\tuser?: User;\n\t};\n\ttx?: Db.Tx;\n};\n\nexport class PinejsClient extends PinejsClientCore<PinejsClient> {\n\tpublic passthrough: Passthrough;\n\tpublic async _request({\n\t\tmethod,\n\t\turl,\n\t\tbody,\n\t\ttx,\n\t\treq,\n\t\tcustom,\n\t}: {\n\t\tmethod: string;\n\t\turl: string;\n\t\tbody?: AnyObject;\n\t\ttx?: Db.Tx;\n\t\treq?: permissions.PermissionReq;\n\t\tcustom?: AnyObject;\n\t}) {\n\t\treturn (await runURI(method, url, body, tx, req, custom)) as {};\n\t}\n}\n\nexport type LoggingClient = PinejsClient & {\n\tlogger: Console;\n};\nexport const api: {\n\t[vocab: string]: LoggingClient;\n} = {};\n\n// We default to guest only permissions if no req object is passed in\nexport const runURI = async (\n\tmethod: string,\n\turi: string,\n\tbody: AnyObject = {},\n\ttx?: Db.Tx,\n\treq?: permissions.PermissionReq,\n\tcustom?: AnyObject,\n): Promise<PromiseResultTypes> => {\n\tconst [, apiRoot] = uri.split('/', 2);\n\tif (apiRoot == null || models[apiRoot] == null) {\n\t\tthrow new InternalRequestError();\n\t}\n\n\tlet user: User | undefined;\n\tlet apiKey: ApiKey | undefined;\n\n\tif (req != null && _.isObject(req)) {\n\t\tuser = req.user;\n\t\tapiKey = req.apiKey;\n\t} else {\n\t\tif (req != null) {\n\t\t\tconsole.warn('Non-object req passed to runURI?', req, new Error().stack);\n\t\t}\n\t\tuser = {\n\t\t\tid: 0,\n\t\t\tactor: 0,\n\t\t\tpermissions: [],\n\t\t};\n\t}\n\n\t// Remove undefined values from the body, as normally they would be removed by the JSON conversion\n\t_.forEach(body, (v, k) => {\n\t\tif (v === undefined) {\n\t\t\tdelete body[k];\n\t\t}\n\t});\n\n\tconst emulatedReq: Express.Request = {\n\t\ton: _.noop,\n\t\tcustom,\n\t\tuser,\n\t\tapiKey,\n\t\tmethod,\n\t\turl: uri,\n\t\tbody,\n\t\tparams: {},\n\t\tquery: {},\n\t\ttx,\n\t} as any;\n\n\tconst { promise } = runODataRequest(emulatedReq, apiRoot);\n\n\tconst [response] = await promise;\n\n\tif (_.isError(response)) {\n\t\tthrow response;\n\t}\n\n\tconst { body: responseBody, status } = response as Response;\n\n\tif (status != null && status >= 400) {\n\t\tconst ErrorClass =\n\t\t\tstatusCodeToError[status as keyof typeof statusCodeToError];\n\t\tif (ErrorClass != null) {\n\t\t\tthrow new ErrorClass(undefined, responseBody);\n\t\t}\n\t\tthrow new HttpError(status, undefined, responseBody);\n\t}\n\n\treturn responseBody as AnyObject | undefined;\n};\n\nexport const getAbstractSqlModel = (\n\trequest: Pick<uriParser.ODataRequest, 'vocabulary' | 'abstractSqlModel'>,\n): AbstractSQLCompiler.AbstractSqlModel => {\n\treturn (request.abstractSqlModel ??= models[request.vocabulary].abstractSql);\n};\n\nconst getIdField = (\n\trequest: Pick<\n\t\turiParser.ODataRequest,\n\t\t'vocabulary' | 'abstractSqlModel' | 'resourceName'\n\t>,\n) => getAbstractSqlModel(request).tables[resolveSynonym(request)].idField;\n\nexport const getAffectedIds = async (\n\targs: HookArgs & {\n\t\ttx: Db.Tx;\n\t},\n): Promise<number[]> => {\n\tconst { request } = args;\n\tif (request.affectedIds) {\n\t\treturn request.affectedIds;\n\t}\n\n\t// We keep the affected ids promise so we only have to fetch them once per request\n\tif (request.pendingAffectedIds != null) {\n\t\treturn request.pendingAffectedIds;\n\t}\n\trequest.pendingAffectedIds = $getAffectedIds(args);\n\n\t// Store the affected ids and delete the pending promise to allow it to be GCed sooner.\n\trequest.affectedIds = await request.pendingAffectedIds;\n\tdelete request.pendingAffectedIds;\n\n\treturn request.affectedIds;\n};\n\nconst $getAffectedIds = async ({\n\treq,\n\trequest,\n\ttx,\n}: HookArgs & {\n\ttx: Db.Tx;\n}): Promise<number[]> => {\n\tif (!['PATCH', 'DELETE'].includes(request.method)) {\n\t\t// We can only find the affected ids in advance for requests that modify existing records, if they\n\t\t// can insert new records (POST/PUT) then we're unable to find the ids until the request has actually run\n\t\t// and for GETs nothing is affected\n\t\tthrow new Error(\n\t\t\t'Can only call `getAffectedIds` with PATCH/DELETE requests',\n\t\t);\n\t}\n\t// We reparse to make sure we get a clean odataQuery, without permissions already added\n\t// And we use the request's url rather than the req for things like batch where the req url is ../$batch\n\trequest = await uriParser.parseOData({\n\t\tmethod: request.method,\n\t\turl: `/${request.vocabulary}${request.url}`,\n\t});\n\n\trequest.engine = db.engine;\n\tconst abstractSqlModel = getAbstractSqlModel(request);\n\tconst resourceName = resolveSynonym(request);\n\tconst resourceTable = abstractSqlModel.tables[resourceName];\n\tif (resourceTable == null) {\n\t\tthrow new Error('Unknown resource: ' + request.resourceName);\n\t}\n\tconst { idField } = resourceTable;\n\n\trequest.odataQuery.options ??= {};\n\trequest.odataQuery.options.$select = {\n\t\tproperties: [{ name: idField }],\n\t};\n\n\t// Delete any $expand that might exist as they're ignored on non-GETs but we're converting this request to a GET\n\tdelete request.odataQuery.options.$expand;\n\n\tawait permissions.addPermissions(req, request);\n\n\trequest.method = 'GET';\n\n\trequest = uriParser.translateUri(request);\n\trequest = compileRequest(request);\n\n\tlet result;\n\tif (tx != null) {\n\t\tresult = await runQuery(tx, request);\n\t} else {\n\t\tresult = await runTransaction(req, (newTx) => runQuery(newTx, request));\n\t}\n\treturn result.rows.map((row) => row[idField]);\n};\n\nconst runODataRequest = (req: Express.Request, vocabulary: string) => {\n\tif (env.DEBUG) {\n\t\tapi[vocabulary].logger.log('Parsing', req.method, req.url);\n\t}\n\n\t// Get the hooks for the current method/vocabulary as we know it,\n\t// in order to run PREPARSE hooks, before parsing gets us more info\n\tconst reqHooks = getHooks({\n\t\tmethod: req.method as SupportedMethod,\n\t\tvocabulary,\n\t});\n\n\tconst transactions: Db.Tx[] = [];\n\tconst tryCancelRequest = () => {\n\t\ttransactions.forEach(async (tx) => {\n\t\t\tif (tx.isClosed()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tawait tx.rollback();\n\t\t\t} catch {\n\t\t\t\t// Ignore issues rolling back/cancelling transactions\n\t\t\t}\n\t\t});\n\t\t// Clear the list\n\t\ttransactions.length = 0;\n\t\trollbackRequestHooks(reqHooks);\n\t};\n\n\treq.on('close', tryCancelRequest);\n\n\tif (req.tx != null) {\n\t\ttransactions.push(req.tx);\n\t\treq.tx.on('rollback', tryCancelRequest);\n\t}\n\n\tconst mapSeries = controlFlow.getMappingFn(req.headers);\n\n\treturn {\n\t\ttryCancelRequest,\n\t\tpromise: (async () => {\n\t\t\tawait runHooks('PREPARSE', reqHooks, { req, tx: req.tx });\n\t\t\tlet requests: uriParser.UnparsedRequest[];\n\t\t\t// Check if it is a single request or a batch\n\t\t\tif (req.batch != null && req.batch.length > 0) {\n\t\t\t\trequests = req.batch;\n\t\t\t} else {\n\t\t\t\tconst { method, url, body } = req;\n\t\t\t\trequests = [{ method, url, data: body }];\n\t\t\t}\n\n\t\t\tconst prepareRequest = async ($request: uriParser.ODataRequest) => {\n\t\t\t\t$request.engine = db.engine;\n\t\t\t\t// Get the full hooks list now that we can.\n\t\t\t\t$request.hooks = getHooks($request);\n\t\t\t\t// Add/check the relevant permissions\n\t\t\t\ttry {\n\t\t\t\t\tawait runHooks('POSTPARSE', $request.hooks, {\n\t\t\t\t\t\treq,\n\t\t\t\t\t\trequest: $request,\n\t\t\t\t\t\ttx: req.tx,\n\t\t\t\t\t});\n\t\t\t\t\tconst translatedRequest = await uriParser.translateUri($request);\n\t\t\t\t\treturn await compileRequest(translatedRequest);\n\t\t\t\t} catch (err) {\n\t\t\t\t\trollbackRequestHooks(reqHooks);\n\t\t\t\t\trollbackRequestHooks($request.hooks);\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Parse the OData requests\n\t\t\tconst results = await mapSeries(requests, async (requestPart) => {\n\t\t\t\tlet request = await uriParser.parseOData(requestPart);\n\n\t\t\t\tif (Array.isArray(request)) {\n\t\t\t\t\trequest = await Bluebird.mapSeries(request, prepareRequest);\n\t\t\t\t} else {\n\t\t\t\t\trequest = await prepareRequest(request);\n\t\t\t\t}\n\t\t\t\t// Run the request in its own transaction\n\t\t\t\treturn await runTransaction<Response | Response[]>(req, async (tx) => {\n\t\t\t\t\ttransactions.push(tx);\n\t\t\t\t\ttx.on('rollback', () => {\n\t\t\t\t\t\trollbackRequestHooks(reqHooks);\n\t\t\t\t\t\tif (Array.isArray(request)) {\n\t\t\t\t\t\t\trequest.forEach(({ hooks }) => {\n\t\t\t\t\t\t\t\trollbackRequestHooks(hooks);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\trollbackRequestHooks(request.hooks);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tif (Array.isArray(request)) {\n\t\t\t\t\t\tconst changeSetResults = new Map<number, Response>();\n\t\t\t\t\t\tconst changeSetRunner = runChangeSet(req, tx);\n\t\t\t\t\t\tfor (const r of request) {\n\t\t\t\t\t\t\tawait changeSetRunner(changeSetResults, r);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn Array.from(changeSetResults.values());\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn await runRequest(req, tx, request);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tconst responses = results.map((result) => {\n\t\t\t\tif (_.isError(result)) {\n\t\t\t\t\treturn convertToHttpError(result);\n\t\t\t\t} else {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!Array.isArray(result) &&\n\t\t\t\t\t\tresult.body == null &&\n\t\t\t\t\t\tresult.status == null\n\t\t\t\t\t) {\n\t\t\t\t\t\tconsole.error('No status or body set', req.url, responses);\n\t\t\t\t\t\treturn new InternalRequestError();\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn responses;\n\t\t})(),\n\t};\n};\n\nexport const handleODataRequest: Express.Handler = async (req, res, next) => {\n\tconst [, apiRoot] = req.url.split('/', 2);\n\tif (apiRoot == null || models[apiRoot] == null) {\n\t\treturn next('route');\n\t}\n\n\ttry {\n\t\tconst { tryCancelRequest, promise } = runODataRequest(req, apiRoot);\n\n\t\tres.on('close', tryCancelRequest);\n\n\t\tconst responses = await promise;\n\n\t\tres.set('Cache-Control', 'no-cache');\n\t\t// If we are dealing with a single request unpack the response and respond normally\n\t\tif (req.batch == null || req.batch.length === 0) {\n\t\t\tlet [response] = responses;\n\t\t\tif (_.isError(response)) {\n\t\t\t\tresponse = {\n\t\t\t\t\tstatus: response.status,\n\t\t\t\t\tbody: response.getResponseBody(),\n\t\t\t\t};\n\t\t\t}\n\t\t\tconst { body, headers, status } = response as Response;\n\t\t\tif (status) {\n\t\t\t\tres.status(status);\n\t\t\t}\n\t\t\t_.forEach(headers, (headerValue, headerName) => {\n\t\t\t\tres.set(headerName, headerValue);\n\t\t\t});\n\n\t\t\tif (!body) {\n\t\t\t\tres.sendStatus(status!);\n\t\t\t} else {\n\t\t\t\tif (status != null) {\n\t\t\t\t\tres.status(status);\n\t\t\t\t}\n\t\t\t\tres.json(body);\n\t\t\t}\n\n\t\t\t// Otherwise its a multipart request and we reply with the appropriate multipart response\n\t\t} else {\n\t\t\t(res.status(200) as any).sendMulti(\n\t\t\t\tresponses.map((response) => {\n\t\t\t\t\tif (_.isError(response)) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tstatus: response.status,\n\t\t\t\t\t\t\tbody: response.getResponseBody(),\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn response;\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t} catch (e) {\n\t\tif (e instanceof HttpError) {\n\t\t\tconst body = e.getResponseBody();\n\t\t\tif (body) {\n\t\t\t\tres.status(e.status).send(body);\n\t\t\t} else {\n\t\t\t\tres.sendStatus(e.status);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t// If an error bubbles here it must have happened in the last then block\n\t\t// We just respond with 500 as there is probably not much we can do to recover\n\t\tconsole.error('An error occurred while constructing the response', e);\n\t\tres.sendStatus(500);\n\t}\n};\n\n// Reject the error to use the nice catch syntax\nconst convertToHttpError = (err: any): HttpError => {\n\tif (err instanceof HttpError) {\n\t\treturn err;\n\t}\n\tif (err instanceof SbvrValidationError) {\n\t\treturn new BadRequestError(err);\n\t}\n\tif (err instanceof PermissionError) {\n\t\treturn new UnauthorizedError(err);\n\t}\n\tif (err instanceof db.ConstraintError) {\n\t\treturn new ConflictError(err);\n\t}\n\tif (\n\t\terr instanceof SqlCompilationError ||\n\t\terr instanceof TranslationError ||\n\t\terr instanceof ParsingError ||\n\t\terr instanceof PermissionParsingError ||\n\t\terr instanceof db.DatabaseError\n\t) {\n\t\treturn new InternalRequestError();\n\t}\n\n\tconsole.error('Unexpected response error type', err);\n\treturn new NotFoundError(err);\n};\n\nconst runRequest = async (\n\treq: Express.Request,\n\ttx: Db.Tx,\n\trequest: uriParser.ODataRequest,\n): Promise<Response> => {\n\tconst { logger } = api[request.vocabulary];\n\n\tif (env.DEBUG) {\n\t\tlogger.log('Running', req.method, req.url);\n\t}\n\tlet result: Db.Result | number | undefined;\n\n\ttry {\n\t\ttry {\n\t\t\t// Forward each request to the correct method handler\n\t\t\tawait runHooks('PRERUN', request.hooks, { req, request, tx });\n\n\t\t\tswitch (request.method) {\n\t\t\t\tcase 'GET':\n\t\t\t\t\tresult = await runGet(req, request, tx);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'POST':\n\t\t\t\t\tresult = await runPost(req, request, tx);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'PUT':\n\t\t\t\tcase 'PATCH':\n\t\t\t\tcase 'MERGE':\n\t\t\t\t\tresult = await runPut(req, request, tx);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'DELETE':\n\t\t\t\t\tresult = await runDelete(req, request, tx);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tif (err instanceof db.DatabaseError) {\n\t\t\t\tprettifyConstraintError(err, request);\n\t\t\t\tlogger.error(err);\n\t\t\t\t// Override the error message so we don't leak any internal db info\n\t\t\t\terr.message = 'Database error';\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t\tif (\n\t\t\t\terr instanceof uriParser.SyntaxError ||\n\t\t\t\terr instanceof EvalError ||\n\t\t\t\terr instanceof RangeError ||\n\t\t\t\terr instanceof ReferenceError ||\n\t\t\t\terr instanceof SyntaxError ||\n\t\t\t\terr instanceof TypeError ||\n\t\t\t\terr instanceof URIError\n\t\t\t) {\n\t\t\t\tlogger.error(err);\n\t\t\t\tthrow new InternalRequestError();\n\t\t\t}\n\t\t\tthrow err;\n\t\t}\n\n\t\tawait runHooks('POSTRUN', request.hooks, { req, request, result, tx });\n\t} catch (err) {\n\t\tawait runHooks('POSTRUN-ERROR', request.hooks, {\n\t\t\treq,\n\t\t\trequest,\n\t\t\ttx,\n\t\t\terror: err,\n\t\t});\n\t\tthrow err;\n\t}\n\treturn await prepareResponse(req, request, result, tx);\n};\n\nconst runChangeSet =\n\t(req: Express.Request, tx: Db.Tx) =>\n\tasync (\n\t\tchangeSetResults: Map<number, Response>,\n\t\trequest: uriParser.ODataRequest,\n\t): Promise<void> => {\n\t\trequest = updateBinds(changeSetResults, request);\n\t\tconst result = await runRequest(req, tx, request);\n\t\tif (request.id == null) {\n\t\t\tthrow new Error('No request id');\n\t\t}\n\t\tresult.headers ??= {};\n\t\tresult.headers['Content-Id'] = request.id;\n\t\tchangeSetResults.set(request.id, result);\n\t};\n\n// Requests inside a changeset may refer to resources created inside the\n// changeset, the generation of the sql query for those requests must be\n// deferred untill the request they reference is run and returns an insert ID.\n// This function compiles the sql query of a request which has been deferred\nconst updateBinds = (\n\tchangeSetResults: Map<number, Response>,\n\trequest: uriParser.ODataRequest,\n) => {\n\tif (request._defer) {\n\t\trequest.odataBinds = request.odataBinds.map(([tag, id]) => {\n\t\t\tif (tag === 'ContentReference') {\n\t\t\t\tconst ref = changeSetResults.get(id);\n\t\t\t\tif (\n\t\t\t\t\tref?.body == null ||\n\t\t\t\t\ttypeof ref.body === 'string' ||\n\t\t\t\t\tref.body.id === undefined\n\t\t\t\t) {\n\t\t\t\t\tthrow new BadRequestError(\n\t\t\t\t\t\t'Reference to a non existing resource in Changeset',\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn uriParser.parseId(ref.body.id);\n\t\t\t}\n\t\t\treturn [tag, id];\n\t\t});\n\t}\n\treturn request;\n};\n\nconst prepareResponse = async (\n\treq: Express.Request,\n\trequest: uriParser.ODataRequest,\n\tresult: any,\n\ttx: Db.Tx,\n): Promise<Response> => {\n\tswitch (request.method) {\n\t\tcase 'GET':\n\t\t\treturn await respondGet(req, request, result, tx);\n\t\tcase 'POST':\n\t\t\treturn await respondPost(req, request, result, tx);\n\t\tcase 'PUT':\n\t\tcase 'PATCH':\n\t\tcase 'MERGE':\n\t\t\treturn await respondPut(req, request, result, tx);\n\t\tcase 'DELETE':\n\t\t\treturn await respondDelete(req, request, result, tx);\n\t\tcase 'OPTIONS':\n\t\t\treturn await respondOptions(req, request, result, tx);\n\t\tdefault:\n\t\t\tthrow new MethodNotAllowedError();\n\t}\n};\n\n// This is a helper method to handle using a passed in req.tx when available, or otherwise creating a new tx and cleaning up after we're done.\nconst runTransaction = async <T>(\n\treq: HookReq,\n\tcallback: (tx: Db.Tx) => Promise<T>,\n): Promise<T> => {\n\tif (req.tx != null) {\n\t\t// If an existing tx was passed in then use it.\n\t\treturn await callback(req.tx);\n\t} else {\n\t\t// Otherwise create a new transaction and handle tidying it up.\n\t\treturn await db.transaction(callback);\n\t}\n};\n\n// This is a helper function that will check and add the bind values to the SQL query and then run it.\nconst runQuery = async (\n\ttx: Db.Tx,\n\trequest: uriParser.ODataRequest,\n\tqueryIndex?: number,\n\treturningIdField?: string,\n): Promise<Db.Result> => {\n\tconst { vocabulary } = request;\n\tlet { sqlQuery } = request;\n\tif (sqlQuery == null) {\n\t\tthrow new InternalRequestError('No SQL query available to run');\n\t}\n\tif (request.engine == null) {\n\t\tthrow new InternalRequestError('No database engine specified');\n\t}\n\tif (Array.isArray(sqlQuery)) {\n\t\tif (queryIndex == null) {\n\t\t\tthrow new InternalRequestError(\n\t\t\t\t'Received a query index to run but the query is not an array',\n\t\t\t);\n\t\t}\n\t\tsqlQuery = sqlQuery[queryIndex];\n\t}\n\n\tconst { query, bindings } = sqlQuery;\n\tconst values = await getAndCheckBindValues(\n\t\trequest as RequiredField<typeof request, 'engine'>,\n\t\tbindings,\n\t);\n\n\tif (env.DEBUG) {\n\t\tapi[vocabulary].logger.log(query, values);\n\t}\n\n\tconst sqlResult = await tx.executeSql(query, values, returningIdField);\n\n\tif (returningIdField) {\n\t\trequest.affectedIds = sqlResult.rows.map((row) => row[returningIdField]);\n\t}\n\n\treturn sqlResult;\n};\n\nconst runGet = async (\n\t_req: Express.Request,\n\trequest: uriParser.ODataRequest,\n\ttx: Db.Tx,\n) => {\n\tif (request.sqlQuery != null) {\n\t\treturn await runQuery(tx, request);\n\t}\n};\n\nconst respondGet = async (\n\treq: Express.Request,\n\trequest: uriParser.ODataRequest,\n\tresult: any,\n\ttx: Db.Tx,\n): Promise<Response> => {\n\tconst vocab = request.vocabulary;\n\tif (request.sqlQuery != null) {\n\t\tconst format = request.odataQuery.options?.$format;\n\t\tconst metadata =\n\t\t\tformat != null && typeof format === 'object'\n\t\t\t\t? format.metadata\n\t\t\t\t: undefined;\n\t\tconst d = await odataResponse.process(\n\t\t\tvocab,\n\t\t\tgetAbstractSqlModel(request),\n\t\t\trequest.resourceName,\n\t\t\tresult.rows,\n\t\t\t{ includeMetadata: metadata === 'full' },\n\t\t);\n\n\t\tawait runHooks('PRERESPOND', request.hooks, {\n\t\t\treq,\n\t\t\trequest,\n\t\t\tresult,\n\t\t\tdata: d,\n\t\t\ttx,\n\t\t});\n\t\treturn { body: { d }, headers: { contentType: 'application/json' } };\n\t} else {\n\t\tif (request.resourceName === '$metadata') {\n\t\t\treturn {\n\t\t\t\tbody: models[vocab].odataMetadata,\n\t\t\t\theaders: { contentType: 'xml' },\n\t\t\t};\n\t\t} else {\n\t\t\t// TODO: request.resourceName can be '$serviceroot' or a resource and we should return an odata xml document based on that\n\t\t\treturn {\n\t\t\t\tstatus: 404,\n\t\t\t};\n\t\t}\n\t}\n};\n\nconst runPost = async (\n\t_req: Express.Request,\n\trequest: uriParser.ODataRequest,\n\ttx: Db.Tx,\n): Promise<number | undefined> => {\n\tconst { rowsAffected, insertId } = await runQuery(\n\t\ttx,\n\t\trequest,\n\t\tundefined,\n\t\tgetIdField(request),\n\t);\n\tif (rowsAffected === 0) {\n\t\tthrow new PermissionError();\n\t}\n\tawait validateModel(tx, request.vocabulary, request);\n\n\treturn insertId;\n};\n\nconst respondPost = async (\n\treq: Express.Request,\n\trequest: uriParser.ODataRequest,\n\tid: number,\n\ttx: Db.Tx,\n): Promise<Response> => {\n\tconst vocab = request.vocabulary;\n\tconst location = odataResponse.resourceURI(vocab, request.resourceName, id);\n\tif (env.DEBUG) {\n\t\tapi[vocab].logger.log('Insert ID: ', request.resourceName, id);\n\t}\n\n\tlet result: AnyObject = { d: [{ id }] };\n\tif (\n\t\tlocation != null &&\n\t\t!['0', 'false'].includes(\n\t\t\trequest?.odataQuery?.options?.returnResource as string,\n\t\t)\n\t) {\n\t\ttry {\n\t\t\tresult = (await runURI('GET', location, undefined, tx, req)) as AnyObject;\n\t\t} catch {\n\t\t\t// If we failed to fetch the created resource then we use just the id as default.\n\t\t}\n\t}\n\n\tawait runHooks('PRERESPOND', request.hooks, {\n\t\treq,\n\t\trequest,\n\t\tresult,\n\t\ttx,\n\t});\n\n\treturn {\n\t\tstatus: 201,\n\t\tbody: result.d[0],\n\t\theaders: {\n\t\t\tcontentType: 'application/json',\n\t\t\tLocation: location,\n\t\t},\n\t};\n};\n\nconst runPut = async (\n\t_req: Express.Request,\n\trequest: uriParser.ODataRequest,\n\ttx: Db.Tx,\n): Promise<undefined> => {\n\tconst idField = getIdField(request);\n\n\tlet rowsAffected: number;\n\t// If request.sqlQuery is an array it means it's an UPSERT, ie two queries: [InsertQuery, UpdateQuery]\n\tif (Array.isArray(request.sqlQuery)) {\n\t\t// Run the update query first\n\t\t({ rowsAffected } = await runQuery(tx, request, 1, idField));\n\t\tif (rowsAffected === 0) {\n\t\t\t// Then run the insert query if nothing was updated\n\t\t\t({ rowsAffected } = await runQuery(tx, request, 0, idField));\n\t\t}\n\t} else {\n\t\t({ rowsAffected } = await runQuery(tx, request, undefined, idField));\n\t}\n\tif (rowsAffected > 0) {\n\t\tawait validateModel(tx, request.vocabulary, request);\n\t}\n\treturn undefined;\n};\n\nconst respondPut = async (\n\treq: Express.Request,\n\trequest: uriParser.ODataRequest,\n\tresult: any,\n\ttx: Db.Tx,\n): Promise<Response> => {\n\tawait runHooks('PRERESPOND', request.hooks, {\n\t\treq,\n\t\trequest,\n\t\tresult,\n\t\ttx,\n\t});\n\treturn {\n\t\tstatus: 200,\n\t\theaders: {},\n\t};\n};\nconst respondDelete = respondPut;\nconst respondOptions = respondPut;\n\nconst runDelete = async (\n\t_req: Express.Request,\n\trequest: uriParser.ODataRequest,\n\ttx: Db.Tx,\n): Promise<undefined> => {\n\tconst { rowsAffected } = await runQuery(\n\t\ttx,\n\t\trequest,\n\t\tundefined,\n\t\tgetIdField(request),\n\t);\n\tif (rowsAffected > 0) {\n\t\tawait validateModel(tx, request.vocabulary, request);\n\t}\n\n\treturn undefined;\n};\n\nexport const executeStandardModels = async (tx: Db.Tx): Promise<void> => {\n\ttry {\n\t\t// dev model must run first\n\t\tawait executeModel(tx, {\n\t\t\tapiRoot: 'dev',\n\t\t\tmodelText: devModel,\n\t\t\tlogging: {\n\t\t\t\tlog: false,\n\t\t\t},\n\t\t\tmigrations: {\n\t\t\t\t'11.0.0-modified-at': `\n\t\t\t\t\tALTER TABLE \"model\"\n\t\t\t\t\tADD COLUMN IF NOT EXISTS \"modified at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL;\n\t\t\t\t`,\n\t\t\t},\n\t\t});\n\t\tawait executeModels(tx, permissions.config.models);\n\t\tconsole.info('Successfully executed standard models.');\n\t} catch (err) {\n\t\tconsole.error('Failed to execute standard models.', err);\n\t\tthrow err;\n\t}\n};\n\nexport const setup = async (\n\t_app: Express.Application,\n\t$db: Db.Database,\n): Promise<void> => {\n\texports.db = db = $db;\n\ttry {\n\t\tawait db.transaction(async (tx) => {\n\t\t\tawait executeStandardModels(tx);\n\t\t\tawait permissions.setup();\n\t\t});\n\t} catch (err) {\n\t\tconsole.error('Could not execute standard models', err);\n\t\tprocess.exit(1);\n\t}\n\ttry {\n\t\tawait db.executeSql(\n\t\t\t'CREATE UNIQUE INDEX \"uniq_model_model_type_vocab\" ON \"model\" (\"is of-vocabulary\", \"model type\");',\n\t\t);\n\t} catch {\n\t\t// we can't use IF NOT EXISTS on all dbs, so we have to ignore the error raised if this index already exists\n\t}\n};\n","\"use strict\";\n\nvar _undefined = require(\"../function/noop\")(); // Support ES3 engines\n\nmodule.exports = function (val) { return val !== _undefined && val !== null; };\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","(function (root, factory) {\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine('ometa-core', function () {\r\n\t\t\treturn (root.OMeta = factory());\r\n\t\t});\r\n\t} else if (typeof exports === 'object') {\r\n\t\t// Node. Does not work with strict CommonJS, but\r\n\t\t// only CommonJS-like enviroments that support module.exports,\r\n\t\t// like Node.\r\n\t\tmodule.exports = factory();\r\n\t} else {\r\n\t\t// Browser globals\r\n\t\troot.OMeta = factory();\r\n\t}\r\n}(this, function () {\r\n\t\"use strict\";\r\n\t/*\r\n\t\tnew syntax:\r\n\t\t\t#foo and `foo\tmatch the string object 'foo' (it's also accepted in my JS)\r\n\t\t\t'abc'\t\tmatch the string object 'abc'\r\n\t\t\t'c'\t\t\tmatch the string object 'c'\r\n\t\t\t``abc''\t\tmatch the sequence of string objects 'a', 'b', 'c'\r\n\t\t\t\"abc\"\t\ttoken('abc')\r\n\t\t\t[1 2 3]\t\tmatch the array object [1, 2, 3]\r\n\t\t\tfoo(bar)\t\tapply rule foo with argument bar\r\n\t\t\t-> ...\t\tsemantic actions written in JS (see OMetaParser's atomicHostExpr rule)\r\n\t*/\r\n\r\n\t/*\r\n\tometa M {\r\n\t\tnumber =\r\n\t\t\t\tnumber:n digit:d\r\n\t\t\t\t-> { n * 10 + parseInt(d, 10) }\r\n\t\t\t|\tdigit:d\r\n\t\t\t\t-> { parseInt(d, 10) }\r\n\t}\r\n\r\n\tcompiles into...\r\n\r\n\tM = objectThatDelegatesTo(OMeta, {\r\n\t\tnumber: function() {\r\n\t\t\treturn this._or(function() {\r\n\t\t\t\t\tvar n = this._apply(\"number\"),\r\n\t\t\t\t\t\td = this._apply(\"digit\");\r\n\t\t\t\t\treturn n * 10 + parseInt(d, 10);\r\n\t\t\t\t},\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\tvar d = this._apply(\"digit\");\r\n\t\t\t\t\treturn parseInt(d, 10)\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\t})\r\n\tM.matchAll(\"123456789\", \"number\")\r\n\t*/\r\n\r\n\t//\r\n\t// failure exception\r\n\t//\r\n\tvar fail = function fail() {\r\n\t\treturn fail.error;\r\n\t};\r\n\tfail.error = new SyntaxError('match failed');\r\n\tfail.error._extend = function(child) {\r\n\t\treturn objectThatDelegatesTo(this, child);\r\n\t};\r\n\r\n\t//\r\n\t// ### function objectThatDelegatesTo(obj, props)\r\n\t// #### @obj {Object} parent object\r\n\t// #### @props {Object} object to merge result with\r\n\t// Returns object with merged properties of `obj` and `props`\r\n\t//\r\n\tfunction objectThatDelegatesTo(obj, props) {\r\n\t\tvar clone = Object.create(obj || {});\r\n\r\n\t\tfor (var key in props) {\r\n\t\t\tif (props.hasOwnProperty(key)) {\r\n\t\t\t\tclone[key] = props[key];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t//\r\n\t// ### function isSequenceable(o)\r\n\t// #### @o {any} object to perform check against\r\n\t// Returns true if object is sequenceable\r\n\t//\r\n\tfunction isSequenceable(o) {\r\n\t\treturn typeof o === 'string' || Array.isArray(o);\r\n\t}\r\n\r\n\t//\r\n\t// ### function getTag(o)\r\n\t// #### @o {Object} input\r\n\t// unique tags for objects (useful for making \"hash tables\")\r\n\t//\r\n\tfunction getTag(o) {\r\n\t\tif (o == null) {\r\n\t\t\treturn 'null';\r\n\t\t}\r\n\r\n\t\tswitch (typeof o) {\r\n\t\t\tcase \"boolean\":\r\n\t\t\t\treturn o === true ? \"Btrue\" : \"Bfalse\";\r\n\t\t\tcase \"string\":\r\n\t\t\t\treturn \"S\" + o;\r\n\t\t\tcase \"number\":\r\n\t\t\t\treturn \"N\" + o;\r\n\t\t\tdefault:\r\n\t\t\t\tif (!o.hasOwnProperty(\"_id_\")) {\r\n\t\t\t\t\to._id_ = getTag.id++;\r\n\t\t\t\t}\r\n\t\t\t\treturn \"R\" + o._id_;\r\n\t\t}\r\n\t}\r\n\tgetTag.id = 0;\r\n\r\n\t//\r\n\t// ### function isImmutable(o)\r\n\t// #### @o {any} object to perform check against\r\n\t// Returns true if object is immutable\r\n\t//\r\n\tfunction isImmutable(o) {\r\n\t\treturn o == null ||\r\n\t\t\ttypeof o === 'boolean' || typeof o === 'number' ||\r\n\t\t\ttypeof o === 'string';\r\n\t}\r\n\r\n\t//\r\n\t// ### function lookup (fn, success, fallback)\r\n\t// #### @fn {Function} function that may throw\r\n\t// #### @success {Function} call if function hasn't thrown\r\n\t// #### @fallback {Function} call if function thrown fail()\r\n\t//\r\n\tfunction lookup(fn, success, fallback) {\r\n\t\tvar value;\r\n\t\ttry {\r\n\t\t\tvalue = fn();\r\n\t\t} catch (e) {\r\n\t\t\tif (!(e instanceof SyntaxError)) {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t\treturn fallback && fallback(e);\r\n\t\t}\r\n\r\n\t\treturn success && success(value);\r\n\t}\r\n\r\n\tfunction always(fn, after) {\r\n\t\ttry {\r\n\t\t\treturn fn();\r\n\t\t} finally {\r\n\t\t\tafter();\r\n\t\t}\r\n\t}\r\n\r\n\tfunction identity(ans) {\r\n\t\treturn ans;\r\n\t}\r\n\r\n\tfunction returnTrue() {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction returnFalse() {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction throwFail() {\r\n\t\tthrow fail();\r\n\t}\r\n\r\n\tfunction noop() {}\r\n\r\n\t//\r\n\t// ### function OMInputStream(hd, tl)\r\n\t// #### @hd {any} Head\r\n\t// #### @tl {Object} Tail\r\n\t// Streams and memoization\r\n\t//\r\n\tfunction OMInputStream(hd, tl) {\r\n\t\tthis.memo = {};\r\n\t\tthis.lst = tl.lst;\r\n\t\tthis.idx = tl.idx;\r\n\t\tthis.hd = hd;\r\n\t\tthis.tl = tl;\r\n\t}\r\n\r\n\t//\r\n\t// ### function head ()\r\n\t// Returns stream's `hd` property\r\n\t//\r\n\tOMInputStream.prototype.head = function() { return this.hd; };\r\n\r\n\t//\r\n\t// ### function tail ()\r\n\t// Returns stream's `tl` property\r\n\t//\r\n\tOMInputStream.prototype.tail = function() { return this.tl; };\r\n\r\n\t//\r\n\t// ### function type ()\r\n\t// Returns stream's `lst` property constructor\r\n\t//\r\n\tOMInputStream.prototype.type = function() { return this.lst.constructor; };\r\n\r\n\t//\r\n\t// ### function upTo (that)\r\n\t// #### @that {Object} target object\r\n\t// Visit all tails and join all met heads and return string or array\r\n\t// (depending on `.lst` type)\r\n\t//\r\n\tOMInputStream.prototype.upTo = function(that) {\r\n\t\tvar r = [], curr = this;\r\n\t\twhile (curr !== that) {\r\n\t\t\tr.push(curr.head());\r\n\t\t\tcurr = curr.tail();\r\n\t\t}\r\n\t\treturn this.type() === String ? r.join('') : r;\r\n\t};\r\n\r\n\t//\r\n\t// ### function OMInputStreamEnd (lst, idx)\r\n\t// #### @lst {Array} list\r\n\t// #### @idx {Number} index\r\n\t// Internal class\r\n\t//\r\n\tfunction OMInputStreamEnd(lst, idx) {\r\n\t\tthis.memo = {};\r\n\t\tthis.lst = lst;\r\n\t\tthis.idx = idx;\r\n\t}\r\n\tOMInputStreamEnd.prototype = objectThatDelegatesTo(OMInputStream.prototype);\r\n\r\n\t//\r\n\t// ### function head ()\r\n\t// Not implemented\r\n\t//\r\n\tOMInputStreamEnd.prototype.head = throwFail;\r\n\r\n\t//\r\n\t// ### function tail ()\r\n\t// Not implemented\r\n\t//\r\n\tOMInputStreamEnd.prototype.tail = throwFail;\r\n\r\n\t//\r\n\t// ### function ListOMInputStream (lst, idx)\r\n\t// #### @lst {Array} list\r\n\t// #### @idx {Number} index\r\n\t// Returns self-expanding stream\r\n\t//\r\n\tfunction ListOMInputStream(lst, idx) {\r\n\t\tthis.memo = { };\r\n\t\tthis.lst = lst;\r\n\t\tthis.idx = idx;\r\n\t\tthis.hd = lst[idx];\r\n\t}\r\n\tListOMInputStream.prototype = objectThatDelegatesTo(OMInputStream.prototype);\r\n\r\n\t//\r\n\t// ### function head ()\r\n\t// Returns stream's `hd` property's value\r\n\t//\r\n\tListOMInputStream.prototype.head = function() { return this.hd; };\r\n\r\n\t//\r\n\t// ### function tail ()\r\n\t// Returns or creates stream's tail\r\n\t//\r\n\tListOMInputStream.prototype.tail = function() {\r\n\t\treturn this.tl || (this.tl = makeListOMInputStream(this.lst, this.idx + 1));\r\n\t};\r\n\r\n\t//\r\n\t// ### function makeListOMInputStream (lst, idx)\r\n\t// #### @lst {Array} List\r\n\t// #### @idx {Number} index\r\n\t// Returns either ListOMInputStream's or OMInputStreamEnd's instance\r\n\t//\r\n\tfunction makeListOMInputStream(lst, idx) {\r\n\t\tif (idx < lst.length) {\r\n\t\t\treturn new ListOMInputStream(lst, idx);\r\n\t\t} else {\r\n\t\t\treturn new OMInputStreamEnd(lst, idx);\r\n\t\t}\r\n\t}\r\n\r\n\t//\r\n\t// ### function makeOMInputStreamProxy (target)\r\n\t// #### @target {any} Delegate's constructor\r\n\t// Returns object with stream's properties\r\n\t// (has self-expanding tail)\r\n\t//\r\n\tfunction makeOMInputStreamProxy(target) {\r\n\t\treturn {\r\n\t\t\tmemo: {},\r\n\t\t\ttarget: target,\r\n\t\t\tidx: target.idx,\r\n\t\t\ttl: undefined,\r\n\t\t\ttype: function() {\r\n\t\t\t\treturn String;\r\n\t\t\t},\r\n\t\t\tupTo: OMInputStream.prototype.upTo,\r\n\t\t\thead: function() {\r\n\t\t\t\treturn target.head();\r\n\t\t\t},\r\n\t\t\ttail: function() {\r\n\t\t\t\treturn this.tl || (this.tl = makeOMInputStreamProxy(target.tail()));\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\t//\r\n\t// ### OMeta\r\n\t// the OMeta \"class\" and basic functionality\r\n\t//\r\n\tvar OMeta;\r\n\treturn OMeta = {\r\n\t\t_extend: function(child) {\r\n\t\t\treturn objectThatDelegatesTo(this, child);\r\n\t\t},\r\n\t\t_fail: fail,\r\n\t\t_enableTokens: function(rulesToTrack) {\r\n\t\t\tif(rulesToTrack == null) {\r\n\t\t\t\t// No rules to track were supplied and it wasn't even a reference they could be added to.\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._enableTokens = function() {\r\n\t\t\t\tthrow 'Can only enable tokens once';\r\n\t\t\t};\r\n\t\t\tthis._tokensEnabled = returnTrue;\r\n\t\t\tthis._addToken = function(startInput, endInput, rule, ruleArgs) {\r\n\t\t\t\tif(rulesToTrack.indexOf(rule) !== -1 && startInput !== endInput) {\r\n\t\t\t\t\twhile(startInput.hasOwnProperty('target')) {\r\n\t\t\t\t\t\tstartInput = startInput.target;\r\n\t\t\t\t\t}\r\n\t\t\t\t\twhile(endInput.hasOwnProperty('target')) {\r\n\t\t\t\t\t\tendInput = endInput.target;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(!startInput.hasOwnProperty('tokens')) {\r\n\t\t\t\t\t\tstartInput.tokens = [];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstartInput.tokens.push([endInput.idx, rule, ruleArgs]);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t},\r\n\t\t_addToken: noop,\r\n\t\t_tokensEnabled: returnFalse,\r\n\r\n\t\t_enableBranchTracking: function(rulesToTrack) {\r\n\t\t\tvar branches = [];\r\n\t\t\tthis._enableBranchTracking = function() {\r\n\t\t\t\tthrow 'Can only enable tokens once';\r\n\t\t\t};\r\n\t\t\tthis._addBranch = function(rule, ruleArgs) {\r\n\t\t\t\tif(rulesToTrack.hasOwnProperty(rule)) {\r\n\t\t\t\t\tvar idx = this.input.idx;\r\n\t\t\t\t\tif(branches[idx] === undefined) {\r\n\t\t\t\t\t\tbranches[idx] = {};\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbranches[idx][rule] = ruleArgs;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tthis._getBranches = function() {\r\n\t\t\t\treturn branches;\r\n\t\t\t};\r\n\t\t\tthis._not = function(x) {\r\n\t\t\t\tvar self = this,\r\n\t\t\t\t\torigInput = this.input,\r\n\t\t\t\t\torigAddBranch = this._addBranch,\r\n\t\t\t\t\torigAddToken = this._addToken;\r\n\t\t\t\treturn always(function() {\r\n\t\t\t\t\treturn lookup(function() {\r\n\t\t\t\t\t\tx.call(self);\r\n\t\t\t\t\t}, throwFail, function() {\r\n\t\t\t\t\t\tself.input = origInput;\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t});\r\n\t\t\t\t}, function() {\r\n\t\t\t\t\tself._addBranch = origAddBranch;\r\n\t\t\t\t\tself._addToken = origAddToken;\r\n\t\t\t\t});\r\n\t\t\t};\r\n\t\t},\r\n\t\t_addBranch: noop,\r\n\t\t_getBranches: noop,\r\n\r\n\t\t_apply: function(rule) {\r\n\t\t\tvar memo = this.input.memo,\r\n\t\t\t\tmemoRec = memo[rule],\r\n\t\t\t\torigInput = this.input;\r\n\t\t\tthis._addBranch(rule, []);\r\n\t\t\tif (memoRec === undefined) {\r\n\r\n\t\t\t\tmemo[rule] = false;\r\n\t\t\t\tmemoRec = {\r\n\t\t\t\t\tans: this[rule](),\r\n\t\t\t\t\tnextInput: this.input\r\n\t\t\t\t};\r\n\t\t\t\tvar failer = memo[rule];\r\n\t\t\t\tmemo[rule] = memoRec;\r\n\r\n\t\t\t\t// If we tried to match this rule again without progressing the input at all\r\n\t\t\t\t// then retry matching it now that we have an answer for it, this allows for rules like `A = A 'x' | 'x'`\r\n\t\t\t\tif (failer === true) {\r\n\t\t\t\t\tvar self = this,\r\n\t\t\t\t\t\tsentinel = this.input,\r\n\t\t\t\t\t\tlookupFunc = function() {\r\n\t\t\t\t\t\t\tself.input = origInput;\r\n\t\t\t\t\t\t\tvar ans = self[rule]();\r\n\r\n\t\t\t\t\t\t\tif (self.input === sentinel) {\r\n\t\t\t\t\t\t\t\tthrow fail();\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tmemoRec.ans = ans;\r\n\t\t\t\t\t\t\tmemoRec.nextInput = self.input;\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\twhile (lookup(lookupFunc, returnTrue, returnFalse));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (typeof memoRec === 'boolean') {\r\n\t\t\t\tmemo[rule] = true;\r\n\t\t\t\tthrow fail();\r\n\t\t\t}\r\n\t\t\tthis.input = memoRec.nextInput;\r\n\t\t\tthis._addToken(origInput, this.input, rule, []);\r\n\t\t\treturn memoRec.ans;\r\n\t\t},\r\n\t\t_superApply: function(recv, rule) {\r\n\t\t\tvar origInput = recv.input;\r\n\t\t\tthis._addBranch(rule, []);\r\n\t\t\tvar ans = this[rule].call(recv);\r\n\t\t\tthis._addToken(origInput, recv.input, rule, []);\r\n\t\t\treturn ans;\r\n\t\t},\r\n\r\n\t\t// note: _applyWithArgs and _superApplyWithArgs are not memoized, so they can't be left-recursive\r\n\t\t_applyWithArgs: function(rule) {\r\n\t\t\tvar origInput = this.input,\r\n\t\t\t\truleFn = this[rule],\r\n\t\t\t\truleFnArity = ruleFn.length,\r\n\t\t\t\truleArgs = new Array(Math.min(arguments.length - 1, ruleFnArity));\r\n\t\t\tfor(var i = 0; i < ruleArgs.length; ++i) {\r\n\t\t\t\truleArgs[i] = arguments[i + 1];\r\n\t\t\t}\r\n\t\t\tfor (var idx = arguments.length - 1; idx > ruleFnArity; idx--) { // prepend \"extra\" arguments in reverse order\r\n\t\t\t\tthis._prependInput(arguments[idx]);\r\n\t\t\t}\r\n\t\t\tthis._addBranch(rule, ruleArgs);\r\n\t\t\tvar ans = ruleFnArity === 0 ?\r\n\t\t\t\truleFn.call(this) :\r\n\t\t\t\truleFn.apply(this, ruleArgs);\r\n\t\t\tthis._addToken(origInput, this.input, rule, ruleArgs);\r\n\t\t\treturn ans;\r\n\t\t},\r\n\t\t_superApplyWithArgs: function(recv, rule) {\r\n\t\t\tvar origInput = recv.input,\r\n\t\t\t\truleFn = this[rule],\r\n\t\t\t\truleFnArity = ruleFn.length,\r\n\t\t\t\truleArgs = new Array(Math.min(arguments.length - 2, ruleFnArity));\r\n\t\t\tfor(var i = 0; i < ruleArgs.length; ++i) {\r\n\t\t\t\truleArgs[i] = arguments[i + 2];\r\n\t\t\t}\r\n\t\t\tfor (var idx = arguments.length - 1; idx > ruleFnArity + 1; idx--) { // prepend \"extra\" arguments in reverse order\r\n\t\t\t\trecv._prependInput(arguments[idx]);\r\n\t\t\t}\r\n\t\t\tthis._addBranch(rule, ruleArgs);\r\n\t\t\tvar ans = ruleFnArity === 0 ?\r\n\t\t\t\truleFn.call(recv) :\r\n\t\t\t\truleFn.apply(recv, ruleArgs);\r\n\t\t\tthis._addToken(origInput, recv.input, rule, ruleArgs);\r\n\t\t\treturn ans;\r\n\t\t},\r\n\t\t_prependInput: function(v) {\r\n\t\t\tthis.input = new OMInputStream(v, this.input);\r\n\t\t},\r\n\r\n\t\t// Use this if you want to disable prepending to the input (increases performances but requires using `Rule :param1 :param2 =` style parameter binding at all times)\r\n\t\t_disablePrependingInput: function() {\r\n\t\t\tthis._applyWithArgs = function(rule) {\r\n\t\t\t\tvar origInput = this.input,\r\n\t\t\t\t\truleArgs = new Array(arguments.length - 1);\r\n\t\t\t\tfor(var i = 0; i < ruleArgs.length; ++i) {\r\n\t\t\t\t\truleArgs[i] = arguments[i + 1];\r\n\t\t\t\t}\r\n\t\t\t\tthis._addBranch(rule, ruleArgs);\r\n\t\t\t\tvar ans = this[rule].apply(this, ruleArgs);\r\n\t\t\t\tthis._addToken(origInput, this.input, rule, ruleArgs);\r\n\t\t\t\treturn ans;\r\n\t\t\t};\r\n\t\t\tthis._superApplyWithArgs = function(recv, rule) {\r\n\t\t\t\tvar origInput = recv.input,\r\n\t\t\t\t\truleArgs = new Array(arguments.length - 2);\r\n\t\t\t\tfor(var i = 0; i < ruleArgs.length; ++i) {\r\n\t\t\t\t\truleArgs[i] = arguments[i + 2];\r\n\t\t\t\t}\r\n\t\t\t\tthis._addBranch(rule, ruleArgs);\r\n\t\t\t\tvar ans = this[rule].apply(recv, ruleArgs);\r\n\t\t\t\tthis._addToken(origInput, recv.input, rule, ruleArgs);\r\n\t\t\t\treturn ans;\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\t// if you want your grammar (and its subgrammars) to memoize parameterized rules, invoke this method on it:\r\n\t\tmemoizeParameterizedRules: function() {\r\n\t\t\tthis._prependInput = function(v) {\r\n\t\t\t\tvar newInput;\r\n\t\t\t\tif (isImmutable(v)) {\r\n\t\t\t\t\tnewInput = this.input[getTag(v)];\r\n\t\t\t\t\tif (!newInput) {\r\n\t\t\t\t\t\tnewInput = new OMInputStream(v, this.input);\r\n\t\t\t\t\t\tthis.input[getTag(v)] = newInput;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tnewInput = new OMInputStream(v, this.input);\r\n\t\t\t\t}\r\n\t\t\t\tthis.input = newInput;\r\n\t\t\t};\r\n\t\t\tthis._applyWithArgs = function(rule) {\r\n\t\t\t\tvar origInput = this.input,\r\n\t\t\t\t\truleFn = this[rule],\r\n\t\t\t\t\truleFnArity = ruleFn.length,\r\n\t\t\t\t\truleArgs = new Array(Math.min(arguments.length - 1, ruleFnArity));\r\n\t\t\t\tfor(var i = 0; i < ruleArgs.length; ++i) {\r\n\t\t\t\t\truleArgs[i] = arguments[i + 1];\r\n\t\t\t\t}\r\n\t\t\t\tfor (var idx = arguments.length - 1; idx > ruleFnArity; idx--) { // prepend \"extra\" arguments in reverse order\r\n\t\t\t\t\tthis._prependInput(arguments[idx]);\r\n\t\t\t\t}\r\n\t\t\t\tthis._addBranch(rule, ruleArgs);\r\n\t\t\t\tvar ans = ruleFnArity === 0 ?\r\n\t\t\t\t\truleFn.call(this) :\r\n\t\t\t\t\truleFn.apply(this, ruleArgs);\r\n\t\t\t\tthis._addToken(origInput, this.input, rule, ruleArgs);\r\n\t\t\t\treturn ans;\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\t_pred: function(b) {\r\n\t\t\tif (b) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tthrow fail();\r\n\t\t},\r\n\t\t_not: function(x) {\r\n\t\t\tvar self = this,\r\n\t\t\t\torigInput = this.input;\r\n\t\t\treturn lookup(function() {\r\n\t\t\t\tx.call(self);\r\n\t\t\t}, throwFail, function() {\r\n\t\t\t\tself.input = origInput;\r\n\t\t\t\treturn true;\r\n\t\t\t});\r\n\t\t},\r\n\t\t_lookahead: function(x) {\r\n\t\t\tvar origInput = this.input,\r\n\t\t\t\tr = x.call(this);\r\n\t\t\tthis.input = origInput;\r\n\t\t\treturn r;\r\n\t\t},\r\n\t\t_or: function() {\r\n\t\t\tvar self = this,\r\n\t\t\t\torigInput = this.input,\r\n\t\t\t\targIdx = -1,\r\n\t\t\t\targs = new Array(arguments.length),\r\n\t\t\t\tlookupFunc = function() {\r\n\t\t\t\t\tself.input = origInput;\r\n\t\t\t\t\treturn args[argIdx].call(self);\r\n\t\t\t\t},\r\n\t\t\t\tnext = function() {\r\n\t\t\t\t\targIdx++;\r\n\t\t\t\t\tif (argIdx >= args.length) {\r\n\t\t\t\t\t\tthrow fail();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn lookup(lookupFunc, identity, next);\r\n\t\t\t\t};\r\n\t\t\tfor(var i = 0; i < args.length; ++i) {\r\n\t\t\t\targs[i] = arguments[i];\r\n\t\t\t};\r\n\t\t\treturn next();\r\n\t\t},\r\n\t\t_xor: function(ruleName) {\r\n\t\t\tvar self = this,\r\n\t\t\t\torigInput = this.input,\r\n\t\t\t\tidx = 1,\r\n\t\t\t\tnewInput,\r\n\t\t\t\tans,\r\n\t\t\t\targ,\r\n\t\t\t\tlookupFunc = function() {\r\n\t\t\t\t\tself.input = origInput;\r\n\t\t\t\t\tans = arg.call(self);\r\n\t\t\t\t\tif (newInput) {\r\n\t\t\t\t\t\tthrow 'more than one choice matched by \"exclusive-OR\" in ' + ruleName;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnewInput = self.input;\r\n\t\t\t\t};\r\n\r\n\t\t\twhile (idx < arguments.length) {\r\n\t\t\t\targ = arguments[idx];\r\n\r\n\t\t\t\tlookup(lookupFunc);\r\n\t\t\t\tidx++;\r\n\t\t\t}\r\n\r\n\t\t\tif (newInput) {\r\n\t\t\t\tthis.input = newInput;\r\n\t\t\t\treturn ans;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthrow fail();\r\n\t\t\t}\r\n\t\t},\r\n\t\tdisableXORs: function() {\r\n\t\t\tthis._xor = function() {\r\n\t\t\t\tvar self = this,\r\n\t\t\t\t\torigInput = this.input,\r\n\t\t\t\t\tref = {},\r\n\t\t\t\t\tresult = ref,\r\n\t\t\t\t\tlookupFunc = function() {\r\n\t\t\t\t\t\tself.input = origInput;\r\n\t\t\t\t\t\tresult = arg.call(self);\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\tfor (var idx = 1; idx < arguments.length; idx++) {\r\n\t\t\t\t\tvar arg = arguments[idx];\r\n\r\n\t\t\t\t\tlookup(lookupFunc);\r\n\r\n\t\t\t\t\tif (result !== ref) {\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthrow fail();\r\n\t\t\t};\r\n\t\t},\r\n\t\t_opt: function(x) {\r\n\t\t\tvar self = this,\r\n\t\t\t\torigInput = this.input,\r\n\t\t\t\tans;\r\n\r\n\t\t\tlookup(function() {\r\n\t\t\t\tans = x.call(self);\r\n\t\t\t}, noop, function() {\r\n\t\t\t\tself.input = origInput;\r\n\t\t\t});\r\n\r\n\t\t\treturn ans;\r\n\t\t},\r\n\t\t_many: function(x, y) {\r\n\t\t\tvar self = this,\r\n\t\t\t\torigInput,\r\n\t\t\t\tans = y !== undefined ? [y] : [],\r\n\t\t\t\tresetAndReturnFalse = function () {\r\n\t\t\t\t\tself.input = origInput;\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t},\r\n\t\t\t\tlookupFunc = function() {\r\n\t\t\t\t\torigInput = self.input;\r\n\t\t\t\t\tans.push(x.call(self));\r\n\t\t\t\t};\r\n\r\n\t\t\twhile (lookup(lookupFunc, returnTrue, resetAndReturnFalse));\r\n\r\n\t\t\treturn ans;\r\n\t\t},\r\n\t\t_many1: function(x) {\r\n\t\t\treturn this._many(x, x.call(this));\r\n\t\t},\r\n\t\t_form: function(x) {\r\n\t\t\tvar v = this.anything(),\r\n\t\t\t\torigInput = this.input;\r\n\t\t\tthis._pred(isSequenceable(v));\r\n\t\t\tthis.input = makeListOMInputStream(v, 0);\r\n\t\t\tx.call(this);\r\n\t\t\tthis._apply(\"end\");\r\n\t\t\tthis.input = origInput;\r\n\t\t\treturn v;\r\n\t\t},\r\n\t\t_consumedBy: function(x) {\r\n\t\t\tvar origInput = this.input;\r\n\t\t\tx.call(this);\r\n\t\t\treturn origInput.upTo(this.input);\r\n\t\t},\r\n\t\t_idxConsumedBy: function(x) {\r\n\t\t\tvar origInput = this.input;\r\n\t\t\tx.call(this);\r\n\t\t\treturn {fromIdx: origInput.idx, toIdx: this.input.idx};\r\n\t\t},\r\n\t\t_interleave: function(/* mode1, part1, mode2, part2 ..., moden, partn */) {\r\n\t\t\tvar currInput = this.input, ans = [], idx, args = new Array(arguments.length);\r\n\t\t\tfor(var i = 0; i < args.length; ++i) {\r\n\t\t\t\targs[i] = arguments[i];\r\n\t\t\t}\r\n\t\t\tfor (idx = 0; idx < args.length; idx += 2) {\r\n\t\t\t\tans[idx / 2] = (args[idx] === \"*\" || args[idx] === \"+\") ? [] : undefined;\r\n\t\t\t}\r\n\t\t\twhile (true) {\r\n\t\t\t\tvar allDone = true;\r\n\t\t\t\tidx = 0;\r\n\t\t\t\twhile (idx < args.length) {\r\n\t\t\t\t\tif (args[idx] !== \"0\") {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tthis.input = currInput;\r\n\t\t\t\t\t\t\tswitch (args[idx]) {\r\n\t\t\t\t\t\t\t\tcase \"*\":\r\n\t\t\t\t\t\t\t\t\tans[idx / 2].push(args[idx + 1].call(this));\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase \"+\":\r\n\t\t\t\t\t\t\t\t\tans[idx / 2].push(args[idx + 1].call(this));\r\n\t\t\t\t\t\t\t\t\targs[idx] = \"*\";\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase \"?\":\r\n\t\t\t\t\t\t\t\t\tans[idx / 2] = args[idx + 1].call(this);\r\n\t\t\t\t\t\t\t\t\targs[idx] = \"0\";\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase \"1\":\r\n\t\t\t\t\t\t\t\t\tans[idx / 2] = args[idx + 1].call(this);\r\n\t\t\t\t\t\t\t\t\targs[idx] = \"0\";\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\tthrow \"invalid mode '\" + args[idx] + \"' in OMeta._interleave\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcurrInput = this.input;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcatch (f) {\r\n\t\t\t\t\t\t\tif (!(f instanceof SyntaxError)) {\r\n\t\t\t\t\t\t\t\tthrow f;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// if this (failed) part's mode is \"1\" or \"+\", we're not done yet\r\n\t\t\t\t\t\t\tallDone = allDone && (args[idx] === \"*\" || args[idx] === \"?\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tidx += 2;\r\n\t\t\t\t}\r\n\t\t\t\tif (idx === args.length) {\r\n\t\t\t\t\tif (allDone) {\r\n\t\t\t\t\t\treturn ans;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthrow fail();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t_currIdx: function() {\r\n\t\t\treturn this.input.idx;\r\n\t\t},\r\n\r\n\t\t// some basic rules\r\n\t\tanything: function() {\r\n\t\t\tvar r = this.input.head();\r\n\t\t\tthis.input = this.input.tail();\r\n\t\t\treturn r;\r\n\t\t},\r\n\t\t// This is useful for case insensitive matching, as the `.toLowerCase()` will be memoised.\r\n\t\tlowerCaseAnything: function() {\r\n\t\t\treturn this.anything().toLowerCase();\r\n\t\t},\r\n\t\tend: function() {\r\n\t\t\treturn this._not(this.anything);\r\n\t\t},\r\n\t\tpos: function() {\r\n\t\t\treturn this.input.idx;\r\n\t\t},\r\n\t\tempty: returnTrue,\r\n\t\tapply: function(r) {\r\n\t\t\treturn this._apply(r);\r\n\t\t},\r\n\t\tforeign: function(grammar, ruleName) {\r\n\t\t\tvar ans,\r\n\t\t\t\tgrammarInstance = grammar._extend({input: makeOMInputStreamProxy(this.input)});\r\n\t\t\tif(this._tokensEnabled()) {\r\n\t\t\t\tgrammarInstance._enableTokens();\r\n\t\t\t}\r\n\t\t\tans = grammarInstance._apply(ruleName);\r\n\t\t\t// No need to merge tokens as they will automatically have been placed on the root target.\r\n\t\t\tthis.input = grammarInstance.input.target;\r\n\t\t\treturn ans;\r\n\t\t},\r\n\r\n\t\t// some useful \"derived\" rules\r\n\t\texactly: function(wanted) {\r\n\t\t\tthis._pred(wanted === this.anything());\r\n\t\t\treturn wanted;\r\n\t\t},\r\n\t\t\"true\": function() {\r\n\t\t\tvar r = this.anything();\r\n\t\t\tthis._pred(r === true);\r\n\t\t\treturn r;\r\n\t\t},\r\n\t\t\"false\": function() {\r\n\t\t\tvar r = this.anything();\r\n\t\t\tthis._pred(r === false);\r\n\t\t\treturn r;\r\n\t\t},\r\n\t\t\"undefined\": function() {\r\n\t\t\tvar r = this.anything();\r\n\t\t\tthis._pred(r === undefined);\r\n\t\t\treturn r;\r\n\t\t},\r\n\t\tnumber: function() {\r\n\t\t\tvar r = this.anything();\r\n\t\t\tthis._pred(typeof r === \"number\");\r\n\t\t\treturn r;\r\n\t\t},\r\n\t\tstring: function() {\r\n\t\t\tvar r = this.anything();\r\n\t\t\tthis._pred(typeof r === \"string\");\r\n\t\t\treturn r;\r\n\t\t},\r\n\t\t\"char\": function() {\r\n\t\t\tvar r = this.anything();\r\n\t\t\tthis._pred(typeof r === \"string\" && r.length === 1);\r\n\t\t\treturn r;\r\n\t\t},\r\n\t\tspace: function() {\r\n\t\t\tvar r = this._apply(\"char\");\r\n\t\t\tthis._pred(r.charCodeAt(0) <= 32);\r\n\t\t\treturn r;\r\n\t\t},\r\n\t\tspaces: function() {\r\n\t\t\treturn this._many(function() {\r\n\t\t\t\treturn this._apply(\"space\");\r\n\t\t\t});\r\n\t\t},\r\n\t\tdigit: function() {\r\n\t\t\tvar r = this._apply(\"char\");\r\n\t\t\tthis._pred(r >= \"0\" && r <= \"9\");\r\n\t\t\treturn r;\r\n\t\t},\r\n\t\tlower: function() {\r\n\t\t\tvar r = this._apply(\"char\");\r\n\t\t\tthis._pred(r >= \"a\" && r <= \"z\");\r\n\t\t\treturn r;\r\n\t\t},\r\n\t\tupper: function() {\r\n\t\t\tvar r = this._apply(\"char\");\r\n\t\t\tthis._pred(r >= \"A\" && r <= \"Z\");\r\n\t\t\treturn r;\r\n\t\t},\r\n\t\tletter: function() {\r\n\t\t\tvar r = this._apply(\"char\");\r\n\t\t\tthis._pred(r >= \"a\" && r <= \"z\" || r >= \"A\" && r <= \"Z\");\r\n\t\t\treturn r;\r\n\t\t\t// Note: The following code will potentially make use of more memoisations,\r\n\t\t\t// however it will have more overhead and it is unlikely that letter/upper/lower calls will be mixed in a memoisable way.\r\n\t\t\t// return this._or(function() { return this._apply(\"lower\"); },\r\n\t\t\t\t\t\t\t\t\t\t\t// function() { return this._apply(\"upper\"); });\r\n\t\t},\r\n\t\tletterOrDigit: function() {\r\n\t\t\treturn this._or(function() { return this._apply(\"letter\"); },\r\n\t\t\t\tfunction() { return this._apply(\"digit\"); });\r\n\t\t},\r\n\t\tfirstAndRest: function(first, rest) {\r\n\t\t\treturn this._many(function() {\r\n\t\t\t\treturn this._apply(rest);\r\n\t\t\t}, this._apply(first));\r\n\t\t},\r\n\t\tseq: function(xs) {\r\n\t\t\tfor (var idx = 0; idx < xs.length; idx++) {\r\n\t\t\t\tthis._applyWithArgs(\"exactly\", xs[idx]);\r\n\t\t\t}\r\n\t\t\treturn xs;\r\n\t\t},\r\n\t\tnotLast: function(rule) {\r\n\t\t\tvar r = this._apply(rule);\r\n\t\t\tthis._lookahead(function() { return this._apply(rule); });\r\n\t\t\treturn r;\r\n\t\t},\r\n\t\tlistOf: function(rule, delim) {\r\n\t\t\treturn this._or(function() {\r\n\t\t\t\t\tvar r = this._apply(rule);\r\n\t\t\t\t\treturn this._many(function() {\r\n\t\t\t\t\t\t\tthis._applyWithArgs(\"token\", delim);\r\n\t\t\t\t\t\t\treturn this._apply(rule);\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tr\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\t\ttoken: function(cs) {\r\n\t\t\tthis._apply(\"spaces\");\r\n\t\t\treturn this._applyWithArgs(\"seq\", cs);\r\n\t\t},\r\n\t\tfromTo: function (x, y) {\r\n\t\t\treturn this._consumedBy(function() {\r\n\t\t\t\tthis._applyWithArgs(\"seq\", x);\r\n\t\t\t\tthis._many(function() {\r\n\t\t\t\t\tthis._not(function() { this._applyWithArgs(\"seq\", y); });\r\n\t\t\t\t\tthis._apply(\"char\");\r\n\t\t\t\t});\r\n\t\t\t\tthis._applyWithArgs(\"seq\", y);\r\n\t\t\t});\r\n\t\t},\r\n\t\thexDigit: function() {\r\n\t\t\tvar v, c;\r\n\t\t\tc = this._apply(\"char\");\r\n\t\t\tv = \"0123456789abcdef\".indexOf(c.toLowerCase());\r\n\t\t\tif(v === -1) {\r\n\t\t\t\tthrow this._fail();\r\n\t\t\t}\r\n\t\t\treturn v;\r\n\t\t},\r\n\t\tescapedChar: function() {\r\n\t\t\tvar s, c;\r\n\t\t\tthis._applyWithArgs(\"exactly\", \"\\\\\");\r\n\t\t\tc = this.anything();\r\n\t\t\tswitch (c) {\r\n\t\t\t\tcase \"'\":\treturn \"'\";\r\n\t\t\t\tcase '\"':\treturn '\"';\r\n\t\t\t\tcase '\\\\':\treturn '\\\\';\r\n\t\t\t\tcase 'b':\treturn '\\b';\r\n\t\t\t\tcase 'f':\treturn '\\f';\r\n\t\t\t\tcase 'n':\treturn '\\n';\r\n\t\t\t\tcase 'r':\treturn '\\r';\r\n\t\t\t\tcase 't':\treturn '\\t';\r\n\t\t\t\tcase 'v':\treturn '\\v';\r\n\t\t\t\tcase \"u\":\r\n\t\t\t\t\ts = this._consumedBy(function() {\r\n\t\t\t\t\t\tthis._apply(\"hexDigit\");\r\n\t\t\t\t\t\tthis._apply(\"hexDigit\");\r\n\t\t\t\t\t\tthis._apply(\"hexDigit\");\r\n\t\t\t\t\t\tthis._apply(\"hexDigit\");\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn String.fromCharCode(parseInt(s, 16));\r\n\t\t\t\tcase \"x\":\r\n\t\t\t\t\ts = this._consumedBy(function() {\r\n\t\t\t\t\t\tthis._apply(\"hexDigit\");\r\n\t\t\t\t\t\tthis._apply(\"hexDigit\");\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn String.fromCharCode(parseInt(s, 16));\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn c;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinitialize: noop,\r\n\t\t// match and matchAll are a grammar's \"public interface\"\r\n\t\tmatch: function(obj, rule, args, matchFailed) {\r\n\t\t\treturn this.matchAll([obj], rule, args, matchFailed);\r\n\t\t},\r\n\t\tmatchAll: function(listyObj, rule, args, matchFailed) {\r\n\t\t\tvar m = this.createInstance();\r\n\t\t\treturn m.matchAll(listyObj, rule, args, matchFailed);\r\n\t\t},\r\n\t\tcreateInstance: function() {\r\n\t\t\tvar m = objectThatDelegatesTo(this);\r\n\t\t\tm.setInput = function(listyObj) {\r\n\t\t\t\treturn this.inputHead = this.input = makeListOMInputStream(listyObj, 0);\r\n\t\t\t};\r\n\t\t\tm.matchAll = function(listyObj, rule, args, matchFailed) {\r\n\t\t\t\tif (args == null) {\r\n\t\t\t\t\targs = [];\r\n\t\t\t\t}\r\n\t\t\t\tvar realArgs = [rule];\r\n\t\t\t\tfor (var idx = 0; idx < args.length; idx++) {\r\n\t\t\t\t\trealArgs.push(args[idx]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.setInput(listyObj);\r\n\t\t\t\treturn lookup(function() {\r\n\t\t\t\t\treturn realArgs.length === 1 ?\r\n\t\t\t\t\t\t\tm._apply.call(m, realArgs[0]) :\r\n\t\t\t\t\t\t\tm._applyWithArgs.apply(m, realArgs);\r\n\t\t\t\t}, function(value) {\r\n\t\t\t\t\treturn value;\r\n\t\t\t\t}, function(err) {\r\n\t\t\t\t\terr.OMeta = {};\r\n\t\t\t\t\tvar input = m.input;\r\n\t\t\t\t\tif (input.idx !== undefined) {\r\n\t\t\t\t\t\twhile (input.tl !== undefined && input.tl.idx !== undefined) {\r\n\t\t\t\t\t\t\tinput = input.tl;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\terr.OMeta.idx = input.idx - 1;\r\n\t\t\t\t\t\tif(typeof input.lst == 'string') {\r\n\t\t\t\t\t\t\tvar source = input.lst,\r\n\t\t\t\t\t\t\t\ti = 0,\r\n\t\t\t\t\t\t\t\tchar,\r\n\t\t\t\t\t\t\t\tstart;\r\n\t\t\t\t\t\t\terr.OMeta.line = 1;\r\n\t\t\t\t\t\t\terr.OMeta.col = 0;\r\n\t\t\t\t\t\t\tfor(; i < err.OMeta.idx; i++) {\r\n\t\t\t\t\t\t\t\tchar = source.charAt(i);\r\n\t\t\t\t\t\t\t\terr.OMeta.col++;\r\n\t\t\t\t\t\t\t\tif(char === '\\n') {\r\n\t\t\t\t\t\t\t\t\terr.OMeta.line++;\r\n\t\t\t\t\t\t\t\t\terr.OMeta.col = 0;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (typeof matchFailed === 'function') {\r\n\t\t\t\t\t\treturn matchFailed(m, err);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthrow err;\r\n\t\t\t\t});\r\n\t\t\t};\r\n\t\t\tm.match = function(obj, aRule, args, matchFailed) {\r\n\t\t\t\treturn this.matchAll([obj], aRule, args, matchFailed);\r\n\t\t\t};\r\n\t\t\t// This will reuse memoisations when possible, currently only works for string inputs.\r\n\t\t\tm.enableReusingMemoizations = function(sideEffectingRules) {\r\n\t\t\t\tsideEffectingRules = sideEffectingRules || [];\r\n\t\t\t\tthis.setInput = function(listyObj) {\r\n\t\t\t\t\tvar input = this.inputHead;\r\n\t\t\t\t\tif(input && typeof input.lst === 'string' && typeof listyObj === 'string') {\r\n\t\t\t\t\t\tvar previousText = input.lst;\r\n\t\t\t\t\t\tfor(var divergencePoint = 0, l = Math.min(listyObj.length, previousText.length); divergencePoint < l; divergencePoint++) {\r\n\t\t\t\t\t\t\tif(listyObj.charAt(divergencePoint) !== previousText.charAt(divergencePoint)) {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// We will have stepped one past the divergence point, so decrement to correct.\r\n\t\t\t\t\t\tdivergencePoint--;\r\n\t\t\t\t\t\t// Step back to the start of any white space to minimise issues with keeping no longer correct memoisations\r\n\t\t\t\t\t\twhile(/\\s/.test(listyObj.charAt(divergencePoint))) {\r\n\t\t\t\t\t\t\tdivergencePoint--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(divergencePoint > 0) {\r\n\t\t\t\t\t\t\t// If we diverge after the first character then fixup the memoisations.\r\n\t\t\t\t\t\t\tvar cleanInput = function(divergencePoint) {\r\n\t\t\t\t\t\t\t\tvar secondaryDivergencePoint = 0;\r\n\t\t\t\t\t\t\t\tdo {\r\n\t\t\t\t\t\t\t\t\tvar memo = input.memo,\r\n\t\t\t\t\t\t\t\t\t\tmemoTokens = input.tokens,\r\n\t\t\t\t\t\t\t\t\t\truleNames = Object.keys(memo);\r\n\t\t\t\t\t\t\t\t\t// For each memoised rule, delete it if it is a boolean (failer - it may now parse)\r\n\t\t\t\t\t\t\t\t\t// or if it is a rule with side effects.\r\n\t\t\t\t\t\t\t\t\t// or if it ends on or after the point of divergence (the nextInput is guaranteed to be wrong,\r\n\t\t\t\t\t\t\t\t\t// even if the rule will still pass - for the ending on the divergence point then it might be a case that with the change the rule will now encompass more)\r\n\t\t\t\t\t\t\t\t\t// There should be no need to update the memoised new inputs - as we traverse through inputs by idx they should be updated (as they should be references).\r\n\t\t\t\t\t\t\t\t\tfor(var i = 0; i < ruleNames.length; i++) {\r\n\t\t\t\t\t\t\t\t\t\tvar ruleName = ruleNames[i];\r\n\t\t\t\t\t\t\t\t\t\tif(typeof memo[ruleName] === 'boolean'\r\n\t\t\t\t\t\t\t\t\t\t\t|| sideEffectingRules.indexOf(ruleName) !== -1\r\n\t\t\t\t\t\t\t\t\t\t\t|| memo[ruleName].nextInput.idx >= divergencePoint) {\r\n\t\t\t\t\t\t\t\t\t\t\tdelete memo[ruleName];\r\n\t\t\t\t\t\t\t\t\t\t} else if(input.idx > secondaryDivergencePoint && !OMeta.hasOwnProperty(ruleName)) {\r\n\t\t\t\t\t\t\t\t\t\t\tsecondaryDivergencePoint = input.idx;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t// Remove tokens that end on or after the divergence point, similar to memoisation\r\n\t\t\t\t\t\t\t\t\tif(memoTokens != null) {\r\n\t\t\t\t\t\t\t\t\t\tvar duplicateTokens = {};\r\n\t\t\t\t\t\t\t\t\t\tfor(var i = memoTokens.length - 1; i >= 0; i--) {\r\n\t\t\t\t\t\t\t\t\t\t\tif(memoTokens[i][0] >= divergencePoint || duplicateTokens[memoTokens[i][1]]) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tmemoTokens.splice(i, 1);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\tduplicateTokens[memoTokens[i][1]] = true;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tinput.lst = listyObj;\r\n\t\t\t\t\t\t\t\t} while(input.idx < divergencePoint && (input = input.tail()));\r\n\t\t\t\t\t\t\t\treturn secondaryDivergencePoint;\r\n\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\tvar secondaryDivergencePoint = cleanInput(divergencePoint);\r\n\r\n\t\t\t\t\t\t\tif(secondaryDivergencePoint > 0) {\r\n\t\t\t\t\t\t\t\tif (secondaryDivergencePoint < divergencePoint) {\r\n\t\t\t\t\t\t\t\t\t// If the secondary divergence (based on last \"real\" rule success) is earlier than the first\r\n\t\t\t\t\t\t\t\t\t// then we need to go back and clean the input for the new divergence point\r\n\t\t\t\t\t\t\t\t\tcleanInput(secondaryDivergencePoint);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tdelete input.tl;\r\n\t\t\t\t\t\t\t\treturn this.input = this.inputHead;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// If we couldn't reuse memoisations for whatever reason then just create a new input.\r\n\t\t\t\t\treturn this.input = this.inputHead = makeListOMInputStream(listyObj, 0);\r\n\t\t\t\t};\r\n\t\t\t};\r\n\r\n\t\t\tm.initialize();\r\n\t\t\treturn m;\r\n\t\t}\r\n\t};\r\n}));","\"use strict\";\n\nvar toInteger = require(\"./to-integer\")\n  , max       = Math.max;\n\nmodule.exports = function (value) { return max(0, toInteger(value)); };\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? require(\"ext/global-this\").Symbol\n\t: require(\"./polyfill\");\n","export const { DEBUG } = process.env;\n\nexport const cache = {\n\tpermissionsLookup: {\n\t\tmax: 5000,\n\t},\n\tparsePermissions: {\n\t\tmax: 100000,\n\t},\n\tparseOData: {\n\t\tmax: 100000,\n\t},\n\todataToAbstractSql: {\n\t\tmax: 10000,\n\t},\n\tabstractSqlCompiler: {\n\t\tmax: 10000,\n\t},\n};\n\nlet timeoutMS: number;\nif (process.env.TRANSACTION_TIMEOUT_MS) {\n\ttimeoutMS = parseInt(process.env.TRANSACTION_TIMEOUT_MS, 10);\n\tif (Number.isNaN(timeoutMS) || timeoutMS <= 0) {\n\t\tthrow new Error(\n\t\t\t`Invalid valid for TRANSACTION_TIMEOUT_MS: ${process.env.TRANSACTION_TIMEOUT_MS}`,\n\t\t);\n\t}\n} else {\n\ttimeoutMS = 10000;\n}\n\nexport const db = {\n\tpoolSize: 50,\n\tidleTimeoutMillis: 30000 as number | undefined,\n\tstatementTimeout: undefined as number | undefined,\n\tqueryTimeout: undefined as number | undefined,\n\tconnectionTimeoutMillis: 30000 as number | undefined,\n\tkeepAlive: true as boolean | undefined,\n\trollbackTimeout: 30000,\n\ttimeoutMS,\n};\n\nexport const migrator = {\n\tlockTimeout: 5 * 60 * 1000,\n\t// Used to delay the failure on lock taking, to avoid spam taking\n\tlockFailDelay: 20 * 1000,\n};\n","\"use strict\";\nconst BigInteger = require(\"./types/big-integer\");\nconst Boolean = require(\"./types/boolean\");\nconst CaseInsensitiveText = require(\"./types/case-insensitive-text\");\nconst Color = require(\"./types/color\");\nconst ConceptType = require(\"./types/concept-type\");\nconst Date = require(\"./types/date\");\nconst DateTime = require(\"./types/date-time\");\nconst File = require(\"./types/file\");\nconst ForeignKey = require(\"./types/foreign-key\");\nconst Hashed = require(\"./types/hashed\");\nconst Integer = require(\"./types/integer\");\nconst Interval = require(\"./types/interval\");\nconst JSON = require(\"./types/json\");\nconst Real = require(\"./types/real\");\nconst Serial = require(\"./types/serial\");\nconst SHA = require(\"./types/sha\");\nconst ShortText = require(\"./types/short-text\");\nconst Text = require(\"./types/text\");\nconst Time = require(\"./types/time\");\nmodule.exports = {\n    'Big Integer': BigInteger,\n    Boolean,\n    'Case Insensitive Text': CaseInsensitiveText,\n    Color,\n    ConceptType,\n    'Date Time': DateTime,\n    Date,\n    File,\n    ForeignKey,\n    Hashed,\n    Integer,\n    Interval,\n    JSON,\n    Real,\n    Serial,\n    SHA,\n    'Short Text': ShortText,\n    Text,\n    Time,\n};\n//# sourceMappingURL=index.js.map","try {\n  var util = require('util');\n  /* istanbul ignore next */\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  /* istanbul ignore next */\n  module.exports = require('./inherits_browser.js');\n}\n","var Buffer = require('safe-buffer').Buffer\n\n// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = Buffer.from(data, enc)\n  }\n\n  var block = this._block\n  var blockSize = this._blockSize\n  var length = data.length\n  var accum = this._len\n\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize\n    var remainder = Math.min(length - offset, blockSize - assigned)\n\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i]\n    }\n\n    accum += remainder\n    offset += remainder\n\n    if ((accum % blockSize) === 0) {\n      this._update(block)\n    }\n  }\n\n  this._len += length\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize\n\n  this._block[rem] = 0x80\n\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n  this._block.fill(0, rem + 1)\n\n  if (rem >= this._finalSize) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  var bits = this._len * 8\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4)\n\n  // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0\n    var highBits = (bits - lowBits) / 0x100000000\n\n    this._block.writeUInt32BE(highBits, this._blockSize - 8)\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4)\n  }\n\n  this._update(this._block)\n  var hash = this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OData2AbstractSQL = exports.isBindReference = exports.rewriteBinds = exports.odataNameToSqlName = exports.sqlNameToODataName = void 0;\nconst _ = require(\"lodash\");\nconst memoize = require(\"memoizee\");\nconst randomstring = require(\"randomstring\");\nconst convertToModernDefinition = (definition) => {\n    if ('abstractSql' in definition) {\n        return definition;\n    }\n    return {\n        binds: definition.extraBinds,\n        abstractSql: definition.abstractSqlQuery,\n    };\n};\nconst comparison = {\n    eq: 'IsNotDistinctFrom',\n    ne: 'IsDistinctFrom',\n    gt: 'GreaterThan',\n    ge: 'GreaterThanOrEqual',\n    lt: 'LessThan',\n    le: 'LessThanOrEqual',\n};\nconst operations = {\n    add: 'Add',\n    sub: 'Subtract',\n    mul: 'Multiply',\n    div: 'Divide',\n};\nconst rewriteComputed = (computed, tableName, tableAlias) => {\n    const rewrittenComputed = _.cloneDeep(computed);\n    modifyAbstractSql('ReferencedField', rewrittenComputed, (referencedField) => {\n        if (referencedField[1] === tableName) {\n            referencedField[1] = tableAlias;\n        }\n    });\n    return rewrittenComputed;\n};\nconst containsQueryOption = (opts) => {\n    if (opts == null) {\n        return false;\n    }\n    for (const key in opts) {\n        if (key[0] === '$') {\n            return true;\n        }\n    }\n    return false;\n};\nclass Query {\n    constructor() {\n        this.select = [];\n        this.from = [];\n        this.where = [];\n        this.extras = [];\n    }\n    merge(otherQuery) {\n        this.select = this.select.concat(otherQuery.select);\n        this.from = this.from.concat(otherQuery.from);\n        this.where = this.where.concat(otherQuery.where);\n        this.extras = this.extras.concat(otherQuery.extras);\n    }\n    fromResource(odataToAbstractSql, resource, args = odataToAbstractSql, bypassDefinition) {\n        if (bypassDefinition !== true && resource.definition) {\n            const definition = odataToAbstractSql.rewriteDefinition(resource.definition, args.extraBindVars, args.bindVarsLength);\n            this.from.push(['Alias', definition.abstractSql, resource.tableAlias]);\n        }\n        else if (resource.name !== resource.tableAlias) {\n            this.from.push(['Alias', ['Table', resource.name], resource.tableAlias]);\n        }\n        else {\n            this.from.push(['Table', resource.name]);\n        }\n    }\n    compile(queryType) {\n        const compiled = [];\n        let where = this.where;\n        if (queryType === 'SelectQuery') {\n            compiled.push(['Select', this.select]);\n        }\n        this.from.forEach((tableName) => {\n            compiled.push(['From', tableName]);\n        });\n        if (where.length > 0) {\n            if (where.length > 1) {\n                where = [['And', ...where]];\n            }\n            compiled.push(['Where', ...where]);\n        }\n        return [queryType, ...compiled, ...this.extras];\n    }\n}\nexports.sqlNameToODataName = memoize((sqlName) => sqlName.replace(/-/g, '__').replace(/ /g, '_'), { primitive: true });\nexports.odataNameToSqlName = memoize((odataName) => odataName.replace(/__/g, '-').replace(/_/g, ' '), { primitive: true });\nconst modifyAbstractSql = (match, abstractSql, fn) => {\n    if (Array.isArray(abstractSql)) {\n        if (abstractSql[0] === match) {\n            fn(abstractSql);\n        }\n        else {\n            abstractSql.forEach((abstractSqlComponent) => {\n                modifyAbstractSql(match, abstractSqlComponent, fn);\n            });\n        }\n    }\n};\nconst rewriteBinds = (definition, existingBinds, inc = 0) => {\n    const { binds } = definition;\n    if (binds == null || binds.length === 0) {\n        return;\n    }\n    inc += existingBinds.length;\n    modifyAbstractSql('Bind', definition.abstractSql, (bind) => {\n        if (typeof bind[1] === 'number') {\n            bind[1] += inc;\n        }\n    });\n    existingBinds.push(...binds);\n};\nexports.rewriteBinds = rewriteBinds;\nconst isBindReference = (maybeBind) => {\n    return (maybeBind != null &&\n        'bind' in maybeBind &&\n        (typeof maybeBind.bind === 'string' || typeof maybeBind.bind === 'number'));\n};\nexports.isBindReference = isBindReference;\nconst addBodyKey = (resourceName, fieldName, bind, bodyKeys, extraBodyVars) => {\n    const qualifiedIDField = resourceName + '.' + fieldName;\n    if (!bodyKeys.includes(qualifiedIDField) && !bodyKeys.includes(fieldName)) {\n        bodyKeys.push(qualifiedIDField);\n        extraBodyVars[qualifiedIDField] = bind;\n    }\n};\nclass OData2AbstractSQL {\n    constructor(clientModel, methods = {}) {\n        this.clientModel = clientModel;\n        this.methods = methods;\n        this.extraBodyVars = {};\n        this.extraBindVars = [];\n        this.resourceAliases = {};\n        this.bindVarsLength = 0;\n        const MAX_ALIAS_LENGTH = 63;\n        const RANDOM_ALIAS_LENGTH = 12;\n        const shortAliases = generateShortAliases(clientModel);\n        this.checkAlias = memoize((alias) => {\n            let aliasLength = alias.length;\n            if (aliasLength <= MAX_ALIAS_LENGTH) {\n                return alias;\n            }\n            alias = _(alias)\n                .split('.')\n                .map((part) => {\n                if (aliasLength <= MAX_ALIAS_LENGTH) {\n                    return part;\n                }\n                aliasLength -= part.length;\n                const shortAlias = _(part)\n                    .split('-')\n                    .map((part2) => {\n                    part2 = _(part2)\n                        .split(' ')\n                        .map((part3) => {\n                        const shortPart2 = shortAliases[part3];\n                        if (shortPart2) {\n                            return shortPart2;\n                        }\n                        return part3;\n                    })\n                        .join(' ');\n                    const shortPart = shortAliases[part2];\n                    if (shortPart) {\n                        return shortPart;\n                    }\n                    return part2;\n                })\n                    .join('-');\n                aliasLength += shortAlias.length;\n                return shortAlias;\n            })\n                .join('.');\n            if (aliasLength <= MAX_ALIAS_LENGTH) {\n                return alias;\n            }\n            const randStr = randomstring.generate(RANDOM_ALIAS_LENGTH) + '$';\n            return (randStr + alias.slice(randStr.length + alias.length - MAX_ALIAS_LENGTH));\n        });\n    }\n    match(path, method, bodyKeys, bindVarsLength, methods) {\n        const savedMethods = this.methods;\n        try {\n            if (methods != null) {\n                this.methods = methods;\n            }\n            this.reset();\n            this.bindVarsLength = bindVarsLength;\n            let tree;\n            if (_.isEmpty(path)) {\n                tree = ['$serviceroot'];\n            }\n            else if (['$metadata', '$serviceroot'].includes(path.resource)) {\n                tree = [path.resource];\n            }\n            else {\n                const query = this.PathSegment(method, bodyKeys, path);\n                switch (method) {\n                    case 'PUT':\n                        this.putReset();\n                        const insertQuery = this.PathSegment('PUT-INSERT', bodyKeys, path);\n                        tree = [\n                            'UpsertQuery',\n                            insertQuery.compile('InsertQuery'),\n                            query.compile('UpdateQuery'),\n                        ];\n                        break;\n                    case 'GET':\n                        tree = query.compile('SelectQuery');\n                        break;\n                    case 'PATCH':\n                    case 'MERGE':\n                        tree = query.compile('UpdateQuery');\n                        break;\n                    case 'POST':\n                        tree = query.compile('InsertQuery');\n                        break;\n                    case 'DELETE':\n                        tree = query.compile('DeleteQuery');\n                        break;\n                    default:\n                        throw new SyntaxError(`Unknown method \"${method}\"`);\n                }\n            }\n            return {\n                tree,\n                extraBodyVars: this.extraBodyVars,\n                extraBindVars: this.extraBindVars,\n            };\n        }\n        finally {\n            this.methods = savedMethods;\n        }\n    }\n    PathSegment(method, bodyKeys, path) {\n        var _a;\n        if (!path.resource) {\n            throw new SyntaxError('Path segment must contain a resource');\n        }\n        const hasQueryOpts = containsQueryOption(path.options);\n        const resource = this.Resource(path.resource, this.defaultResource);\n        this.defaultResource = resource;\n        const query = new Query();\n        const bypassDefinition = method !== 'GET';\n        query.fromResource(this, resource, this, bypassDefinition);\n        const referencedIdField = [\n            'ReferencedField',\n            resource.tableAlias,\n            resource.idField,\n        ];\n        const pathKeyWhere = this.PathKey(method, path, resource, bodyKeys);\n        let addPathKey = true;\n        if (hasQueryOpts && ((_a = path.options) === null || _a === void 0 ? void 0 : _a.$expand)) {\n            this.Expands(resource, query, path.options.$expand.properties);\n        }\n        let bindVars;\n        if (path.property) {\n            const childQuery = this.PathSegment(method, bodyKeys, path.property);\n            query.merge(childQuery);\n            if (!path.property.resource) {\n                throw new SyntaxError('PathSegment has a property without a resource?');\n            }\n            const navigation = this.NavigateResources(resource, path.property.resource);\n            query.where.push(navigation.where);\n        }\n        else if (path.link) {\n            if (!path.link.resource) {\n                throw new SyntaxError('PathSegment has a link without a resource?');\n            }\n            const linkResource = this.Resource(path.link.resource, resource);\n            let aliasedField;\n            let referencedField;\n            if (this.FieldContainedIn(linkResource.resourceName, resource)) {\n                referencedField = this.ReferencedField(resource, linkResource.resourceName);\n                aliasedField = ['Alias', referencedField, linkResource.resourceName];\n            }\n            else if (this.FieldContainedIn(resource.resourceName, linkResource)) {\n                referencedField = this.ReferencedField(linkResource, resource.resourceName);\n                aliasedField = ['Alias', referencedField, resource.resourceName];\n            }\n            else {\n                throw new Error('Cannot navigate links');\n            }\n            if (path.link.key != null) {\n                if (exports.isBindReference(path.link.key)) {\n                    query.where.push([\n                        comparison.eq,\n                        referencedField,\n                        this.Bind(path.link.key),\n                    ]);\n                }\n                else {\n                    throw new SyntaxError('Cannot use named keys with $links');\n                }\n            }\n            query.select.push(aliasedField);\n        }\n        else if (method === 'PUT' ||\n            method === 'PUT-INSERT' ||\n            method === 'POST' ||\n            method === 'PATCH' ||\n            method === 'MERGE') {\n            const resourceMapping = this.ResourceMapping(resource);\n            bindVars = this.BindVars(method, bodyKeys, resource.resourceName, Object.entries(resourceMapping));\n            query.extras.push(['Fields', bindVars.map((b) => b[0])]);\n            if ((hasQueryOpts || resource.definition || pathKeyWhere != null) &&\n                (method === 'POST' || method === 'PUT-INSERT')) {\n                const subQuery = new Query();\n                subQuery.select = bindVars.map((bindVar) => [\n                    'ReferencedField',\n                    resource.tableAlias,\n                    bindVar[0],\n                ]);\n                const bindVarSelectQuery = [\n                    'SelectQuery',\n                    [\n                        'Select',\n                        resource.fields.map((field) => {\n                            const alias = field.fieldName;\n                            const bindVar = bindVars === null || bindVars === void 0 ? void 0 : bindVars.find((v) => v[0] === alias);\n                            const value = bindVar ? bindVar[1] : 'Null';\n                            return ['Alias', ['Cast', value, field.dataType], alias];\n                        }),\n                    ],\n                ];\n                const unionResource = { ...resource };\n                if (unionResource.definition == null ||\n                    !_.isObject(unionResource.definition)) {\n                    unionResource.definition = {\n                        binds: [],\n                        abstractSql: bindVarSelectQuery,\n                    };\n                }\n                else {\n                    unionResource.definition = {\n                        ...convertToModernDefinition(unionResource.definition),\n                    };\n                    if (unionResource.definition.abstractSql[0] !== 'SelectQuery') {\n                        throw new Error('Only select query definitions supported for inserts');\n                    }\n                    const isTable = (part) => part[0] === 'Table' && part[1] === unionResource.name;\n                    if (isTable(unionResource.definition.abstractSql)) {\n                        unionResource.definition.abstractSql = bindVarSelectQuery;\n                    }\n                    else {\n                        let found = false;\n                        unionResource.definition.abstractSql = unionResource.definition.abstractSql.map((part) => {\n                            if (part[0] === 'From') {\n                                if (isTable(part[1])) {\n                                    found = true;\n                                    return [\n                                        'From',\n                                        ['Alias', bindVarSelectQuery, unionResource.name],\n                                    ];\n                                }\n                                else if (part[1][0] === 'Alias' && isTable(part[1][1])) {\n                                    found = true;\n                                    return ['From', ['Alias', bindVarSelectQuery, part[1][2]]];\n                                }\n                            }\n                            return part;\n                        });\n                        if (!found) {\n                            throw new Error('Could not replace table entry in definition for insert');\n                        }\n                    }\n                }\n                if (hasQueryOpts) {\n                    this.AddQueryOptions(resource, path, subQuery);\n                }\n                subQuery.fromResource(this, unionResource);\n                addPathKey = false;\n                if (pathKeyWhere != null) {\n                    subQuery.where.push(pathKeyWhere);\n                }\n                query.extras.push([\n                    'Values',\n                    subQuery.compile('SelectQuery'),\n                ]);\n            }\n            else {\n                query.extras.push(['Values', bindVars.map((b) => b[1])]);\n            }\n        }\n        else if (path.count) {\n            this.AddCountField(path, query);\n        }\n        else {\n            this.AddSelectFields(path, query, resource);\n        }\n        if (addPathKey && pathKeyWhere != null) {\n            query.where.push(pathKeyWhere);\n        }\n        if ((hasQueryOpts || resource.definition) &&\n            (method === 'PUT' ||\n                method === 'PATCH' ||\n                method === 'MERGE' ||\n                method === 'DELETE')) {\n            const subQuery = new Query();\n            subQuery.select.push(referencedIdField);\n            subQuery.fromResource(this, resource);\n            if (hasQueryOpts) {\n                this.AddQueryOptions(resource, path, subQuery);\n            }\n            query.where.push([\n                'In',\n                referencedIdField,\n                subQuery.compile('SelectQuery'),\n            ]);\n        }\n        else if (hasQueryOpts && method === 'GET') {\n            this.AddQueryOptions(resource, path, query);\n        }\n        return query;\n    }\n    PathKey(method, path, resource, bodyKeys) {\n        const { key } = path;\n        if (key != null) {\n            if (method === 'PUT' || method === 'PUT-INSERT' || method === 'POST') {\n                if (exports.isBindReference(key)) {\n                    addBodyKey(resource.resourceName, resource.idField, key, bodyKeys, this.extraBodyVars);\n                }\n                else {\n                    for (const [fieldName, bind] of Object.entries(key)) {\n                        addBodyKey(resource.resourceName, fieldName, bind, bodyKeys, this.extraBodyVars);\n                    }\n                }\n            }\n            if (exports.isBindReference(key)) {\n                const bind = this.Bind(key);\n                const referencedField = [\n                    'ReferencedField',\n                    resource.tableAlias,\n                    resource.idField,\n                ];\n                return [comparison.eq, referencedField, bind];\n            }\n            const fieldNames = Object.keys(key);\n            const sqlFieldNames = fieldNames.map(exports.odataNameToSqlName).sort();\n            const fields = sqlFieldNames.map((fieldName) => {\n                const resourceField = resource.fields.find((f) => f.fieldName === fieldName);\n                if (resourceField == null) {\n                    throw new SyntaxError('Specified non-existent field for path key');\n                }\n                return resourceField;\n            });\n            if (!(fields.length === 1 &&\n                (fields[0].index === 'UNIQUE' || fields[0].index === 'PRIMARY KEY')) &&\n                !resource.indexes.some((index) => {\n                    return ((index.type === 'UNIQUE' || index.type === 'PRIMARY KEY') &&\n                        sqlFieldNames.length === index.fields.length &&\n                        _.isEqual(index.fields.slice().sort(), sqlFieldNames));\n                })) {\n                throw new SyntaxError('Specified fields for path key that are not directly unique');\n            }\n            const namedKeys = fieldNames.map((fieldName) => {\n                const bind = this.Bind(key[fieldName]);\n                const referencedField = this.ReferencedField(resource, fieldName);\n                return [comparison.eq, referencedField, bind];\n            });\n            if (namedKeys.length === 1) {\n                return namedKeys[0];\n            }\n            return ['And', ...namedKeys];\n        }\n    }\n    Bind(bind, optional = false) {\n        if (exports.isBindReference(bind)) {\n            return ['Bind', bind.bind];\n        }\n        if (optional) {\n            return;\n        }\n        throw new SyntaxError(`Could not match bind reference`);\n    }\n    SelectFilter(filter, query, resource) {\n        this.AddExtraFroms(query, resource, filter);\n        const where = this.BooleanMatch(filter);\n        query.where.push(where);\n    }\n    OrderBy(orderby, query, resource) {\n        this.AddExtraFroms(query, resource, orderby.properties);\n        query.extras.push([\n            'OrderBy',\n            ...this.OrderByProperties(orderby.properties),\n        ]);\n    }\n    OrderByProperties(orderings) {\n        return orderings.map((ordering) => {\n            const field = this.ReferencedProperty(ordering);\n            return [ordering.order.toUpperCase(), field];\n        });\n    }\n    BindVars(method, bodyKeys, resourceName, match) {\n        const fields = match.map((field) => {\n            const [fieldName, [, mappedFieldName]] = field;\n            if (bodyKeys.includes(fieldName) ||\n                bodyKeys.includes(resourceName + '.' + fieldName)) {\n                return [mappedFieldName, ['Bind', resourceName, fieldName]];\n            }\n            if (method === 'PUT') {\n                return [mappedFieldName, 'Default'];\n            }\n        });\n        return _.compact(fields);\n    }\n    Resource(resourceName, parentResource) {\n        const resourceAlias = this.resourceAliases[resourceName];\n        if (resourceAlias) {\n            return resourceAlias;\n        }\n        let resource;\n        if (parentResource) {\n            const relationshipMapping = this.ResolveRelationship(parentResource, resourceName);\n            resource = this.clientModel.tables[relationshipMapping[1][0]];\n        }\n        else {\n            let sqlName = exports.odataNameToSqlName(resourceName);\n            sqlName = this.Synonym(sqlName);\n            resource = this.clientModel.tables[sqlName];\n        }\n        if (!resource) {\n            throw new SyntaxError('Could not match resource');\n        }\n        let tableAlias;\n        if (parentResource) {\n            let resourceAlias2;\n            if (resourceName.includes('__') && !resource.name.includes('-')) {\n                const verb = exports.odataNameToSqlName(resourceName).split('-')[0];\n                resourceAlias2 = verb + '-' + resource.name;\n            }\n            else {\n                resourceAlias2 = resource.name;\n            }\n            tableAlias = parentResource.tableAlias + '.' + resourceAlias2;\n        }\n        else {\n            tableAlias = resource.name;\n        }\n        return {\n            ...resource,\n            tableAlias: this.checkAlias(tableAlias),\n        };\n    }\n    FieldContainedIn(fieldName, resource) {\n        try {\n            this.ResolveRelationship(resource, fieldName);\n            return true;\n        }\n        catch (e) {\n            if (e instanceof SyntaxError) {\n                return false;\n            }\n            throw e;\n        }\n    }\n    ResourceMapping(resource) {\n        const tableAlias = resource.tableAlias\n            ? resource.tableAlias\n            : resource.name;\n        const resourceMappings = {};\n        for (const { fieldName } of resource.fields) {\n            resourceMappings[exports.sqlNameToODataName(fieldName)] = [tableAlias, fieldName];\n        }\n        return resourceMappings;\n    }\n    ResolveRelationship(resource, relationship) {\n        let resourceName;\n        if (typeof resource === 'object') {\n            resourceName = resource.resourceName;\n        }\n        else if (this.resourceAliases[resource]) {\n            resourceName = this.resourceAliases[resource].resourceName;\n        }\n        else {\n            resourceName = resource;\n        }\n        resourceName = this.Synonym(resourceName);\n        const resourceRelations = this.clientModel.relationships[resourceName];\n        if (!resourceRelations) {\n            throw new SyntaxError(`Could not resolve relationship for '${resourceName}'`);\n        }\n        const relationshipPath = _(relationship)\n            .split('__')\n            .map(exports.odataNameToSqlName)\n            .flatMap((sqlName) => this.Synonym(sqlName).split('-'))\n            .value();\n        const relationshipMapping = _.get(resourceRelations, relationshipPath);\n        if (!relationshipMapping || !relationshipMapping.$) {\n            throw new SyntaxError(`Could not resolve relationship mapping from '${resourceName}' to '${relationshipPath}'`);\n        }\n        return relationshipMapping.$;\n    }\n    AddCountField(path, query) {\n        if (path.count) {\n            query.select.push(['Alias', ['Count', '*'], '$count']);\n        }\n    }\n    AddSelectFields(path, query, resource) {\n        let odataFieldNames;\n        if (path.options &&\n            path.options.$select &&\n            path.options.$select.properties) {\n            this.AddExtraFroms(query, resource, path.options.$select.properties);\n            odataFieldNames = path.options.$select.properties.map((prop) => {\n                const field = this.Property(prop);\n                const sqlName = exports.odataNameToSqlName(field.name);\n                const resourceField = field.resource.fields.find(({ fieldName }) => fieldName === sqlName);\n                return [field.resource, field.name, resourceField === null || resourceField === void 0 ? void 0 : resourceField.computed];\n            });\n        }\n        else {\n            odataFieldNames = resource.fields.map((field) => [\n                resource,\n                exports.sqlNameToODataName(field.fieldName),\n                field.computed,\n            ]);\n        }\n        const fields = _.differenceWith(odataFieldNames, query.select, (a, b) => a[1] === _.last(b)).map((args) => this.AliasSelectField(...args));\n        query.select = query.select.concat(fields);\n    }\n    AliasSelectField(resource, fieldName, computed, alias = fieldName) {\n        if (computed) {\n            if (resource.tableAlias != null &&\n                resource.tableAlias !== resource.name) {\n                computed = rewriteComputed(computed, resource.name, resource.tableAlias);\n            }\n            return ['Alias', computed, alias];\n        }\n        const referencedField = this.ReferencedField(resource, fieldName);\n        if (referencedField[2] === alias) {\n            return referencedField;\n        }\n        return ['Alias', referencedField, alias];\n    }\n    ReferencedField(resource, resourceField) {\n        const mapping = this.ResourceMapping(resource);\n        if (mapping[resourceField]) {\n            return [\n                'ReferencedField',\n                mapping[resourceField][0],\n                mapping[resourceField][1],\n            ];\n        }\n        else {\n            const relationshipMapping = this.ResolveRelationship(resource, resourceField);\n            const tableAlias = resource.tableAlias\n                ? resource.tableAlias\n                : resource.name;\n            if (relationshipMapping.length > 1 &&\n                relationshipMapping[0] === resource.idField) {\n                throw new SyntaxError('Attempted to directly fetch a virtual field: \"' +\n                    resourceField +\n                    '\"');\n            }\n            return ['ReferencedField', tableAlias, relationshipMapping[0]];\n        }\n    }\n    BooleanMatch(match, optional = false) {\n        switch (match) {\n            case true:\n            case false:\n                return ['Boolean', match];\n            default:\n                if (Array.isArray(match)) {\n                    const [type, ...rest] = match;\n                    switch (type) {\n                        case 'eq':\n                        case 'ne':\n                        case 'gt':\n                        case 'ge':\n                        case 'lt':\n                        case 'le':\n                            const op1 = this.Operand(rest[0]);\n                            const op2 = this.Operand(rest[1]);\n                            return [\n                                comparison[type],\n                                op1,\n                                op2,\n                            ];\n                        case 'and':\n                        case 'or':\n                            return [\n                                _.capitalize(type),\n                                ...rest.map((v) => this.BooleanMatch(v)),\n                            ];\n                        case 'not':\n                            const bool = this.BooleanMatch(rest[0]);\n                            return ['Not', bool];\n                        case 'in':\n                            return [\n                                'In',\n                                this.Operand(rest[0]),\n                                ...rest[1].map((v) => this.Operand(v)),\n                            ];\n                        case 'call':\n                            const { method } = match[1];\n                            switch (method) {\n                                case 'contains':\n                                case 'endswith':\n                                case 'startswith':\n                                case 'isof':\n                                case 'substringof':\n                                    return this.FunctionMatch(method, match);\n                                default:\n                                    if (optional) {\n                                        return;\n                                    }\n                                    throw new SyntaxError(`${method} is not a boolean function`);\n                            }\n                        default:\n                            if (optional) {\n                                return;\n                            }\n                            throw new SyntaxError(`Boolean does not support ${type}`);\n                    }\n                }\n                else {\n                    try {\n                        return this.ReferencedProperty(match);\n                    }\n                    catch (e) {\n                        if (optional) {\n                            return;\n                        }\n                        throw e;\n                    }\n                }\n        }\n    }\n    AliasedFunction(odataName, sqlName, match) {\n        const fn = this.FunctionMatch(odataName, match);\n        return [sqlName, ...fn.slice(1)];\n    }\n    FunctionMatch(name, match) {\n        if (!Array.isArray(match) || match[0] !== 'call') {\n            throw new SyntaxError('Not a function call');\n        }\n        const properties = match[1];\n        if (properties.method !== name) {\n            throw new SyntaxError('Unexpected function name');\n        }\n        const args = properties.args.map((v) => this.Operand(v));\n        return [_.capitalize(name), ...args];\n    }\n    Operand(match) {\n        for (const matcher of [\n            this.Bind,\n            this.NullMatch,\n            this.BooleanMatch,\n            this.NumberMatch,\n            this.TextMatch,\n            this.DateMatch,\n            this.DurationMatch,\n            this.Math,\n        ]) {\n            const result = matcher.call(this, match, true);\n            if (result) {\n                return result;\n            }\n        }\n        throw new SyntaxError('Could not match operand');\n    }\n    Math(match) {\n        const [type, ...rest] = match;\n        switch (type) {\n            case 'add':\n            case 'sub':\n            case 'mul':\n            case 'div':\n                return [\n                    operations[type],\n                    this.Operand(rest[0]),\n                    this.Operand(rest[1]),\n                ];\n            default:\n                return;\n        }\n    }\n    Lambda(resourceName, lambda) {\n        const resourceAliases = this.resourceAliases;\n        const defaultResource = this.defaultResource;\n        try {\n            const query = new Query();\n            const resource = this.AddNavigation(query, this.defaultResource, resourceName);\n            this.resourceAliases = { ...this.resourceAliases };\n            this.resourceAliases[lambda.identifier] = resource;\n            this.defaultResource = resource;\n            this.AddExtraFroms(query, resource, lambda.expression);\n            const filter = this.BooleanMatch(lambda.expression);\n            if (lambda.method === 'any') {\n                query.where.push(filter);\n                return ['Exists', query.compile('SelectQuery')];\n            }\n            else if (lambda.method === 'all') {\n                query.where.push(['Not', filter]);\n                return [\n                    'Not',\n                    ['Exists', query.compile('SelectQuery')],\n                ];\n            }\n            else {\n                throw new SyntaxError(`Lambda method does not support ${lambda.method}`);\n            }\n        }\n        finally {\n            this.resourceAliases = resourceAliases;\n            this.defaultResource = defaultResource;\n        }\n    }\n    ReferencedProperty(match) {\n        const prop = this.Property(match);\n        if (Array.isArray(prop)) {\n            return prop;\n        }\n        else {\n            return this.ReferencedField(prop.resource, prop.name);\n        }\n    }\n    Method(prop) {\n        if (!prop.method) {\n            throw new SyntaxError('Method is missing method entry');\n        }\n        if (prop.method[0] !== 'call') {\n            throw new SyntaxError(`Invalid value for method invocation: ${prop.method[0]}`);\n        }\n        if (typeof prop.method[1] !== 'object') {\n            throw new SyntaxError(`Invalid value for method invocation: ${prop.method[1]} should be an object`);\n        }\n        const { method } = prop.method[1];\n        if (!this.methods.hasOwnProperty(method)) {\n            throw new SyntaxError(`Method ${method} is unknown`);\n        }\n        return this.methods[method].call(this, prop);\n    }\n    Property(prop) {\n        if (!prop.name) {\n            throw new SyntaxError('Property is missing name');\n        }\n        if (prop.property) {\n            const defaultResource = this.defaultResource;\n            let propResource;\n            try {\n                propResource = this.Resource(prop.name, this.defaultResource);\n            }\n            catch (_a) {\n            }\n            if (propResource) {\n                try {\n                    this.defaultResource = propResource;\n                    return this.Property(prop.property);\n                }\n                finally {\n                    this.defaultResource = defaultResource;\n                }\n            }\n            else {\n                return this.Property(prop.property);\n            }\n        }\n        else if (prop.method) {\n            return this.Method(prop);\n        }\n        else if (prop.lambda) {\n            return this.Lambda(prop.name, prop.lambda);\n        }\n        else if (prop.count) {\n            const query = new Query();\n            query.select.push(['Count', '*']);\n            this.AddNavigation(query, this.defaultResource, prop.name);\n            return query.compile('SelectQuery');\n        }\n        else {\n            return { resource: this.defaultResource, name: prop.name };\n        }\n    }\n    NumberMatch(match, optional = false) {\n        if (typeof match === 'number') {\n            return ['Number', match];\n        }\n        else if (Array.isArray(match) && match[0] === 'call') {\n            const { method } = match[1];\n            switch (method) {\n                case 'indexof':\n                case 'year':\n                case 'month':\n                case 'day':\n                case 'day':\n                case 'hour':\n                case 'minute':\n                case 'second':\n                case 'fractionalseconds':\n                case 'totaloffsetminutes':\n                case 'totalseconds':\n                case 'round':\n                case 'floor':\n                case 'ceiling':\n                    return this.FunctionMatch(method, match);\n                case 'length':\n                    return this.AliasedFunction('length', 'CharacterLength', match);\n                default:\n                    if (optional) {\n                        return;\n                    }\n                    throw new SyntaxError(`${method} is not a number function`);\n            }\n        }\n        else if (optional) {\n            return;\n        }\n        else {\n            throw new SyntaxError('Failed to match a Number entry');\n        }\n    }\n    NullMatch(match, _optional) {\n        if (match === null) {\n            return ['Null'];\n        }\n    }\n    TextMatch(match, optional = false) {\n        if (typeof match === 'string') {\n            return ['Text', match];\n        }\n        else if (Array.isArray(match) && match[0] === 'call') {\n            const { method } = match[1];\n            switch (method) {\n                case 'tolower':\n                case 'toupper':\n                case 'trim':\n                case 'concat':\n                case 'replace':\n                    return this.FunctionMatch(method, match);\n                case 'date':\n                    return this.AliasedFunction('date', 'ToDate', match);\n                case 'time':\n                    return this.AliasedFunction('time', 'ToTime', match);\n                case 'substring':\n                    const fn = this.FunctionMatch(method, match);\n                    fn[2] = ['Add', fn[2], ['Number', 1]];\n                    return fn;\n                default:\n                    if (optional) {\n                        return;\n                    }\n                    throw new SyntaxError(`${method} is not a number function`);\n            }\n        }\n        else if (optional) {\n            return;\n        }\n        else {\n            throw new SyntaxError('Failed to match a Text entry');\n        }\n    }\n    DateMatch(match, optional = false) {\n        if (_.isDate(match)) {\n            return ['Date', match];\n        }\n        else if (Array.isArray(match) && match[0] === 'call') {\n            const { method } = match[1];\n            switch (method) {\n                case 'now':\n                case 'maxdatetime':\n                case 'mindatetime':\n                    return this.FunctionMatch(method, match);\n                default:\n                    if (optional) {\n                        return;\n                    }\n                    throw new SyntaxError(`${method} is not a date function`);\n            }\n        }\n        else if (optional) {\n            return;\n        }\n        else {\n            throw new SyntaxError('Failed to match a Date entry');\n        }\n    }\n    DurationMatch(match) {\n        if (!_.isObject(match)) {\n            return;\n        }\n        const duration = _(match)\n            .pick('negative', 'day', 'hour', 'minute', 'second')\n            .omitBy(_.isNil)\n            .value();\n        if (_(duration).omit('negative').isEmpty()) {\n            return;\n        }\n        return ['Duration', duration];\n    }\n    Expands(resource, query, expands) {\n        const defaultResource = this.defaultResource;\n        for (const expand of expands) {\n            const navigation = this.NavigateResources(resource, expand.name);\n            const expandResource = navigation.resource;\n            {\n                this.defaultResource = expandResource;\n            }\n            const nestedExpandQuery = new Query();\n            if (expand.property) {\n                this.Expands(expandResource, nestedExpandQuery, [expand.property]);\n            }\n            if (expand.options && expand.options.$expand) {\n                this.Expands(expandResource, nestedExpandQuery, expand.options.$expand.properties);\n            }\n            nestedExpandQuery.fromResource(this, expandResource);\n            if (expand.count) {\n                this.AddCountField(expand, nestedExpandQuery);\n            }\n            else {\n                this.AddSelectFields(expand, nestedExpandQuery, expandResource);\n            }\n            this.AddQueryOptions(expandResource, expand, nestedExpandQuery);\n            this.defaultResource = defaultResource;\n            nestedExpandQuery.where.push(navigation.where);\n            const expandQuery = new Query();\n            expandQuery.select.push([\n                'Alias',\n                ['AggregateJSON', [expandResource.tableAlias, '*']],\n                expand.name,\n            ]);\n            expandQuery.from.push([\n                'Alias',\n                nestedExpandQuery.compile('SelectQuery'),\n                expandResource.tableAlias,\n            ]);\n            query.select.push([\n                'Alias',\n                expandQuery.compile('SelectQuery'),\n                expand.name,\n            ]);\n        }\n    }\n    AddQueryOptions(resource, path, query) {\n        if (!path.options) {\n            return;\n        }\n        if (path.options.$filter) {\n            this.SelectFilter(path.options.$filter, query, resource);\n        }\n        if (!path.count) {\n            if (path.options.$orderby) {\n                this.OrderBy(path.options.$orderby, query, resource);\n            }\n            if (path.options.$top) {\n                const limit = this.NumberMatch(path.options.$top);\n                query.extras.push(['Limit', limit]);\n            }\n            if (path.options.$skip) {\n                const offset = this.NumberMatch(path.options.$skip);\n                query.extras.push(['Offset', offset]);\n            }\n        }\n    }\n    NavigateResources(resource, navigation) {\n        const relationshipMapping = this.ResolveRelationship(resource, navigation);\n        const linkedResource = this.Resource(navigation, resource);\n        const tableAlias = resource.tableAlias\n            ? resource.tableAlias\n            : resource.name;\n        const linkedTableAlias = linkedResource.tableAlias\n            ? linkedResource.tableAlias\n            : linkedResource.name;\n        return {\n            resource: linkedResource,\n            where: [\n                'Equals',\n                ['ReferencedField', tableAlias, relationshipMapping[0]],\n                ['ReferencedField', linkedTableAlias, relationshipMapping[1][1]],\n            ],\n        };\n    }\n    AddExtraFroms(query, parentResource, match) {\n        try {\n            if (Array.isArray(match)) {\n                match.forEach((v) => this.AddExtraFroms(query, parentResource, v));\n            }\n            else {\n                let nextProp = match;\n                let prop;\n                while ((prop = nextProp) &&\n                    prop.name &&\n                    prop.property &&\n                    prop.property.name) {\n                    nextProp = prop.property;\n                    const resourceAlias = this.resourceAliases[prop.name];\n                    if (resourceAlias) {\n                        parentResource = resourceAlias;\n                    }\n                    else {\n                        parentResource = this.AddNavigation(query, parentResource, prop.name);\n                    }\n                }\n                if (nextProp && nextProp.args) {\n                    this.AddExtraFroms(query, parentResource, prop.args);\n                }\n            }\n        }\n        catch (_a) {\n        }\n    }\n    AddNavigation(query, resource, extraResource) {\n        const navigation = this.NavigateResources(resource, extraResource);\n        if (!query.from.some((from) => (from[0] === 'Table' && from[1] === navigation.resource.tableAlias) ||\n            (from[0] === 'Alias' && from[2] === navigation.resource.tableAlias))) {\n            query.fromResource(this, navigation.resource);\n            query.where.push(navigation.where);\n            return navigation.resource;\n        }\n        else {\n            throw new SyntaxError(`Could not navigate resources '${resource.name}' and '${extraResource}'`);\n        }\n    }\n    reset() {\n        this.putReset();\n        this.extraBodyVars = {};\n        this.extraBindVars = [];\n    }\n    putReset() {\n        this.resourceAliases = {};\n        this.defaultResource = undefined;\n    }\n    Synonym(sqlName) {\n        return _(sqlName)\n            .split('-')\n            .map((namePart) => {\n            const synonym = this.clientModel.synonyms[namePart];\n            if (synonym) {\n                return synonym;\n            }\n            return namePart;\n        })\n            .join('-');\n    }\n    rewriteDefinition(definition, extraBindVars, bindVarsLength) {\n        const rewrittenDefinition = _.cloneDeep(convertToModernDefinition(definition));\n        exports.rewriteBinds(rewrittenDefinition, extraBindVars, bindVarsLength);\n        modifyAbstractSql('Resource', rewrittenDefinition.abstractSql, (resource) => {\n            const resourceName = resource[1];\n            const referencedResource = this.clientModel.tables[resourceName];\n            if (!referencedResource) {\n                throw new Error(`Could not resolve resource ${resourceName}`);\n            }\n            if (referencedResource.definition) {\n                const subDefinition = this.rewriteDefinition(referencedResource.definition, extraBindVars, bindVarsLength);\n                resource.splice(0, resource.length, ...subDefinition.abstractSql);\n            }\n            else if (referencedResource.fields.some((field) => field.computed != null)) {\n                const computedFieldQuery = new Query();\n                computedFieldQuery.select = referencedResource.fields.map((field) => this.AliasSelectField(referencedResource, exports.sqlNameToODataName(field.fieldName), field.computed, field.fieldName));\n                computedFieldQuery.fromResource(this, {\n                    ...referencedResource,\n                    tableAlias: referencedResource.name,\n                });\n                resource.splice(0, resource.length, ...computedFieldQuery.compile('SelectQuery'));\n            }\n            else {\n                resource.splice(0, resource.length, ...['Table', referencedResource.name]);\n            }\n        });\n        return rewrittenDefinition;\n    }\n}\nexports.OData2AbstractSQL = OData2AbstractSQL;\nconst addAliases = (shortAliases, origAliasParts) => {\n    const trie = {};\n    const buildTrie = (aliasPart) => {\n        let node = trie;\n        for (let i = 0; i < aliasPart.length; i++) {\n            if (node.$suffix) {\n                node[node.$suffix[0]] = {\n                    $suffix: node.$suffix.slice(1),\n                };\n                delete node.$suffix;\n            }\n            const c = aliasPart[i];\n            if (node[c]) {\n                node = node[c];\n            }\n            else {\n                node[c] = {\n                    $suffix: aliasPart.slice(i + 1),\n                };\n                return;\n            }\n        }\n    };\n    const traverseNodes = (str, node) => {\n        if (node.$suffix) {\n            const index = lowerCaseAliasParts.indexOf(str + node.$suffix);\n            const origAliasPart = origAliasParts[index];\n            shortAliases[origAliasPart] = origAliasPart.slice(0, str.length);\n        }\n        else {\n            _.forEach(node, (value, key) => {\n                traverseNodes(str + key, value);\n            });\n        }\n    };\n    const lowerCaseAliasParts = origAliasParts.map((origAliasPart) => origAliasPart.toLowerCase());\n    lowerCaseAliasParts.slice().sort().forEach(buildTrie);\n    traverseNodes('', trie);\n};\nconst getRelationships = (relationships, nestedRelationships = []) => {\n    const relationshipKeys = Object.keys(relationships);\n    for (const key of relationshipKeys) {\n        if (key !== '$') {\n            nestedRelationships.push(key);\n            getRelationships(relationships[key], nestedRelationships);\n        }\n    }\n    return nestedRelationships;\n};\nconst generateShortAliases = (clientModel) => {\n    const shortAliases = {};\n    const aliasParts = _(getRelationships(clientModel.relationships))\n        .union(Object.keys(clientModel.synonyms))\n        .reject((key) => key === '$')\n        .value();\n    let origAliasParts = _(aliasParts)\n        .flatMap((aliasPart) => aliasPart.split(/-| /))\n        .uniq()\n        .value();\n    addAliases(shortAliases, origAliasParts);\n    origAliasParts = _(aliasParts)\n        .flatMap((aliasPart) => aliasPart.split('-'))\n        .filter((aliasPart) => aliasPart.includes(' '))\n        .map((aliasPart) => aliasPart\n        .split(' ')\n        .map((part) => shortAliases[part])\n        .join(' '))\n        .uniq()\n        .value();\n    addAliases(shortAliases, origAliasParts);\n    origAliasParts = _(aliasParts)\n        .filter((aliasPart) => aliasPart.includes('-'))\n        .map((aliasPart) => aliasPart\n        .split('-')\n        .map((part) => shortAliases[part])\n        .join('-'))\n        .uniq()\n        .value();\n    addAliases(shortAliases, origAliasParts);\n    return shortAliases;\n};\n//# sourceMappingURL=odata-to-abstract-sql.js.map","\"use strict\";\n\nvar normalizeOpts = require(\"es5-ext/object/normalize-options\")\n  , resolveLength = require(\"./lib/resolve-length\")\n  , plain         = require(\"./plain\");\n\nmodule.exports = function (fn/*, options*/) {\n\tvar options = normalizeOpts(arguments[1]), length;\n\n\tif (!options.normalizer) {\n\t\tlength = options.length = resolveLength(options.length, fn.length, options.async);\n\t\tif (length !== 0) {\n\t\t\tif (options.primitive) {\n\t\t\t\tif (length === false) {\n\t\t\t\t\toptions.normalizer = require(\"./normalizers/primitive\");\n\t\t\t\t} else if (length > 1) {\n\t\t\t\t\toptions.normalizer = require(\"./normalizers/get-primitive-fixed\")(length);\n\t\t\t\t}\n\t\t\t} else if (length === false) options.normalizer = require(\"./normalizers/get\")();\n\t\t\t\telse if (length === 1) options.normalizer = require(\"./normalizers/get-1\")();\n\t\t\t\telse options.normalizer = require(\"./normalizers/get-fixed\")(length);\n\t\t}\n\t}\n\n\t// Assure extensions\n\tif (options.async) require(\"./ext/async\");\n\tif (options.promise) require(\"./ext/promise\");\n\tif (options.dispose) require(\"./ext/dispose\");\n\tif (options.maxAge) require(\"./ext/max-age\");\n\tif (options.max) require(\"./ext/max\");\n\tif (options.refCounter) require(\"./ext/ref-counter\");\n\n\treturn plain(fn, options);\n};\n","\"use strict\";\n\n// ES3 safe\nvar _undefined = void 0;\n\nmodule.exports = function (value) { return value !== _undefined && value !== null; };\n","import type {\r\n\tAbstractSqlModel,\r\n\tAbstractSqlType,\r\n\tAliasNode,\r\n\tRelationship,\r\n\tRelationshipInternalNode,\r\n\tRelationshipLeafNode,\r\n\tRelationshipMapping,\r\n\tSelectNode,\r\n} from '@balena/abstract-sql-compiler';\r\nimport './express-extension';\r\nimport type * as Express from 'express';\r\nimport type {\r\n\tODataBinds,\r\n\tODataQuery,\r\n\tSupportedMethod,\r\n} from '@balena/odata-parser';\r\nimport type { ApiKey, User } from '../sbvr-api/sbvr-utils';\r\nimport type { AnyObject } from './common-types';\r\n\r\nimport {\r\n\tDefinition,\r\n\tOData2AbstractSQL,\r\n\todataNameToSqlName,\r\n\tResourceFunction,\r\n\tsqlNameToODataName,\r\n} from '@balena/odata-to-abstract-sql';\r\nimport * as ODataParser from '@balena/odata-parser';\r\n\r\nimport * as _ from 'lodash';\r\nimport * as memoize from 'memoizee';\r\nimport * as randomstring from 'randomstring';\r\nimport * as env from '../config-loader/env';\r\nimport * as sbvrUtils from '../sbvr-api/sbvr-utils';\r\nimport { HookReq, addPureHook, addHook } from './hooks';\r\nimport {\r\n\tBadRequestError,\r\n\tPermissionError,\r\n\tPermissionParsingError,\r\n} from './errors';\r\nimport {\r\n\tmemoizedGetOData2AbstractSQL,\r\n\tmemoizedParseOdata,\r\n\tmetadataEndpoints,\r\n\tODataRequest,\r\n} from './uri-parser';\r\nimport memoizeWeak = require('memoizee/weak');\r\n\r\n// tslint:disable-next-line:no-var-requires\r\nconst userModel: string = require('./user.sbvr');\r\n\r\nconst DEFAULT_ACTOR_BIND = '@__ACTOR_ID';\r\nconst DEFAULT_ACTOR_BIND_REGEX = new RegExp(\r\n\t_.escapeRegExp(DEFAULT_ACTOR_BIND),\r\n\t'g',\r\n);\r\n\r\nexport { PermissionError, PermissionParsingError };\r\nexport interface PermissionReq {\r\n\tuser?: User;\r\n\tapiKey?: ApiKey;\r\n}\r\nexport const root: PermissionReq = {\r\n\tuser: {\r\n\t\tid: 0,\r\n\t\tactor: 0,\r\n\t\tpermissions: ['resource.all'],\r\n\t},\r\n};\r\nexport const rootRead: PermissionReq = {\r\n\tuser: {\r\n\t\tid: 0,\r\n\t\tactor: 0,\r\n\t\tpermissions: ['resource.read'],\r\n\t},\r\n};\r\n\r\ninterface NestedCheckOr<T> {\r\n\tor: NestedCheckArray<T>;\r\n}\r\ninterface NestedCheckAnd<T> {\r\n\tand: NestedCheckArray<T>;\r\n}\r\ninterface NestedCheckArray<T> extends Array<NestedCheck<T>> {}\r\ntype NestedCheck<T> =\r\n\t| NestedCheckOr<T>\r\n\t| NestedCheckAnd<T>\r\n\t| NestedCheckArray<T>\r\n\t| T;\r\ntype PermissionCheck = NestedCheck<string>;\r\n\r\ntype MappedType<I, O> = O extends NestedCheck<infer T>\r\n\t? Exclude<Exclude<I, string> | T, boolean>\r\n\t: Exclude<Exclude<I, string> | O, boolean>;\r\ntype MappedNestedCheck<\r\n\tT extends NestedCheck<I>,\r\n\tI,\r\n\tO,\r\n> = T extends NestedCheckOr<I>\r\n\t? NestedCheckOr<MappedType<I, O>>\r\n\t: T extends NestedCheckAnd<I>\r\n\t? NestedCheckAnd<MappedType<I, O>>\r\n\t: T extends NestedCheckArray<I>\r\n\t? NestedCheckArray<MappedType<I, O>>\r\n\t: Exclude<I, string> | O;\r\n\r\nconst methodPermissions: {\r\n\t[method in Exclude<SupportedMethod, 'OPTIONS'>]: PermissionCheck;\r\n} & { OPTIONS?: PermissionCheck } = {\r\n\tGET: 'read',\r\n\tPUT: {\r\n\t\tand: ['create', 'update'],\r\n\t},\r\n\tPOST: 'create',\r\n\tPATCH: 'update',\r\n\tMERGE: 'update',\r\n\tDELETE: 'delete',\r\n};\r\n\r\nconst $parsePermissions = memoize(\r\n\t(filter: string) => {\r\n\t\tconst { tree, binds } = ODataParser.parse(filter, {\r\n\t\t\tstartRule: 'ProcessRule',\r\n\t\t\trule: 'FilterByExpression',\r\n\t\t});\r\n\t\treturn {\r\n\t\t\ttree,\r\n\t\t\textraBinds: binds,\r\n\t\t};\r\n\t},\r\n\t{\r\n\t\tprimitive: true,\r\n\t\tmax: env.cache.parsePermissions.max,\r\n\t},\r\n);\r\n\r\nconst rewriteBinds = (\r\n\t{ tree, extraBinds }: { tree: ODataQuery; extraBinds: ODataBinds },\r\n\todataBinds: ODataBinds,\r\n): ODataQuery => {\r\n\t// Add the extra binds we parsed onto our existing list of binds vars.\r\n\tconst bindsLength = odataBinds.length;\r\n\todataBinds.push(...extraBinds);\r\n\t// Clone the tree so the cached version can't be mutated and at the same time fix the bind numbers\r\n\treturn _.cloneDeepWith(tree, (value) => {\r\n\t\tif (value != null) {\r\n\t\t\tconst bind = value.bind;\r\n\t\t\tif (Number.isInteger(bind)) {\r\n\t\t\t\treturn { bind: value.bind + bindsLength };\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n};\r\n\r\nconst parsePermissions = (\r\n\tfilter: string,\r\n\todataBinds: ODataBinds,\r\n): ODataQuery => {\r\n\tconst odata = $parsePermissions(filter);\r\n\treturn rewriteBinds(odata, odataBinds);\r\n};\r\n\r\n// Traverses all values in `check`, actions for the following data types:\r\n// string: Calls `stringCallback` and uses the value returned instead\r\n// boolean: Used as-is\r\n// array: Treated as an AND of all elements\r\n// object: Must have only one key of either `AND` or `OR`, with an array value that will be treated according to the key.\r\nconst isAnd = <T>(x: any): x is NestedCheckAnd<T> =>\r\n\t_.isObject(x) && 'and' in x;\r\nconst isOr = <T>(x: any): x is NestedCheckOr<T> =>\r\n\ttypeof x === 'object' && 'or' in x;\r\nexport function nestedCheck<I, O>(\r\n\tcheck: string,\r\n\tstringCallback: (s: string) => O,\r\n): O;\r\nexport function nestedCheck<I, O>(\r\n\tcheck: boolean,\r\n\tstringCallback: (s: string) => O,\r\n): boolean;\r\nexport function nestedCheck<I, O>(\r\n\tcheck: NestedCheck<I>,\r\n\tstringCallback: (s: string) => O,\r\n): Exclude<I, string> | O | MappedNestedCheck<typeof check, I, O>;\r\nexport function nestedCheck<I, O>(\r\n\tcheck: NestedCheck<I>,\r\n\tstringCallback: (s: string) => O,\r\n): boolean | Exclude<I, string> | O | MappedNestedCheck<typeof check, I, O> {\r\n\tif (typeof check === 'string') {\r\n\t\treturn stringCallback(check);\r\n\t}\r\n\tif (typeof check === 'boolean') {\r\n\t\treturn check;\r\n\t}\r\n\tif (Array.isArray(check)) {\r\n\t\tlet results: any[] = [];\r\n\t\tfor (const subcheck of check) {\r\n\t\t\tconst result = nestedCheck(subcheck, stringCallback);\r\n\t\t\tif (typeof result === 'boolean') {\r\n\t\t\t\tif (result === false) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t} else if (isAnd(result)) {\r\n\t\t\t\tresults = results.concat(result.and);\r\n\t\t\t} else {\r\n\t\t\t\tresults.push(result);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (results.length === 1) {\r\n\t\t\treturn results[0];\r\n\t\t}\r\n\t\tif (results.length > 1) {\r\n\t\t\treturn {\r\n\t\t\t\tand: _.uniq(results),\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\tif (typeof check === 'object') {\r\n\t\tconst checkTypes = Object.keys(check);\r\n\t\tif (checkTypes.length > 1) {\r\n\t\t\tthrow new Error('More than one check type: ' + checkTypes);\r\n\t\t}\r\n\t\tconst checkType = checkTypes[0];\r\n\t\tswitch (checkType.toUpperCase()) {\r\n\t\t\tcase 'AND':\r\n\t\t\t\tconst and = (check as NestedCheckAnd<I>)[checkType as 'and'];\r\n\t\t\t\treturn nestedCheck(and, stringCallback);\r\n\t\t\tcase 'OR':\r\n\t\t\t\tconst or = (check as NestedCheckOr<I>)[checkType as 'or'];\r\n\t\t\t\tlet results: any[] = [];\r\n\t\t\t\tfor (const subcheck of or) {\r\n\t\t\t\t\tconst result = nestedCheck(subcheck, stringCallback);\r\n\t\t\t\t\tif (typeof result === 'boolean') {\r\n\t\t\t\t\t\tif (result === true) {\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (isOr(result)) {\r\n\t\t\t\t\t\tresults = results.concat(result.or);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresults.push(result);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (results.length === 1) {\r\n\t\t\t\t\treturn results[0];\r\n\t\t\t\t}\r\n\t\t\t\tif (results.length > 1) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tor: _.uniq(results),\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error('Cannot parse required checking logic: ' + checkType);\r\n\t\t}\r\n\t}\r\n\tthrow new Error('Cannot parse required checks: ' + check);\r\n}\r\n\r\ninterface CollapsedFilter<T> extends Array<string | T | CollapsedFilter<T>> {\r\n\t0: string;\r\n}\r\n\r\nconst collapsePermissionFilters = <T>(\r\n\tv: NestedCheck<{ filter: T }>,\r\n): T | CollapsedFilter<T> => {\r\n\tif (Array.isArray(v)) {\r\n\t\treturn collapsePermissionFilters({ or: v });\r\n\t}\r\n\tif (typeof v === 'object') {\r\n\t\tif ('filter' in v) {\r\n\t\t\treturn v.filter;\r\n\t\t}\r\n\t\tif ('and' in v) {\r\n\t\t\treturn ['and', ...v.and.map(collapsePermissionFilters)];\r\n\t\t}\r\n\t\tif ('or' in v) {\r\n\t\t\treturn ['or', ...v.or.map(collapsePermissionFilters)];\r\n\t\t}\r\n\t\tthrow new Error(\r\n\t\t\t'Permission filter objects must have `filter` or `and` or `or` keys',\r\n\t\t);\r\n\t}\r\n\treturn v;\r\n};\r\n\r\nconst namespaceRelationships = (\r\n\trelationships: Relationship,\r\n\talias: string,\r\n): void => {\r\n\t_.forEach(relationships, (relationship: Relationship, key) => {\r\n\t\tif (key === '$') {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet mapping = (relationship as RelationshipLeafNode).$;\r\n\t\tif (mapping != null && mapping.length === 2) {\r\n\t\t\tmapping = _.cloneDeep(mapping);\r\n\t\t\t// we do check the length above, but typescript thinks the second\r\n\t\t\t// element could be undefined\r\n\t\t\tmapping[1]![0] = `${mapping[1]![0]}$${alias}`;\r\n\t\t\t(relationships as RelationshipInternalNode)[`${key}$${alias}`] = {\r\n\t\t\t\t$: mapping,\r\n\t\t\t};\r\n\t\t}\r\n\t\tnamespaceRelationships(relationship, alias);\r\n\t});\r\n};\r\n\r\ntype PermissionLookup = _.Dictionary<true | string[]>;\r\n\r\nconst getPermissionsLookup = memoize(\r\n\t(permissions: string[]): PermissionLookup => {\r\n\t\tconst permissionsLookup: PermissionLookup = {};\r\n\t\tfor (const permission of permissions) {\r\n\t\t\tconst [target, condition] = permission.split('?');\r\n\t\t\tif (condition == null) {\r\n\t\t\t\t// We have unconditional permission\r\n\t\t\t\tpermissionsLookup[target] = true;\r\n\t\t\t} else if (permissionsLookup[target] !== true) {\r\n\t\t\t\tif (permissionsLookup[target] == null) {\r\n\t\t\t\t\tpermissionsLookup[target] = [];\r\n\t\t\t\t}\r\n\t\t\t\t(\r\n\t\t\t\t\tpermissionsLookup[target] as Exclude<\r\n\t\t\t\t\t\tPermissionLookup[typeof target],\r\n\t\t\t\t\t\ttrue\r\n\t\t\t\t\t>\r\n\t\t\t\t).push(condition);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn permissionsLookup;\r\n\t},\r\n\t{\r\n\t\tprimitive: true,\r\n\t\tmax: env.cache.permissionsLookup.max,\r\n\t},\r\n);\r\n\r\nconst $checkPermissions = (\r\n\tpermissionsLookup: PermissionLookup,\r\n\tactionList: PermissionCheck,\r\n\tvocabulary?: string,\r\n\tresourceName?: string,\r\n): boolean | NestedCheck<string> => {\r\n\tconst checkObject: PermissionCheck = {\r\n\t\tor: ['all', actionList],\r\n\t};\r\n\treturn nestedCheck(\r\n\t\tcheckObject,\r\n\t\t(permissionCheck): boolean | string | NestedCheckOr<string> => {\r\n\t\t\tconst resourcePermission =\r\n\t\t\t\tpermissionsLookup['resource.' + permissionCheck];\r\n\t\t\tlet vocabularyPermission: string[] | undefined;\r\n\t\t\tlet vocabularyResourcePermission: string[] | undefined;\r\n\t\t\tif (resourcePermission === true) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tif (vocabulary != null) {\r\n\t\t\t\tconst maybeVocabularyPermission =\r\n\t\t\t\t\tpermissionsLookup[vocabulary + '.' + permissionCheck];\r\n\t\t\t\tif (maybeVocabularyPermission === true) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\tvocabularyPermission = maybeVocabularyPermission;\r\n\t\t\t\tif (resourceName != null) {\r\n\t\t\t\t\tconst maybeVocabularyResourcePermission =\r\n\t\t\t\t\t\tpermissionsLookup[\r\n\t\t\t\t\t\t\tvocabulary + '.' + resourceName + '.' + permissionCheck\r\n\t\t\t\t\t\t];\r\n\t\t\t\t\tif (maybeVocabularyResourcePermission === true) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvocabularyResourcePermission = maybeVocabularyResourcePermission;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Get the unique permission set, ignoring undefined sets.\r\n\t\t\tconst conditionalPermissions = _.union(\r\n\t\t\t\tresourcePermission,\r\n\t\t\t\tvocabularyPermission,\r\n\t\t\t\tvocabularyResourcePermission,\r\n\t\t\t);\r\n\r\n\t\t\tif (conditionalPermissions.length === 1) {\r\n\t\t\t\treturn conditionalPermissions[0];\r\n\t\t\t}\r\n\t\t\tif (conditionalPermissions.length > 1) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tor: conditionalPermissions,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t);\r\n};\r\n\r\nconst convertToLambda = (filter: AnyObject, identifier: string) => {\r\n\t// We need to inject all occurences of properties for the new lambda function\r\n\t// for example if there is an `or` operator, where different properties of\r\n\t// the target resource are used, we need to change all occurences of these.\r\n\t// We do this in a recursive way to also cover all nested cases like or [ and, and ]\r\n\tconst replaceObject = (object: AnyObject) => {\r\n\t\tif (typeof object === 'string') {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (Array.isArray(object)) {\r\n\t\t\tobject.forEach((element) => {\r\n\t\t\t\treplaceObject(element);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (object.hasOwnProperty('name')) {\r\n\t\t\tobject.property = { ...object };\r\n\t\t\tobject.name = identifier;\r\n\t\t\tdelete object.lambda;\r\n\t\t}\r\n\t};\r\n\r\n\treplaceObject(filter);\r\n};\r\n\r\nconst rewriteSubPermissionBindings = (filter: AnyObject, counter: number) => {\r\n\tconst rewrite = (object: AnyObject) => {\r\n\t\tif (object == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (typeof object.bind === 'number') {\r\n\t\t\tobject.bind = counter + object.bind;\r\n\t\t}\r\n\r\n\t\tif (Array.isArray(object) || _.isObject(object)) {\r\n\t\t\t_.forEach(object, (v) => {\r\n\t\t\t\trewrite(v);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\trewrite(filter);\r\n};\r\n\r\nconst buildODataPermission = (\r\n\tpermissionsLookup: PermissionLookup,\r\n\tactionList: PermissionCheck,\r\n\tvocabulary: string,\r\n\tresourceName: string,\r\n\todata: {\r\n\t\ttree: ODataParser.ODataQuery;\r\n\t\tbinds: ODataParser.ODataBinds;\r\n\t},\r\n) => {\r\n\tconst conditionalPerms = $checkPermissions(\r\n\t\tpermissionsLookup,\r\n\t\tactionList,\r\n\t\tvocabulary,\r\n\t\tresourceName,\r\n\t);\r\n\tif (conditionalPerms === false) {\r\n\t\t// We reuse a constant permission error here as it will be cached, and\r\n\t\t// using a single error instance can drastically reduce the memory used\r\n\t\tthrow constrainedPermissionError;\r\n\t}\r\n\tif (conditionalPerms === true) {\r\n\t\t// If we have full access then no need to provide a constrained definition\r\n\t\treturn false;\r\n\t}\r\n\r\n\tconst permissionFilters = nestedCheck(conditionalPerms, (permissionCheck) => {\r\n\t\ttry {\r\n\t\t\t// We use an object with filter key to avoid collapsing our filters later.\r\n\t\t\treturn {\r\n\t\t\t\tfilter: parsePermissions(permissionCheck, odata.binds),\r\n\t\t\t};\r\n\t\t} catch (e) {\r\n\t\t\tconsole.warn(\r\n\t\t\t\t'Failed to parse conditional permissions: ',\r\n\t\t\t\tpermissionCheck,\r\n\t\t\t);\r\n\t\t\tthrow new PermissionParsingError(e);\r\n\t\t}\r\n\t});\r\n\r\n\tconst collapsedPermissionFilters =\r\n\t\tcollapsePermissionFilters(permissionFilters);\r\n\r\n\treturn collapsedPermissionFilters;\r\n};\r\n\r\nconst constrainedPermissionError = new PermissionError();\r\nconst generateConstrainedAbstractSql = (\r\n\tpermissionsLookup: PermissionLookup,\r\n\tactionList: PermissionCheck,\r\n\tvocabulary: string,\r\n\tresourceName: string,\r\n) => {\r\n\tconst abstractSQLModel = sbvrUtils.getAbstractSqlModel({\r\n\t\tvocabulary,\r\n\t});\r\n\tconst odata = memoizedParseOdata(`/${resourceName}`);\r\n\r\n\tconst collapsedPermissionFilters = buildODataPermission(\r\n\t\tpermissionsLookup,\r\n\t\tactionList,\r\n\t\tvocabulary,\r\n\t\tresourceName,\r\n\t\todata,\r\n\t);\r\n\r\n\t_.set(odata, ['tree', 'options', '$filter'], collapsedPermissionFilters);\r\n\r\n\tconst lambdaAlias = randomstring.generate(20);\r\n\tlet inc = 0;\r\n\r\n\t// We need to trace the processed resources, to be able to break\r\n\t// permissions circles.\r\n\tconst canAccessTrace: string[] = [resourceName];\r\n\r\n\tconst canAccessFunction: ResourceFunction = function (property: AnyObject) {\r\n\t\t// remove method property so that we won't loop back here again at this point\r\n\t\tdelete property.method;\r\n\r\n\t\tif (!this.defaultResource) {\r\n\t\t\tthrow new Error(`No resource selected in AST.`);\r\n\t\t}\r\n\r\n\t\tconst targetResource = this.NavigateResources(\r\n\t\t\tthis.defaultResource,\r\n\t\t\tproperty.name,\r\n\t\t);\r\n\r\n\t\tconst targetResourceName = sqlNameToODataName(targetResource.resource.name);\r\n\r\n\t\tif (canAccessTrace.includes(targetResourceName)) {\r\n\t\t\t// we don't want to allow permission loops for now, therefore we are\r\n\t\t\t// throwing the exception here. If we ever want to allow permission\r\n\t\t\t// loops return a false AST statement here (like true eq false), to\r\n\t\t\t// not recursivley follow query branches in a deep first search.\r\n\t\t\tthrow new PermissionError(\r\n\t\t\t\t`Permissions for ${resourceName} form a circle by the following path: ${canAccessTrace.join(\r\n\t\t\t\t\t' -> ',\r\n\t\t\t\t)} -> ${targetResourceName}`,\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tconst parentOdata = memoizedParseOdata(`/${targetResourceName}`);\r\n\r\n\t\tconst collapsedParentPermissionFilters = buildODataPermission(\r\n\t\t\tpermissionsLookup,\r\n\t\t\tactionList,\r\n\t\t\tvocabulary,\r\n\t\t\ttargetResourceName,\r\n\t\t\tparentOdata,\r\n\t\t);\r\n\r\n\t\tif (collapsedParentPermissionFilters === false) {\r\n\t\t\t// We reuse a constant permission error here as it will be cached, and\r\n\t\t\t// using a single error instance can drastically reduce the memory used\r\n\t\t\tthrow constrainedPermissionError;\r\n\t\t}\r\n\r\n\t\tconst lambdaId = `${lambdaAlias}+${inc}`;\r\n\t\tinc = inc + 1;\r\n\t\trewriteSubPermissionBindings(\r\n\t\t\tcollapsedParentPermissionFilters,\r\n\t\t\tthis.bindVarsLength + this.extraBindVars.length,\r\n\t\t);\r\n\t\tconvertToLambda(collapsedParentPermissionFilters, lambdaId);\r\n\t\tproperty.lambda = {\r\n\t\t\tmethod: 'any',\r\n\t\t\tidentifier: lambdaId,\r\n\t\t\texpression: collapsedParentPermissionFilters,\r\n\t\t};\r\n\r\n\t\tthis.extraBindVars.push(...parentOdata.binds);\r\n\r\n\t\tcanAccessTrace.push(targetResourceName);\r\n\t\ttry {\r\n\t\t\treturn this.Property(property);\r\n\t\t} finally {\r\n\t\t\tcanAccessTrace.pop();\r\n\t\t}\r\n\t};\r\n\r\n\tconst { tree, extraBindVars } = memoizedGetOData2AbstractSQL(\r\n\t\tabstractSQLModel,\r\n\t).match(odata.tree, 'GET', [], odata.binds.length, {\r\n\t\tcanAccess: canAccessFunction,\r\n\t});\r\n\r\n\todata.binds.push(...extraBindVars);\r\n\tconst odataBinds = odata.binds;\r\n\r\n\tconst abstractSqlQuery = [...tree];\r\n\t// Remove aliases from the top level select\r\n\tconst selectIndex = abstractSqlQuery.findIndex((v) => v[0] === 'Select');\r\n\tconst select = (abstractSqlQuery[selectIndex] = [\r\n\t\t...abstractSqlQuery[selectIndex],\r\n\t] as SelectNode);\r\n\tselect[1] = select[1].map((selectField): AbstractSqlType => {\r\n\t\tif (selectField[0] === 'Alias') {\r\n\t\t\tconst maybeField = (selectField as AliasNode<any>)[1];\r\n\t\t\tconst fieldType = maybeField[0];\r\n\t\t\tif (fieldType === 'ReferencedField' || fieldType === 'Field') {\r\n\t\t\t\treturn maybeField;\r\n\t\t\t}\r\n\t\t\treturn [\r\n\t\t\t\t'Alias',\r\n\t\t\t\tmaybeField,\r\n\t\t\t\todataNameToSqlName((selectField as AliasNode<any>)[2]),\r\n\t\t\t];\r\n\t\t}\r\n\t\tif (selectField.length === 2 && Array.isArray(selectField[0])) {\r\n\t\t\treturn selectField[0];\r\n\t\t}\r\n\t\treturn selectField;\r\n\t});\r\n\r\n\treturn { extraBinds: odataBinds, abstractSqlQuery };\r\n};\r\n\r\n// Call the function once and either return the same result or throw the same error on subsequent calls\r\nconst onceGetter = (obj: AnyObject, propName: string, fn: () => any) => {\r\n\t// We have `nullableFn` to keep fn required but still allow us to clear the fn reference\r\n\t// after we have called fn\r\n\tlet nullableFn: undefined | typeof fn = fn;\r\n\tlet thrownErr: Error | undefined;\r\n\tObject.defineProperty(obj, propName, {\r\n\t\tenumerable: true,\r\n\t\tconfigurable: true,\r\n\t\tget() {\r\n\t\t\tif (thrownErr != null) {\r\n\t\t\t\tthrow thrownErr;\r\n\t\t\t}\r\n\t\t\ttry {\r\n\t\t\t\tconst result = nullableFn!();\r\n\t\t\t\t// We need the delete first as the current property is read-only\r\n\t\t\t\t// and the delete removes that restriction\r\n\t\t\t\tdelete this[propName];\r\n\t\t\t\treturn (this[propName] = result);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tthrownErr = e;\r\n\t\t\t\tthrow thrownErr;\r\n\t\t\t} finally {\r\n\t\t\t\tnullableFn = undefined;\r\n\t\t\t}\r\n\t\t},\r\n\t});\r\n};\r\n\r\nconst deepFreezeExceptDefinition = (obj: AnyObject) => {\r\n\tObject.freeze(obj);\r\n\r\n\tObject.getOwnPropertyNames(obj).forEach((prop) => {\r\n\t\t// We skip the definition because we know it's a property we've defined that will throw an error in some cases\r\n\t\tif (\r\n\t\t\tprop !== 'definition' &&\r\n\t\t\tobj.hasOwnProperty(prop) &&\r\n\t\t\tobj[prop] !== null &&\r\n\t\t\t!['object', 'function'].includes(typeof obj[prop])\r\n\t\t) {\r\n\t\t\tdeepFreezeExceptDefinition(obj);\r\n\t\t}\r\n\t});\r\n};\r\n\r\nconst createBypassDefinition = (definition: Definition) =>\r\n\t_.cloneDeepWith(definition, (abstractSql) => {\r\n\t\tif (\r\n\t\t\tArray.isArray(abstractSql) &&\r\n\t\t\tabstractSql[0] === 'Resource' &&\r\n\t\t\t!abstractSql[1].endsWith('$bypass')\r\n\t\t) {\r\n\t\t\treturn ['Resource', `${abstractSql[1]}$bypass`];\r\n\t\t}\r\n\t});\r\n\r\nconst getAlias = (name: string) => {\r\n\t// TODO-MAJOR: Change $bypass to $permissionbypass or similar\r\n\tif (name.endsWith('$bypass')) {\r\n\t\treturn 'bypass';\r\n\t}\r\n\tconst [, permissionsJSON] = name.split('permissions');\r\n\tif (!permissionsJSON) {\r\n\t\treturn;\r\n\t}\r\n\treturn `permissions${permissionsJSON}`;\r\n};\r\n\r\nconst rewriteRelationship = memoizeWeak(\r\n\t(\r\n\t\tvalue: Relationship,\r\n\t\tname: string,\r\n\t\tabstractSqlModel: AbstractSqlModel,\r\n\t\tpermissionsLookup: PermissionLookup,\r\n\t\tvocabulary: string,\r\n\t\todata2AbstractSQL: OData2AbstractSQL,\r\n\t) => {\r\n\t\tlet escapedName = sqlNameToODataName(name);\r\n\t\tif (abstractSqlModel.tables[name]) {\r\n\t\t\tescapedName = sqlNameToODataName(abstractSqlModel.tables[name].name);\r\n\t\t}\r\n\r\n\t\tconst rewrite = (object: Relationship | RelationshipMapping) => {\r\n\t\t\tif ('$' in object && Array.isArray(object.$)) {\r\n\t\t\t\t// object is in the form of\r\n\t\t\t\t// { \"$\": [\"actor\", [\"actor\", \"id\"]] } or { \"$\": [\"device type\"] }\r\n\t\t\t\t// we are only interested in the first case, since this is a relationship\r\n\t\t\t\t// to a different resource\r\n\t\t\t\tconst mapping = object.$;\r\n\t\t\t\tif (\r\n\t\t\t\t\tmapping.length === 2 &&\r\n\t\t\t\t\tArray.isArray(mapping[1]) &&\r\n\t\t\t\t\tmapping[1].length === 2 &&\r\n\t\t\t\t\ttypeof mapping[1][0] === 'string'\r\n\t\t\t\t) {\r\n\t\t\t\t\t// now have ensured that mapping looks like [\"actor\", [\"actor\", \"id\"]]\r\n\t\t\t\t\t// this relations ship means that:\r\n\t\t\t\t\t//   mapping[0] is the local field\r\n\t\t\t\t\t//   mapping[1] is the reference to the other resource, that joins this resource\r\n\t\t\t\t\t//   mapping[1][0] is the name of the other resource (actor in the example)\r\n\t\t\t\t\t//   mapping[1][1] is the name of the field on the other resource\r\n\t\t\t\t\t//\r\n\t\t\t\t\t// this therefore defines that the local field `actor` needs\r\n\t\t\t\t\t// to match the `id` of the `actor` resources for the join\r\n\r\n\t\t\t\t\tconst possibleTargetResourceName = mapping[1][0];\r\n\r\n\t\t\t\t\t// Skip this if we already shortcut this connection\r\n\t\t\t\t\tif (possibleTargetResourceName.endsWith('$bypass')) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst targetResourceEscaped = sqlNameToODataName(\r\n\t\t\t\t\t\tabstractSqlModel.tables[possibleTargetResourceName]?.name ??\r\n\t\t\t\t\t\t\tpossibleTargetResourceName,\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\t// This is either a translated or bypassed resource we don't\r\n\t\t\t\t\t// mess with these\r\n\t\t\t\t\tif (targetResourceEscaped.includes('$')) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet foundCanAccessLink = false;\r\n\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tconst odata = memoizedParseOdata(`/${targetResourceEscaped}`);\r\n\r\n\t\t\t\t\t\tconst collapsedPermissionFilters = buildODataPermission(\r\n\t\t\t\t\t\t\tpermissionsLookup,\r\n\t\t\t\t\t\t\tmethodPermissions.GET,\r\n\t\t\t\t\t\t\tvocabulary,\r\n\t\t\t\t\t\t\ttargetResourceEscaped,\r\n\t\t\t\t\t\t\todata,\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t_.set(\r\n\t\t\t\t\t\t\todata,\r\n\t\t\t\t\t\t\t['tree', 'options', '$filter'],\r\n\t\t\t\t\t\t\tcollapsedPermissionFilters,\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tconst canAccessFunction: ResourceFunction = function (\r\n\t\t\t\t\t\t\tproperty: AnyObject,\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t// remove method property so that we won't loop back here again at this point\r\n\t\t\t\t\t\t\tdelete property.method;\r\n\r\n\t\t\t\t\t\t\tif (!this.defaultResource) {\r\n\t\t\t\t\t\t\t\tthrow new Error(`No resource selected in AST.`);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tconst targetResourceAST = this.NavigateResources(\r\n\t\t\t\t\t\t\t\tthis.defaultResource,\r\n\t\t\t\t\t\t\t\tproperty.name,\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tconst targetResourceName = sqlNameToODataName(\r\n\t\t\t\t\t\t\t\ttargetResourceAST.resource.name,\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tconst currentResourceName = sqlNameToODataName(\r\n\t\t\t\t\t\t\t\tthis.defaultResource.name,\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\tcurrentResourceName === targetResourceEscaped &&\r\n\t\t\t\t\t\t\t\ttargetResourceName === escapedName\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\tfoundCanAccessLink = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// return a true expression to not select the relationship, which might be virtual\r\n\t\t\t\t\t\t\t// this should be a boolean expression, but needs to be a subquery in case it\r\n\t\t\t\t\t\t\t// is wrapped in an `or` or `and`\r\n\t\t\t\t\t\t\treturn ['Equals', ['Boolean', true], ['Boolean', true]];\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t// We need execute the abstract SQL compiler to traverse\r\n\t\t\t\t\t\t\t// through the permissions for that resource, using a\r\n\t\t\t\t\t\t\t// special canAccess callback.\r\n\t\t\t\t\t\t\todata2AbstractSQL.match(\r\n\t\t\t\t\t\t\t\todata.tree,\r\n\t\t\t\t\t\t\t\t'GET',\r\n\t\t\t\t\t\t\t\t[],\r\n\t\t\t\t\t\t\t\todata.binds.length,\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tcanAccess: canAccessFunction,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\tthrow new ODataParser.SyntaxError(e);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (foundCanAccessLink) {\r\n\t\t\t\t\t\t\t// store the resource name as it was with a $bypass\r\n\t\t\t\t\t\t\t// suffix in this relationship, this means that the\r\n\t\t\t\t\t\t\t// query generator will use the plain resource instead\r\n\t\t\t\t\t\t\t// of the filtered resource.\r\n\t\t\t\t\t\t\tmapping[1][0] = `${possibleTargetResourceName}$bypass`;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\tif (e === constrainedPermissionError) {\r\n\t\t\t\t\t\t\t// ignore\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// TODO: We should investigate in detail why this error\r\n\t\t\t\t\t\t// occurse. It might be able to get rid of this.\r\n\t\t\t\t\t\tif (e instanceof ODataParser.SyntaxError) {\r\n\t\t\t\t\t\t\t// ignore\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthrow e;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (Array.isArray(object) || _.isObject(object)) {\r\n\t\t\t\t_.forEach(object, (v) => {\r\n\t\t\t\t\t// we want to recurse into the relationship path, but\r\n\t\t\t\t\t// in case we hit a plain string, we don't need to bother\r\n\t\t\t\t\t// checking it. This can happen since plain terms also have\r\n\t\t\t\t\t// relationships to sbvr-types.\r\n\t\t\t\t\tif (typeof v !== 'string') {\r\n\t\t\t\t\t\trewrite(v as Relationship | RelationshipMapping);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\trewrite(value);\r\n\t},\r\n);\r\n\r\nconst rewriteRelationships = (\r\n\tabstractSqlModel: AbstractSqlModel,\r\n\trelationships: {\r\n\t\t[resourceName: string]: RelationshipInternalNode;\r\n\t},\r\n\tpermissionsLookup: PermissionLookup,\r\n\tvocabulary: string,\r\n): typeof relationships => {\r\n\tconst originalAbstractSQLModel = sbvrUtils.getAbstractSqlModel({\r\n\t\tvocabulary,\r\n\t});\r\n\r\n\tconst odata2AbstractSQL = memoizedGetOData2AbstractSQL(\r\n\t\toriginalAbstractSQLModel,\r\n\t);\r\n\r\n\tconst newRelationships = _.cloneDeep(relationships);\r\n\t_.forOwn(newRelationships, (value, name) =>\r\n\t\trewriteRelationship(\r\n\t\t\tvalue,\r\n\t\t\tname,\r\n\t\t\tabstractSqlModel,\r\n\t\t\tpermissionsLookup,\r\n\t\t\tvocabulary,\r\n\t\t\todata2AbstractSQL,\r\n\t\t),\r\n\t);\r\n\r\n\treturn newRelationships;\r\n};\r\n\r\nconst stringifiedGetPermissions = JSON.stringify(methodPermissions.GET);\r\nconst getBoundConstrainedMemoizer = memoizeWeak(\r\n\t(abstractSqlModel: AbstractSqlModel) =>\r\n\t\tmemoizeWeak(\r\n\t\t\t(permissionsLookup: PermissionLookup, vocabulary: string) => {\r\n\t\t\t\tconst constrainedAbstractSqlModel = _.cloneDeep(abstractSqlModel);\r\n\r\n\t\t\t\tconst origSynonyms = Object.keys(constrainedAbstractSqlModel.synonyms);\r\n\t\t\t\tconstrainedAbstractSqlModel.synonyms = new Proxy(\r\n\t\t\t\t\tconstrainedAbstractSqlModel.synonyms,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tget: (synonyms, permissionSynonym: string) => {\r\n\t\t\t\t\t\t\tif (synonyms[permissionSynonym]) {\r\n\t\t\t\t\t\t\t\treturn synonyms[permissionSynonym];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tconst alias = getAlias(permissionSynonym);\r\n\t\t\t\t\t\t\tif (!alias) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\torigSynonyms.forEach((canonicalForm, synonym) => {\r\n\t\t\t\t\t\t\t\tsynonyms[`${synonym}$${alias}`] = `${canonicalForm}$${alias}`;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\treturn synonyms[permissionSynonym];\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconst origRelationships = Object.keys(\r\n\t\t\t\t\tconstrainedAbstractSqlModel.relationships,\r\n\t\t\t\t);\r\n\r\n\t\t\t\t_.forEach(constrainedAbstractSqlModel.tables, (table, resourceName) => {\r\n\t\t\t\t\tconst bypassResourceName = `${resourceName}$bypass`;\r\n\t\t\t\t\tconstrainedAbstractSqlModel.tables[bypassResourceName] = {\r\n\t\t\t\t\t\t...table,\r\n\t\t\t\t\t};\r\n\t\t\t\t\tconstrainedAbstractSqlModel.tables[bypassResourceName].resourceName =\r\n\t\t\t\t\t\tbypassResourceName;\r\n\t\t\t\t\tif (table.definition) {\r\n\t\t\t\t\t\t// If the table is definition based then just make the bypass version match but pointing to the equivalent bypassed resources\r\n\t\t\t\t\t\tconstrainedAbstractSqlModel.tables[bypassResourceName].definition =\r\n\t\t\t\t\t\t\tcreateBypassDefinition(table.definition);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Otherwise constrain the non-bypass table\r\n\t\t\t\t\t\tonceGetter(\r\n\t\t\t\t\t\t\ttable,\r\n\t\t\t\t\t\t\t'definition',\r\n\t\t\t\t\t\t\t() =>\r\n\t\t\t\t\t\t\t\t// For $filter on eg a DELETE you need read permissions on the sub-resources,\r\n\t\t\t\t\t\t\t\t// you only need delete permissions on the resource being deleted\r\n\t\t\t\t\t\t\t\tconstrainedAbstractSqlModel.tables[\r\n\t\t\t\t\t\t\t\t\t`${resourceName}$permissions${stringifiedGetPermissions}`\r\n\t\t\t\t\t\t\t\t].definition,\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tconstrainedAbstractSqlModel.tables = new Proxy(\r\n\t\t\t\t\tconstrainedAbstractSqlModel.tables,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tget: (tables, permissionResourceName: string) => {\r\n\t\t\t\t\t\t\tif (tables[permissionResourceName]) {\r\n\t\t\t\t\t\t\t\treturn tables[permissionResourceName];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tconst [resourceName, permissionsJSON] =\r\n\t\t\t\t\t\t\t\tpermissionResourceName.split('$permissions');\r\n\t\t\t\t\t\t\tif (!permissionsJSON) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tconst permissions = JSON.parse(permissionsJSON);\r\n\r\n\t\t\t\t\t\t\tconst table = tables[`${resourceName}$bypass`];\r\n\r\n\t\t\t\t\t\t\tconst permissionsTable = (tables[permissionResourceName] = {\r\n\t\t\t\t\t\t\t\t...table,\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tpermissionsTable.resourceName = permissionResourceName;\r\n\t\t\t\t\t\t\tonceGetter(permissionsTable, 'definition', () =>\r\n\t\t\t\t\t\t\t\t// For $filter on eg a DELETE you need read permissions on the sub-resources,\r\n\t\t\t\t\t\t\t\t// you only need delete permissions on the resource being deleted\r\n\t\t\t\t\t\t\t\tgenerateConstrainedAbstractSql(\r\n\t\t\t\t\t\t\t\t\tpermissionsLookup,\r\n\t\t\t\t\t\t\t\t\tpermissions,\r\n\t\t\t\t\t\t\t\t\tvocabulary,\r\n\t\t\t\t\t\t\t\t\tsqlNameToODataName(permissionsTable.name),\r\n\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\treturn permissionsTable;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// rewrite the relationships of the constraint model\r\n\t\t\t\t// we check if given the current permissions we can direct\r\n\t\t\t\t// expands and filters to unconstraint resources\r\n\t\t\t\tconstrainedAbstractSqlModel.relationships = rewriteRelationships(\r\n\t\t\t\t\tconstrainedAbstractSqlModel,\r\n\t\t\t\t\tconstrainedAbstractSqlModel.relationships,\r\n\t\t\t\t\tpermissionsLookup,\r\n\t\t\t\t\tvocabulary,\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconstrainedAbstractSqlModel.relationships = new Proxy(\r\n\t\t\t\t\tconstrainedAbstractSqlModel.relationships,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tget: (relationships, permissionResourceName: string) => {\r\n\t\t\t\t\t\t\tif (relationships[permissionResourceName]) {\r\n\t\t\t\t\t\t\t\treturn relationships[permissionResourceName];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tconst alias = getAlias(permissionResourceName);\r\n\t\t\t\t\t\t\tif (!alias) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfor (const relationship of origRelationships) {\r\n\t\t\t\t\t\t\t\trelationships[`${relationship}$${alias}`] =\r\n\t\t\t\t\t\t\t\t\trelationships[relationship];\r\n\t\t\t\t\t\t\t\tnamespaceRelationships(relationships[relationship], alias);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn relationships[permissionResourceName];\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t);\r\n\t\t\t\tdeepFreezeExceptDefinition(constrainedAbstractSqlModel);\r\n\t\t\t\treturn constrainedAbstractSqlModel;\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tprimitive: true,\r\n\t\t\t},\r\n\t\t),\r\n);\r\nconst memoizedGetConstrainedModel = (\r\n\tabstractSqlModel: AbstractSqlModel,\r\n\tpermissionsLookup: PermissionLookup,\r\n\tvocabulary: string,\r\n) =>\r\n\tgetBoundConstrainedMemoizer(abstractSqlModel)(permissionsLookup, vocabulary);\r\n\r\nconst getCheckPasswordQuery = _.once(() =>\r\n\tsbvrUtils.api.Auth.prepare<{ username: string }>({\r\n\t\tresource: 'user',\r\n\t\tpassthrough: {\r\n\t\t\treq: rootRead,\r\n\t\t},\r\n\t\tid: {\r\n\t\t\tusername: { '@': 'username' },\r\n\t\t},\r\n\t\toptions: {\r\n\t\t\t$select: ['id', 'actor', 'password'],\r\n\t\t},\r\n\t}),\r\n);\r\nexport const checkPassword = async (\r\n\tusername: string,\r\n\tpassword: string,\r\n): Promise<{\r\n\tid: number;\r\n\tactor: number;\r\n\tusername: string;\r\n\tpermissions: string[];\r\n}> => {\r\n\tconst user = await getCheckPasswordQuery()({\r\n\t\tusername,\r\n\t});\r\n\tif (user == null) {\r\n\t\tthrow new Error('User not found');\r\n\t}\r\n\tconst hash = user.password;\r\n\tconst userId = user.id;\r\n\tconst actorId = user.actor;\r\n\tconst res = await sbvrUtils.sbvrTypes.Hashed.compare(password, hash);\r\n\tif (!res) {\r\n\t\tthrow new Error('Passwords do not match');\r\n\t}\r\n\tconst permissions = await getUserPermissions(userId);\r\n\treturn {\r\n\t\tid: userId,\r\n\t\tactor: actorId,\r\n\t\tusername,\r\n\t\tpermissions,\r\n\t};\r\n};\r\n\r\nconst getUserPermissionsQuery = _.once(() =>\r\n\tsbvrUtils.api.Auth.prepare<{ userId: number }>({\r\n\t\tresource: 'permission',\r\n\t\tpassthrough: {\r\n\t\t\treq: rootRead,\r\n\t\t},\r\n\t\toptions: {\r\n\t\t\t$select: 'name',\r\n\t\t\t$filter: {\r\n\t\t\t\t$or: {\r\n\t\t\t\t\tis_of__user: {\r\n\t\t\t\t\t\t$any: {\r\n\t\t\t\t\t\t\t$alias: 'uhp',\r\n\t\t\t\t\t\t\t$expr: {\r\n\t\t\t\t\t\t\t\tuhp: { user: { '@': 'userId' } },\r\n\t\t\t\t\t\t\t\t$or: [\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tuhp: { expiry_date: null },\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tuhp: {\r\n\t\t\t\t\t\t\t\t\t\t\texpiry_date: { $gt: { $now: null } },\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t\tis_of__role: {\r\n\t\t\t\t\t\t$any: {\r\n\t\t\t\t\t\t\t$alias: 'rhp',\r\n\t\t\t\t\t\t\t$expr: {\r\n\t\t\t\t\t\t\t\trhp: {\r\n\t\t\t\t\t\t\t\t\trole: {\r\n\t\t\t\t\t\t\t\t\t\t$any: {\r\n\t\t\t\t\t\t\t\t\t\t\t$alias: 'r',\r\n\t\t\t\t\t\t\t\t\t\t\t$expr: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tr: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tis_of__user: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$any: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$alias: 'uhr',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$expr: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tuhr: { user: { '@': 'userId' } },\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$or: [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tuhr: { expiry_date: null },\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tuhr: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\texpiry_date: { $gt: { $now: null } },\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t// We orderby to increase the hit rate for the `_checkPermissions` memoisation\r\n\t\t\t$orderby: {\r\n\t\t\t\tname: 'asc',\r\n\t\t\t},\r\n\t\t},\r\n\t}),\r\n);\r\nexport const getUserPermissions = async (userId: number): Promise<string[]> => {\r\n\tif (typeof userId === 'string') {\r\n\t\tuserId = parseInt(userId, 10);\r\n\t}\r\n\tif (!Number.isFinite(userId)) {\r\n\t\tthrow new Error(`User ID has to be numeric, got: ${typeof userId}`);\r\n\t}\r\n\ttry {\r\n\t\tconst permissions = (await getUserPermissionsQuery()({\r\n\t\t\tuserId,\r\n\t\t})) as Array<{ name: string }>;\r\n\t\treturn permissions.map((permission) => permission.name);\r\n\t} catch (err) {\r\n\t\tsbvrUtils.api.Auth.logger.error('Error loading user permissions', err);\r\n\t\tthrow err;\r\n\t}\r\n};\r\n\r\nconst getApiKeyPermissionsQuery = _.once(() =>\r\n\tsbvrUtils.api.Auth.prepare<{ apiKey: string }>({\r\n\t\tresource: 'permission',\r\n\t\tpassthrough: {\r\n\t\t\treq: rootRead,\r\n\t\t},\r\n\t\toptions: {\r\n\t\t\t$select: 'name',\r\n\t\t\t$filter: {\r\n\t\t\t\t$or: {\r\n\t\t\t\t\tis_of__api_key: {\r\n\t\t\t\t\t\t$any: {\r\n\t\t\t\t\t\t\t$alias: 'khp',\r\n\t\t\t\t\t\t\t$expr: {\r\n\t\t\t\t\t\t\t\tkhp: {\r\n\t\t\t\t\t\t\t\t\tapi_key: {\r\n\t\t\t\t\t\t\t\t\t\t$any: {\r\n\t\t\t\t\t\t\t\t\t\t\t$alias: 'k',\r\n\t\t\t\t\t\t\t\t\t\t\t$expr: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tk: { key: { '@': 'apiKey' } },\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t\tis_of__role: {\r\n\t\t\t\t\t\t$any: {\r\n\t\t\t\t\t\t\t$alias: 'rhp',\r\n\t\t\t\t\t\t\t$expr: {\r\n\t\t\t\t\t\t\t\trhp: {\r\n\t\t\t\t\t\t\t\t\trole: {\r\n\t\t\t\t\t\t\t\t\t\t$any: {\r\n\t\t\t\t\t\t\t\t\t\t\t$alias: 'r',\r\n\t\t\t\t\t\t\t\t\t\t\t$expr: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tr: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tis_of__api_key: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$any: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$alias: 'khr',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$expr: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkhr: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tapi_key: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$any: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$alias: 'k',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$expr: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tk: { key: { '@': 'apiKey' } },\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t// We orderby to increase the hit rate for the `_checkPermissions` memoisation\r\n\t\t\t$orderby: {\r\n\t\t\t\tname: 'asc',\r\n\t\t\t},\r\n\t\t},\r\n\t}),\r\n);\r\nexport const getApiKeyPermissions = async (\r\n\tapiKey: string,\r\n): Promise<string[]> => {\r\n\tif (typeof apiKey !== 'string') {\r\n\t\tthrow new Error('API key has to be a string, got: ' + typeof apiKey);\r\n\t}\r\n\ttry {\r\n\t\tconst permissions = (await getApiKeyPermissionsQuery()({\r\n\t\t\tapiKey,\r\n\t\t})) as Array<{ name: string }>;\r\n\t\treturn permissions.map((permission) => permission.name);\r\n\t} catch (err) {\r\n\t\tsbvrUtils.api.Auth.logger.error('Error loading api key permissions', err);\r\n\t\tthrow err;\r\n\t}\r\n};\r\n\r\nconst getApiKeyActorIdQuery = _.once(() =>\r\n\tsbvrUtils.api.Auth.prepare<{ apiKey: string }>({\r\n\t\tresource: 'api_key',\r\n\t\tpassthrough: {\r\n\t\t\treq: rootRead,\r\n\t\t},\r\n\t\tid: {\r\n\t\t\tkey: { '@': 'apiKey' },\r\n\t\t},\r\n\t\toptions: {\r\n\t\t\t$select: 'is_of__actor',\r\n\t\t},\r\n\t}),\r\n);\r\nconst apiActorPermissionError = new PermissionError();\r\nconst getApiKeyActorId = async (apiKey: string) => {\r\n\tconst apiKeyResult = await getApiKeyActorIdQuery()({\r\n\t\tapiKey,\r\n\t});\r\n\tif (apiKeyResult == null) {\r\n\t\t// We reuse a constant permission error here as it will be cached, and\r\n\t\t// using a single error instance can drastically reduce the memory used\r\n\t\tthrow apiActorPermissionError;\r\n\t}\r\n\tconst apiKeyActorID = apiKeyResult.is_of__actor.__id;\r\n\tif (apiKeyActorID == null) {\r\n\t\tthrow new Error('API key is not linked to a actor?!');\r\n\t}\r\n\treturn apiKeyActorID as number;\r\n};\r\n\r\nconst checkApiKey = async (\r\n\treq: PermissionReq,\r\n\tapiKey: string,\r\n): Promise<PermissionReq['apiKey']> => {\r\n\tif (apiKey == null || req.apiKey != null) {\r\n\t\treturn;\r\n\t}\r\n\tlet permissions: string[];\r\n\ttry {\r\n\t\tpermissions = await getApiKeyPermissions(apiKey);\r\n\t} catch (err) {\r\n\t\tconsole.warn('Error with API key:', err);\r\n\t\t// Ignore errors getting the api key and just use an empty permissions object.\r\n\t\tpermissions = [];\r\n\t}\r\n\tlet actor;\r\n\tif (permissions.length > 0) {\r\n\t\tactor = await getApiKeyActorId(apiKey);\r\n\t}\r\n\tconst resolvedApiKey: PermissionReq['apiKey'] = {\r\n\t\tkey: apiKey,\r\n\t\tpermissions,\r\n\t};\r\n\tif (actor != null) {\r\n\t\tresolvedApiKey.actor = actor;\r\n\t}\r\n\treturn resolvedApiKey;\r\n};\r\n\r\nexport const resolveAuthHeader = async (\r\n\treq: Express.Request,\r\n\texpectedScheme = 'Bearer',\r\n): Promise<PermissionReq['apiKey']> => {\r\n\tconst auth = req.header('Authorization');\r\n\tif (!auth) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst parts = auth.split(' ');\r\n\tif (parts.length !== 2) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst [scheme, apiKey] = parts;\r\n\tif (scheme.toLowerCase() !== expectedScheme.toLowerCase()) {\r\n\t\treturn;\r\n\t}\r\n\r\n\treturn await checkApiKey(req, apiKey);\r\n};\r\n\r\nexport const customAuthorizationMiddleware = (expectedScheme = 'Bearer') => {\r\n\texpectedScheme = expectedScheme.toLowerCase();\r\n\treturn async (\r\n\t\treq: Express.Request,\r\n\t\t_res?: Express.Response,\r\n\t\tnext?: Express.NextFunction,\r\n\t): Promise<void> => {\r\n\t\ttry {\r\n\t\t\tconst apiKey = await resolveAuthHeader(req, expectedScheme);\r\n\t\t\tif (apiKey) {\r\n\t\t\t\treq.apiKey = apiKey;\r\n\t\t\t}\r\n\t\t} finally {\r\n\t\t\tnext?.();\r\n\t\t}\r\n\t};\r\n};\r\n\r\n// A default bearer middleware for convenience\r\nexport const authorizationMiddleware = customAuthorizationMiddleware();\r\n\r\nexport const resolveApiKey = async (\r\n\treq: HookReq | Express.Request,\r\n\tparamName = 'apikey',\r\n): Promise<PermissionReq['apiKey']> => {\r\n\tconst apiKey =\r\n\t\treq.params[paramName] != null\r\n\t\t\t? req.params[paramName]\r\n\t\t\t: req.body[paramName] != null\r\n\t\t\t? req.body[paramName]\r\n\t\t\t: req.query[paramName];\r\n\treturn await checkApiKey(req, apiKey);\r\n};\r\n\r\nexport const customApiKeyMiddleware = (paramName = 'apikey') => {\r\n\tif (paramName == null) {\r\n\t\tparamName = 'apikey';\r\n\t}\r\n\treturn async (\r\n\t\treq: HookReq | Express.Request,\r\n\t\t_res?: Express.Response,\r\n\t\tnext?: Express.NextFunction,\r\n\t): Promise<void> => {\r\n\t\ttry {\r\n\t\t\tconst apiKey = await resolveApiKey(req, paramName);\r\n\t\t\tif (apiKey) {\r\n\t\t\t\treq.apiKey = apiKey;\r\n\t\t\t}\r\n\t\t} finally {\r\n\t\t\tnext?.();\r\n\t\t}\r\n\t};\r\n};\r\n\r\n// A default api key middleware for convenience\r\nexport const apiKeyMiddleware = customApiKeyMiddleware();\r\n\r\nexport const checkPermissions = async (\r\n\treq: PermissionReq,\r\n\tactionList: PermissionCheck,\r\n\tresourceName?: string,\r\n\tvocabulary?: string,\r\n) => {\r\n\tconst permissionsLookup = await getReqPermissions(req);\r\n\treturn $checkPermissions(\r\n\t\tpermissionsLookup,\r\n\t\tactionList,\r\n\t\tvocabulary,\r\n\t\tresourceName,\r\n\t);\r\n};\r\n\r\nexport const checkPermissionsMiddleware =\r\n\t(action: PermissionCheck): Express.RequestHandler =>\r\n\tasync (req, res, next) => {\r\n\t\ttry {\r\n\t\t\tconst allowed = await checkPermissions(req, action);\r\n\t\t\tswitch (allowed) {\r\n\t\t\t\tcase false:\r\n\t\t\t\t\tres.sendStatus(401);\r\n\t\t\t\t\treturn;\r\n\t\t\t\tcase true:\r\n\t\t\t\t\tnext();\r\n\t\t\t\t\treturn;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error(\r\n\t\t\t\t\t\t'checkPermissionsMiddleware returned a conditional permission',\r\n\t\t\t\t\t);\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tsbvrUtils.api.Auth.logger.error(\r\n\t\t\t\t'Error checking permissions',\r\n\t\t\t\terr,\r\n\t\t\t\terr.stack,\r\n\t\t\t);\r\n\t\t\tres.sendStatus(503);\r\n\t\t}\r\n\t};\r\n\r\nconst getGuestPermissions = memoize(\r\n\tasync () => {\r\n\t\t// Get guest user\r\n\t\tconst result = (await sbvrUtils.api.Auth.get({\r\n\t\t\tresource: 'user',\r\n\t\t\tpassthrough: {\r\n\t\t\t\treq: rootRead,\r\n\t\t\t},\r\n\t\t\tid: {\r\n\t\t\t\tusername: 'guest',\r\n\t\t\t},\r\n\t\t\toptions: {\r\n\t\t\t\t$select: 'id',\r\n\t\t\t},\r\n\t\t})) as { id: number } | undefined;\r\n\t\tif (result == null) {\r\n\t\t\tthrow new Error('No guest user');\r\n\t\t}\r\n\t\treturn _.uniq(await getUserPermissions(result.id));\r\n\t},\r\n\t{ promise: true },\r\n);\r\n\r\nconst getReqPermissions = async (\r\n\treq: PermissionReq,\r\n\todataBinds: ODataBinds = [],\r\n) => {\r\n\tconst [guestPermissions] = await Promise.all([\r\n\t\tgetGuestPermissions(),\r\n\t\t(async () => {\r\n\t\t\t// TODO: Remove this extra actor ID lookup making actor non-optional and updating open-balena-api.\r\n\t\t\tif (\r\n\t\t\t\treq.apiKey != null &&\r\n\t\t\t\treq.apiKey.actor == null &&\r\n\t\t\t\treq.apiKey.permissions != null &&\r\n\t\t\t\treq.apiKey.permissions.length > 0\r\n\t\t\t) {\r\n\t\t\t\tconst actorId = await getApiKeyActorId(req.apiKey.key);\r\n\t\t\t\treq.apiKey!.actor = actorId;\r\n\t\t\t}\r\n\t\t})(),\r\n\t]);\r\n\r\n\tif (guestPermissions.some((p) => DEFAULT_ACTOR_BIND_REGEX.test(p))) {\r\n\t\tthrow new Error('Guest permissions cannot reference actors');\r\n\t}\r\n\r\n\tlet permissions = guestPermissions;\r\n\r\n\tlet actorIndex = 0;\r\n\tconst addActorPermissions = (actorId: number, actorPermissions: string[]) => {\r\n\t\tlet actorBind = DEFAULT_ACTOR_BIND;\r\n\t\tif (actorIndex > 0) {\r\n\t\t\tactorBind += actorIndex;\r\n\t\t\tactorPermissions = actorPermissions.map((actorPermission) =>\r\n\t\t\t\tactorPermission.replace(DEFAULT_ACTOR_BIND_REGEX, actorBind),\r\n\t\t\t);\r\n\t\t}\r\n\t\todataBinds[actorBind] = ['Real', actorId];\r\n\t\tactorIndex++;\r\n\t\tpermissions = permissions.concat(actorPermissions);\r\n\t};\r\n\r\n\tif (req.user != null && req.user.permissions != null) {\r\n\t\taddActorPermissions(req.user.actor, req.user.permissions);\r\n\t} else if (req.apiKey != null && req.apiKey.permissions != null) {\r\n\t\taddActorPermissions(req.apiKey.actor!, req.apiKey.permissions);\r\n\t}\r\n\r\n\tpermissions = _.uniq(permissions);\r\n\r\n\treturn getPermissionsLookup(permissions);\r\n};\r\n\r\nexport const addPermissions = async (\r\n\treq: PermissionReq,\r\n\trequest: ODataRequest & { permissionType?: PermissionCheck },\r\n): Promise<void> => {\r\n\tconst { vocabulary, resourceName, odataQuery, odataBinds } = request;\r\n\tlet { method } = request;\r\n\tlet abstractSqlModel = sbvrUtils.getAbstractSqlModel(request);\r\n\tmethod = method.toUpperCase() as SupportedMethod;\r\n\tconst isMetadataEndpoint =\r\n\t\tmetadataEndpoints.includes(resourceName) || method === 'OPTIONS';\r\n\r\n\tlet permissionType: PermissionCheck;\r\n\tif (request.permissionType != null) {\r\n\t\tpermissionType = request.permissionType;\r\n\t} else if (isMetadataEndpoint) {\r\n\t\tpermissionType = 'model';\r\n\t} else {\r\n\t\tconst methodPermission = methodPermissions[method];\r\n\t\tif (methodPermission != null) {\r\n\t\t\tpermissionType = methodPermission;\r\n\t\t} else {\r\n\t\t\tconsole.warn('Unknown method for permissions type check: ', method);\r\n\t\t\tpermissionType = 'all';\r\n\t\t}\r\n\t}\r\n\r\n\t// This bypasses in the root cases, needed for fetching guest permissions to work, it can almost certainly be done better though\r\n\tlet permissions = req.user?.permissions ?? [];\r\n\tpermissions = permissions.concat(req.apiKey?.permissions ?? []);\r\n\tif (\r\n\t\tpermissions.length > 0 &&\r\n\t\t$checkPermissions(\r\n\t\t\tgetPermissionsLookup(permissions),\r\n\t\t\tpermissionType,\r\n\t\t\tvocabulary,\r\n\t\t) === true\r\n\t) {\r\n\t\t// We have unconditional permission to access the vocab so there's no need to intercept anything\r\n\t\treturn;\r\n\t}\r\n\tconst permissionsLookup = await getReqPermissions(req, odataBinds);\r\n\t// Update the request's abstract sql model to use the constrained version\r\n\trequest.abstractSqlModel = abstractSqlModel = memoizedGetConstrainedModel(\r\n\t\tabstractSqlModel,\r\n\t\tpermissionsLookup,\r\n\t\tvocabulary,\r\n\t);\r\n\r\n\tif (!_.isEqual(permissionType, methodPermissions.GET)) {\r\n\t\tconst sqlName = sbvrUtils.resolveSynonym(request);\r\n\t\todataQuery.resource = `${sqlName}$permissions${JSON.stringify(\r\n\t\t\tpermissionType,\r\n\t\t)}`;\r\n\t}\r\n};\r\n\r\nexport const config = {\r\n\tmodels: [\r\n\t\t{\r\n\t\t\tapiRoot: 'Auth',\r\n\t\t\tmodelText: userModel,\r\n\t\t\tcustomServerCode: exports,\r\n\t\t\tmigrations: {\r\n\t\t\t\t'11.0.0-modified-at': `\r\n\t\t\t\t\tALTER TABLE \"actor\"\r\n\t\t\t\t\tADD COLUMN IF NOT EXISTS \"modified at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL;\r\n\r\n\t\t\t\t\tALTER TABLE \"api key\"\r\n\t\t\t\t\tADD COLUMN IF NOT EXISTS \"modified at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL;\r\n\t\t\t\t\tALTER TABLE \"api key-has-permission\"\r\n\t\t\t\t\tADD COLUMN IF NOT EXISTS \"modified at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL;\r\n\t\t\t\t\tALTER TABLE \"api key-has-role\"\r\n\t\t\t\t\tADD COLUMN IF NOT EXISTS \"modified at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL;\r\n\r\n\t\t\t\t\tALTER TABLE \"permission\"\r\n\t\t\t\t\tADD COLUMN IF NOT EXISTS \"modified at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL;\r\n\r\n\t\t\t\t\tALTER TABLE \"role\"\r\n\t\t\t\t\tADD COLUMN IF NOT EXISTS \"modified at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL;\r\n\r\n\t\t\t\t\tALTER TABLE \"user\"\r\n\t\t\t\t\tADD COLUMN IF NOT EXISTS \"modified at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL;\r\n\t\t\t\t\tALTER TABLE \"user-has-role\"\r\n\t\t\t\t\tADD COLUMN IF NOT EXISTS \"modified at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL;\r\n\t\t\t\t\tALTER TABLE \"user-has-permission\"\r\n\t\t\t\t\tADD COLUMN IF NOT EXISTS \"modified at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL;\r\n\t\t\t\t`,\r\n\t\t\t\t'11.0.1-modified-at': `\r\n\t\t\t\t\tALTER TABLE \"role-has-permission\"\r\n\t\t\t\t\tADD COLUMN IF NOT EXISTS \"modified at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL;\r\n\t\t\t\t`,\r\n\t\t\t},\r\n\t\t},\r\n\t] as sbvrUtils.ExecutableModel[],\r\n};\r\nexport const setup = () => {\r\n\taddHook('all', 'all', 'all', {\r\n\t\tsideEffects: false,\r\n\t\treadOnlyTx: true,\r\n\t\tPREPARSE: ({ req }) => apiKeyMiddleware(req),\r\n\t\tPOSTPARSE: async ({\r\n\t\t\treq,\r\n\t\t\trequest,\r\n\t\t}: {\r\n\t\t\treq: HookReq;\r\n\t\t\trequest: ODataRequest & { permissionType?: PermissionCheck };\r\n\t\t}) => {\r\n\t\t\t// If the abstract sql query is already generated then adding permissions will do nothing\r\n\t\t\tif (request.abstractSqlQuery != null) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (\r\n\t\t\t\trequest.method === 'POST' &&\r\n\t\t\t\trequest.odataQuery.property != null &&\r\n\t\t\t\trequest.odataQuery.property.resource === 'canAccess'\r\n\t\t\t) {\r\n\t\t\t\tif (request.odataQuery.key == null) {\r\n\t\t\t\t\tthrow new BadRequestError();\r\n\t\t\t\t}\r\n\t\t\t\tconst { action, method } = request.values;\r\n\t\t\t\tif ((method == null) === (action == null)) {\r\n\t\t\t\t\t// Exactly one of method or action are allowed\r\n\t\t\t\t\tthrow new BadRequestError();\r\n\t\t\t\t}\r\n\t\t\t\tif (method != null) {\r\n\t\t\t\t\tconst permissions = methodPermissions[method as SupportedMethod];\r\n\t\t\t\t\tif (permissions == null) {\r\n\t\t\t\t\t\tthrow new BadRequestError();\r\n\t\t\t\t\t}\r\n\t\t\t\t\trequest.permissionType = permissions;\r\n\t\t\t\t} else {\r\n\t\t\t\t\trequest.permissionType = action;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst abstractSqlModel = sbvrUtils.getAbstractSqlModel(request);\r\n\t\t\t\trequest.resourceName = request.resourceName.slice(\r\n\t\t\t\t\t0,\r\n\t\t\t\t\t-'#canAccess'.length,\r\n\t\t\t\t);\r\n\t\t\t\tconst resourceName = sbvrUtils.resolveSynonym(request);\r\n\t\t\t\tconst resourceTable = abstractSqlModel.tables[resourceName];\r\n\t\t\t\tif (resourceTable == null) {\r\n\t\t\t\t\tthrow new Error('Unknown resource: ' + request.resourceName);\r\n\t\t\t\t}\r\n\t\t\t\tconst idField = resourceTable.idField;\r\n\t\t\t\trequest.odataQuery.options = {\r\n\t\t\t\t\t$select: { properties: [{ name: idField }] },\r\n\t\t\t\t\t$top: 1,\r\n\t\t\t\t};\r\n\t\t\t\trequest.odataQuery.resource = request.resourceName;\r\n\t\t\t\tdelete request.odataQuery.property;\r\n\t\t\t\trequest.method = 'GET';\r\n\t\t\t\trequest.custom.isAction = 'canAccess';\r\n\t\t\t}\r\n\t\t\tawait addPermissions(req, request);\r\n\t\t},\r\n\t\tPRERESPOND: ({ request, data }) => {\r\n\t\t\tif (request.custom.isAction === 'canAccess' && _.isEmpty(data)) {\r\n\t\t\t\t// If the caller does not have any permissions to access the\r\n\t\t\t\t// resource pine will throw a PermissionError. To have the\r\n\t\t\t\t// same behavior for the case that the user has permissions\r\n\t\t\t\t// to access the resource, but not this instance we also\r\n\t\t\t\t// throw a PermissionError if the result is empty.\r\n\t\t\t\tthrow new PermissionError();\r\n\t\t\t}\r\n\t\t},\r\n\t});\r\n\r\n\taddPureHook('POST', 'Auth', 'user', {\r\n\t\tPOSTPARSE: async ({ request, api }) => {\r\n\t\t\tconst result = await api.post({\r\n\t\t\t\tresource: 'actor',\r\n\t\t\t\toptions: { returnResource: false },\r\n\t\t\t});\r\n\t\t\trequest.values.actor = result.id;\r\n\t\t},\r\n\t});\r\n\r\n\taddPureHook('DELETE', 'Auth', 'user', {\r\n\t\tPOSTRUN: ({ request, api }) =>\r\n\t\t\tapi.delete({\r\n\t\t\t\tresource: 'actor',\r\n\t\t\t\tid: request.values.actor,\r\n\t\t\t}),\r\n\t});\r\n};\r\n","import type { AnyObject } from './common-types';\n\nimport { TypedError } from 'typed-error';\n\nexport class PermissionError extends TypedError {}\nexport class PermissionParsingError extends TypedError {}\n\nexport class SqlCompilationError extends TypedError {}\nexport class SbvrValidationError extends TypedError {}\n\nexport class TranslationError extends TypedError {}\nexport class ParsingError extends TypedError {}\n\nexport class HttpError extends TypedError {\n\tconstructor(\n\t\tpublic status: number,\n\t\terror: string | Error = '',\n\t\tpublic body?: string | AnyObject,\n\t) {\n\t\tsuper(error);\n\t}\n\n\tpublic getResponseBody() {\n\t\treturn this.body !== undefined ? this.body : this.message;\n\t}\n}\n\nexport class BadRequestError extends HttpError {\n\tconstructor(error?: string | Error, body?: string | AnyObject) {\n\t\tsuper(400, error, body);\n\t}\n}\n\nexport class UnauthorizedError extends HttpError {\n\tconstructor(error?: string | Error, body?: string | AnyObject) {\n\t\tsuper(401, error, body);\n\t}\n}\n\nexport class PaymentRequired extends HttpError {\n\tconstructor(error?: string | Error, body?: string | AnyObject) {\n\t\tsuper(402, error, body);\n\t}\n}\n\nexport class ForbiddenError extends HttpError {\n\tconstructor(error?: string | Error, body?: string | AnyObject) {\n\t\tsuper(403, error, body);\n\t}\n}\n\nexport class NotFoundError extends HttpError {\n\tconstructor(error?: string | Error, body?: string | AnyObject) {\n\t\tsuper(404, error, body);\n\t}\n}\n\nexport class MethodNotAllowedError extends HttpError {\n\tconstructor(error?: string | Error, body?: string | AnyObject) {\n\t\tsuper(405, error, body);\n\t}\n}\n\nexport class NotAcceptableError extends HttpError {\n\tconstructor(error?: string | Error, body?: string | AnyObject) {\n\t\tsuper(406, error, body);\n\t}\n}\n\nexport class ProxyAuthenticationRequiredError extends HttpError {\n\tconstructor(error?: string | Error, body?: string | AnyObject) {\n\t\tsuper(407, error, body);\n\t}\n}\n\nexport class RequestTimeoutError extends HttpError {\n\tconstructor(error?: string | Error, body?: string | AnyObject) {\n\t\tsuper(408, error, body);\n\t}\n}\n\nexport class ConflictError extends HttpError {\n\tconstructor(error?: string | Error, body?: string | AnyObject) {\n\t\tsuper(409, error, body);\n\t}\n}\n\nexport class GoneError extends HttpError {\n\tconstructor(error?: string | Error, body?: string | AnyObject) {\n\t\tsuper(410, error, body);\n\t}\n}\n\nexport class LengthRequiredError extends HttpError {\n\tconstructor(error?: string | Error, body?: string | AnyObject) {\n\t\tsuper(411, error, body);\n\t}\n}\n\nexport class PreconditionFailedError extends HttpError {\n\tconstructor(error?: string | Error, body?: string | AnyObject) {\n\t\tsuper(412, error, body);\n\t}\n}\n\nexport class PayloadTooLargeError extends HttpError {\n\tconstructor(error?: string | Error, body?: string | AnyObject) {\n\t\tsuper(413, error, body);\n\t}\n}\n\nexport class URITooLongError extends HttpError {\n\tconstructor(error?: string | Error, body?: string | AnyObject) {\n\t\tsuper(414, error, body);\n\t}\n}\n\nexport class UnsupportedMediaTypeError extends HttpError {\n\tconstructor(error?: string | Error, body?: string | AnyObject) {\n\t\tsuper(415, error, body);\n\t}\n}\n\nexport class RequestedRangeNotSatisfiableError extends HttpError {\n\tconstructor(error?: string | Error, body?: string | AnyObject) {\n\t\tsuper(416, error, body);\n\t}\n}\n\nexport class ExpectationFailedError extends HttpError {\n\tconstructor(error?: string | Error, body?: string | AnyObject) {\n\t\tsuper(417, error, body);\n\t}\n}\n\nexport class MisdirectedRequestError extends HttpError {\n\tconstructor(error?: string | Error, body?: string | AnyObject) {\n\t\tsuper(421, error, body);\n\t}\n}\n\nexport class UnprocessableEntityError extends HttpError {\n\tconstructor(error?: string | Error, body?: string | AnyObject) {\n\t\tsuper(422, error, body);\n\t}\n}\n\nexport class LockedError extends HttpError {\n\tconstructor(error?: string | Error, body?: string | AnyObject) {\n\t\tsuper(423, error, body);\n\t}\n}\n\nexport class FailedDependencyError extends HttpError {\n\tconstructor(error?: string | Error, body?: string | AnyObject) {\n\t\tsuper(424, error, body);\n\t}\n}\n\nexport class UpgradeRequiredError extends HttpError {\n\tconstructor(error?: string | Error, body?: string | AnyObject) {\n\t\tsuper(426, error, body);\n\t}\n}\n\nexport class PreconditionRequiredError extends HttpError {\n\tconstructor(error?: string | Error, body?: string | AnyObject) {\n\t\tsuper(428, error, body);\n\t}\n}\n\nexport class TooManyRequestsError extends HttpError {\n\tconstructor(error?: string | Error, body?: string | AnyObject) {\n\t\tsuper(429, error, body);\n\t}\n}\n\nexport class RequestHeaderFieldsTooLargeError extends HttpError {\n\tconstructor(error?: string | Error, body?: string | AnyObject) {\n\t\tsuper(431, error, body);\n\t}\n}\n\nexport class UnavailableForLegalReasonsError extends HttpError {\n\tconstructor(error?: string | Error, body?: string | AnyObject) {\n\t\tsuper(451, error, body);\n\t}\n}\n\nexport class InternalRequestError extends HttpError {\n\tconstructor(error?: string | Error, body?: string | AnyObject) {\n\t\tsuper(500, error, body);\n\t}\n}\n\nexport class NotImplementedError extends HttpError {\n\tconstructor(error?: string | Error, body?: string | AnyObject) {\n\t\tsuper(501, error, body);\n\t}\n}\n\nexport class BadGatewayError extends HttpError {\n\tconstructor(error?: string | Error, body?: string | AnyObject) {\n\t\tsuper(502, error, body);\n\t}\n}\n\nexport class ServiceUnavailableError extends HttpError {\n\tconstructor(error?: string | Error, body?: string | AnyObject) {\n\t\tsuper(503, error, body);\n\t}\n}\n\nexport class GatewayTimeoutError extends HttpError {\n\tconstructor(error?: string | Error, body?: string | AnyObject) {\n\t\tsuper(504, error, body);\n\t}\n}\n\nexport class HTTPVersionNotSupportedError extends HttpError {\n\tconstructor(error?: string | Error, body?: string | AnyObject) {\n\t\tsuper(505, error, body);\n\t}\n}\n\nexport class VariantAlsoNegotiatesError extends HttpError {\n\tconstructor(error?: string | Error, body?: string | AnyObject) {\n\t\tsuper(506, error, body);\n\t}\n}\n\nexport class InsufficientStorageError extends HttpError {\n\tconstructor(error?: string | Error, body?: string | AnyObject) {\n\t\tsuper(507, error, body);\n\t}\n}\n\nexport class LoopDetectedError extends HttpError {\n\tconstructor(error?: string | Error, body?: string | AnyObject) {\n\t\tsuper(508, error, body);\n\t}\n}\n\nexport class NotExtendedError extends HttpError {\n\tconstructor(error?: string | Error, body?: string | AnyObject) {\n\t\tsuper(510, error, body);\n\t}\n}\n\nexport class NetworkAuthenticationRequiredError extends HttpError {\n\tconstructor(error?: string | Error, body?: string | AnyObject) {\n\t\tsuper(511, error, body);\n\t}\n}\n\nexport const statusCodeToError = {\n\t400: BadRequestError,\n\t401: UnauthorizedError,\n\t402: PaymentRequired,\n\t403: ForbiddenError,\n\t404: NotFoundError,\n\t405: MethodNotAllowedError,\n\t406: NotAcceptableError,\n\t407: ProxyAuthenticationRequiredError,\n\t408: RequestTimeoutError,\n\t409: ConflictError,\n\t410: GoneError,\n\t411: LengthRequiredError,\n\t412: PreconditionFailedError,\n\t413: PayloadTooLargeError,\n\t414: URITooLongError,\n\t415: UnsupportedMediaTypeError,\n\t416: RequestedRangeNotSatisfiableError,\n\t417: ExpectationFailedError,\n\t421: MisdirectedRequestError,\n\t422: UnprocessableEntityError,\n\t423: LockedError,\n\t424: FailedDependencyError,\n\t426: UpgradeRequiredError,\n\t428: PreconditionRequiredError,\n\t429: TooManyRequestsError,\n\t431: RequestHeaderFieldsTooLargeError,\n\t451: UnavailableForLegalReasonsError,\n\t500: InternalRequestError,\n\t501: NotImplementedError,\n\t502: BadGatewayError,\n\t503: ServiceUnavailableError,\n\t504: GatewayTimeoutError,\n\t505: HTTPVersionNotSupportedError,\n\t506: VariantAlsoNegotiatesError,\n\t507: InsufficientStorageError,\n\t508: LoopDetectedError,\n\t510: NotExtendedError,\n\t511: NetworkAuthenticationRequiredError,\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Array.from : require(\"./shim\");\n","module.exports = require(\"bluebird\");","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.websql = exports.mysql = exports.postgres = exports.compileRule = exports.isResourceNode = exports.isTableNode = exports.isFromNode = exports.Engines = void 0;\nvar Engines;\n(function (Engines) {\n    Engines[\"postgres\"] = \"postgres\";\n    Engines[\"mysql\"] = \"mysql\";\n    Engines[\"websql\"] = \"websql\";\n})(Engines = exports.Engines || (exports.Engines = {}));\nconst AbstractSQLOptimiser_1 = require(\"./AbstractSQLOptimiser\");\nconst AbstractSQLRules2SQL_1 = require(\"./AbstractSQLRules2SQL\");\nconst sbvrTypes = require(\"@balena/sbvr-types\");\nconst _ = require(\"lodash\");\nconst AbstractSQLSchemaOptimiser_1 = require(\"./AbstractSQLSchemaOptimiser\");\nconst referenced_fields_1 = require(\"./referenced-fields\");\nconst validateTypes = _.mapValues(sbvrTypes, ({ validate }) => validate);\nconst dataTypeValidate = async (value, field) => {\n    const { dataType, required } = field;\n    const validateFn = validateTypes[dataType];\n    if (validateFn != null) {\n        return validateFn(value, required);\n    }\n    else {\n        return new Error('is an unsupported type: ' + dataType);\n    }\n};\nconst dataTypeGen = (engine, { dataType, required, index, defaultValue, checks }) => {\n    var _a, _b;\n    let requiredStr;\n    if (required) {\n        requiredStr = ' NOT NULL';\n    }\n    else {\n        requiredStr = ' NULL';\n    }\n    if (defaultValue != null) {\n        defaultValue = ` DEFAULT ${defaultValue}`;\n    }\n    else {\n        defaultValue = '';\n    }\n    let checksString = '';\n    if (checks != null) {\n        checksString = checks\n            .map((check) => {\n            return ` CHECK (${compileRule(check, engine, true)})`;\n        })\n            .join('');\n    }\n    if (index == null) {\n        index = '';\n    }\n    else if (index !== '') {\n        index = ' ' + index;\n    }\n    const dbType = (_b = (_a = sbvrTypes === null || sbvrTypes === void 0 ? void 0 : sbvrTypes[dataType]) === null || _a === void 0 ? void 0 : _a.types) === null || _b === void 0 ? void 0 : _b[engine];\n    if (dbType != null) {\n        if (typeof dbType === 'function') {\n            return dbType(requiredStr, index);\n        }\n        return dbType + defaultValue + requiredStr + checksString + index;\n    }\n    else {\n        throw new Error(`Unknown data type '${dataType}' for engine: ${engine}`);\n    }\n};\nconst isFromNode = (n) => n[0] === 'From';\nexports.isFromNode = isFromNode;\nconst isTableNode = (n) => n[0] === 'Table';\nexports.isTableNode = isTableNode;\nconst isResourceNode = (n) => n[0] === 'Resource';\nexports.isResourceNode = isResourceNode;\nconst containsNode = (n, checkNodeTypeFn) => {\n    if (checkNodeTypeFn(n)) {\n        return true;\n    }\n    for (const p of n) {\n        if (Array.isArray(p) &&\n            containsNode(p, checkNodeTypeFn)) {\n            return true;\n        }\n    }\n    return false;\n};\nfunction compileRule(abstractSQL, engine, noBinds = false) {\n    abstractSQL = AbstractSQLOptimiser_1.AbstractSQLOptimiser(abstractSQL, noBinds);\n    return AbstractSQLRules2SQL_1.AbstractSQLRules2SQL(abstractSQL, engine, noBinds);\n}\nexports.compileRule = compileRule;\nconst compileSchema = (abstractSqlModel, engine, ifNotExists) => {\n    let ifNotExistsStr = '';\n    let orReplaceStr = '';\n    if (ifNotExists) {\n        ifNotExistsStr = 'IF NOT EXISTS ';\n        orReplaceStr = 'OR REPLACE ';\n    }\n    const createSchemaStatements = [];\n    const alterSchemaStatements = [];\n    let dropSchemaStatements = [];\n    const fns = {};\n    if (abstractSqlModel.functions) {\n        for (const fnName of Object.keys(abstractSqlModel.functions)) {\n            const fnDefinition = abstractSqlModel.functions[fnName];\n            if (engine !== \"postgres\") {\n                throw new Error('Functions are only supported on postgres currently');\n            }\n            if (fnDefinition.language !== 'plpgsql') {\n                throw new Error('Only plpgsql functions currently supported');\n            }\n            if (fnDefinition.type !== 'trigger') {\n                throw new Error('Only trigger functions currently supported');\n            }\n            fns[fnName] = true;\n            createSchemaStatements.push(`\\\nDO $$\nBEGIN\n\tPERFORM '\"${fnName}\"()'::regprocedure;\nEXCEPTION WHEN undefined_function THEN\n\tCREATE FUNCTION \"${fnName}\"()\n\tRETURNS TRIGGER AS $fn$\n\tBEGIN\n\t\t${fnDefinition.body}\n\tEND;\n\t$fn$ LANGUAGE ${fnDefinition.language};\nEND;\n$$;`);\n            dropSchemaStatements.push(`DROP FUNCTION \"${fnName}\"();`);\n        }\n    }\n    const hasDependants = {};\n    const schemaDependencyMap = {};\n    Object.keys(abstractSqlModel.tables).forEach((resourceName) => {\n        const table = abstractSqlModel.tables[resourceName];\n        if (typeof table === 'string') {\n            return;\n        }\n        const { definition } = table;\n        if (definition != null) {\n            if (definition.binds != null && definition.binds.length > 0) {\n                return;\n            }\n            let definitionAbstractSql = definition.abstractSql;\n            if (containsNode(definitionAbstractSql, exports.isResourceNode)) {\n                return;\n            }\n            if (exports.isTableNode(definitionAbstractSql)) {\n                definitionAbstractSql = [\n                    'SelectQuery',\n                    ['Select', [['Field', '*']]],\n                    ['From', definitionAbstractSql],\n                ];\n            }\n            schemaDependencyMap[table.resourceName] = {\n                resourceName,\n                primitive: table.primitive,\n                createSQL: [\n                    `\\\nCREATE ${orReplaceStr}VIEW \"${table.name}\" AS (\n${compileRule(definitionAbstractSql, engine, true).replace(/^/gm, '\t')}\n);`,\n                ],\n                dropSQL: [`DROP VIEW \"${table.name}\";`],\n                depends: [],\n            };\n            return;\n        }\n        const foreignKeys = [];\n        const depends = [];\n        const createSqlElements = [];\n        for (const field of table.fields) {\n            const { fieldName, references, dataType, computed } = field;\n            if (!computed) {\n                createSqlElements.push('\"' + fieldName + '\" ' + dataTypeGen(engine, field));\n                if (['ForeignKey', 'ConceptType'].includes(dataType) &&\n                    references != null) {\n                    const referencedTable = abstractSqlModel.tables[references.resourceName];\n                    const fkDefinition = `FOREIGN KEY (\"${fieldName}\") REFERENCES \"${referencedTable.name}\" (\"${references.fieldName}\")`;\n                    const schemaInfo = schemaDependencyMap[references.resourceName];\n                    if (schemaInfo && schemaInfo.depends.includes(table.resourceName)) {\n                        if (engine !== \"postgres\") {\n                            throw new Error('Circular dependencies are only supported on postgres currently');\n                        }\n                        alterSchemaStatements.push(`\\\nDO $$\nBEGIN\n\tIF NOT EXISTS (\n\t\tSELECT 1\n\t\tFROM information_schema.table_constraints tc\n\t\tJOIN information_schema.key_column_usage kcu USING (constraint_catalog, constraint_schema, constraint_name)\n\t\tJOIN information_schema.constraint_column_usage ccu USING (constraint_catalog, constraint_schema, constraint_name)\n\t\tWHERE constraint_type = 'FOREIGN KEY'\n\t\t\tAND tc.table_schema = CURRENT_SCHEMA()\n\t\t\tAND tc.table_name = '${table.name}'\n\t\t\tAND kcu.column_name = '${fieldName}'\n\t\t\tAND ccu.table_schema = CURRENT_SCHEMA()\n\t\t\tAND ccu.table_name = '${referencedTable.name}'\n\t\t\tAND ccu.column_name = '${references.fieldName}'\n\t) THEN\n\t\tALTER TABLE \"${table.name}\"\n\t\tADD CONSTRAINT \"${table.name}_${fieldName}_fkey\"\n\t\t${fkDefinition};\n\tEND IF;\nEND;\n$$;`);\n                    }\n                    else {\n                        foreignKeys.push(fkDefinition);\n                        depends.push(references.resourceName);\n                        hasDependants[references.resourceName] = true;\n                    }\n                }\n            }\n        }\n        createSqlElements.push(...foreignKeys);\n        for (const index of table.indexes) {\n            createSqlElements.push(index.type + '(\"' + index.fields.join('\", \"') + '\")');\n        }\n        if (table.checks) {\n            for (const check of table.checks) {\n                const comment = check.description\n                    ? `-- ${check.description.split(/\\r?\\n/).join('\\n-- ')}\\n`\n                    : '';\n                const constraintName = check.name ? `CONSTRAINT \"${check.name}\" ` : '';\n                const sql = compileRule(check.abstractSql, engine, true);\n                createSqlElements.push(`\\\n${comment}${constraintName}CHECK (${sql})`);\n            }\n        }\n        const createTriggers = [];\n        const dropTriggers = [];\n        if (table.triggers) {\n            for (const trigger of table.triggers) {\n                if (!fns[trigger.fnName]) {\n                    throw new Error(`No such function '${trigger.fnName}' declared`);\n                }\n                const triggerName = `${table.name}_${trigger.fnName}`.slice(0, 63);\n                createTriggers.push(`\\\nDO\n$$\nBEGIN\nIF NOT EXISTS(\n\tSELECT 1\n\tFROM \"information_schema\".\"triggers\"\n\tWHERE \"event_object_table\" = '${table.name}'\n\tAND \"trigger_name\" = '${triggerName}'\n) THEN\n\tCREATE TRIGGER \"${triggerName}\"\n\t${trigger.when} ${trigger.operation} ON \"${table.name}\"\n\tFOR EACH ${trigger.level}\n\tEXECUTE PROCEDURE \"${trigger.fnName}\"();\nEND IF;\nEND;\n$$`);\n                dropTriggers.push(`DROP TRIGGER \"${triggerName}\";`);\n            }\n        }\n        schemaDependencyMap[table.resourceName] = {\n            resourceName,\n            primitive: table.primitive,\n            createSQL: [\n                `\\\nCREATE TABLE ${ifNotExistsStr}\"${table.name}\" (\n\t${createSqlElements.join('\\n,\\t')}\n);`,\n                ...createTriggers,\n            ],\n            dropSQL: [...dropTriggers, `DROP TABLE \"${table.name}\";`],\n            depends,\n        };\n    });\n    let resourceNames = [];\n    while (resourceNames.length !==\n        (resourceNames = Object.keys(schemaDependencyMap)).length &&\n        resourceNames.length > 0) {\n        for (const resourceName of resourceNames) {\n            const schemaInfo = schemaDependencyMap[resourceName];\n            let unsolvedDependency = false;\n            for (const dependency of schemaInfo.depends) {\n                if (dependency !== resourceName &&\n                    schemaDependencyMap.hasOwnProperty(dependency)) {\n                    unsolvedDependency = true;\n                    break;\n                }\n            }\n            if (unsolvedDependency === false) {\n                if (schemaInfo.primitive === false ||\n                    hasDependants[resourceName] != null) {\n                    if (schemaInfo.primitive !== false) {\n                        console.warn(\"We're adding a primitive table??\", schemaInfo.resourceName);\n                    }\n                    createSchemaStatements.push(...schemaInfo.createSQL);\n                    dropSchemaStatements.push(...schemaInfo.dropSQL);\n                }\n                delete schemaDependencyMap[resourceName];\n            }\n        }\n    }\n    if (Object.keys(schemaDependencyMap).length > 0) {\n        console.error('Failed to resolve all schema dependencies', schemaDependencyMap);\n        throw new Error('Failed to resolve all schema dependencies');\n    }\n    createSchemaStatements.push(...alterSchemaStatements);\n    dropSchemaStatements = dropSchemaStatements.reverse();\n    const ruleStatements = abstractSqlModel.rules.map((rule) => {\n        const ruleBodyNode = rule.find((r) => r[0] === 'Body');\n        if (ruleBodyNode == null || typeof ruleBodyNode === 'string') {\n            throw new Error('Invalid rule');\n        }\n        const ruleBody = ruleBodyNode[1];\n        if (typeof ruleBody === 'string') {\n            throw new Error('Invalid rule');\n        }\n        const ruleSENode = rule.find((r) => r[0] === 'StructuredEnglish');\n        if (ruleSENode == null) {\n            throw new Error('Invalid structured English');\n        }\n        const ruleSE = ruleSENode[1];\n        if (typeof ruleSE !== 'string') {\n            throw new Error('Invalid structured English');\n        }\n        const { query: ruleSQL, bindings: ruleBindings } = compileRule(ruleBody, engine);\n        let referencedFields;\n        try {\n            referencedFields = referenced_fields_1.getReferencedFields(ruleBody);\n        }\n        catch (e) {\n            console.warn('Error fetching referenced fields', e);\n        }\n        let ruleReferencedFields;\n        try {\n            ruleReferencedFields = referenced_fields_1.getRuleReferencedFields(ruleBody);\n        }\n        catch (e) {\n            console.warn('Error fetching rule referenced fields', e);\n        }\n        return {\n            structuredEnglish: ruleSE,\n            sql: ruleSQL,\n            bindings: ruleBindings,\n            referencedFields,\n            ruleReferencedFields,\n        };\n    });\n    return {\n        synonyms: abstractSqlModel.synonyms,\n        relationships: abstractSqlModel.relationships,\n        tables: abstractSqlModel.tables,\n        createSchema: createSchemaStatements,\n        dropSchema: dropSchemaStatements,\n        rules: ruleStatements,\n    };\n};\nconst generateExport = (engine, ifNotExists) => {\n    return {\n        optimizeSchema: AbstractSQLSchemaOptimiser_1.optimizeSchema,\n        compileSchema: (abstractSqlModel) => compileSchema(abstractSqlModel, engine, ifNotExists),\n        compileRule: (abstractSQL) => compileRule(abstractSQL, engine, false),\n        dataTypeValidate,\n        getReferencedFields: referenced_fields_1.getReferencedFields,\n        getRuleReferencedFields: referenced_fields_1.getRuleReferencedFields,\n        getModifiedFields: referenced_fields_1.getModifiedFields,\n    };\n};\nexports.postgres = generateExport(\"postgres\", true);\nexports.mysql = generateExport(\"mysql\", true);\nexports.websql = generateExport(\"websql\", false);\n//# sourceMappingURL=AbstractSQLCompiler.js.map","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nvar forEach = Array.prototype.forEach, create = Object.create;\n\nvar process = function (src, obj) {\n\tvar key;\n\tfor (key in src) obj[key] = src[key];\n};\n\n// eslint-disable-next-line no-unused-vars\nmodule.exports = function (opts1/*, …options*/) {\n\tvar result = create(null);\n\tforEach.call(arguments, function (options) {\n\t\tif (!isValue(options)) return;\n\t\tprocess(Object(options), result);\n\t});\n\treturn result;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./_iterate\")(\"forEach\");\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Object.assign : require(\"./shim\");\n","\"use strict\";\n\nvar toPosInt = require(\"../number/to-pos-integer\");\n\nvar test = function (arg1, arg2) { return arg2; };\n\nvar desc, defineProperty, generate, mixin;\n\ntry {\n\tObject.defineProperty(test, \"length\", {\n\t\tconfigurable: true,\n\t\twritable: false,\n\t\tenumerable: false,\n\t\tvalue: 1\n\t});\n}\ncatch (ignore) {}\n\nif (test.length === 1) {\n\t// ES6\n\tdesc = { configurable: true, writable: false, enumerable: false };\n\tdefineProperty = Object.defineProperty;\n\tmodule.exports = function (fn, length) {\n\t\tlength = toPosInt(length);\n\t\tif (fn.length === length) return fn;\n\t\tdesc.value = length;\n\t\treturn defineProperty(fn, \"length\", desc);\n\t};\n} else {\n\tmixin = require(\"../object/mixin\");\n\tgenerate = (function () {\n\t\tvar cache = [];\n\t\treturn function (length) {\n\t\t\tvar args, i = 0;\n\t\t\tif (cache[length]) return cache[length];\n\t\t\targs = [];\n\t\t\twhile (length--) args.push(\"a\" + (++i).toString(36));\n\t\t\t// eslint-disable-next-line no-new-func\n\t\t\treturn new Function(\n\t\t\t\t\"fn\",\n\t\t\t\t\"return function (\" + args.join(\", \") + \") { return fn.apply(this, arguments); };\"\n\t\t\t);\n\t\t};\n\t})();\n\tmodule.exports = function (src, length) {\n\t\tvar target;\n\t\tlength = toPosInt(length);\n\t\tif (src.length === length) return src;\n\t\ttarget = generate(length)(src);\n\t\ttry { mixin(target, src); }\n\t\tcatch (ignore) {}\n\t\treturn target;\n\t};\n}\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? globalThis : require(\"./implementation\");\n","\"use strict\";\n\nvar objToString = Object.prototype.toString\n  , id = objToString.call((function () { return arguments; })());\n\nmodule.exports = function (value) { return objToString.call(value) === id; };\n","\"use strict\";\n\nvar objToString = Object.prototype.toString, id = objToString.call(\"\");\n\nmodule.exports = function (value) {\n\treturn (\n\t\ttypeof value === \"string\" ||\n\t\t(value &&\n\t\t\ttypeof value === \"object\" &&\n\t\t\t(value instanceof String || objToString.call(value) === id)) ||\n\t\tfalse\n\t);\n};\n","import type { OptionalField, Resolvable } from './common-types';\nimport type { Tx } from '../database-layer/db';\nimport type { ODataRequest } from './uri-parser';\nimport type { AnyObject } from 'pinejs-client-core';\nimport type { TypedError } from 'typed-error';\nimport type { SupportedMethod } from '@balena/odata-to-abstract-sql';\n\nimport * as Bluebird from 'bluebird';\nimport * as _ from 'lodash';\nimport { settleMapSeries } from './control-flow';\nimport * as memoize from 'memoizee';\nimport {\n\tPinejsClient,\n\tUser,\n\tApiKey,\n\tresolveSynonym,\n\tgetAbstractSqlModel,\n\tapi,\n} from './sbvr-utils';\n\nexport interface HookReq {\n\tuser?: User;\n\tapiKey?: ApiKey;\n\tmethod: string;\n\turl: string;\n\tquery: AnyObject;\n\tparams: AnyObject;\n\tbody: AnyObject;\n\tcustom?: AnyObject;\n\ttx?: Tx;\n\thooks?: InstantiatedHooks;\n}\nexport interface HookArgs {\n\treq: HookReq;\n\trequest: ODataRequest;\n\tapi: PinejsClient;\n\ttx?: Tx;\n}\nexport type HookResponse = PromiseLike<any> | null | void;\n\nexport interface Hooks {\n\tPREPARSE?: (options: Omit<HookArgs, 'request' | 'api'>) => HookResponse;\n\tPOSTPARSE?: (options: HookArgs) => HookResponse;\n\tPRERUN?: (options: HookArgs & { tx: Tx }) => HookResponse;\n\tPOSTRUN?: (options: HookArgs & { tx: Tx; result: any }) => HookResponse;\n\tPRERESPOND?: (\n\t\toptions: HookArgs & {\n\t\t\ttx: Tx;\n\t\t\tresult: any;\n\t\t\tdata?: any;\n\t\t},\n\t) => HookResponse;\n\t'POSTRUN-ERROR'?: (\n\t\toptions: HookArgs & { error: TypedError | any },\n\t) => HookResponse;\n}\nexport type HookBlueprints = {\n\t[key in keyof Hooks]: Array<HookBlueprint<NonNullable<Hooks[key]>>>;\n};\nconst hookNames: Array<keyof Hooks> = [\n\t'PREPARSE',\n\t'POSTPARSE',\n\t'PRERUN',\n\t'POSTRUN',\n\t'PRERESPOND',\n\t'POSTRUN-ERROR',\n];\nconst isValidHook = (x: any): x is keyof Hooks => hookNames.includes(x);\n\nexport type RollbackAction = () => Resolvable<void>;\nexport type HookFn = (...args: any[]) => any;\nexport interface HookBlueprint<T extends HookFn> {\n\thookFn: T;\n\tsideEffects: boolean;\n\treadOnlyTx: boolean;\n}\nexport type InstantiatedHooks = {\n\t[key in keyof Hooks]: Array<Hook<NonNullable<Hooks[key]>>>;\n};\n\nclass Hook<T extends HookFn> {\n\tprivate hookFn: HookBlueprint<T>['hookFn'];\n\tpublic readOnlyTx: HookBlueprint<T>['readOnlyTx'];\n\tconstructor(hook: HookBlueprint<T>) {\n\t\tthis.hookFn = hook.hookFn;\n\t\tthis.readOnlyTx = hook.readOnlyTx;\n\t}\n\n\tpublic async run(...args: any[]) {\n\t\tawait this.hookFn(...args);\n\t}\n}\n\nclass SideEffectHook<T extends HookFn> extends Hook<T> {\n\tprivate rollbackFns: RollbackAction[] = [];\n\tprivate rolledBack: boolean = false;\n\n\tpublic registerRollback(fn: RollbackAction): void {\n\t\tif (this.rolledBack) {\n\t\t\tBluebird.try(fn);\n\t\t} else {\n\t\t\tthis.rollbackFns.push(fn);\n\t\t}\n\t}\n\n\tpublic async rollback() {\n\t\t// Don't try to call the rollback functions twice\n\t\tif (this.rolledBack) {\n\t\t\treturn;\n\t\t}\n\t\t// set rolledBack to true straight away, so that if any rollback action\n\t\t// is registered after the rollback call, we will immediately execute it\n\t\tthis.rolledBack = true;\n\t\tawait settleMapSeries(this.rollbackFns, (fn) => fn());\n\t}\n}\n\n// The execution order of rollback actions is unspecified\nexport const rollbackRequestHooks = <T extends InstantiatedHooks>(\n\thooks: T | undefined,\n): void => {\n\tif (hooks == null) {\n\t\treturn;\n\t}\n\tsettleMapSeries(_(hooks).flatMap().compact().value(), async (hook) => {\n\t\tif (hook instanceof SideEffectHook) {\n\t\t\tawait hook.rollback();\n\t\t}\n\t});\n};\n\nconst instantiateHooks = (hooks: HookBlueprints): InstantiatedHooks =>\n\t_.mapValues(hooks, (typeHooks: Array<HookBlueprint<HookFn>>) => {\n\t\treturn typeHooks.map((hook) => {\n\t\t\tif (hook.sideEffects) {\n\t\t\t\treturn new SideEffectHook(hook);\n\t\t\t} else {\n\t\t\t\treturn new Hook(hook);\n\t\t\t}\n\t\t});\n\t});\n\nconst mergeHooks = (a: HookBlueprints, b: HookBlueprints): HookBlueprints => {\n\treturn _.mergeWith({}, a, b, (x, y) => {\n\t\tif (Array.isArray(x)) {\n\t\t\treturn x.concat(y);\n\t\t}\n\t});\n};\nexport type HookMethod = keyof typeof apiHooks;\nconst getResourceHooks = (vocabHooks: VocabHooks, resourceName?: string) => {\n\tif (vocabHooks == null) {\n\t\treturn {};\n\t}\n\t// When getting the hooks list for the sake of PREPARSE hooks\n\t// we don't know the resourceName we'll be acting on yet\n\tif (resourceName == null) {\n\t\treturn vocabHooks['all'];\n\t}\n\treturn mergeHooks(vocabHooks[resourceName], vocabHooks['all']);\n};\nconst getVocabHooks = (\n\tmethodHooks: MethodHooks,\n\tvocabulary: string,\n\tresourceName?: string,\n) => {\n\tif (methodHooks == null) {\n\t\treturn {};\n\t}\n\treturn mergeHooks(\n\t\tgetResourceHooks(methodHooks[vocabulary], resourceName),\n\t\tgetResourceHooks(methodHooks['all'], resourceName),\n\t);\n};\nconst getMethodHooks = memoize(\n\t(method: SupportedMethod, vocabulary: string, resourceName?: string) =>\n\t\tmergeHooks(\n\t\t\tgetVocabHooks(apiHooks[method], vocabulary, resourceName),\n\t\t\tgetVocabHooks(apiHooks['all'], vocabulary, resourceName),\n\t\t),\n\t{ primitive: true },\n);\nexport const getHooks = (\n\trequest: Pick<\n\t\tOptionalField<ODataRequest, 'resourceName'>,\n\t\t'resourceName' | 'method' | 'vocabulary'\n\t>,\n): InstantiatedHooks => {\n\tlet { resourceName } = request;\n\tif (resourceName != null) {\n\t\tresourceName = resolveSynonym(\n\t\t\trequest as Pick<ODataRequest, 'resourceName' | 'method' | 'vocabulary'>,\n\t\t);\n\t}\n\treturn instantiateHooks(\n\t\tgetMethodHooks(request.method, request.vocabulary, resourceName),\n\t);\n};\ngetHooks.clear = () => getMethodHooks.clear();\n\ninterface VocabHooks {\n\t[resourceName: string]: HookBlueprints;\n}\ninterface MethodHooks {\n\t[vocab: string]: VocabHooks;\n}\nconst apiHooks = {\n\tall: {} as MethodHooks,\n\tGET: {} as MethodHooks,\n\tPUT: {} as MethodHooks,\n\tPOST: {} as MethodHooks,\n\tPATCH: {} as MethodHooks,\n\tMERGE: {} as MethodHooks,\n\tDELETE: {} as MethodHooks,\n\tOPTIONS: {} as MethodHooks,\n};\n\n// Share hooks between merge and patch since they are the same operation,\n// just MERGE was the OData intermediary until the HTTP spec added PATCH.\napiHooks.MERGE = apiHooks.PATCH;\nexport const addHook = (\n\tmethod: keyof typeof apiHooks,\n\tvocabulary: string,\n\tresourceName: string,\n\thooks:\n\t\t| { [key in keyof Hooks]: HookBlueprint<NonNullable<Hooks[key]>> }\n\t\t| ({ [key in keyof Hooks]: NonNullable<Hooks[key]> } & {\n\t\t\t\tsideEffects: HookBlueprint<HookFn>['sideEffects'];\n\t\t\t\treadOnlyTx: HookBlueprint<HookFn>['readOnlyTx'];\n\t\t  }),\n) => {\n\tconst methodHooks = apiHooks[method];\n\tif (methodHooks == null) {\n\t\tthrow new Error('Unsupported method: ' + method);\n\t}\n\tif (vocabulary === 'all') {\n\t\tif (resourceName !== 'all') {\n\t\t\tthrow new Error(\n\t\t\t\t`When specifying a hook on all apis then you must also specify all resources, got: '${resourceName}'`,\n\t\t\t);\n\t\t}\n\t} else {\n\t\tlet abstractSqlModel;\n\t\ttry {\n\t\t\tabstractSqlModel = getAbstractSqlModel({ vocabulary });\n\t\t} catch {\n\t\t\tthrow new Error('Unknown api root: ' + vocabulary);\n\t\t}\n\t\tif (resourceName !== 'all') {\n\t\t\tconst origResourceName = resourceName;\n\t\t\tresourceName = resolveSynonym({ vocabulary, resourceName });\n\t\t\tif (abstractSqlModel.tables[resourceName] == null) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Unknown resource for api root: ' +\n\t\t\t\t\t\torigResourceName +\n\t\t\t\t\t\t', ' +\n\t\t\t\t\t\tvocabulary,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tmethodHooks[vocabulary] ??= {};\n\n\tconst apiRootHooks = methodHooks[vocabulary];\n\tapiRootHooks[resourceName] ??= {};\n\n\tconst resourceHooks = apiRootHooks[resourceName];\n\n\tif ('sideEffects' in hooks && 'readOnlyTx' in hooks) {\n\t\tconst { sideEffects, readOnlyTx } = hooks;\n\t\tconst blueprintedHooks: {\n\t\t\t[key in keyof Hooks]: HookBlueprint<NonNullable<Hooks[key]>>;\n\t\t} = {};\n\t\tfor (const hookName of hookNames) {\n\t\t\tconst hookFn: HookFn | undefined = hooks[hookName];\n\t\t\tif (hookFn != null) {\n\t\t\t\tblueprintedHooks[hookName] = {\n\t\t\t\t\thookFn,\n\t\t\t\t\tsideEffects,\n\t\t\t\t\treadOnlyTx,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\thooks = blueprintedHooks;\n\t}\n\n\tfor (const hookType of Object.keys(hooks)) {\n\t\tif (!isValidHook(hookType)) {\n\t\t\tthrow new Error('Unknown callback type: ' + hookType);\n\t\t}\n\t\tconst hook = hooks[hookType];\n\t\tresourceHooks[hookType] ??= [];\n\t\tif (hook != null) {\n\t\t\tresourceHooks[hookType]!.push(hook);\n\t\t}\n\t}\n\n\tgetHooks.clear();\n};\n\nexport const addSideEffectHook = (\n\tmethod: HookMethod,\n\tapiRoot: string,\n\tresourceName: string,\n\thooks: Hooks,\n): void => {\n\taddHook(method, apiRoot, resourceName, {\n\t\t...hooks,\n\t\tsideEffects: true,\n\t\treadOnlyTx: false,\n\t});\n};\n\nexport const addPureHook = (\n\tmethod: HookMethod,\n\tapiRoot: string,\n\tresourceName: string,\n\thooks: Hooks,\n): void => {\n\taddHook(method, apiRoot, resourceName, {\n\t\t...hooks,\n\t\tsideEffects: false,\n\t\treadOnlyTx: false,\n\t});\n};\n\nconst defineApi = (args: HookArgs) => {\n\tconst { request, req, tx } = args;\n\tconst { vocabulary } = request;\n\tObject.defineProperty(args, 'api', {\n\t\tget: _.once(() =>\n\t\t\tapi[vocabulary].clone({\n\t\t\t\tpassthrough: { req, tx },\n\t\t\t}),\n\t\t),\n\t});\n};\n\nexport const runHooks = async <T extends keyof Hooks>(\n\thookName: T,\n\thooksList: InstantiatedHooks | undefined,\n\targs: Omit<Parameters<NonNullable<Hooks[T]>>[0], 'api'>,\n) => {\n\tif (hooksList == null) {\n\t\treturn;\n\t}\n\tconst hooks = hooksList[hookName];\n\tif (hooks == null || hooks.length === 0) {\n\t\treturn;\n\t}\n\n\tlet readOnlyArgs: typeof args;\n\tif (args.tx != null) {\n\t\treadOnlyArgs = { ...args, tx: args.tx.asReadOnly() };\n\t} else {\n\t\t// If we don't have a tx then read-only/writable is irrelevant\n\t\treadOnlyArgs = args;\n\t}\n\n\tif ((args as HookArgs).request != null) {\n\t\tdefineApi(args as HookArgs);\n\t\tif (args !== readOnlyArgs) {\n\t\t\t// Only try to define a separate read-only api if it's different\n\t\t\tdefineApi(readOnlyArgs as HookArgs);\n\t\t}\n\t}\n\n\tawait Promise.all(\n\t\t(hooks as Array<Hook<HookFn>>).map(async (hook) => {\n\t\t\tif (hook.readOnlyTx) {\n\t\t\t\tawait hook.run(readOnlyArgs);\n\t\t\t} else {\n\t\t\t\tawait hook.run(args);\n\t\t\t}\n\t\t}),\n\t);\n};\n","\"use strict\";\n\nmodule.exports = require(\"./lib/weak\")(require(\"./\"));\n","import type * as Express from 'express';\n\nimport './sbvr-loader';\n\nimport * as dbModule from '../database-layer/db';\nimport * as configLoader from '../config-loader/config-loader';\nimport * as migrator from '../migrator/migrator';\n\nimport * as sbvrUtils from '../sbvr-api/sbvr-utils';\n\nexport * as dbModule from '../database-layer/db';\nexport { PinejsSessionStore } from '../pinejs-session-store/pinejs-session-store';\nexport * as sbvrUtils from '../sbvr-api/sbvr-utils';\nexport * as permissions from '../sbvr-api/permissions';\nexport * as errors from '../sbvr-api/errors';\nexport * as env from '../config-loader/env';\nexport * as types from '../sbvr-api/common-types';\nexport * as hooks from '../sbvr-api/hooks';\nexport type { configLoader as ConfigLoader };\nexport type { migrator as Migrator };\n\nlet envDatabaseOptions: {\n\tengine: string;\n\tparams: string;\n};\nif (dbModule.engines.websql != null) {\n\tenvDatabaseOptions = {\n\t\tengine: 'websql',\n\t\tparams: 'rulemotion',\n\t};\n} else {\n\tlet databaseURL: string;\n\tif (process.env.DATABASE_URL) {\n\t\tdatabaseURL = process.env.DATABASE_URL;\n\t} else if (dbModule.engines.postgres != null) {\n\t\tdatabaseURL = 'postgres://postgres:.@localhost:5432/postgres';\n\t} else if (dbModule.engines.mysql == null) {\n\t\tdatabaseURL = 'mysql://mysql:.@localhost:3306';\n\t} else {\n\t\tthrow new Error('No supported database options available');\n\t}\n\tenvDatabaseOptions = {\n\t\tengine: databaseURL.slice(0, databaseURL.indexOf(':')),\n\t\tparams: databaseURL,\n\t};\n}\n\nexport const init = async (\n\tapp: Express.Application,\n\tconfig?: string | configLoader.Config,\n\tdatabaseOptions = envDatabaseOptions,\n): Promise<ReturnType<typeof configLoader.setup>> => {\n\ttry {\n\t\tconst db = dbModule.connect(databaseOptions);\n\t\tawait sbvrUtils.setup(app, db);\n\t\tconst cfgLoader = await configLoader.setup(app);\n\t\tawait cfgLoader.loadConfig(migrator.config);\n\n\t\tconst promises: Array<Promise<void>> = [];\n\t\tif (process.env.SBVR_SERVER_ENABLED) {\n\t\t\tconst sbvrServer = await import('../data-server/sbvr-server');\n\t\t\tconst transactions = require('../http-transactions/transactions');\n\t\t\tpromises.push(cfgLoader.loadConfig(sbvrServer.config));\n\t\t\tpromises.push(\n\t\t\t\tcfgLoader\n\t\t\t\t\t.loadConfig(transactions.config)\n\t\t\t\t\t.then(() => transactions.addModelHooks('data')),\n\t\t\t);\n\t\t}\n\t\tif (!process.env.CONFIG_LOADER_DISABLED) {\n\t\t\tpromises.push(cfgLoader.loadApplicationConfig(config));\n\t\t}\n\t\tawait Promise.all(promises);\n\n\t\treturn cfgLoader;\n\t} catch (err) {\n\t\tconsole.error('Error initialising server', err, err.stack);\n\t\tprocess.exit(1);\n\t}\n};\n","module.exports = require(\"typed-error\");","module.exports = require(\"fs\");","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbstractSQLOptimiser = void 0;\nconst _ = require(\"lodash\");\nconst AbstractSQLRules2SQL = require(\"./AbstractSQLRules2SQL\");\nconst { isAbstractSqlQuery, getAbstractSqlQuery, checkArgs, checkMinArgs, isNotNullable, } = AbstractSQLRules2SQL;\nconst escapeForLike = (str) => [\n    'Replace',\n    [\n        'Replace',\n        ['Replace', str, ['EmbeddedText', '\\\\'], ['EmbeddedText', '\\\\\\\\']],\n        ['EmbeddedText', '_'],\n        ['EmbeddedText', '\\\\_'],\n    ],\n    ['EmbeddedText', '%'],\n    ['EmbeddedText', '\\\\%'],\n];\nlet helped = false;\nlet noBinds = false;\nconst Helper = (fn) => {\n    return (...args) => {\n        const result = fn(...args);\n        if (result !== false) {\n            helped = true;\n        }\n        return result;\n    };\n};\nconst isEmptySelectQuery = (query) => {\n    const [type, ...rest] = query;\n    switch (type) {\n        case 'SelectQuery':\n            for (const arg of rest) {\n                if (arg[0] === 'Where') {\n                    const maybeBool = arg[1];\n                    if (maybeBool[0] === 'Boolean') {\n                        if (maybeBool[1] === false) {\n                            return true;\n                        }\n                    }\n                }\n            }\n    }\n    return false;\n};\nconst rewriteMatch = (name, matchers, rewriteFn) => (args) => {\n    checkArgs(name, args, matchers.length);\n    return rewriteFn(args.map((arg, index) => {\n        return matchers[index](arg);\n    }));\n};\nconst matchArgs = (name, ...matchers) => rewriteMatch(name, matchers, (args) => [name, ...args]);\nconst tryMatches = (...matchers) => {\n    return (args) => {\n        let err;\n        for (const matcher of matchers) {\n            try {\n                const result = matcher(args);\n                if (result !== false) {\n                    return result;\n                }\n            }\n            catch (e) {\n                err = e;\n            }\n        }\n        throw err;\n    };\n};\nconst AnyValue = (args) => {\n    const [type, ...rest] = args;\n    if (type === 'Case') {\n        return typeRules[type](rest);\n    }\n    for (const matcher of [\n        isJSONValue,\n        isDateValue,\n        isTextValue,\n        isNumericValue,\n        isBooleanValue,\n        isDurationValue,\n    ]) {\n        if (matcher(type)) {\n            return typeRules[type](rest);\n        }\n    }\n    return UnknownValue(args);\n};\nconst UnknownValue = (args) => {\n    if (args === null || args === 'Null') {\n        helped = true;\n        args = ['Null'];\n    }\n    const [type, ...rest] = args;\n    switch (type) {\n        case 'Null':\n        case 'Field':\n        case 'ReferencedField':\n        case 'Bind':\n        case 'Cast':\n        case 'Coalesce':\n            return typeRules[type](rest);\n        case 'SelectQuery':\n        case 'UnionQuery':\n            return typeRules[type](rest);\n        default:\n            throw new Error(`Invalid \"UnknownValue\" type: ${type}`);\n    }\n};\nconst MatchValue = (matcher) => (args) => {\n    const [type, ...rest] = args;\n    if (matcher(type)) {\n        return typeRules[type](rest);\n    }\n    return UnknownValue(args);\n};\nconst isTextValue = (type) => {\n    return (type === 'Concat' ||\n        type === 'Tolower' ||\n        type === 'ToLower' ||\n        type === 'Toupper' ||\n        type === 'ToUpper' ||\n        AbstractSQLRules2SQL.isTextValue(type));\n};\nconst TextValue = MatchValue(isTextValue);\nconst isNumericValue = (type) => {\n    return (type === 'IndexOf' ||\n        type === 'Indexof' ||\n        AbstractSQLRules2SQL.isNumericValue(type));\n};\nconst NumericValue = MatchValue(isNumericValue);\nconst isBooleanValue = (type) => {\n    return (type === 'Contains' ||\n        type === 'Substringof' ||\n        type === 'Startswith' ||\n        type === 'Endswith' ||\n        AbstractSQLRules2SQL.isBooleanValue(type));\n};\nconst BooleanValue = MatchValue(isBooleanValue);\nconst isDateValue = (type) => {\n    return type === 'Now' || AbstractSQLRules2SQL.isDateValue(type);\n};\nconst DateValue = MatchValue(isDateValue);\nconst { isJSONValue } = AbstractSQLRules2SQL;\nconst { isDurationValue } = AbstractSQLRules2SQL;\nconst DurationValue = MatchValue(isDurationValue);\nconst { isFieldValue } = AbstractSQLRules2SQL;\nconst Field = (args) => {\n    const [type, ...rest] = args;\n    if (isFieldValue(type)) {\n        return typeRules[type](rest);\n    }\n    else {\n        throw new SyntaxError(`Invalid field type: ${type}`);\n    }\n};\nconst AnyNotNullValue = (args) => {\n    return args != null && args !== 'Null' && args[0] !== 'Null';\n};\nconst FieldOp = (type) => (args) => {\n    if (AnyNotNullValue(args[0]) === false ||\n        AnyNotNullValue(args[1]) === false) {\n        return false;\n    }\n    if (isFieldValue(args[0][0])) {\n        return [type, args[0], args[1]];\n    }\n    else if (isFieldValue(args[1][0])) {\n        return [type, args[1], args[0]];\n    }\n    else {\n        return false;\n    }\n};\nconst FieldEquals = FieldOp('Equals');\nconst FieldNotEquals = FieldOp('NotEquals');\nconst Comparison = (comparison) => {\n    return matchArgs(comparison, AnyValue, AnyValue);\n};\nconst NumberMatch = (type) => {\n    return matchArgs(type, (arg) => {\n        if (typeof arg !== 'number') {\n            throw new SyntaxError(`${type} expected number but got ${typeof arg}`);\n        }\n        return arg;\n    });\n};\nconst mathOps = {\n    Add: '+',\n    Subtract: '-',\n    Multiply: '*',\n    Divide: '/',\n};\nconst MathOp = (type) => {\n    return matchArgs(type, NumericValue, NumericValue);\n};\nconst ExtractNumericDatePart = (type) => {\n    return matchArgs(type, DateValue);\n};\nconst Concatenate = (args) => {\n    checkMinArgs('Concatenate', args, 1);\n    return [\n        'Concatenate',\n        ...args.map((arg) => {\n            if (!isAbstractSqlQuery(arg)) {\n                throw new SyntaxError(`Expected AbstractSqlQuery array but got ${typeof arg}`);\n            }\n            return TextValue(arg);\n        }),\n    ];\n};\nconst Text = matchArgs('Text', _.identity);\nconst Value = (arg) => {\n    switch (arg) {\n        case true:\n        case false:\n        case 'Default':\n            return arg;\n        default:\n            const [type, ...rest] = arg;\n            switch (type) {\n                case 'Null':\n                case 'Bind':\n                case 'Value':\n                case 'Text':\n                case 'Number':\n                case 'Real':\n                case 'Integer':\n                    return typeRules[type](rest);\n                default:\n                    throw new SyntaxError(`Invalid type for Value ${type}`);\n            }\n    }\n};\nconst FromMatch = (args) => {\n    if (typeof args === 'string') {\n        return ['Table', args];\n    }\n    const [type, ...rest] = args;\n    switch (type) {\n        case 'SelectQuery':\n        case 'UnionQuery':\n            return typeRules[type](rest);\n        case 'Table':\n            checkArgs('Table', rest, 1);\n            return ['Table', rest[0]];\n        default:\n            throw new SyntaxError(`From does not support ${type}`);\n    }\n};\nconst MaybeAlias = (args, matchFn) => {\n    if (args.length === 2 &&\n        args[0] !== 'Table' &&\n        args[0] !== 'Count' &&\n        args[0] !== 'Field' &&\n        typeof args[1] === 'string') {\n        helped = true;\n        return ['Alias', matchFn(args[0]), args[1]];\n    }\n    const [type, ...rest] = args;\n    switch (type) {\n        case 'Alias':\n            checkArgs('Alias', rest, 2);\n            return ['Alias', matchFn(getAbstractSqlQuery(rest, 0)), rest[1]];\n        default:\n            return matchFn(args);\n    }\n};\nconst Lower = matchArgs('Lower', TextValue);\nconst Upper = matchArgs('Upper', TextValue);\nconst JoinMatch = (joinType) => (args) => {\n    if (args.length !== 1 && args.length !== 2) {\n        throw new SyntaxError(`\"${joinType}\" requires 1/2 arg(s)`);\n    }\n    const from = MaybeAlias(getAbstractSqlQuery(args, 0), FromMatch);\n    if (args.length === 1) {\n        return [joinType, from];\n    }\n    const [type, ...rest] = getAbstractSqlQuery(args, 1);\n    switch (type) {\n        case 'On':\n            checkArgs('On', rest, 1);\n            const ruleBody = BooleanValue(getAbstractSqlQuery(rest, 0));\n            return [joinType, from, ['On', ruleBody]];\n        default:\n            throw new SyntaxError(`'${joinType}' clause does not support '${type}' clause`);\n    }\n};\nconst typeRules = {\n    UnionQuery: (args) => {\n        checkMinArgs('UnionQuery', args, 2);\n        return [\n            'UnionQuery',\n            ...args.map((arg) => {\n                if (!isAbstractSqlQuery(arg)) {\n                    throw new SyntaxError(`Expected AbstractSqlQuery array but got ${typeof arg}`);\n                }\n                const [type, ...rest] = arg;\n                switch (type) {\n                    case 'SelectQuery':\n                    case 'UnionQuery':\n                        return typeRules[type](rest);\n                    default:\n                        throw new SyntaxError(`UnionQuery does not support ${type}`);\n                }\n            }),\n        ];\n    },\n    SelectQuery: (args) => {\n        const tables = [];\n        let select = [];\n        const groups = {\n            Where: [],\n            GroupBy: [],\n            OrderBy: [],\n            Limit: [],\n            Offset: [],\n        };\n        for (const arg of args) {\n            if (!isAbstractSqlQuery(arg)) {\n                throw new SyntaxError('`SelectQuery` args must all be arrays');\n            }\n            const [type, ...rest] = arg;\n            switch (type) {\n                case 'Select':\n                    if (select.length !== 0) {\n                        throw new SyntaxError(`'SelectQuery' can only accept one '${type}'`);\n                    }\n                    select = [typeRules[type](rest)];\n                    break;\n                case 'From':\n                case 'Join':\n                case 'LeftJoin':\n                case 'RightJoin':\n                case 'FullJoin':\n                case 'CrossJoin':\n                    tables.push(typeRules[type](rest));\n                    break;\n                case 'Where':\n                case 'GroupBy':\n                case 'OrderBy':\n                case 'Limit':\n                case 'Offset':\n                    if (groups[type].length !== 0) {\n                        throw new SyntaxError(`'SelectQuery' can only accept one '${type}'`);\n                    }\n                    groups[type] = [typeRules[type](rest)];\n                    break;\n                default:\n                    throw new SyntaxError(`'SelectQuery' does not support '${type}'`);\n            }\n        }\n        return [\n            'SelectQuery',\n            ...select,\n            ...tables,\n            ...groups.Where,\n            ...groups.GroupBy,\n            ...groups.OrderBy,\n            ...groups.Limit,\n            ...groups.Offset,\n        ];\n    },\n    Select: (args) => {\n        checkArgs('Select', args, 1);\n        return [\n            'Select',\n            getAbstractSqlQuery(args, 0).map((arg) => {\n                if (!isAbstractSqlQuery(arg)) {\n                    throw new SyntaxError(`Expected AbstractSqlQuery array but got ${typeof arg}`);\n                }\n                return MaybeAlias(arg, AnyValue);\n            }),\n        ];\n    },\n    From: (args) => {\n        checkArgs('From', args, 1);\n        return ['From', MaybeAlias(args[0], FromMatch)];\n    },\n    Join: JoinMatch('Join'),\n    LeftJoin: JoinMatch('LeftJoin'),\n    RightJoin: JoinMatch('RightJoin'),\n    FullJoin: JoinMatch('FullJoin'),\n    CrossJoin: (args) => {\n        checkArgs('CrossJoin', args, 1);\n        const from = MaybeAlias(getAbstractSqlQuery(args, 0), FromMatch);\n        return ['CrossJoin', from];\n    },\n    Where: matchArgs('Where', BooleanValue),\n    GroupBy: (args) => {\n        checkArgs('GroupBy', args, 1);\n        const groups = getAbstractSqlQuery(args, 0);\n        checkMinArgs('GroupBy groups', groups, 1);\n        return ['GroupBy', groups.map(AnyValue)];\n    },\n    OrderBy: (args) => {\n        checkMinArgs('OrderBy', args, 1);\n        return [\n            'OrderBy',\n            ...args.map((arg) => {\n                checkMinArgs('OrderBy ordering', arg, 2);\n                const order = arg[0];\n                if (order !== 'ASC' && order !== 'DESC') {\n                    throw new SyntaxError(`Can only order by \"ASC\" or \"DESC\"`);\n                }\n                const field = Field(getAbstractSqlQuery(arg, 1));\n                return [order, field];\n            }),\n        ];\n    },\n    Limit: matchArgs('Limit', NumericValue),\n    Offset: matchArgs('Offset', NumericValue),\n    Count: (args) => {\n        checkArgs('Count', args, 1);\n        if (args[0] !== '*') {\n            throw new SyntaxError('\"Count\" only supports \"*\"');\n        }\n        return ['Count', args[0]];\n    },\n    Average: matchArgs('Average', NumericValue),\n    Sum: matchArgs('Sum', NumericValue),\n    Field: matchArgs('Field', _.identity),\n    ReferencedField: matchArgs('ReferencedField', _.identity, _.identity),\n    Cast: matchArgs('Cast', AnyValue, _.identity),\n    Number: NumberMatch('Number'),\n    Real: NumberMatch('Real'),\n    Integer: NumberMatch('Integer'),\n    Boolean: matchArgs('Boolean', _.identity),\n    EmbeddedText: matchArgs('EmbeddedText', _.identity),\n    Null: matchArgs('Null'),\n    CurrentTimestamp: matchArgs('CurrentTimestamp'),\n    CurrentDate: matchArgs('CurrentDate'),\n    AggregateJSON: matchArgs('AggregateJSON', _.identity),\n    Equals: tryMatches(Helper((args) => {\n        checkArgs('Equals', args, 2);\n        let valueIndex;\n        if (args[0][0] === 'Null') {\n            valueIndex = 1;\n        }\n        else if (args[1][0] === 'Null') {\n            valueIndex = 0;\n        }\n        else {\n            return false;\n        }\n        return ['NotExists', getAbstractSqlQuery(args, valueIndex)];\n    }), Comparison('Equals')),\n    NotEquals: tryMatches(Helper((args) => {\n        checkArgs('NotEquals', args, 2);\n        let valueIndex;\n        if (args[0][0] === 'Null') {\n            valueIndex = 1;\n        }\n        else if (args[1][0] === 'Null') {\n            valueIndex = 0;\n        }\n        else {\n            return false;\n        }\n        return ['Exists', getAbstractSqlQuery(args, valueIndex)];\n    }), Comparison('NotEquals')),\n    GreaterThan: Comparison('GreaterThan'),\n    GreaterThanOrEqual: Comparison('GreaterThanOrEqual'),\n    LessThan: Comparison('LessThan'),\n    LessThanOrEqual: Comparison('LessThanOrEqual'),\n    Like: Comparison('Like'),\n    IsNotDistinctFrom: tryMatches(Helper((args) => {\n        checkArgs('IsNotDistinctFrom', args, 2);\n        let valueIndex;\n        if (args[0][0] === 'Null') {\n            valueIndex = 1;\n        }\n        else if (args[1][0] === 'Null') {\n            valueIndex = 0;\n        }\n        else {\n            return false;\n        }\n        return ['NotExists', getAbstractSqlQuery(args, valueIndex)];\n    }), Helper((args) => {\n        checkArgs('IsDistinctFrom', args, 2);\n        if (isNotNullable(getAbstractSqlQuery(args, 0)) &&\n            isNotNullable(getAbstractSqlQuery(args, 1))) {\n            return ['Equals', ...args];\n        }\n        return false;\n    }), matchArgs('IsNotDistinctFrom', AnyValue, AnyValue)),\n    IsDistinctFrom: tryMatches(Helper((args) => {\n        checkArgs('IsDistinctFrom', args, 2);\n        let valueIndex;\n        if (args[0][0] === 'Null') {\n            valueIndex = 1;\n        }\n        else if (args[1][0] === 'Null') {\n            valueIndex = 0;\n        }\n        else {\n            return false;\n        }\n        return ['Exists', getAbstractSqlQuery(args, valueIndex)];\n    }), Helper((args) => {\n        checkArgs('IsDistinctFrom', args, 2);\n        if (isNotNullable(getAbstractSqlQuery(args, 0)) &&\n            isNotNullable(getAbstractSqlQuery(args, 1))) {\n            return ['NotEquals', ...args];\n        }\n        return false;\n    }), matchArgs('IsDistinctFrom', AnyValue, AnyValue)),\n    Add: MathOp('Add'),\n    Subtract: MathOp('Subtract'),\n    Multiply: MathOp('Multiply'),\n    Divide: MathOp('Divide'),\n    Year: ExtractNumericDatePart('Year'),\n    Month: ExtractNumericDatePart('Month'),\n    Day: ExtractNumericDatePart('Day'),\n    Hour: ExtractNumericDatePart('Hour'),\n    Minute: ExtractNumericDatePart('Minute'),\n    Second: ExtractNumericDatePart('Second'),\n    Fractionalseconds: ExtractNumericDatePart('Fractionalseconds'),\n    Totalseconds: matchArgs('Totalseconds', DurationValue),\n    Concat: Concatenate,\n    Concatenate,\n    Replace: matchArgs('Replace', TextValue, TextValue, TextValue),\n    CharacterLength: matchArgs('CharacterLength', TextValue),\n    StrPos: matchArgs('StrPos', TextValue, TextValue),\n    Substring: (args) => {\n        checkMinArgs('Substring', args, 2);\n        const str = TextValue(getAbstractSqlQuery(args, 0));\n        const nums = args.slice(1).map((arg) => {\n            if (!isAbstractSqlQuery(arg)) {\n                throw new SyntaxError(`Expected AbstractSqlQuery array but got ${typeof arg}`);\n            }\n            return NumericValue(arg);\n        });\n        return ['Substring', str, ...nums];\n    },\n    Right: matchArgs('Right', TextValue, NumericValue),\n    Tolower: Lower,\n    ToLower: Lower,\n    Lower,\n    Toupper: Upper,\n    ToUpper: Upper,\n    Upper,\n    Trim: matchArgs('Trim', TextValue),\n    Round: matchArgs('Round', NumericValue),\n    Floor: matchArgs('Floor', NumericValue),\n    Ceiling: matchArgs('Ceiling', NumericValue),\n    ToDate: matchArgs('ToDate', DateValue),\n    ToTime: matchArgs('ToTime', DateValue),\n    Coalesce: (args) => {\n        checkMinArgs('Coalesce', args, 2);\n        return ['Coalesce', ...args.map(AnyValue)];\n    },\n    Case: (args) => {\n        checkMinArgs('Case', args, 1);\n        return [\n            'Case',\n            ...args.map((arg, index) => {\n                if (!isAbstractSqlQuery(arg)) {\n                    throw new SyntaxError(`Expected AbstractSqlQuery array but got ${typeof arg}`);\n                }\n                const [type, ...rest] = arg;\n                switch (type) {\n                    case 'When':\n                        checkArgs('When', rest, 2);\n                        const matches = BooleanValue(getAbstractSqlQuery(rest, 0));\n                        const resultValue = AnyValue(getAbstractSqlQuery(rest, 1));\n                        return ['When', matches, resultValue];\n                    case 'Else':\n                        if (index !== args.length - 1) {\n                            throw new SyntaxError('Else must be the last element of a Case');\n                        }\n                        checkArgs('Else', rest, 1);\n                        return ['Else', AnyValue(getAbstractSqlQuery(rest, 0))];\n                    default:\n                        throw new SyntaxError('Case can only contain When/Else');\n                }\n            }),\n        ];\n    },\n    And: tryMatches(Helper((args) => {\n        if (args.length !== 1) {\n            return false;\n        }\n        return getAbstractSqlQuery(args, 0);\n    }), Helper((args) => {\n        checkMinArgs('And', args, 2);\n        let maybeHelped = false;\n        const conditions = _.flatMap(args, (arg) => {\n            if (!isAbstractSqlQuery(arg)) {\n                throw new SyntaxError(`Expected AbstractSqlQuery array but got ${typeof arg}`);\n            }\n            if (arg[0] === 'And') {\n                maybeHelped = true;\n                return arg.slice(1);\n            }\n            return [arg];\n        });\n        if (!maybeHelped) {\n            return false;\n        }\n        return ['And', ...conditions];\n    }), Helper((args) => {\n        checkMinArgs('And', args, 2);\n        let maybeHelped = false;\n        let containsFalse = false;\n        const conditions = args.filter((arg) => {\n            if (arg[0] === 'Boolean') {\n                if (arg[1] === true) {\n                    maybeHelped = true;\n                    return false;\n                }\n                else if (arg[1] === false) {\n                    containsFalse = true;\n                }\n            }\n            return true;\n        });\n        if (containsFalse) {\n            return ['Boolean', false];\n        }\n        if (maybeHelped) {\n            return ['And', ...conditions];\n        }\n        return false;\n    }), Helper((args) => {\n        checkMinArgs('And', args, 2);\n        const fieldBuckets = {};\n        const others = [];\n        let maybeHelped = false;\n        args.map((arg) => {\n            if (!isAbstractSqlQuery(arg)) {\n                throw new SyntaxError(`Expected AbstractSqlQuery array but got ${typeof arg}`);\n            }\n            if (arg[0] === 'NotEquals') {\n                const fieldBool = FieldNotEquals(arg.slice(1));\n                if (fieldBool !== false) {\n                    const fieldRef = fieldBool[1];\n                    if (fieldBuckets[fieldRef] == null) {\n                        fieldBuckets[fieldRef] = [fieldBool];\n                    }\n                    else {\n                        maybeHelped = true;\n                        fieldBuckets[fieldRef].push(fieldBool);\n                    }\n                    return;\n                }\n            }\n            else if (arg[0] === 'NotIn') {\n                const fieldRef = arg[1];\n                if (fieldBuckets[fieldRef] == null) {\n                    fieldBuckets[fieldRef] = [arg];\n                }\n                else {\n                    maybeHelped = true;\n                    fieldBuckets[fieldRef].push(arg);\n                }\n                return;\n            }\n            others.push(arg);\n        });\n        if (!maybeHelped) {\n            return false;\n        }\n        const fields = Object.keys(fieldBuckets).map((fieldRef) => {\n            const fieldBucket = fieldBuckets[fieldRef];\n            if (fieldBucket.length === 1) {\n                return fieldBucket[0];\n            }\n            else {\n                return [\n                    'NotIn',\n                    fieldBucket[0][1],\n                    ..._.flatMap(fieldBucket, (field) => field.slice(2)),\n                ];\n            }\n        });\n        return ['And', ...fields, ...others];\n    }), (args) => {\n        checkMinArgs('And', args, 2);\n        return [\n            'And',\n            ...args.map((arg) => {\n                if (!isAbstractSqlQuery(arg)) {\n                    throw new SyntaxError(`Expected AbstractSqlQuery array but got ${typeof arg}`);\n                }\n                return BooleanValue(arg);\n            }),\n        ];\n    }),\n    Or: tryMatches(Helper((args) => {\n        if (args.length !== 1) {\n            return false;\n        }\n        return getAbstractSqlQuery(args, 0);\n    }), Helper((args) => {\n        checkMinArgs('Or', args, 2);\n        let maybeHelped = false;\n        const conditions = _.flatMap(args, (arg) => {\n            if (!isAbstractSqlQuery(arg)) {\n                throw new SyntaxError(`Expected AbstractSqlQuery array but got ${typeof arg}`);\n            }\n            if (arg[0] === 'Or') {\n                maybeHelped = true;\n                return arg.slice(1);\n            }\n            return [arg];\n        });\n        if (!maybeHelped) {\n            return false;\n        }\n        return ['Or', ...conditions];\n    }), Helper((args) => {\n        checkMinArgs('Or', args, 2);\n        let maybeHelped = false;\n        let containsTrue = false;\n        const conditions = args.filter((arg) => {\n            if (arg[0] === 'Boolean') {\n                if (arg[1] === false) {\n                    maybeHelped = true;\n                    return false;\n                }\n                else if (arg[1] === true) {\n                    containsTrue = true;\n                }\n            }\n            return true;\n        });\n        if (containsTrue) {\n            return ['Boolean', true];\n        }\n        if (maybeHelped) {\n            return ['Or', ...conditions];\n        }\n        return false;\n    }), Helper((args) => {\n        checkMinArgs('Or', args, 2);\n        const fieldBuckets = {};\n        const others = [];\n        let maybeHelped = false;\n        args.map((arg) => {\n            if (!isAbstractSqlQuery(arg)) {\n                throw new SyntaxError(`Expected AbstractSqlQuery array but got ${typeof arg}`);\n            }\n            if (arg[0] === 'Equals') {\n                const fieldBool = FieldEquals(arg.slice(1));\n                if (fieldBool !== false) {\n                    const fieldRef = fieldBool[1];\n                    if (fieldBuckets[fieldRef] == null) {\n                        fieldBuckets[fieldRef] = [fieldBool];\n                    }\n                    else {\n                        maybeHelped = true;\n                        fieldBuckets[fieldRef].push(fieldBool);\n                    }\n                    return;\n                }\n            }\n            else if (arg[0] === 'In') {\n                const fieldRef = arg[1];\n                if (fieldBuckets[fieldRef] == null) {\n                    fieldBuckets[fieldRef] = [arg];\n                }\n                else {\n                    maybeHelped = true;\n                    fieldBuckets[fieldRef].push(arg);\n                }\n                return;\n            }\n            others.push(arg);\n        });\n        if (!maybeHelped) {\n            return false;\n        }\n        const fields = Object.keys(fieldBuckets).map((fieldRef) => {\n            const fieldBucket = fieldBuckets[fieldRef];\n            if (fieldBucket.length === 1) {\n                return fieldBucket[0];\n            }\n            else {\n                return [\n                    'In',\n                    fieldBucket[0][1],\n                    ..._.flatMap(fieldBucket, (field) => field.slice(2)),\n                ];\n            }\n        });\n        return ['Or', ...fields, ...others];\n    }), (args) => {\n        checkMinArgs('Or', args, 2);\n        return [\n            'Or',\n            ...args.map((arg) => {\n                if (!isAbstractSqlQuery(arg)) {\n                    throw new SyntaxError(`Expected AbstractSqlQuery array but got ${typeof arg}`);\n                }\n                return BooleanValue(arg);\n            }),\n        ];\n    }),\n    Bind: (args) => {\n        if (noBinds) {\n            throw new SyntaxError('Cannot use a bind whilst they are disabled');\n        }\n        if (args.length !== 1 && args.length !== 2) {\n            throw new SyntaxError(`\"Bind\" requires 1/2 arg(s)`);\n        }\n        return ['Bind', ...args];\n    },\n    Text,\n    Value: Text,\n    Date: matchArgs('Date', _.identity),\n    Duration: (args) => {\n        checkArgs('Duration', args, 1);\n        let duration = args[0];\n        if (duration == null || typeof duration !== 'object') {\n            throw new SyntaxError(`Duration must be an object, got ${typeof duration}`);\n        }\n        duration = _(duration)\n            .pick('negative', 'day', 'hour', 'minute', 'second')\n            .omitBy(_.isNil)\n            .value();\n        if (_(duration).omit('negative').isEmpty()) {\n            throw new SyntaxError('Invalid duration');\n        }\n        return ['Duration', duration];\n    },\n    Exists: tryMatches(Helper((args) => {\n        checkArgs('Exists', args, 1);\n        const arg = getAbstractSqlQuery(args, 0);\n        if (isNotNullable(arg)) {\n            return ['Boolean', true];\n        }\n        return false;\n    }), Helper((args) => {\n        checkArgs('Exists', args, 1);\n        const arg = getAbstractSqlQuery(args, 0);\n        if (isEmptySelectQuery(arg)) {\n            return ['Boolean', false];\n        }\n        return false;\n    }), (args) => {\n        checkArgs('Exists', args, 1);\n        const arg = getAbstractSqlQuery(args, 0);\n        const [type, ...rest] = arg;\n        switch (type) {\n            case 'SelectQuery':\n            case 'UnionQuery':\n                return ['Exists', typeRules[type](rest)];\n            default:\n                return ['Exists', AnyValue(arg)];\n        }\n    }),\n    NotExists: tryMatches(Helper((args) => {\n        checkArgs('Exists', args, 1);\n        const arg = getAbstractSqlQuery(args, 0);\n        if (isNotNullable(arg)) {\n            return ['Boolean', false];\n        }\n        return false;\n    }), Helper((args) => {\n        checkArgs('Exists', args, 1);\n        const arg = getAbstractSqlQuery(args, 0);\n        if (isEmptySelectQuery(arg)) {\n            return ['Boolean', true];\n        }\n        return false;\n    }), (args) => {\n        checkArgs('NotExists', args, 1);\n        const arg = getAbstractSqlQuery(args, 0);\n        const [type, ...rest] = arg;\n        switch (type) {\n            case 'SelectQuery':\n            case 'UnionQuery':\n                return ['NotExists', typeRules[type](rest)];\n            default:\n                return ['NotExists', AnyValue(arg)];\n        }\n    }),\n    Not: tryMatches(Helper((args) => {\n        checkArgs('Not', args, 1);\n        const [type, ...rest] = getAbstractSqlQuery(args, 0);\n        switch (type) {\n            case 'Not':\n                return BooleanValue(rest[0]);\n            case 'Equals':\n                return typeRules.NotEquals(rest);\n            case 'NotEquals':\n                return typeRules.Equals(rest);\n            case 'In':\n                return typeRules.NotIn(rest);\n            case 'NotIn':\n                return typeRules.In(rest);\n            case 'Exists':\n                return typeRules.NotExists(rest);\n            case 'NotExists':\n                return typeRules.Exists(rest);\n            default:\n                return false;\n        }\n    }), matchArgs('Not', BooleanValue)),\n    In: (args) => {\n        checkMinArgs('In', args, 2);\n        const field = Field(getAbstractSqlQuery(args, 0));\n        const vals = args.slice(1).map((arg) => {\n            if (!isAbstractSqlQuery(arg)) {\n                throw new SyntaxError(`Expected AbstractSqlQuery array but got ${typeof arg}`);\n            }\n            return AnyValue(arg);\n        });\n        return ['In', field, ...vals];\n    },\n    NotIn: (args) => {\n        checkMinArgs('NotIn', args, 2);\n        const field = Field(getAbstractSqlQuery(args, 0));\n        const vals = args.slice(1).map((arg) => {\n            if (!isAbstractSqlQuery(arg)) {\n                throw new SyntaxError(`Expected AbstractSqlQuery array but got ${typeof arg}`);\n            }\n            return AnyValue(arg);\n        });\n        return ['NotIn', field, ...vals];\n    },\n    InsertQuery: (args) => {\n        const tables = [];\n        let fields = [];\n        let values = [];\n        const where = [];\n        for (const arg of args) {\n            if (!isAbstractSqlQuery(arg)) {\n                throw new SyntaxError('`InsertQuery` args must all be arrays');\n            }\n            const [type, ...rest] = arg;\n            switch (type) {\n                case 'Fields':\n                    if (fields.length !== 0) {\n                        throw new SyntaxError(`'InsertQuery' can only accept one '${type}'`);\n                    }\n                    checkMinArgs('Update fields', rest, 1);\n                    fields = [arg];\n                    break;\n                case 'Values':\n                    if (values.length !== 0) {\n                        throw new SyntaxError(`'InsertQuery' can only accept one '${type}'`);\n                    }\n                    const valuesArray = getAbstractSqlQuery(rest, 0);\n                    if (valuesArray.length > 0) {\n                        const [valuesType, ...valuesRest] = valuesArray;\n                        switch (valuesType) {\n                            case 'SelectQuery':\n                            case 'UnionQuery':\n                                values = [['Values', typeRules[valuesType](valuesRest)]];\n                                break;\n                            default:\n                                values = [\n                                    ['Values', valuesArray.map(Value)],\n                                ];\n                        }\n                    }\n                    break;\n                case 'From':\n                    tables.push(typeRules[type](rest));\n                    break;\n                case 'Where':\n                    break;\n                default:\n                    throw new SyntaxError(`'InsertQuery' does not support '${type}'`);\n            }\n        }\n        if (tables.length === 0) {\n            throw new SyntaxError(\"'InsertQuery' must have a From component\");\n        }\n        if (fields.length === 0) {\n            throw new SyntaxError(\"'InsertQuery' requires a Fields component\");\n        }\n        if (values.length === 0 && fields[0][1].length !== 0) {\n            throw new SyntaxError(\"'InsertQuery' requires Values component to be present if Fields are provided \");\n        }\n        if (fields.length !== 0 &&\n            values.length !== 0 &&\n            !['SelectQuery', 'UnionQuery'].includes(values[0][0]) &&\n            fields[0].length !== values[0].length) {\n            throw new SyntaxError(\"'InsertQuery' requires Fields and Values components to have the same length or use a query for Values\");\n        }\n        return [\n            'InsertQuery',\n            ...tables,\n            ...fields,\n            ...values,\n            ...where,\n        ];\n    },\n    UpdateQuery: (args) => {\n        const tables = [];\n        let fields = [];\n        let values = [];\n        let where = [];\n        for (const arg of args) {\n            if (!isAbstractSqlQuery(arg)) {\n                throw new SyntaxError('`UpdateQuery` args must all be arrays');\n            }\n            const [type, ...rest] = arg;\n            switch (type) {\n                case 'Fields':\n                    if (fields.length !== 0) {\n                        throw new SyntaxError(`'UpdateQuery' can only accept one '${type}'`);\n                    }\n                    checkMinArgs('Update fields', rest, 1);\n                    fields = [arg];\n                    break;\n                case 'Values':\n                    if (values.length !== 0) {\n                        throw new SyntaxError(`'UpdateQuery' can only accept one '${type}'`);\n                    }\n                    checkArgs('Update values', rest, 1);\n                    const valuesArray = getAbstractSqlQuery(rest, 0);\n                    checkMinArgs('Update values array', valuesArray, 1);\n                    values = [['Values', valuesArray.map(Value)]];\n                    break;\n                case 'From':\n                    tables.push(typeRules[type](rest));\n                    break;\n                case 'Where':\n                    if (where.length !== 0) {\n                        throw new SyntaxError(`'UpdateQuery' can only accept one '${type}'`);\n                    }\n                    where = [typeRules[type](rest)];\n                    break;\n                default:\n                    throw new SyntaxError(`'UpdateQuery' does not support '${type}'`);\n            }\n        }\n        if (tables.length === 0) {\n            throw new SyntaxError(\"'UpdateQuery' must have a From component\");\n        }\n        if (fields.length === 0) {\n            throw new SyntaxError(\"'UpdateQuery' requires a Fields component\");\n        }\n        if (values.length === 0) {\n            throw new SyntaxError(\"'UpdateQuery' requires a Values component\");\n        }\n        return [\n            'UpdateQuery',\n            ...tables,\n            ...fields,\n            ...values,\n            ...where,\n        ];\n    },\n    DeleteQuery: (args) => {\n        const tables = [];\n        let where = [];\n        for (const arg of args) {\n            if (!isAbstractSqlQuery(arg)) {\n                throw new SyntaxError('`DeleteQuery` args must all be arrays');\n            }\n            const [type, ...rest] = arg;\n            switch (type) {\n                case 'From':\n                    tables.push(typeRules[type](rest));\n                    break;\n                case 'Where':\n                    if (where.length !== 0) {\n                        throw new SyntaxError(`'DeleteQuery' can only accept one '${type}'`);\n                    }\n                    where = [typeRules[type](rest)];\n                    break;\n                default:\n                    throw new SyntaxError(`'DeleteQuery' does not support '${type}'`);\n            }\n        }\n        if (tables.length === 0) {\n            throw new SyntaxError(\"'DeleteQuery' must have a From component\");\n        }\n        return ['DeleteQuery', ...tables, ...where];\n    },\n    Now: rewriteMatch('Now', [], Helper(([]) => ['CurrentTimestamp'])),\n    Contains: rewriteMatch('Contains', [TextValue, TextValue], Helper(([haystack, needle]) => [\n        'Like',\n        haystack,\n        [\n            'Concatenate',\n            ['EmbeddedText', '%'],\n            escapeForLike(needle),\n            ['EmbeddedText', '%'],\n        ],\n    ])),\n    Substringof: rewriteMatch('Substringof', [TextValue, TextValue], Helper(([needle, haystack]) => [\n        'Like',\n        haystack,\n        [\n            'Concatenate',\n            ['EmbeddedText', '%'],\n            escapeForLike(needle),\n            ['EmbeddedText', '%'],\n        ],\n    ])),\n    Startswith: rewriteMatch('Startswith', [TextValue, TextValue], Helper(([haystack, needle]) => [\n        'Like',\n        haystack,\n        ['Concatenate', escapeForLike(needle), ['EmbeddedText', '%']],\n    ])),\n    Endswith: rewriteMatch('Endswith', [TextValue, TextValue], Helper(([haystack, needle]) => [\n        'Like',\n        haystack,\n        ['Concatenate', ['EmbeddedText', '%'], escapeForLike(needle)],\n    ])),\n    IndexOf: rewriteMatch('IndexOf', [TextValue, TextValue], Helper(([haystack, needle]) => [\n        'Subtract',\n        ['StrPos', haystack, needle],\n        ['Number', 1],\n    ])),\n    Indexof: rewriteMatch('Indexof', [TextValue, TextValue], Helper(([haystack, needle]) => [\n        'Subtract',\n        ['StrPos', haystack, needle],\n        ['Number', 1],\n    ])),\n};\nconst AbstractSQLOptimiser = (abstractSQL, $noBinds = false) => {\n    noBinds = $noBinds;\n    do {\n        helped = false;\n        const [type, ...rest] = abstractSQL;\n        switch (type) {\n            case 'SelectQuery':\n            case 'UnionQuery':\n            case 'InsertQuery':\n            case 'UpdateQuery':\n            case 'DeleteQuery':\n                abstractSQL = typeRules[type](rest);\n                break;\n            case 'UpsertQuery':\n                checkArgs('UpsertQuery', rest, 2);\n                const insertQuery = getAbstractSqlQuery(rest, 0);\n                const updateQuery = getAbstractSqlQuery(rest, 1);\n                if (insertQuery[0] !== 'InsertQuery' ||\n                    updateQuery[0] !== 'UpdateQuery') {\n                    throw new SyntaxError('UpsertQuery must have [InsertQuery, UpdateQuery] provided');\n                }\n                abstractSQL = [\n                    'UpsertQuery',\n                    typeRules.InsertQuery(insertQuery.slice(1)),\n                    typeRules.UpdateQuery(updateQuery.slice(1)),\n                ];\n                break;\n            default:\n                abstractSQL = AnyValue(abstractSQL);\n        }\n    } while (helped);\n    return abstractSQL;\n};\nexports.AbstractSQLOptimiser = AbstractSQLOptimiser;\n//# sourceMappingURL=AbstractSQLOptimiser.js.map","module.exports = require(\"crypto\");","var OMeta = require(\"ometa-js/lib/ometajs/core\"), _ = require(\"lodash\"), SBVRLibs = exports.SBVRLibs = OMeta._extend({});\n\nSBVRLibs.initialize = function() {\n    this.currentVocabulary = \"\";\n    this.vocabularies = {};\n    this.factTypes = {};\n};\n\nSBVRLibs.ApplyFirstExisting = function(rules, ruleArgs) {\n    null == ruleArgs && (ruleArgs = []);\n    for (var i = 0; i < rules.length; i++) if (null != this[rules[i]]) return ruleArgs.length > 0 ? this._applyWithArgs.apply(this, [ rules[i] ].concat(ruleArgs)) : this._apply(rules[i]);\n};\n\nSBVRLibs.IdentifiersEqual = function(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n};\n\nSBVRLibs.FollowConceptType = function(identifier) {\n    var conceptTypes = this.vocabularies[identifier[2]].ConceptTypes;\n    identifier = identifier.slice(0, 3);\n    return !!conceptTypes.hasOwnProperty(identifier) && conceptTypes[identifier];\n};\n\nSBVRLibs.AddVocabulary = function(vocabulary, baseSynonym) {\n    this.currentVocabulary = baseSynonym;\n    this.vocabularies.hasOwnProperty(baseSynonym) || (this.vocabularies[baseSynonym] = {\n        Term: {},\n        Name: {},\n        IdentifierChildren: {},\n        ConceptTypes: {}\n    });\n    this.vocabularies.hasOwnProperty(vocabulary) || (this.vocabularies[vocabulary] = this.vocabularies[baseSynonym]);\n};\n\nvar formatFactType = function(factType) {\n    return factType.map(function(v) {\n        return v[1];\n    }).join(\" \");\n};\n\nSBVRLibs.AddFactType = function(factType, realFactType) {\n    for (var mappedFactType = [], matchingFactTypes = _.isEqual(factType, realFactType), i = 0; i < realFactType.length; i++) {\n        var realFactTypePart = realFactType[i];\n        mappedFactType[i] = realFactTypePart.slice(0, 3);\n        if (\"Verb\" !== realFactTypePart[0]) if (matchingFactTypes) mappedFactType[i][3] = i; else {\n            for (var mappingFound = !1, j = 0; j < factType.length; j++) {\n                var factTypePart = factType[j];\n                if (\"Verb\" !== factTypePart[0] && this.IdentifiersEqual(realFactTypePart, factTypePart) && realFactTypePart.length === factTypePart.length && (realFactTypePart.length < 4 || realFactTypePart[3][1] === factTypePart[3][1])) {\n                    if (mappingFound) throw new Error('Ambiguous use of fact type \"' + formatFactType(factType) + '\", please add explicit numbering');\n                    mappingFound = !0;\n                    mappedFactType[i][3] = j;\n                }\n            }\n            if (!mappingFound) throw new Error('Unable to map identifiers for \"' + formatFactType(factType) + '\", please add explicit numbering');\n        }\n    }\n    this._traverseFactType(factType, mappedFactType);\n};\n\nSBVRLibs._traverseFactType = function(factType, create) {\n    var $elf = this, traverseRecurse = function(currentFactTypePart, remainingFactType, currentLevel) {\n        if (null == currentFactTypePart) {\n            create && (currentLevel.__valid = create);\n            return currentLevel;\n        }\n        var finalLevel, finalLevels = {};\n        switch (currentFactTypePart[0]) {\n          case \"Verb\":\n            currentFactTypePart = currentFactTypePart.slice(0, 2);\n            break;\n\n          default:\n            currentFactTypePart = currentFactTypePart.slice(0, 3);\n        }\n        if (currentLevel.hasOwnProperty(currentFactTypePart) || create && (currentLevel[currentFactTypePart] = {})) {\n            finalLevel = traverseRecurse(remainingFactType[0], remainingFactType.slice(1), currentLevel[currentFactTypePart]);\n            !1 !== finalLevel && Object.assign(finalLevels, finalLevel);\n        }\n        if (!create && (\"Term\" === currentFactTypePart[0] || \"Name\" === currentFactTypePart[0])) for (;!1 !== (currentFactTypePart = $elf.FollowConceptType(currentFactTypePart)); ) if (currentLevel.hasOwnProperty(currentFactTypePart)) {\n            finalLevel = traverseRecurse(remainingFactType[0], remainingFactType.slice(1), currentLevel[currentFactTypePart]);\n            !1 !== finalLevel && Object.assign(finalLevels, finalLevel);\n        }\n        return !0 !== _.isEmpty(finalLevels) && finalLevels;\n    };\n    return traverseRecurse(factType[0], factType.slice(1), this.factTypes);\n};","\"use strict\";\n\nvar toPosInt = require(\"es5-ext/number/to-pos-integer\");\n\nmodule.exports = function (optsLength, fnLength, isAsync) {\n\tvar length;\n\tif (isNaN(optsLength)) {\n\t\tlength = fnLength;\n\t\tif (!(length >= 0)) return 1;\n\t\tif (isAsync && length) return length - 1;\n\t\treturn length;\n\t}\n\tif (optsLength === false) return false;\n\treturn toPosInt(optsLength);\n};\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nvar map = { function: true, object: true };\n\nmodule.exports = function (value) { return (isValue(value) && map[typeof value]) || false; };\n","\"use strict\";\n\nvar isValue = require(\"../value/is\");\n\n// prettier-ignore\nvar possibleTypes = { \"object\": true, \"function\": true, \"undefined\": true /* document.all */ };\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) return false;\n\treturn hasOwnProperty.call(possibleTypes, typeof value);\n};\n","\"use strict\";\n\nvar numberIsNaN       = require(\"../../number/is-nan\")\n  , toPosInt          = require(\"../../number/to-pos-integer\")\n  , value             = require(\"../../object/valid-value\")\n  , indexOf           = Array.prototype.indexOf\n  , objHasOwnProperty = Object.prototype.hasOwnProperty\n  , abs               = Math.abs\n  , floor             = Math.floor;\n\nmodule.exports = function (searchElement/*, fromIndex*/) {\n\tvar i, length, fromIndex, val;\n\tif (!numberIsNaN(searchElement)) return indexOf.apply(this, arguments);\n\n\tlength = toPosInt(value(this).length);\n\tfromIndex = arguments[1];\n\tif (isNaN(fromIndex)) fromIndex = 0;\n\telse if (fromIndex >= 0) fromIndex = floor(fromIndex);\n\telse fromIndex = toPosInt(this.length) - floor(abs(fromIndex));\n\n\tfor (i = fromIndex; i < length; ++i) {\n\t\tif (objHasOwnProperty.call(this, i)) {\n\t\t\tval = this[i];\n\t\t\tif (numberIsNaN(val)) return i; // Jslint: ignore\n\t\t}\n\t}\n\treturn -1;\n};\n","\"use strict\";\n\nvar callable = require(\"./valid-callable\")\n  , forEach  = require(\"./for-each\")\n  , call     = Function.prototype.call;\n\nmodule.exports = function (obj, cb/*, thisArg*/) {\n\tvar result = {}, thisArg = arguments[2];\n\tcallable(cb);\n\tforEach(obj, function (value, key, targetObj, index) {\n\t\tresult[key] = call.call(cb, thisArg, value, key, targetObj, index);\n\t});\n\treturn result;\n};\n","'use strict';\n\nvar ensureCallable = function (fn) {\n\tif (typeof fn !== 'function') throw new TypeError(fn + \" is not a function\");\n\treturn fn;\n};\n\nvar byObserver = function (Observer) {\n\tvar node = document.createTextNode(''), queue, currentQueue, i = 0;\n\tnew Observer(function () {\n\t\tvar callback;\n\t\tif (!queue) {\n\t\t\tif (!currentQueue) return;\n\t\t\tqueue = currentQueue;\n\t\t} else if (currentQueue) {\n\t\t\tqueue = currentQueue.concat(queue);\n\t\t}\n\t\tcurrentQueue = queue;\n\t\tqueue = null;\n\t\tif (typeof currentQueue === 'function') {\n\t\t\tcallback = currentQueue;\n\t\t\tcurrentQueue = null;\n\t\t\tcallback();\n\t\t\treturn;\n\t\t}\n\t\tnode.data = (i = ++i % 2); // Invoke other batch, to handle leftover callbacks in case of crash\n\t\twhile (currentQueue) {\n\t\t\tcallback = currentQueue.shift();\n\t\t\tif (!currentQueue.length) currentQueue = null;\n\t\t\tcallback();\n\t\t}\n\t}).observe(node, { characterData: true });\n\treturn function (fn) {\n\t\tensureCallable(fn);\n\t\tif (queue) {\n\t\t\tif (typeof queue === 'function') queue = [queue, fn];\n\t\t\telse queue.push(fn);\n\t\t\treturn;\n\t\t}\n\t\tqueue = fn;\n\t\tnode.data = (i = ++i % 2);\n\t};\n};\n\nmodule.exports = (function () {\n\t// Node.js\n\tif ((typeof process === 'object') && process && (typeof process.nextTick === 'function')) {\n\t\treturn process.nextTick;\n\t}\n\n\t// queueMicrotask\n\tif (typeof queueMicrotask === \"function\") {\n\t\treturn function (cb) { queueMicrotask(ensureCallable(cb)); };\n\t}\n\n\t// MutationObserver\n\tif ((typeof document === 'object') && document) {\n\t\tif (typeof MutationObserver === 'function') return byObserver(MutationObserver);\n\t\tif (typeof WebKitMutationObserver === 'function') return byObserver(WebKitMutationObserver);\n\t}\n\n\t// W3C Draft\n\t// http://dvcs.w3.org/hg/webperf/raw-file/tip/specs/setImmediate/Overview.html\n\tif (typeof setImmediate === 'function') {\n\t\treturn function (cb) { setImmediate(ensureCallable(cb)); };\n\t}\n\n\t// Wide available standard\n\tif ((typeof setTimeout === 'function') || (typeof setTimeout === 'object')) {\n\t\treturn function (cb) { setTimeout(ensureCallable(cb), 0); };\n\t}\n\n\treturn null;\n}());\n","module.exports = function deepFreeze (o) {\n  Object.freeze(o);\n\n  Object.getOwnPropertyNames(o).forEach(function (prop) {\n    if (o.hasOwnProperty(prop)\n    && o[prop] !== null\n    && (typeof o[prop] === \"object\" || typeof o[prop] === \"function\")\n    && !Object.isFrozen(o[prop])) {\n      deepFreeze(o[prop]);\n    }\n  });\n  \n  return o;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Object.setPrototypeOf : require(\"./shim\");\n","/// <references types=\"websql\"/>\r\nimport type * as Mysql from 'mysql';\r\nimport type * as Pg from 'pg';\r\nimport type * as PgConnectionString from 'pg-connection-string';\r\nimport type { Resolvable } from '../sbvr-api/common-types';\r\n\r\nimport { Engines } from '@balena/abstract-sql-compiler';\r\nimport * as Bluebird from 'bluebird';\r\nimport * as EventEmitter from 'eventemitter3';\r\nimport * as _ from 'lodash';\r\nimport { TypedError } from 'typed-error';\r\nimport * as env from '../config-loader/env';\r\n\r\nexport const metrics = new EventEmitter();\r\n\r\nexport interface CodedError extends Error {\r\n\tcode: number | string;\r\n}\r\n\r\ntype CreateTransactionFn = (stackTraceErr?: Error) => Promise<Tx>;\r\ntype CloseTransactionFn = () => void;\r\nexport interface Row {\r\n\t[fieldName: string]: any;\r\n}\r\nexport interface Result {\r\n\trows: Row[];\r\n\trowsAffected: number;\r\n\tinsertId?: number;\r\n}\r\n\r\nexport type Sql = string;\r\nexport type Bindings = any[];\r\n\r\nconst isSqlError = (value: any): value is SQLError => {\r\n\treturn (\r\n\t\tvalue != null &&\r\n\t\tvalue.constructor != null &&\r\n\t\tvalue.constructor.name === 'SQLError'\r\n\t);\r\n};\r\n\r\nexport class DatabaseError extends TypedError {\r\n\tpublic code: number | string;\r\n\tconstructor(message?: string | CodedError | SQLError) {\r\n\t\tif (isSqlError(message)) {\r\n\t\t\t// If this is a SQLError we have to handle it specially (since it's not actually an instance of Error)\r\n\t\t\tsuper(message.message as string);\r\n\t\t} else {\r\n\t\t\tsuper(message);\r\n\t\t}\r\n\t\tif (\r\n\t\t\tmessage != null &&\r\n\t\t\ttypeof message !== 'string' &&\r\n\t\t\tmessage.code != null\r\n\t\t) {\r\n\t\t\t// If the message has a code then use that as our code.\r\n\t\t\tthis.code = message.code;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ConstraintError extends DatabaseError {}\r\nexport class UniqueConstraintError extends ConstraintError {}\r\nexport class ForeignKeyConstraintError extends ConstraintError {}\r\nexport class CheckConstraintError extends ConstraintError {}\r\nexport class ExclusionConstraintError extends ConstraintError {}\r\nexport class TransactionClosedError extends DatabaseError {}\r\nexport class ReadOnlyViolationError extends DatabaseError {}\r\n\r\nconst wrapDatabaseError = (err: CodedError): DatabaseError => {\r\n\tmetrics.emit('db_error', err);\r\n\tif (!(err instanceof DatabaseError)) {\r\n\t\t// Wrap the error so we can catch it easier later\r\n\t\treturn new DatabaseError(err);\r\n\t}\r\n\treturn err;\r\n};\r\n\r\nconst alwaysExport = {\r\n\tDatabaseError,\r\n\tConstraintError,\r\n\tUniqueConstraintError,\r\n\tForeignKeyConstraintError,\r\n\tCheckConstraintError,\r\n\tExclusionConstraintError,\r\n\tTransactionClosedError,\r\n\tReadOnlyViolationError,\r\n};\r\ntype BaseDatabase = typeof alwaysExport;\r\n\r\ninterface TransactionFn {\r\n\t<T>(fn: (tx: Tx) => Resolvable<T>): Promise<T>;\r\n\t(): Promise<Tx>;\r\n}\r\n\r\nexport interface Database extends BaseDatabase {\r\n\tengine: Engines;\r\n\texecuteSql: (\r\n\t\tthis: Database,\r\n\t\tsql: Sql,\r\n\t\tbindings?: Bindings,\r\n\t) => Promise<Result>;\r\n\ttransaction: TransactionFn;\r\n\treadTransaction: TransactionFn;\r\n}\r\n\r\nexport const engines: {\r\n\t[engine: string]: (connectString: string | object) => Database;\r\n} = {};\r\n\r\nconst atomicExecuteSql: Database['executeSql'] = async function (\r\n\tsql,\r\n\tbindings,\r\n) {\r\n\treturn await this.transaction(\r\n\t\tasync (tx) => await tx.executeSql(sql, bindings),\r\n\t);\r\n};\r\n\r\nconst asyncTryFn = (fn: () => any) => {\r\n\tPromise.resolve().then(fn);\r\n};\r\n\r\ntype RejectedFunctions = (message: string) => {\r\n\texecuteSql: Tx['executeSql'];\r\n\trollback: Tx['rollback'];\r\n};\r\nconst getRejectedFunctions: RejectedFunctions = env.DEBUG\r\n\t? (message) => {\r\n\t\t\t// In debug mode we create the error here to give the stack trace of where we first closed the transaction,\r\n\t\t\t// but it adds significant overhead for a production environment\r\n\t\t\tconst rejectionValue = new TransactionClosedError(message);\r\n\t\t\tconst rejectFn = async () => {\r\n\t\t\t\t// We return a new rejected promise on each call so that errors are automatically logged if the\r\n\t\t\t\t// rejection is not handled (but only if it is not handled)\r\n\t\t\t\tthrow rejectionValue;\r\n\t\t\t};\r\n\t\t\treturn {\r\n\t\t\t\texecuteSql: rejectFn,\r\n\t\t\t\trollback: rejectFn,\r\n\t\t\t};\r\n\t  }\r\n\t: (message) => {\r\n\t\t\tconst rejectFn = async () => {\r\n\t\t\t\tthrow new TransactionClosedError(message);\r\n\t\t\t};\r\n\t\t\treturn {\r\n\t\t\t\texecuteSql: rejectFn,\r\n\t\t\t\trollback: rejectFn,\r\n\t\t\t};\r\n\t  };\r\n\r\nconst onEnd: Tx['on'] = (name: string, fn: () => void) => {\r\n\tif (name === 'end') {\r\n\t\tasyncTryFn(fn);\r\n\t}\r\n};\r\nconst onRollback: Tx['on'] = (name: string, fn: () => void) => {\r\n\tif (name === 'rollback') {\r\n\t\tasyncTryFn(fn);\r\n\t}\r\n};\r\n\r\nclass AutomaticClose {\r\n\tprivate automaticCloseTimeout: ReturnType<typeof setTimeout>;\r\n\tprivate automaticClose: () => void;\r\n\tprivate pending: false | number = 0;\r\n\tconstructor(tx: Tx, private stackTraceErr?: Error) {\r\n\t\tthis.automaticClose = () => {\r\n\t\t\tconsole.error(\r\n\t\t\t\t`Transaction still open after ${env.db.timeoutMS}ms without an execute call.`,\r\n\t\t\t);\r\n\t\t\tif (this.stackTraceErr) {\r\n\t\t\t\tconsole.error(this.stackTraceErr.stack);\r\n\t\t\t}\r\n\t\t\ttx.rollback();\r\n\t\t};\r\n\t\tthis.automaticCloseTimeout = setTimeout(\r\n\t\t\tthis.automaticClose,\r\n\t\t\tenv.db.timeoutMS,\r\n\t\t);\r\n\t}\r\n\tpublic incrementPending() {\r\n\t\tif (this.pending === false) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.pending++;\r\n\t\tclearTimeout(this.automaticCloseTimeout);\r\n\t}\r\n\tpublic decrementPending() {\r\n\t\tif (this.pending === false) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.pending--;\r\n\t\t// We only ever want one timeout running at a time, hence not using <=\r\n\t\tif (this.pending === 0) {\r\n\t\t\tthis.automaticCloseTimeout = setTimeout(\r\n\t\t\t\tthis.automaticClose,\r\n\t\t\t\tenv.db.timeoutMS,\r\n\t\t\t);\r\n\t\t} else if (this.pending < 0) {\r\n\t\t\tconsole.error('Pending transactions is less than 0, wtf?');\r\n\t\t\tthis.pending = 0;\r\n\t\t}\r\n\t}\r\n\tpublic cancelPending() {\r\n\t\t// Set pending to false to cancel all pending.\r\n\t\tthis.pending = false;\r\n\t\tclearTimeout(this.automaticCloseTimeout);\r\n\t}\r\n}\r\n\r\nexport abstract class Tx {\r\n\tprivate closed = false;\r\n\tprotected automaticClose: AutomaticClose;\r\n\r\n\tconstructor(\r\n\t\tprotected readOnly: boolean,\r\n\t\tstackTraceErr?: Error | AutomaticClose,\r\n\t) {\r\n\t\tif (stackTraceErr instanceof AutomaticClose) {\r\n\t\t\tthis.automaticClose = stackTraceErr;\r\n\t\t} else {\r\n\t\t\tthis.automaticClose = new AutomaticClose(this, stackTraceErr);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate closeTransaction(message: string): void {\r\n\t\tthis.automaticClose.cancelPending();\r\n\t\tconst { executeSql, rollback } = getRejectedFunctions(message);\r\n\t\tthis.executeSql = executeSql;\r\n\t\tthis.rollback = this.end = rollback;\r\n\t\tthis.closed = true;\r\n\t}\r\n\tpublic isClosed() {\r\n\t\treturn this.closed;\r\n\t}\r\n\r\n\tprotected abstract clone(readOnly?: boolean): Tx;\r\n\tpublic asReadOnly() {\r\n\t\tif (this.readOnly) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\treturn this.clone(true);\r\n\t}\r\n\tpublic isReadOnly() {\r\n\t\treturn this.readOnly;\r\n\t}\r\n\r\n\tpublic async executeSql(\r\n\t\tsql: Sql,\r\n\t\tbindings: Bindings = [],\r\n\t\t...args: any[]\r\n\t): Promise<Result> {\r\n\t\tif (this.readOnly && !/^\\s*SELECT\\s(?:[^;]|;\\s*SELECT\\s)*$/.test(sql)) {\r\n\t\t\tthrow new ReadOnlyViolationError(\r\n\t\t\t\t`Attempted to run a non-SELECT statement in a read-only tx: ${sql}`,\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn await this.$executeSql(sql, bindings, ...args);\r\n\t}\r\n\tprotected async $executeSql(\r\n\t\tsql: Sql,\r\n\t\tbindings: Bindings = [],\r\n\t\t...args: any[]\r\n\t): Promise<Result> {\r\n\t\tthis.automaticClose.incrementPending();\r\n\r\n\t\tconst t0 = Date.now();\r\n\t\ttry {\r\n\t\t\treturn await this._executeSql(sql, bindings, ...args);\r\n\t\t} catch (err) {\r\n\t\t\tthrow wrapDatabaseError(err);\r\n\t\t} finally {\r\n\t\t\tthis.automaticClose.decrementPending();\r\n\t\t\tconst queryTime = Date.now() - t0;\r\n\t\t\tmetrics.emit('db_query_time', {\r\n\t\t\t\tqueryTime,\r\n\t\t\t\t// metrics-TODO: statistics on query types (SELECT, INSERT)\r\n\t\t\t\t// themselves should be gathered by postgres, while at this\r\n\t\t\t\t// scope in pine, we should report the overall query time as\r\n\t\t\t\t// being associated with an HTTP method on the given model\r\n\t\t\t\t// (eg. [PUT, Device])\r\n\t\t\t\t//\r\n\t\t\t\t// metrics-TODO: evaluate whether a request to a model can,\r\n\t\t\t\t// with hooks, make multiple DB queries in such a way that\r\n\t\t\t\t// it would be a statistically significant difference in the\r\n\t\t\t\t// \"query time\" metric if we were to report them individually\r\n\t\t\t\t// by attaching here, vs. aggregating all query times for a\r\n\t\t\t\t// given request as one figure.\r\n\t\t\t\t//\r\n\t\t\t\t// Grab the first word of the query and regard that as the\r\n\t\t\t\t// \"query type\" (to be improved in line with the above\r\n\t\t\t\t// TODO's)\r\n\t\t\t\tqueryType: sql.split(' ', 1)[0],\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\tpublic async rollback(): Promise<void> {\r\n\t\ttry {\r\n\t\t\tconst promise = this._rollback();\r\n\t\t\tthis.closeTransaction('Transaction has been rolled back.');\r\n\r\n\t\t\tawait promise;\r\n\t\t} finally {\r\n\t\t\tthis.listeners.rollback.forEach(asyncTryFn);\r\n\t\t\tthis.on = onRollback;\r\n\t\t\tthis.clearListeners();\r\n\t\t}\r\n\t}\r\n\tpublic async end(): Promise<void> {\r\n\t\tconst promise = this._commit();\r\n\t\tthis.closeTransaction('Transaction has been ended.');\r\n\r\n\t\tawait promise;\r\n\r\n\t\tthis.listeners.end.forEach(asyncTryFn);\r\n\t\tthis.on = onEnd;\r\n\t\tthis.clearListeners();\r\n\t}\r\n\r\n\tprivate listeners: {\r\n\t\tend: Array<() => void>;\r\n\t\trollback: Array<() => void>;\r\n\t} = {\r\n\t\tend: [],\r\n\t\trollback: [],\r\n\t};\r\n\tpublic on(name: keyof Tx['listeners'], fn: () => void): void {\r\n\t\tthis.listeners[name].push(fn);\r\n\t}\r\n\r\n\tprivate clearListeners() {\r\n\t\tthis.listeners.end.length = 0;\r\n\t\tthis.listeners.rollback.length = 0;\r\n\t}\r\n\r\n\tprotected abstract _executeSql(\r\n\t\tsql: Sql,\r\n\t\tbindings: Bindings,\r\n\t\taddReturning?: false | string,\r\n\t): Promise<Result>;\r\n\tprotected abstract _rollback(): Promise<void>;\r\n\tprotected abstract _commit(): Promise<void>;\r\n\r\n\tpublic abstract tableList(extraWhereClause?: string): Promise<Result>;\r\n\tpublic async dropTable(tableName: string, ifExists = true) {\r\n\t\tif (typeof tableName !== 'string') {\r\n\t\t\tthrow new TypeError('\"tableName\" must be a string');\r\n\t\t}\r\n\t\tif (tableName.includes('\"')) {\r\n\t\t\tthrow new TypeError('\"tableName\" cannot include double quotes');\r\n\t\t}\r\n\t\tif (this.readOnly) {\r\n\t\t\tthrow new ReadOnlyViolationError(\r\n\t\t\t\t'Cannot drop tables in a read-only transaction',\r\n\t\t\t);\r\n\t\t}\r\n\t\tconst ifExistsStr = ifExists === true ? ' IF EXISTS' : '';\r\n\t\treturn await this.$executeSql(`DROP TABLE${ifExistsStr} \"${tableName}\";`);\r\n\t}\r\n}\r\n\r\nconst getStackTraceErr: () => Error | undefined = env.DEBUG\r\n\t? () => new Error()\r\n\t: (_.noop as () => undefined);\r\n\r\nconst createTransaction = (createFunc: CreateTransactionFn): TransactionFn => {\r\n\treturn async <T>(fn?: (tx: Tx) => Resolvable<T>): Promise<T | Tx> => {\r\n\t\tconst stackTraceErr = getStackTraceErr();\r\n\t\tlet tx;\r\n\t\ttry {\r\n\t\t\ttx = await createFunc(stackTraceErr);\r\n\t\t} catch (err) {\r\n\t\t\tthrow wrapDatabaseError(err);\r\n\t\t}\r\n\t\tif (fn) {\r\n\t\t\ttry {\r\n\t\t\t\tconst result = await fn(tx);\r\n\t\t\t\tawait tx.end();\r\n\t\t\t\treturn result;\r\n\t\t\t} catch (err) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tawait tx.rollback();\r\n\t\t\t\t} catch {\r\n\t\t\t\t\t// Ignore rollback errors as we want to throw the original error\r\n\t\t\t\t}\r\n\t\t\t\tthrow err;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn tx;\r\n\t\t}\r\n\t};\r\n};\r\n\r\nlet maybePg: typeof Pg | undefined;\r\ntry {\r\n\t// tslint:disable-next-line:no-var-requires\r\n\tmaybePg = require('pg');\r\n} catch (e) {\r\n\t// Ignore errors\r\n}\r\nif (maybePg != null) {\r\n\tconst pg = maybePg;\r\n\tengines.postgres = (connectString: string | object): Database => {\r\n\t\tconst PG_UNIQUE_VIOLATION = '23505';\r\n\t\tconst PG_FOREIGN_KEY_VIOLATION = '23503';\r\n\t\tconst PG_CHECK_CONSTRAINT_VIOLATION = '23514';\r\n\t\tconst PG_EXCLUSION_CONSTRAINT_VIOLATION = '23P01';\r\n\r\n\t\tlet config: Pg.PoolConfig;\r\n\t\tif (typeof connectString === 'string') {\r\n\t\t\tconst pgConnectionString: typeof PgConnectionString = require('pg-connection-string');\r\n\t\t\t// We have to cast because of the use of null vs undefined\r\n\t\t\tconfig = pgConnectionString.parse(connectString) as Pg.PoolConfig;\r\n\t\t} else {\r\n\t\t\tconfig = connectString;\r\n\t\t}\r\n\t\tconfig.max = env.db.poolSize;\r\n\t\tconfig.idleTimeoutMillis = env.db.idleTimeoutMillis;\r\n\t\tconfig.statement_timeout = env.db.statementTimeout;\r\n\t\tconfig.query_timeout = env.db.queryTimeout;\r\n\t\tconfig.connectionTimeoutMillis = env.db.connectionTimeoutMillis;\r\n\t\tconfig.keepAlive = env.db.keepAlive;\r\n\t\tconst pool = new pg.Pool(config);\r\n\t\tconst { PG_SCHEMA } = process.env;\r\n\t\tif (PG_SCHEMA != null) {\r\n\t\t\tpool.on('connect', (client) => {\r\n\t\t\t\tclient.query({ text: `SET search_path TO \"${PG_SCHEMA}\"` });\r\n\t\t\t});\r\n\t\t\tpool.on('error', (err) => {\r\n\t\t\t\tconsole.error('Pool error:', err.message);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tconst createResult = ({\r\n\t\t\trowCount,\r\n\t\t\trows,\r\n\t\t}: {\r\n\t\t\trowCount: number;\r\n\t\t\trows: Row[];\r\n\t\t}): Result => {\r\n\t\t\treturn {\r\n\t\t\t\trows,\r\n\t\t\t\trowsAffected: rowCount,\r\n\t\t\t\tinsertId: rows?.[0]?.id,\r\n\t\t\t};\r\n\t\t};\r\n\t\tclass PostgresTx extends Tx {\r\n\t\t\tconstructor(\r\n\t\t\t\tprivate db: Pg.PoolClient,\r\n\t\t\t\treadOnly: boolean,\r\n\t\t\t\tstackTraceErr?: Error | AutomaticClose,\r\n\t\t\t) {\r\n\t\t\t\tsuper(readOnly, stackTraceErr);\r\n\t\t\t}\r\n\r\n\t\t\tprotected clone(readOnly = this.readOnly) {\r\n\t\t\t\treturn new PostgresTx(this.db, readOnly, this.automaticClose);\r\n\t\t\t}\r\n\r\n\t\t\tprotected async _executeSql(\r\n\t\t\t\tsql: Sql,\r\n\t\t\t\tbindings: Bindings,\r\n\t\t\t\taddReturning: false | string = false,\r\n\t\t\t) {\r\n\t\t\t\tif (addReturning && /^\\s*(?:INSERT\\s+INTO|UPDATE|DELETE)/i.test(sql)) {\r\n\t\t\t\t\tsql = sql.replace(/;?$/, ' RETURNING \"' + addReturning + '\";');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet result;\r\n\t\t\t\ttry {\r\n\t\t\t\t\tresult = await this.db.query({\r\n\t\t\t\t\t\ttext: sql,\r\n\t\t\t\t\t\tvalues: bindings,\r\n\t\t\t\t\t});\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tif (err.code === PG_UNIQUE_VIOLATION) {\r\n\t\t\t\t\t\tthrow new UniqueConstraintError(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (err.code === PG_FOREIGN_KEY_VIOLATION) {\r\n\t\t\t\t\t\tthrow new ForeignKeyConstraintError(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (err.code === PG_CHECK_CONSTRAINT_VIOLATION) {\r\n\t\t\t\t\t\tthrow new CheckConstraintError(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (err.code === PG_EXCLUSION_CONSTRAINT_VIOLATION) {\r\n\t\t\t\t\t\tthrow new ExclusionConstraintError(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthrow err;\r\n\t\t\t\t}\r\n\t\t\t\treturn createResult(result);\r\n\t\t\t}\r\n\r\n\t\t\tprotected async _rollback() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// Error/dequeue all queued up queries on a rollback, this will not cancel an in-progress query however\r\n\t\t\t\t\t// @ts-expect-error typings do not include this queryQueue\r\n\t\t\t\t\tconst queryQueue = this.db.queryQueue as Pg.Query[];\r\n\t\t\t\t\tif (queryQueue.length > 0) {\r\n\t\t\t\t\t\tconst err = new DatabaseError('Rolling back transaction');\r\n\t\t\t\t\t\tqueryQueue.forEach((query) => {\r\n\t\t\t\t\t\t\tprocess.nextTick(() => {\r\n\t\t\t\t\t\t\t\t// @ts-expect-error typings do not include this function\r\n\t\t\t\t\t\t\t\tquery.handleError(err, this.db.connection);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tqueryQueue.length = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tawait Bluebird.resolve(this.$executeSql('ROLLBACK;')).timeout(\r\n\t\t\t\t\t\tenv.db.rollbackTimeout,\r\n\t\t\t\t\t\t'Rolling back transaction timed out',\r\n\t\t\t\t\t);\r\n\t\t\t\t\tthis.db.release();\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\terr = wrapDatabaseError(err);\r\n\t\t\t\t\tthis.db.release(err);\r\n\t\t\t\t\tthrow err;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tprotected async _commit() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tawait this.$executeSql('COMMIT;');\r\n\t\t\t\t\tthis.db.release();\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tthis.db.release(err);\r\n\t\t\t\t\tthrow err;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tpublic async tableList(extraWhereClause: string = '') {\r\n\t\t\t\tif (extraWhereClause !== '') {\r\n\t\t\t\t\textraWhereClause = 'WHERE ' + extraWhereClause;\r\n\t\t\t\t}\r\n\t\t\t\treturn await this.executeSql(`\r\n\t\t\t\t\tSELECT *\r\n\t\t\t\t\tFROM (\r\n\t\t\t\t\t\tSELECT tablename as name\r\n\t\t\t\t\t\tFROM pg_tables\r\n\t\t\t\t\t\tWHERE schemaname = 'public'\r\n\t\t\t\t\t) t ${extraWhereClause};\r\n\t\t\t\t`);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tengine: Engines.postgres,\r\n\t\t\texecuteSql: atomicExecuteSql,\r\n\t\t\ttransaction: createTransaction(async (stackTraceErr) => {\r\n\t\t\t\tconst client = await pool.connect();\r\n\t\t\t\tconst tx = new PostgresTx(client, false, stackTraceErr);\r\n\t\t\t\ttx.executeSql('START TRANSACTION;');\r\n\t\t\t\treturn tx;\r\n\t\t\t}),\r\n\t\t\treadTransaction: createTransaction(async (stackTraceErr) => {\r\n\t\t\t\tconst client = await pool.connect();\r\n\t\t\t\tconst tx = new PostgresTx(client, false, stackTraceErr);\r\n\t\t\t\ttx.executeSql('START TRANSACTION READ ONLY;');\r\n\t\t\t\treturn tx.asReadOnly();\r\n\t\t\t}),\r\n\t\t\t...alwaysExport,\r\n\t\t};\r\n\t};\r\n}\r\n\r\nlet maybeMysql: typeof Mysql | undefined;\r\ntry {\r\n\t// tslint:disable-next-line:no-var-requires\r\n\tmaybeMysql = require('mysql');\r\n} catch (e) {\r\n\t// Ignore errors\r\n}\r\nif (maybeMysql != null) {\r\n\tconst mysql = maybeMysql;\r\n\tengines.mysql = (options: Mysql.PoolConfig): Database => {\r\n\t\tconst MYSQL_UNIQUE_VIOLATION = 'ER_DUP_ENTRY';\r\n\t\tconst MYSQL_FOREIGN_KEY_VIOLATION = 'ER_ROW_IS_REFERENCED';\r\n\t\tconst MYSQL_CHECK_CONSTRAINT_VIOLATION = 'ER_CHECK_CONSTRAINT_VIOLATED';\r\n\t\tconst pool = mysql.createPool(options);\r\n\t\tpool.on('connection', (db) => {\r\n\t\t\tdb.query(\"SET sql_mode='ANSI_QUOTES';\");\r\n\t\t});\r\n\t\tconst getConnectionAsync = Bluebird.promisify(pool.getConnection, {\r\n\t\t\tcontext: pool,\r\n\t\t});\r\n\r\n\t\tinterface MysqlRowArray extends Array<Row> {\r\n\t\t\taffectedRows: number;\r\n\t\t\tinsertId?: number;\r\n\t\t}\r\n\t\tconst createResult = (rows: MysqlRowArray): Result => {\r\n\t\t\treturn {\r\n\t\t\t\trows,\r\n\t\t\t\trowsAffected: rows.affectedRows,\r\n\t\t\t\tinsertId: rows.insertId,\r\n\t\t\t};\r\n\t\t};\r\n\t\tclass MySqlTx extends Tx {\r\n\t\t\tconstructor(\r\n\t\t\t\tprivate db: Mysql.Connection,\r\n\t\t\t\tprivate close: CloseTransactionFn,\r\n\t\t\t\treadOnly: boolean,\r\n\t\t\t\tstackTraceErr?: Error | AutomaticClose,\r\n\t\t\t) {\r\n\t\t\t\tsuper(readOnly, stackTraceErr);\r\n\t\t\t}\r\n\r\n\t\t\tprotected clone(readOnly = this.readOnly) {\r\n\t\t\t\treturn new MySqlTx(this.db, this.close, readOnly, this.automaticClose);\r\n\t\t\t}\r\n\r\n\t\t\tprotected async _executeSql(sql: Sql, bindings: Bindings) {\r\n\t\t\t\tlet result;\r\n\t\t\t\ttry {\r\n\t\t\t\t\tresult = await Bluebird.fromCallback<MysqlRowArray>((callback) => {\r\n\t\t\t\t\t\tthis.db.query(sql, bindings, callback);\r\n\t\t\t\t\t});\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tif (err.code === MYSQL_UNIQUE_VIOLATION) {\r\n\t\t\t\t\t\t// We know that the type is an IError for mysql, but typescript doesn't like the catch obj sugar\r\n\t\t\t\t\t\tthrow new UniqueConstraintError(err as Mysql.MysqlError);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (err.code === MYSQL_FOREIGN_KEY_VIOLATION) {\r\n\t\t\t\t\t\tthrow new ForeignKeyConstraintError(err as Mysql.MysqlError);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (err.code === MYSQL_CHECK_CONSTRAINT_VIOLATION) {\r\n\t\t\t\t\t\tthrow new CheckConstraintError(err as Mysql.MysqlError);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthrow err;\r\n\t\t\t\t}\r\n\t\t\t\treturn createResult(result);\r\n\t\t\t}\r\n\r\n\t\t\tprotected async _rollback() {\r\n\t\t\t\tconst promise = this.$executeSql('ROLLBACK;');\r\n\t\t\t\tthis.close();\r\n\t\t\t\tawait promise;\r\n\t\t\t}\r\n\r\n\t\t\tprotected async _commit() {\r\n\t\t\t\tconst promise = this.$executeSql('COMMIT;');\r\n\t\t\t\tthis.close();\r\n\t\t\t\tawait promise;\r\n\t\t\t}\r\n\r\n\t\t\tpublic async tableList(extraWhereClause: string = '') {\r\n\t\t\t\tif (extraWhereClause !== '') {\r\n\t\t\t\t\textraWhereClause = ' WHERE ' + extraWhereClause;\r\n\t\t\t\t}\r\n\t\t\t\treturn await this.executeSql(\r\n\t\t\t\t\t`\r\n\t\t\t\t\tSELECT name\r\n\t\t\t\t\tFROM (\r\n\t\t\t\t\t\tSELECT table_name AS name\r\n\t\t\t\t\t\tFROM information_schema.tables\r\n\t\t\t\t\t\tWHERE table_schema = ?\r\n\t\t\t\t\t) t ${extraWhereClause};\r\n\t\t\t\t`,\r\n\t\t\t\t\t[options.database],\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tengine: Engines.mysql,\r\n\t\t\texecuteSql: atomicExecuteSql,\r\n\t\t\ttransaction: createTransaction(async (stackTraceErr) => {\r\n\t\t\t\tconst client = await getConnectionAsync();\r\n\t\t\t\tconst close = () => client.release();\r\n\t\t\t\tconst tx = new MySqlTx(client, close, false, stackTraceErr);\r\n\t\t\t\ttx.executeSql('START TRANSACTION;');\r\n\t\t\t\treturn tx;\r\n\t\t\t}),\r\n\t\t\treadTransaction: createTransaction(async (stackTraceErr) => {\r\n\t\t\t\tconst client = await getConnectionAsync();\r\n\t\t\t\tconst close = () => client.release();\r\n\t\t\t\tconst tx = new MySqlTx(client, close, false, stackTraceErr);\r\n\t\t\t\ttx.executeSql('START TRANSACTION READ ONLY;');\r\n\t\t\t\treturn tx.asReadOnly();\r\n\t\t\t}),\r\n\t\t\t...alwaysExport,\r\n\t\t};\r\n\t};\r\n}\r\n\r\nif (typeof window !== 'undefined' && window.openDatabase != null) {\r\n\tinterface WebSqlResult {\r\n\t\tinsertId?: number;\r\n\t\trowsAffected: number;\r\n\t\trows: {\r\n\t\t\titem: (i: number) => Row;\r\n\t\t\tlength: number;\r\n\t\t};\r\n\t}\r\n\ttype AsyncQuery = [\r\n\t\tSql,\r\n\t\tBindings,\r\n\t\tSQLStatementCallback,\r\n\t\tSQLStatementErrorCallback,\r\n\t];\r\n\tengines.websql = (databaseName: string): Database => {\r\n\t\tconst WEBSQL_CONSTRAINT_ERR = 6;\r\n\r\n\t\tconst db = window.openDatabase(\r\n\t\t\tdatabaseName,\r\n\t\t\t'1.0',\r\n\t\t\t'rulemotion',\r\n\t\t\t2 * 1024 * 1024,\r\n\t\t);\r\n\t\tconst getInsertId = (result: WebSqlResult) => {\r\n\t\t\ttry {\r\n\t\t\t\treturn result.insertId;\r\n\t\t\t} catch (e) {\r\n\t\t\t\t// Ignore the potential DOM exception.\r\n\t\t\t}\r\n\t\t};\r\n\t\tconst createResult = (result: WebSqlResult): Result => {\r\n\t\t\tconst { length } = result.rows;\r\n\t\t\t// We convert `result.rows` to a real array to make it easier to work with\r\n\t\t\tconst rows: Row[] = Array(length);\r\n\t\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\t\trows[i] = result.rows.item(i);\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\trows,\r\n\t\t\t\trowsAffected: result.rowsAffected,\r\n\t\t\t\tinsertId: getInsertId(result),\r\n\t\t\t};\r\n\t\t};\r\n\r\n\t\tclass WebSqlTx extends Tx {\r\n\t\t\tconstructor(\r\n\t\t\t\tprivate tx: WebSqlWrapper,\r\n\t\t\t\treadOnly: boolean,\r\n\t\t\t\tstackTraceErr?: Error | AutomaticClose,\r\n\t\t\t) {\r\n\t\t\t\tsuper(readOnly, stackTraceErr);\r\n\t\t\t}\r\n\r\n\t\t\tprotected clone(readOnly = this.readOnly) {\r\n\t\t\t\treturn new WebSqlTx(this.tx, readOnly, this.automaticClose);\r\n\t\t\t}\r\n\r\n\t\t\tprotected async _executeSql(sql: Sql, bindings: Bindings) {\r\n\t\t\t\tlet result;\r\n\t\t\t\ttry {\r\n\t\t\t\t\tresult = await this.tx.executeSql(sql, bindings);\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tif (err.code === WEBSQL_CONSTRAINT_ERR) {\r\n\t\t\t\t\t\tthrow new ConstraintError('Constraint failed.');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthrow err;\r\n\t\t\t\t}\r\n\t\t\t\treturn createResult(result);\r\n\t\t\t}\r\n\r\n\t\t\tprotected async _rollback(): Promise<void> {\r\n\t\t\t\treturn await this.tx.rollback();\r\n\t\t\t}\r\n\r\n\t\t\tprotected async _commit() {\r\n\t\t\t\tthis.tx.commit();\r\n\t\t\t}\r\n\r\n\t\t\tpublic async tableList(extraWhereClause: string = '') {\r\n\t\t\t\tif (extraWhereClause !== '') {\r\n\t\t\t\t\textraWhereClause = ' AND ' + extraWhereClause;\r\n\t\t\t\t}\r\n\t\t\t\treturn await this.executeSql(`\r\n\t\t\t\t\tSELECT name, sql\r\n\t\t\t\t\tFROM sqlite_master\r\n\t\t\t\t\tWHERE type='table'\r\n\t\t\t\t\tAND name NOT IN (\r\n\t\t\t\t\t\t'__WebKitDatabaseInfoTable__',\r\n\t\t\t\t\t\t'sqlite_sequence'\r\n\t\t\t\t\t)\r\n\t\t\t\t\t${extraWhereClause};\r\n\t\t\t\t`);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tclass WebSqlWrapper {\r\n\t\t\tprivate running = true;\r\n\t\t\tprivate queue: AsyncQuery[] = [];\r\n\r\n\t\t\tconstructor(private tx: SQLTransaction) {\r\n\t\t\t\tthis.asyncRecurse();\r\n\t\t\t}\r\n\r\n\t\t\t// This function is used to recurse executeSql calls and keep the transaction open,\r\n\t\t\t// allowing us to use async calls within the API.\r\n\t\t\tprivate asyncRecurse = () => {\r\n\t\t\t\tlet args: AsyncQuery | undefined;\r\n\t\t\t\t// tslint:disable-next-line no-conditional-assignment\r\n\t\t\t\twhile ((args = this.queue.pop())) {\r\n\t\t\t\t\tconsole.debug('Running', args[0]);\r\n\t\t\t\t\tthis.tx.executeSql(args[0], args[1], args[2], args[3]);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.running) {\r\n\t\t\t\t\tconsole.debug('Looping');\r\n\t\t\t\t\tthis.tx.executeSql('SELECT 0', [], this.asyncRecurse);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tpublic async executeSql(sql: Sql, bindings: Bindings) {\r\n\t\t\t\treturn await new Promise<SQLResultSet>((resolve, reject) => {\r\n\t\t\t\t\tconst successCallback: SQLStatementCallback = (_tx, results) => {\r\n\t\t\t\t\t\tresolve(results);\r\n\t\t\t\t\t};\r\n\t\t\t\t\tconst errorCallback: SQLStatementErrorCallback = (_tx, err) => {\r\n\t\t\t\t\t\treject(err);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tthis.queue.push([sql, bindings, successCallback, errorCallback]);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tpublic async rollback(): Promise<void> {\r\n\t\t\t\treturn await new Promise((resolve) => {\r\n\t\t\t\t\tconst successCallback: SQLStatementCallback = () => {\r\n\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\tthrow new Error('Rollback');\r\n\t\t\t\t\t};\r\n\t\t\t\t\tconst errorCallback: SQLStatementErrorCallback = () => {\r\n\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tthis.queue = [\r\n\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t'RUN A FAILING STATEMENT TO ROLLBACK',\r\n\t\t\t\t\t\t\t[],\r\n\t\t\t\t\t\t\tsuccessCallback,\r\n\t\t\t\t\t\t\terrorCallback,\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t];\r\n\t\t\t\t\tthis.running = false;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tpublic commit() {\r\n\t\t\t\tthis.running = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tengine: Engines.websql,\r\n\t\t\texecuteSql: atomicExecuteSql,\r\n\t\t\ttransaction: createTransaction(\r\n\t\t\t\t(stackTraceErr) =>\r\n\t\t\t\t\tnew Promise((resolve) => {\r\n\t\t\t\t\t\tdb.transaction((tx) => {\r\n\t\t\t\t\t\t\tresolve(\r\n\t\t\t\t\t\t\t\tnew WebSqlTx(new WebSqlWrapper(tx), false, stackTraceErr),\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}),\r\n\t\t\t),\r\n\t\t\treadTransaction: createTransaction(\r\n\t\t\t\t(stackTraceErr) =>\r\n\t\t\t\t\tnew Promise((resolve) => {\r\n\t\t\t\t\t\tdb.transaction((tx) => {\r\n\t\t\t\t\t\t\tresolve(new WebSqlTx(new WebSqlWrapper(tx), true, stackTraceErr));\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}),\r\n\t\t\t),\r\n\t\t\t...alwaysExport,\r\n\t\t};\r\n\t};\r\n}\r\n\r\nexport const connect = (databaseOptions: { engine: string; params: {} }) => {\r\n\tif (engines[databaseOptions.engine] == null) {\r\n\t\tthrow new Error('Unsupported database engine: ' + databaseOptions.engine);\r\n\t}\r\n\treturn engines[databaseOptions.engine](databaseOptions.params);\r\n};\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbstractSQLRules2SQL = exports.checkMinArgs = exports.checkArgs = exports.getAbstractSqlQuery = exports.isAbstractSqlQuery = exports.isNotNullable = exports.isFieldValue = exports.isDurationValue = exports.isJSONValue = exports.isDateValue = exports.isBooleanValue = exports.isNumericValue = exports.isTextValue = exports.comparisons = void 0;\nconst _ = require(\"lodash\");\nconst sbvrTypes = require(\"@balena/sbvr-types\");\nlet fieldOrderings = [];\nlet fieldOrderingsLookup = {};\nlet engine = \"postgres\";\nlet noBinds = false;\nexports.comparisons = {\n    Equals: ' = ',\n    GreaterThan: ' > ',\n    GreaterThanOrEqual: ' >= ',\n    LessThan: ' < ',\n    LessThanOrEqual: ' <= ',\n    NotEquals: ' != ',\n    Like: ' LIKE ',\n};\nconst NestedIndent = (indent) => indent + '\\t';\nconst escapeField = (field) => field === '*' ? '*' : `\"${field}\"`;\nconst AnyValue = (args, indent) => {\n    const [type, ...rest] = args;\n    if (type === 'Case') {\n        return typeRules[type](rest, indent);\n    }\n    for (const matcher of [\n        exports.isJSONValue,\n        exports.isDateValue,\n        exports.isTextValue,\n        exports.isNumericValue,\n        exports.isBooleanValue,\n        exports.isDurationValue,\n    ]) {\n        if (matcher(type)) {\n            return typeRules[type](rest, indent);\n        }\n    }\n    return UnknownValue(args, indent);\n};\nconst UnknownValue = (args, indent) => {\n    const [type, ...rest] = args;\n    switch (type) {\n        case 'Null':\n        case 'Field':\n        case 'ReferencedField':\n        case 'Bind':\n        case 'Cast':\n        case 'Coalesce':\n            return typeRules[type](rest, indent);\n        case 'SelectQuery':\n        case 'UnionQuery':\n            const nestedIndent = NestedIndent(indent);\n            const query = typeRules[type](rest, nestedIndent);\n            return '(' + nestedIndent + query + indent + ')';\n        default:\n            throw new Error(`Invalid \"UnknownValue\" type: ${type}`);\n    }\n};\nconst MatchValue = (matcher) => (args, indent) => {\n    const [type, ...rest] = args;\n    if (matcher(type)) {\n        return typeRules[type](rest, indent);\n    }\n    return UnknownValue(args, indent);\n};\nconst isTextValue = (type) => {\n    return (type === 'Value' ||\n        type === 'Text' ||\n        type === 'EmbeddedText' ||\n        type === 'Concatenate' ||\n        type === 'Lower' ||\n        type === 'Upper' ||\n        type === 'Trim' ||\n        type === 'Replace' ||\n        type === 'Substring' ||\n        type === 'Right');\n};\nexports.isTextValue = isTextValue;\nconst TextValue = MatchValue(exports.isTextValue);\nconst isNumericValue = (type) => {\n    return (type === 'Number' ||\n        type === 'Real' ||\n        type === 'Integer' ||\n        type === 'Add' ||\n        type === 'Subtract' ||\n        type === 'Multiply' ||\n        type === 'Divide' ||\n        type === 'BitwiseAnd' ||\n        type === 'BitwiseShiftRight' ||\n        type === 'CharacterLength' ||\n        type === 'StrPos' ||\n        type === 'Year' ||\n        type === 'Month' ||\n        type === 'Day' ||\n        type === 'Hour' ||\n        type === 'Minute' ||\n        type === 'Second' ||\n        type === 'Fractionalseconds' ||\n        type === 'Totalseconds' ||\n        type === 'Round' ||\n        type === 'Floor' ||\n        type === 'Ceiling' ||\n        type === 'Count' ||\n        type === 'Average' ||\n        type === 'Sum');\n};\nexports.isNumericValue = isNumericValue;\nconst NumericValue = MatchValue(exports.isNumericValue);\nconst isBooleanValue = (type) => {\n    return (type === 'Boolean' ||\n        type === 'Not' ||\n        type === 'And' ||\n        type === 'Or' ||\n        type === 'Exists' ||\n        type === 'NotExists' ||\n        type === 'Between' ||\n        type === 'In' ||\n        type === 'NotIn' ||\n        type === 'Equals' ||\n        type === 'GreaterThan' ||\n        type === 'GreaterThanOrEqual' ||\n        type === 'LessThan' ||\n        type === 'LessThanOrEqual' ||\n        type === 'NotEquals' ||\n        type === 'Like' ||\n        type === 'IsNotDistinctFrom' ||\n        type === 'IsDistinctFrom');\n};\nexports.isBooleanValue = isBooleanValue;\nconst BooleanValue = MatchValue(exports.isBooleanValue);\nconst isDateValue = (type) => {\n    return (type === 'Date' ||\n        type === 'ToDate' ||\n        type === 'ToTime' ||\n        type === 'CurrentTimestamp' ||\n        type === 'CurrentDate');\n};\nexports.isDateValue = isDateValue;\nconst DateValue = MatchValue(exports.isDateValue);\nconst isJSONValue = (type) => {\n    return type === 'AggregateJSON';\n};\nexports.isJSONValue = isJSONValue;\nconst isDurationValue = (type) => {\n    return type === 'Duration';\n};\nexports.isDurationValue = isDurationValue;\nconst DurationValue = MatchValue(exports.isDurationValue);\nconst isFieldValue = (type) => {\n    return type === 'Field' || type === 'ReferencedField';\n};\nexports.isFieldValue = isFieldValue;\nconst Field = (args, indent) => {\n    const [type, ...rest] = args;\n    if (exports.isFieldValue(type)) {\n        return typeRules[type](rest, indent);\n    }\n    else {\n        throw new SyntaxError(`Invalid field type: ${type}`);\n    }\n};\nconst isNotNullable = (node) => {\n    switch (node[0]) {\n        case 'EmbeddedText':\n        case 'Boolean':\n        case 'Bind':\n        case 'Value':\n        case 'Text':\n        case 'Date':\n        case 'Number':\n        case 'Real':\n        case 'Integer':\n        case 'IsDistinctFrom':\n        case 'IsNotDistinctFrom':\n        case 'Exists':\n        case 'NotExists':\n            return true;\n        case 'Coalesce':\n            return node.slice(1).some((n) => exports.isNotNullable(n));\n        case 'Not':\n            return exports.isNotNullable(node[1]);\n    }\n    return false;\n};\nexports.isNotNullable = isNotNullable;\nconst isNotDistinctFrom = (args, indent) => {\n    const a = exports.getAbstractSqlQuery(args, 0);\n    const b = exports.getAbstractSqlQuery(args, 1);\n    const aSql = AnyValue(a, indent);\n    const bSql = AnyValue(b, indent);\n    if (engine === \"postgres\") {\n        const aIsNotNullable = exports.isNotNullable(a);\n        const bIsNotNullable = exports.isNotNullable(b);\n        if (aIsNotNullable && bIsNotNullable) {\n            return `${aSql} = ${bSql}`;\n        }\n        const isNotNullChecks = [];\n        if (!aIsNotNullable) {\n            isNotNullChecks.push(`(${aSql}) IS NOT NULL`);\n        }\n        if (!bIsNotNullable) {\n            isNotNullChecks.push(`(${bSql}) IS NOT NULL`);\n        }\n        const orBothNull = !aIsNotNullable && !bIsNotNullable\n            ? ` OR (${aSql}) IS NULL AND (${bSql}) IS NULL`\n            : '';\n        return `${isNotNullChecks.join(' AND ')} AND (${aSql}) = (${bSql})${orBothNull}`;\n    }\n    else if (engine === \"mysql\") {\n        return aSql + ' <=> ' + bSql;\n    }\n    else if (engine === \"websql\") {\n        return aSql + ' IS ' + bSql;\n    }\n    else {\n        throw new SyntaxError('IsDistinctFrom/IsNotDistinctFrom not supported on: ' + engine);\n    }\n};\nconst isAbstractSqlQuery = (x) => {\n    return Array.isArray(x);\n};\nexports.isAbstractSqlQuery = isAbstractSqlQuery;\nconst getAbstractSqlQuery = (args, index) => {\n    const abstractSqlQuery = args[index];\n    if (!exports.isAbstractSqlQuery(abstractSqlQuery)) {\n        throw new SyntaxError(`Expected AbstractSqlQuery array but got ${typeof abstractSqlQuery}`);\n    }\n    return abstractSqlQuery;\n};\nexports.getAbstractSqlQuery = getAbstractSqlQuery;\nconst Comparison = (comparison) => {\n    return (args, indent) => {\n        exports.checkArgs(comparison, args, 2);\n        const a = AnyValue(exports.getAbstractSqlQuery(args, 0), indent);\n        const b = AnyValue(exports.getAbstractSqlQuery(args, 1), indent);\n        return a + exports.comparisons[comparison] + b;\n    };\n};\nconst NumberMatch = (type) => {\n    return (args) => {\n        exports.checkArgs(type, args, 1);\n        const n = args[0];\n        if (typeof n !== 'number') {\n            throw new SyntaxError(`${type} expected number but got ${typeof n}`);\n        }\n        return `${n}`;\n    };\n};\nconst JoinMatch = (joinType) => {\n    let sqlJoinType;\n    switch (joinType) {\n        case 'Join':\n            sqlJoinType = 'JOIN ';\n            break;\n        case 'LeftJoin':\n            sqlJoinType = 'LEFT JOIN ';\n            break;\n        case 'RightJoin':\n            sqlJoinType = 'RIGHT JOIN ';\n            break;\n        case 'FullJoin':\n            sqlJoinType = 'FULL JOIN ';\n            break;\n        case 'CrossJoin':\n            sqlJoinType = 'CROSS JOIN ';\n            break;\n        default:\n            throw new Error(`Unknown join type: '${joinType}'`);\n    }\n    return (args, indent) => {\n        if (args.length !== 1 && args.length !== 2) {\n            throw new SyntaxError(`\"${joinType}\" requires 1/2 arg(s)`);\n        }\n        const from = MaybeAlias(exports.getAbstractSqlQuery(args, 0), indent, FromMatch);\n        if (args.length === 1) {\n            return sqlJoinType + from;\n        }\n        const [type, ...rest] = exports.getAbstractSqlQuery(args, 1);\n        switch (type) {\n            case 'On':\n                exports.checkArgs('On', rest, 1);\n                const ruleBody = BooleanValue(exports.getAbstractSqlQuery(rest, 0), NestedIndent(indent));\n                return sqlJoinType + from + ' ON ' + ruleBody;\n            default:\n                throw new SyntaxError(`'${joinType}' clause does not support '${type}' clause`);\n        }\n    };\n};\nconst mathOps = {\n    Add: '+',\n    Subtract: '-',\n    Multiply: '*',\n    Divide: '/',\n};\nconst MathOp = (type) => {\n    return (args, indent) => {\n        exports.checkArgs(type, args, 2);\n        const a = NumericValue(exports.getAbstractSqlQuery(args, 0), indent);\n        const b = NumericValue(exports.getAbstractSqlQuery(args, 1), indent);\n        return `${a} ${mathOps[type]} ${b}`;\n    };\n};\nconst fractionalSecondsFormat = function (date) {\n    return this['Totalseconds'](date) + ' - ' + this['Second'](date);\n};\nconst websqlBasicDateFormat = (format) => {\n    return (date) => `STRFTIME('${format}', ${date})`;\n};\nconst websqlDateFormats = {\n    Year: websqlBasicDateFormat('%Y'),\n    Month: websqlBasicDateFormat('%m'),\n    Day: websqlBasicDateFormat('%d'),\n    Hour: websqlBasicDateFormat('%H'),\n    Minute: websqlBasicDateFormat('%M'),\n    Second: websqlBasicDateFormat('%S'),\n    Fractionalseconds: fractionalSecondsFormat,\n    Totalseconds: websqlBasicDateFormat('%f'),\n};\nconst basicDateFormat = function (part) {\n    return (date) => `EXTRACT('${part}' FROM ${date})`;\n};\nconst dateFormats = {\n    Year: basicDateFormat('YEAR'),\n    Month: basicDateFormat('MONTH'),\n    Day: basicDateFormat('DAY'),\n    Hour: basicDateFormat('HOUR'),\n    Minute: basicDateFormat('MINUTE'),\n    Second: (date) => `FLOOR(${dateFormats['Totalseconds'](date)})`,\n    Fractionalseconds: fractionalSecondsFormat,\n    Totalseconds: basicDateFormat('SECOND'),\n};\nconst ExtractNumericDatePart = (type) => {\n    return (args, indent) => {\n        exports.checkArgs(type, args, 1);\n        const date = DateValue(exports.getAbstractSqlQuery(args, 0), indent);\n        if (engine === \"websql\") {\n            return websqlDateFormats[type](date);\n        }\n        else {\n            return dateFormats[type](date);\n        }\n    };\n};\nconst Text = (args) => {\n    exports.checkArgs('Text', args, 1);\n    if (noBinds) {\n        return `'${args[0]}'`;\n    }\n    else {\n        return AddBind(['Text', args[0]]);\n    }\n};\nconst checkArgs = (matchName, args, num) => {\n    if (args.length !== num) {\n        throw new SyntaxError(`\"${matchName}\" requires ${num} arg(s)`);\n    }\n};\nexports.checkArgs = checkArgs;\nconst checkMinArgs = (matchName, args, num) => {\n    if (args.length < num) {\n        throw new SyntaxError(`\"${matchName}\" requires at least ${num} arg(s)`);\n    }\n};\nexports.checkMinArgs = checkMinArgs;\nconst Value = (arg, indent) => {\n    switch (arg) {\n        case true:\n            return '1';\n        case false:\n            return '0';\n        case 'Default':\n            return 'DEFAULT';\n        default:\n            const [type, ...rest] = arg;\n            switch (type) {\n                case 'Null':\n                case 'Bind':\n                case 'Value':\n                case 'Text':\n                case 'Number':\n                case 'Real':\n                case 'Integer':\n                    return typeRules[type](rest, indent);\n                default:\n                    throw new SyntaxError(`Invalid type for Value ${type}`);\n            }\n    }\n};\nconst SelectMatch = (args, indent) => {\n    const [type, ...rest] = args;\n    switch (type) {\n        case 'Count':\n            return typeRules[type](rest, indent);\n        default:\n            return AnyValue(args, indent);\n    }\n};\nconst FromMatch = (args, indent) => {\n    const [type, ...rest] = args;\n    switch (type) {\n        case 'SelectQuery':\n        case 'UnionQuery':\n            const nestedindent = NestedIndent(indent);\n            const query = typeRules[type](rest, nestedindent);\n            return '(' + nestedindent + query + indent + ')';\n        case 'Table':\n            exports.checkArgs('Table', rest, 1);\n            const [table] = rest;\n            if (typeof table !== 'string') {\n                throw new SyntaxError('`Table` table must be a string');\n            }\n            return escapeField(table);\n        default:\n            throw new SyntaxError(`From does not support ${type}`);\n    }\n};\nconst MaybeAlias = (args, indent, matchFn) => {\n    const [type, ...rest] = args;\n    switch (type) {\n        case 'Alias':\n            exports.checkArgs('Alias', rest, 2);\n            const field = matchFn(exports.getAbstractSqlQuery(rest, 0), indent);\n            return `${field} AS \"${rest[1]}\"`;\n        default:\n            return matchFn(args, indent);\n    }\n};\nconst AddBind = (bind) => {\n    if (noBinds) {\n        throw new SyntaxError('Cannot use a bind whilst they are disabled');\n    }\n    if (engine === \"postgres\") {\n        if (bind[0] === 'Bind') {\n            const key = JSON.stringify(bind[1]);\n            const existingBindIndex = fieldOrderingsLookup[key];\n            if (existingBindIndex != null) {\n                return '$' + existingBindIndex;\n            }\n            const nextID = fieldOrderings.push(bind);\n            fieldOrderingsLookup[key] = nextID;\n            return '$' + nextID;\n        }\n        return '$' + fieldOrderings.push(bind);\n    }\n    else {\n        fieldOrderings.push(bind);\n        return '?';\n    }\n};\nconst typeRules = {\n    UnionQuery: (args, indent) => {\n        exports.checkMinArgs('UnionQuery', args, 2);\n        return args\n            .map((arg) => {\n            if (!exports.isAbstractSqlQuery(arg)) {\n                throw new SyntaxError(`Expected AbstractSqlQuery array but got ${typeof arg}`);\n            }\n            const [type, ...rest] = arg;\n            switch (type) {\n                case 'SelectQuery':\n                case 'UnionQuery':\n                    return typeRules[type](rest, indent);\n                default:\n                    throw new SyntaxError(`UnionQuery does not support ${type}`);\n            }\n        })\n            .join(indent + 'UNION' + indent);\n    },\n    SelectQuery: (args, indent) => {\n        const tables = [];\n        const joins = [];\n        let select = '';\n        const groups = {\n            Where: '',\n            GroupBy: '',\n            OrderBy: '',\n            Limit: '',\n            Offset: '',\n        };\n        for (const arg of args) {\n            if (!exports.isAbstractSqlQuery(arg)) {\n                throw new SyntaxError('`SelectQuery` args must all be arrays');\n            }\n            const [type, ...rest] = arg;\n            switch (type) {\n                case 'Select':\n                    if (select !== '') {\n                        throw new SyntaxError(`'SelectQuery' can only accept one '${type}'`);\n                    }\n                    select = typeRules[type](rest, indent);\n                    break;\n                case 'From':\n                    tables.push(typeRules[type](rest, indent));\n                    break;\n                case 'Join':\n                case 'LeftJoin':\n                case 'RightJoin':\n                case 'FullJoin':\n                case 'CrossJoin':\n                    joins.push(typeRules[type](rest, indent));\n                    break;\n                case 'Where':\n                case 'GroupBy':\n                case 'OrderBy':\n                case 'Limit':\n                case 'Offset':\n                    if (groups[type] !== '') {\n                        throw new SyntaxError(`'SelectQuery' can only accept one '${type}'`);\n                    }\n                    groups[type] = indent + typeRules[type](rest, indent);\n                    break;\n                default:\n                    throw new SyntaxError(`'SelectQuery' does not support '${type}'`);\n            }\n        }\n        if (tables.length === 0 && joins.length > 0) {\n            throw new SyntaxError('Must have at least one From node in order to use Join nodes');\n        }\n        const from = tables.length > 0\n            ? indent + 'FROM ' + tables.join(',' + NestedIndent(indent))\n            : '';\n        const joinStr = joins.length > 0 ? indent + joins.join(indent) : '';\n        return ('SELECT ' +\n            select +\n            from +\n            joinStr +\n            groups.Where +\n            groups.GroupBy +\n            groups.OrderBy +\n            groups.Limit +\n            groups.Offset);\n    },\n    Select: (args, indent) => {\n        exports.checkArgs('Select', args, 1);\n        args = exports.getAbstractSqlQuery(args, 0);\n        if (args.length === 0) {\n            return '1';\n        }\n        return args\n            .map((arg) => {\n            if (!exports.isAbstractSqlQuery(arg)) {\n                throw new SyntaxError(`Expected AbstractSqlQuery array but got ${typeof arg}`);\n            }\n            return MaybeAlias(arg, indent, SelectMatch);\n        })\n            .join(', ');\n    },\n    From: (args, indent) => {\n        exports.checkArgs('From', args, 1);\n        return MaybeAlias(exports.getAbstractSqlQuery(args, 0), indent, FromMatch);\n    },\n    Join: JoinMatch('Join'),\n    LeftJoin: JoinMatch('LeftJoin'),\n    RightJoin: JoinMatch('RightJoin'),\n    FullJoin: JoinMatch('FullJoin'),\n    CrossJoin: (args, indent) => {\n        exports.checkArgs('CrossJoin', args, 1);\n        const from = MaybeAlias(exports.getAbstractSqlQuery(args, 0), indent, FromMatch);\n        return `CROSS JOIN ${from}`;\n    },\n    Where: (args, indent) => {\n        exports.checkArgs('Where', args, 1);\n        const boolNode = exports.getAbstractSqlQuery(args, 0);\n        if (boolNode[0] === 'Boolean') {\n            return `WHERE ${boolNode[1] ? 'true' : 'false'}`;\n        }\n        const ruleBody = BooleanValue(boolNode, indent);\n        return 'WHERE ' + ruleBody;\n    },\n    GroupBy: (args, indent) => {\n        exports.checkMinArgs('GroupBy', args, 1);\n        const groups = exports.getAbstractSqlQuery(args, 0);\n        exports.checkMinArgs('GroupBy groups', groups, 1);\n        return ('GROUP BY ' +\n            groups.map((arg) => AnyValue(arg, indent)).join(', '));\n    },\n    OrderBy: (args, indent) => {\n        exports.checkMinArgs('OrderBy', args, 1);\n        return ('ORDER BY ' +\n            args\n                .map((arg) => {\n                exports.checkMinArgs('OrderBy ordering', arg, 2);\n                const order = arg[0];\n                if (order !== 'ASC' && order !== 'DESC') {\n                    throw new SyntaxError(`Can only order by \"ASC\" or \"DESC\"`);\n                }\n                const field = Field(exports.getAbstractSqlQuery(arg, 1), indent);\n                return `${field} ${order}`;\n            })\n                .join(',' + NestedIndent(indent)));\n    },\n    Limit: (args, indent) => {\n        exports.checkArgs('Limit', args, 1);\n        const num = NumericValue(exports.getAbstractSqlQuery(args, 0), indent);\n        return `LIMIT ${num}`;\n    },\n    Offset: (args, indent) => {\n        exports.checkArgs('Offset', args, 1);\n        const num = NumericValue(exports.getAbstractSqlQuery(args, 0), indent);\n        return `OFFSET ${num}`;\n    },\n    Count: (args) => {\n        exports.checkArgs('Count', args, 1);\n        if (args[0] !== '*') {\n            throw new SyntaxError('\"Count\" only supports \"*\"');\n        }\n        return 'COUNT(*)';\n    },\n    Average: (args, indent) => {\n        exports.checkArgs('Average', args, 1);\n        const num = NumericValue(exports.getAbstractSqlQuery(args, 0), indent);\n        return `AVG(${num})`;\n    },\n    Sum: (args, indent) => {\n        exports.checkArgs('Sum', args, 1);\n        const num = NumericValue(exports.getAbstractSqlQuery(args, 0), indent);\n        return `SUM(${num})`;\n    },\n    Field: (args) => {\n        exports.checkArgs('Field', args, 1);\n        const [field] = args;\n        if (typeof field !== 'string') {\n            throw new SyntaxError('`Field` field must be a string');\n        }\n        return escapeField(field);\n    },\n    ReferencedField: (args) => {\n        exports.checkArgs('ReferencedField', args, 2);\n        const [table, field] = args;\n        if (typeof table !== 'string') {\n            throw new SyntaxError('`ReferencedField` table must be a string');\n        }\n        if (typeof field !== 'string') {\n            throw new SyntaxError('`ReferencedField` field must be a string');\n        }\n        return `\"${table}\".${escapeField(field)}`;\n    },\n    Cast: (args, indent) => {\n        exports.checkArgs('Cast', args, 2);\n        const value = AnyValue(exports.getAbstractSqlQuery(args, 0), indent);\n        const typeName = args[1];\n        if (!sbvrTypes[typeName] || !sbvrTypes[typeName].types[engine]) {\n            throw new SyntaxError(`Invalid cast type: ${typeName}`);\n        }\n        let type;\n        const dbType = sbvrTypes[typeName].types[engine];\n        if (typeof dbType === 'function') {\n            type = dbType.castType;\n        }\n        else if (dbType.toUpperCase() === 'SERIAL') {\n            type = 'INTEGER';\n        }\n        else {\n            type = dbType;\n        }\n        return `CAST(${value} AS ${type})`;\n    },\n    Number: NumberMatch('Number'),\n    Real: NumberMatch('Real'),\n    Integer: NumberMatch('Integer'),\n    Boolean: (args) => {\n        exports.checkArgs('Boolean', args, 1);\n        const b = args[0];\n        if (typeof b !== 'boolean') {\n            throw new SyntaxError(`Boolean expected boolean but got ${typeof b}`);\n        }\n        return b ? '1' : '0';\n    },\n    EmbeddedText: (args) => {\n        exports.checkArgs('EmbeddedText', args, 1);\n        return `'${args[0]}'`;\n    },\n    Null: (args) => {\n        exports.checkArgs('Null', args, 0);\n        return 'NULL';\n    },\n    CurrentTimestamp: (args) => {\n        exports.checkArgs('CurrentTimestamp', args, 0);\n        return 'CURRENT_TIMESTAMP';\n    },\n    CurrentDate: (args) => {\n        exports.checkArgs('CurrentDate', args, 0);\n        return 'CURRENT_DATE';\n    },\n    AggregateJSON: (args) => {\n        exports.checkArgs('AggregateJSON', args, 1);\n        args = exports.getAbstractSqlQuery(args, 0);\n        exports.checkArgs(\"AggregateJSON's argument\", args, 2);\n        if (engine !== \"postgres\") {\n            throw new SyntaxError('AggregateJSON not supported on: ' + engine);\n        }\n        const [table, field] = args;\n        if (typeof table !== 'string') {\n            throw new SyntaxError('`AggregateJSON` table must be a string');\n        }\n        if (typeof field !== 'string') {\n            throw new SyntaxError('`AggregateJSON` field must be a string');\n        }\n        return `coalesce(array_to_json(array_agg(\"${table}\".${escapeField(field)})), '[]')`;\n    },\n    Equals: Comparison('Equals'),\n    GreaterThan: Comparison('GreaterThan'),\n    GreaterThanOrEqual: Comparison('GreaterThanOrEqual'),\n    LessThan: Comparison('LessThan'),\n    LessThanOrEqual: Comparison('LessThanOrEqual'),\n    NotEquals: Comparison('NotEquals'),\n    Like: Comparison('Like'),\n    IsNotDistinctFrom: (args, indent) => {\n        exports.checkArgs('IsNotDistinctFrom', args, 2);\n        return isNotDistinctFrom(args, indent);\n    },\n    IsDistinctFrom: (args, indent) => {\n        exports.checkArgs('IsDistinctFrom', args, 2);\n        return 'NOT(' + isNotDistinctFrom(args, indent) + ')';\n    },\n    Add: MathOp('Add'),\n    Subtract: MathOp('Subtract'),\n    Multiply: MathOp('Multiply'),\n    Divide: MathOp('Divide'),\n    Year: ExtractNumericDatePart('Year'),\n    Month: ExtractNumericDatePart('Month'),\n    Day: ExtractNumericDatePart('Day'),\n    Hour: ExtractNumericDatePart('Hour'),\n    Minute: ExtractNumericDatePart('Minute'),\n    Second: ExtractNumericDatePart('Second'),\n    Fractionalseconds: ExtractNumericDatePart('Fractionalseconds'),\n    Totalseconds: (args, indent) => {\n        exports.checkArgs('Totalseconds', args, 1);\n        const duration = DurationValue(exports.getAbstractSqlQuery(args, 0), indent);\n        if (engine === \"postgres\") {\n            return `EXTRACT(EPOCH FROM ${duration})`;\n        }\n        else if (engine === \"mysql\") {\n            return `(TIMESTAMPDIFF(MICROSECOND, FROM_UNIXTIME(0), FROM_UNIXTIME(0) + ${duration}) / 1000000)`;\n        }\n        else {\n            throw new SyntaxError('TotalSeconds not supported on: ' + engine);\n        }\n    },\n    Concatenate: (args, indent) => {\n        exports.checkMinArgs('Concatenate', args, 1);\n        const comparators = args.map((arg) => {\n            if (!exports.isAbstractSqlQuery(arg)) {\n                throw new SyntaxError(`Expected AbstractSqlQuery array but got ${typeof arg}`);\n            }\n            return TextValue(arg, indent);\n        });\n        if (engine === \"mysql\") {\n            return 'CONCAT(' + comparators.join(', ') + ')';\n        }\n        else {\n            return '(' + comparators.join(' || ') + ')';\n        }\n    },\n    Replace: (args, indent) => {\n        exports.checkArgs('Replace', args, 3);\n        const str = TextValue(exports.getAbstractSqlQuery(args, 0), indent);\n        const find = TextValue(exports.getAbstractSqlQuery(args, 1), indent);\n        const replacement = TextValue(exports.getAbstractSqlQuery(args, 2), indent);\n        return `REPLACE(${str}, ${find}, ${replacement})`;\n    },\n    CharacterLength: (args, indent) => {\n        exports.checkArgs('CharacterLength', args, 1);\n        const text = TextValue(exports.getAbstractSqlQuery(args, 0), indent);\n        if (engine === \"mysql\") {\n            return `CHAR_LENGTH(${text})`;\n        }\n        else {\n            return `LENGTH(${text})`;\n        }\n    },\n    StrPos: (args, indent) => {\n        exports.checkArgs('StrPos', args, 2);\n        const haystack = TextValue(exports.getAbstractSqlQuery(args, 0), indent);\n        const needle = TextValue(exports.getAbstractSqlQuery(args, 1), indent);\n        if (engine === \"postgres\") {\n            return `STRPOS(${haystack}, ${needle})`;\n        }\n        else {\n            return `INSTR(${haystack}, ${needle})`;\n        }\n    },\n    Substring: (args, indent) => {\n        exports.checkMinArgs('Substring', args, 2);\n        const str = TextValue(exports.getAbstractSqlQuery(args, 0), indent);\n        const nums = args.slice(1).map((arg) => {\n            if (!exports.isAbstractSqlQuery(arg)) {\n                throw new SyntaxError(`Expected AbstractSqlQuery array but got ${typeof arg}`);\n            }\n            return NumericValue(arg, indent);\n        });\n        return `SUBSTRING(${[str, ...nums].join(', ')})`;\n    },\n    Right: (args, indent) => {\n        exports.checkArgs('Right', args, 2);\n        const str = TextValue(exports.getAbstractSqlQuery(args, 0), indent);\n        const n = NumericValue(exports.getAbstractSqlQuery(args, 0), indent);\n        if (engine === \"websql\") {\n            return `SUBSTRING(${str}, -${n})`;\n        }\n        else {\n            return `RIGHT(${str}, ${n})`;\n        }\n    },\n    Lower: (args, indent) => {\n        exports.checkArgs('Lower', args, 1);\n        const str = TextValue(exports.getAbstractSqlQuery(args, 0), indent);\n        return `LOWER(${str})`;\n    },\n    Upper: (args, indent) => {\n        exports.checkArgs('Upper', args, 1);\n        const str = TextValue(exports.getAbstractSqlQuery(args, 0), indent);\n        return `UPPER(${str})`;\n    },\n    Trim: (args, indent) => {\n        exports.checkArgs('Trim', args, 1);\n        const str = TextValue(exports.getAbstractSqlQuery(args, 0), indent);\n        return `TRIM(${str})`;\n    },\n    Round: (args, indent) => {\n        exports.checkArgs('Round', args, 1);\n        const num = NumericValue(exports.getAbstractSqlQuery(args, 0), indent);\n        return `ROUND(${num})`;\n    },\n    Floor: (args, indent) => {\n        exports.checkArgs('Floor', args, 1);\n        const num = NumericValue(exports.getAbstractSqlQuery(args, 0), indent);\n        return `FLOOR(${num})`;\n    },\n    Ceiling: (args, indent) => {\n        exports.checkArgs('Ceiling', args, 1);\n        const num = NumericValue(exports.getAbstractSqlQuery(args, 0), indent);\n        return `CEILING(${num})`;\n    },\n    ToDate: (args, indent) => {\n        exports.checkArgs('ToDate', args, 1);\n        const date = DateValue(exports.getAbstractSqlQuery(args, 0), indent);\n        return `DATE(${date})`;\n    },\n    ToTime: (args, indent) => {\n        exports.checkArgs('ToTime', args, 1);\n        const date = DateValue(exports.getAbstractSqlQuery(args, 0), indent);\n        if (engine === \"postgres\") {\n            return `CAST(${date} AS TIME)`;\n        }\n        else {\n            return `TIME(${date})`;\n        }\n    },\n    Coalesce: (args, indent) => {\n        exports.checkMinArgs('Coalesce', args, 2);\n        const comparators = args.map((arg) => {\n            if (!exports.isAbstractSqlQuery(arg)) {\n                throw new SyntaxError(`Expected AbstractSqlQuery array but got ${typeof arg}`);\n            }\n            return AnyValue(arg, indent);\n        });\n        return 'COALESCE(' + comparators.join(', ') + ')';\n    },\n    Case: (args, indent) => {\n        exports.checkMinArgs('Case', args, 1);\n        const nestedIndent = NestedIndent(indent);\n        const clauses = args\n            .map((arg, index) => {\n            if (!exports.isAbstractSqlQuery(arg)) {\n                throw new SyntaxError(`Expected AbstractSqlQuery array but got ${typeof arg}`);\n            }\n            const [type, ...rest] = arg;\n            switch (type) {\n                case 'When':\n                    exports.checkArgs('When', rest, 2);\n                    const matches = BooleanValue(exports.getAbstractSqlQuery(rest, 0), NestedIndent(nestedIndent));\n                    const resultValue = AnyValue(exports.getAbstractSqlQuery(rest, 1), nestedIndent);\n                    return 'WHEN ' + matches + ' THEN ' + resultValue;\n                case 'Else':\n                    if (index !== args.length - 1) {\n                        throw new SyntaxError('Else must be the last element of a Case');\n                    }\n                    exports.checkArgs('Else', rest, 1);\n                    return ('ELSE ' + AnyValue(exports.getAbstractSqlQuery(rest, 0), nestedIndent));\n                default:\n                    throw new SyntaxError('Case can only contain When/Else');\n            }\n        })\n            .join(nestedIndent);\n        return 'CASE' + nestedIndent + clauses + indent + 'END';\n    },\n    And: (args, indent) => {\n        exports.checkMinArgs('And', args, 2);\n        return args\n            .map((arg) => {\n            if (!exports.isAbstractSqlQuery(arg)) {\n                throw new SyntaxError(`Expected AbstractSqlQuery array but got ${typeof arg}`);\n            }\n            return BooleanValue(arg, indent);\n        })\n            .join(indent + 'AND ');\n    },\n    Or: (args, indent) => {\n        exports.checkMinArgs('Or', args, 2);\n        return ('(' +\n            args\n                .map((arg) => {\n                if (!exports.isAbstractSqlQuery(arg)) {\n                    throw new SyntaxError(`Expected AbstractSqlQuery array but got ${typeof arg}`);\n                }\n                return BooleanValue(arg, indent);\n            })\n                .join(indent + 'OR ') +\n            ')');\n    },\n    Bind: (args) => {\n        let bind;\n        if (args.length === 2) {\n            bind = args;\n        }\n        else if (args.length === 1) {\n            bind = args[0];\n        }\n        else {\n            throw new SyntaxError(`\"Bind\" requires 1/2 arg(s)`);\n        }\n        return AddBind(['Bind', bind]);\n    },\n    Text,\n    Value: Text,\n    Date: (args) => {\n        exports.checkArgs('Date', args, 1);\n        return AddBind(['Date', args[0]]);\n    },\n    Duration: (args) => {\n        var _a, _b, _c, _d;\n        exports.checkArgs('Duration', args, 1);\n        if (engine === \"websql\") {\n            throw new SyntaxError('Durations not supported on: ' + engine);\n        }\n        let duration = args[0];\n        if (duration == null || typeof duration !== 'object') {\n            throw new SyntaxError(`Duration must be an object, got ${typeof duration}`);\n        }\n        duration = _(duration)\n            .pick('negative', 'day', 'hour', 'minute', 'second')\n            .omitBy(_.isNil)\n            .value();\n        if (_(duration).omit('negative').isEmpty()) {\n            throw new SyntaxError('Invalid duration');\n        }\n        return (\"INTERVAL '\" +\n            (duration.negative ? '-' : '') +\n            ((_a = duration.day) !== null && _a !== void 0 ? _a : '0') +\n            ' ' +\n            (duration.negative ? '-' : '') +\n            ((_b = duration.hour) !== null && _b !== void 0 ? _b : '0') +\n            ':' +\n            ((_c = duration.minute) !== null && _c !== void 0 ? _c : '0') +\n            ':' +\n            Number((_d = duration.second) !== null && _d !== void 0 ? _d : 0).toLocaleString('en', {\n                minimumFractionDigits: 1,\n            }) +\n            \"'\" +\n            (engine === \"mysql\" ? ' DAY_MICROSECOND' : ''));\n    },\n    Exists: (args, indent) => {\n        exports.checkArgs('Exists', args, 1);\n        const arg = exports.getAbstractSqlQuery(args, 0);\n        const [type, ...rest] = arg;\n        switch (type) {\n            case 'SelectQuery':\n            case 'UnionQuery':\n                const nestedIndent = NestedIndent(indent);\n                const query = typeRules[type](rest, nestedIndent);\n                return 'EXISTS (' + nestedIndent + query + indent + ')';\n            default:\n                return AnyValue(arg, indent) + ' IS NOT NULL';\n        }\n    },\n    NotExists: (args, indent) => {\n        exports.checkArgs('NotExists', args, 1);\n        const arg = exports.getAbstractSqlQuery(args, 0);\n        const [type, ...rest] = arg;\n        switch (type) {\n            case 'SelectQuery':\n            case 'UnionQuery':\n                const nestedIndent = NestedIndent(indent);\n                const query = typeRules[type](rest, nestedIndent);\n                return 'NOT EXISTS (' + nestedIndent + query + indent + ')';\n            default:\n                return AnyValue(arg, indent) + ' IS NULL';\n        }\n    },\n    Not: (args, indent) => {\n        exports.checkArgs('Not', args, 1);\n        const nestedIndent = NestedIndent(indent);\n        const bool = BooleanValue(exports.getAbstractSqlQuery(args, 0), nestedIndent);\n        return 'NOT (' + nestedIndent + bool + indent + ')';\n    },\n    In: (args, indent) => {\n        exports.checkMinArgs('In', args, 2);\n        const field = Field(exports.getAbstractSqlQuery(args, 0), indent);\n        const vals = args.slice(1).map((arg) => {\n            if (!exports.isAbstractSqlQuery(arg)) {\n                throw new SyntaxError(`Expected AbstractSqlQuery array but got ${typeof arg}`);\n            }\n            return AnyValue(arg, indent);\n        });\n        return field + ' IN (' + vals.join(', ') + ')';\n    },\n    NotIn: (args, indent) => {\n        exports.checkMinArgs('NotIn', args, 2);\n        const field = Field(exports.getAbstractSqlQuery(args, 0), indent);\n        const vals = args.slice(1).map((arg) => {\n            if (!exports.isAbstractSqlQuery(arg)) {\n                throw new SyntaxError(`Expected AbstractSqlQuery array but got ${typeof arg}`);\n            }\n            return AnyValue(arg, indent);\n        });\n        return field + ' NOT IN (' + vals.join(', ') + ')';\n    },\n    InsertQuery: (args, indent) => {\n        const tables = [];\n        let fields = [];\n        let values = [];\n        for (const arg of args) {\n            if (!exports.isAbstractSqlQuery(arg)) {\n                throw new SyntaxError('`InsertQuery` args must all be arrays');\n            }\n            const [type, ...rest] = arg;\n            switch (type) {\n                case 'Fields':\n                    if (fields.length !== 0) {\n                        throw new SyntaxError(`'InsertQuery' can only accept one '${type}'`);\n                    }\n                    exports.checkMinArgs('Update fields', rest, 1);\n                    fields = exports.getAbstractSqlQuery(rest, 0).map(escapeField);\n                    break;\n                case 'Values':\n                    if (values.length !== 0) {\n                        throw new SyntaxError(`'InsertQuery' can only accept one '${type}'`);\n                    }\n                    const valuesArray = exports.getAbstractSqlQuery(rest, 0);\n                    if (valuesArray.length > 0) {\n                        const [valuesType, ...valuesRest] = valuesArray;\n                        switch (valuesType) {\n                            case 'SelectQuery':\n                            case 'UnionQuery':\n                                values = typeRules[valuesType](valuesRest, indent);\n                                break;\n                            default:\n                                values = valuesArray.map((v) => Value(v, indent));\n                        }\n                    }\n                    break;\n                case 'From':\n                    tables.push(typeRules[type](rest, indent));\n                    break;\n                default:\n                    throw new SyntaxError(`'InsertQuery' does not support '${type}'`);\n            }\n        }\n        if (typeof values !== 'string' && fields.length !== values.length) {\n            throw new SyntaxError('Fields and Values must have the same length or use a query');\n        }\n        if (fields.length > 0) {\n            if (Array.isArray(values)) {\n                values = 'VALUES (' + values.join(', ') + ')';\n            }\n            return ('INSERT INTO ' +\n                tables.join(', ') +\n                ' (' +\n                fields.join(', ') +\n                ')' +\n                indent +\n                values);\n        }\n        else {\n            return 'INSERT INTO ' + tables.join(', ') + ' DEFAULT VALUES';\n        }\n    },\n    UpdateQuery: (args, indent) => {\n        const tables = [];\n        let fields = [];\n        let values = [];\n        let where = '';\n        for (const arg of args) {\n            if (!exports.isAbstractSqlQuery(arg)) {\n                throw new SyntaxError('`UpdateQuery` args must all be arrays');\n            }\n            const [type, ...rest] = arg;\n            switch (type) {\n                case 'Fields':\n                    if (fields.length !== 0) {\n                        throw new SyntaxError(`'UpdateQuery' can only accept one '${type}'`);\n                    }\n                    exports.checkMinArgs('Update fields', rest, 1);\n                    fields = exports.getAbstractSqlQuery(rest, 0).map(escapeField);\n                    break;\n                case 'Values':\n                    if (values.length !== 0) {\n                        throw new SyntaxError(`'UpdateQuery' can only accept one '${type}'`);\n                    }\n                    exports.checkArgs('Update values', rest, 1);\n                    const valuesArray = exports.getAbstractSqlQuery(rest, 0);\n                    exports.checkMinArgs('Update values array', valuesArray, 1);\n                    values = valuesArray.map((v) => Value(v, indent));\n                    break;\n                case 'From':\n                    tables.push(typeRules[type](rest, indent));\n                    break;\n                case 'Where':\n                    if (where !== '') {\n                        throw new SyntaxError(`'UpdateQuery' can only accept one '${type}'`);\n                    }\n                    where = indent + typeRules[type](rest, indent);\n                    break;\n                default:\n                    throw new SyntaxError(`'UpdateQuery' does not support '${type}'`);\n            }\n        }\n        if (fields.length !== values.length) {\n            throw new SyntaxError('Fields and Values must have the same length');\n        }\n        const sets = fields.map((field, i) => field + ' = ' + values[i]);\n        return ('UPDATE ' +\n            tables.join(', ') +\n            indent +\n            'SET ' +\n            sets.join(',' + NestedIndent(indent)) +\n            where);\n    },\n    DeleteQuery: (args, indent) => {\n        const tables = [];\n        let where = '';\n        for (const arg of args) {\n            if (!exports.isAbstractSqlQuery(arg)) {\n                throw new SyntaxError('`DeleteQuery` args must all be arrays');\n            }\n            const [type, ...rest] = arg;\n            switch (type) {\n                case 'From':\n                    tables.push(typeRules[type](rest, indent));\n                    break;\n                case 'Where':\n                    if (where !== '') {\n                        throw new SyntaxError(`'DeleteQuery' can only accept one '${type}'`);\n                    }\n                    where = indent + typeRules[type](rest, indent);\n                    break;\n                default:\n                    throw new SyntaxError(`'DeleteQuery' does not support '${type}'`);\n            }\n        }\n        return 'DELETE FROM ' + tables.join(', ') + where;\n    },\n};\nconst toSqlResult = (query) => {\n    if (noBinds) {\n        return query;\n    }\n    return {\n        query,\n        bindings: fieldOrderings,\n    };\n};\nfunction AbstractSQLRules2SQL(abstractSQL, $engine, $noBinds = false) {\n    engine = $engine;\n    noBinds = $noBinds;\n    fieldOrderings = [];\n    fieldOrderingsLookup = {};\n    const indent = '\\n';\n    const [type, ...rest] = abstractSQL;\n    switch (type) {\n        case 'SelectQuery':\n        case 'UnionQuery':\n        case 'InsertQuery':\n        case 'UpdateQuery':\n        case 'DeleteQuery':\n            const query = typeRules[type](rest, indent);\n            return toSqlResult(query);\n        case 'UpsertQuery':\n            exports.checkArgs('UpsertQuery', rest, 2);\n            const insertQuery = exports.getAbstractSqlQuery(rest, 0);\n            const updateQuery = exports.getAbstractSqlQuery(rest, 1);\n            if (insertQuery[0] !== 'InsertQuery' ||\n                updateQuery[0] !== 'UpdateQuery') {\n                throw new SyntaxError('UpsertQuery must have [InsertQuery, UpdateQuery] provided');\n            }\n            const insertSql = typeRules.InsertQuery(insertQuery.slice(1), indent);\n            const insert = toSqlResult(insertSql);\n            fieldOrderings = [];\n            fieldOrderingsLookup = {};\n            const updateSql = typeRules.UpdateQuery(updateQuery.slice(1), indent);\n            const update = toSqlResult(updateSql);\n            return [insert, update];\n        default:\n            const value = AnyValue(abstractSQL, indent);\n            if (noBinds) {\n                return value;\n            }\n            return {\n                query: `SELECT ${value} AS \"result\";`,\n                bindings: fieldOrderings,\n            };\n    }\n}\nexports.AbstractSQLRules2SQL = AbstractSQLRules2SQL;\n//# sourceMappingURL=AbstractSQLRules2SQL.js.map","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,\n  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,\n  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,\n  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,\n  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,\n  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,\n  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,\n  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,\n  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,\n  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,\n  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2\n]\n\nvar W = new Array(64)\n\nfunction Sha256 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha256, Hash)\n\nSha256.prototype.init = function () {\n  this._a = 0x6a09e667\n  this._b = 0xbb67ae85\n  this._c = 0x3c6ef372\n  this._d = 0xa54ff53a\n  this._e = 0x510e527f\n  this._f = 0x9b05688c\n  this._g = 0x1f83d9ab\n  this._h = 0x5be0cd19\n\n  return this\n}\n\nfunction ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x) {\n  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)\n}\n\nfunction sigma1 (x) {\n  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)\n}\n\nfunction gamma0 (x) {\n  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)\n}\n\nfunction gamma1 (x) {\n  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)\n}\n\nSha256.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n  var f = this._f | 0\n  var g = this._g | 0\n  var h = this._h | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0\n\n  for (var j = 0; j < 64; ++j) {\n    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0\n    var T2 = (sigma0(a) + maj(a, b, c)) | 0\n\n    h = g\n    g = f\n    f = e\n    e = (d + T1) | 0\n    d = c\n    c = b\n    b = a\n    a = (T1 + T2) | 0\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n  this._f = (f + this._f) | 0\n  this._g = (g + this._g) | 0\n  this._h = (h + this._h) | 0\n}\n\nSha256.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(32)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n  H.writeInt32BE(this._h, 28)\n\n  return H\n}\n\nmodule.exports = Sha256\n","var inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n]\n\nvar W = new Array(160)\n\nfunction Sha512 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha512, Hash)\n\nSha512.prototype.init = function () {\n  this._ah = 0x6a09e667\n  this._bh = 0xbb67ae85\n  this._ch = 0x3c6ef372\n  this._dh = 0xa54ff53a\n  this._eh = 0x510e527f\n  this._fh = 0x9b05688c\n  this._gh = 0x1f83d9ab\n  this._hh = 0x5be0cd19\n\n  this._al = 0xf3bcc908\n  this._bl = 0x84caa73b\n  this._cl = 0xfe94f82b\n  this._dl = 0x5f1d36f1\n  this._el = 0xade682d1\n  this._fl = 0x2b3e6c1f\n  this._gl = 0xfb41bd6b\n  this._hl = 0x137e2179\n\n  return this\n}\n\nfunction Ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x, xl) {\n  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)\n}\n\nfunction sigma1 (x, xl) {\n  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)\n}\n\nfunction Gamma0 (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)\n}\n\nfunction Gamma0l (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)\n}\n\nfunction Gamma1 (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)\n}\n\nfunction Gamma1l (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)\n}\n\nfunction getCarry (a, b) {\n  return (a >>> 0) < (b >>> 0) ? 1 : 0\n}\n\nSha512.prototype._update = function (M) {\n  var W = this._w\n\n  var ah = this._ah | 0\n  var bh = this._bh | 0\n  var ch = this._ch | 0\n  var dh = this._dh | 0\n  var eh = this._eh | 0\n  var fh = this._fh | 0\n  var gh = this._gh | 0\n  var hh = this._hh | 0\n\n  var al = this._al | 0\n  var bl = this._bl | 0\n  var cl = this._cl | 0\n  var dl = this._dl | 0\n  var el = this._el | 0\n  var fl = this._fl | 0\n  var gl = this._gl | 0\n  var hl = this._hl | 0\n\n  for (var i = 0; i < 32; i += 2) {\n    W[i] = M.readInt32BE(i * 4)\n    W[i + 1] = M.readInt32BE(i * 4 + 4)\n  }\n  for (; i < 160; i += 2) {\n    var xh = W[i - 15 * 2]\n    var xl = W[i - 15 * 2 + 1]\n    var gamma0 = Gamma0(xh, xl)\n    var gamma0l = Gamma0l(xl, xh)\n\n    xh = W[i - 2 * 2]\n    xl = W[i - 2 * 2 + 1]\n    var gamma1 = Gamma1(xh, xl)\n    var gamma1l = Gamma1l(xl, xh)\n\n    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n    var Wi7h = W[i - 7 * 2]\n    var Wi7l = W[i - 7 * 2 + 1]\n\n    var Wi16h = W[i - 16 * 2]\n    var Wi16l = W[i - 16 * 2 + 1]\n\n    var Wil = (gamma0l + Wi7l) | 0\n    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0\n    Wil = (Wil + gamma1l) | 0\n    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0\n    Wil = (Wil + Wi16l) | 0\n    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0\n\n    W[i] = Wih\n    W[i + 1] = Wil\n  }\n\n  for (var j = 0; j < 160; j += 2) {\n    Wih = W[j]\n    Wil = W[j + 1]\n\n    var majh = maj(ah, bh, ch)\n    var majl = maj(al, bl, cl)\n\n    var sigma0h = sigma0(ah, al)\n    var sigma0l = sigma0(al, ah)\n    var sigma1h = sigma1(eh, el)\n    var sigma1l = sigma1(el, eh)\n\n    // t1 = h + sigma1 + ch + K[j] + W[j]\n    var Kih = K[j]\n    var Kil = K[j + 1]\n\n    var chh = Ch(eh, fh, gh)\n    var chl = Ch(el, fl, gl)\n\n    var t1l = (hl + sigma1l) | 0\n    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0\n    t1l = (t1l + chl) | 0\n    t1h = (t1h + chh + getCarry(t1l, chl)) | 0\n    t1l = (t1l + Kil) | 0\n    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0\n    t1l = (t1l + Wil) | 0\n    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0\n\n    // t2 = sigma0 + maj\n    var t2l = (sigma0l + majl) | 0\n    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0\n\n    hh = gh\n    hl = gl\n    gh = fh\n    gl = fl\n    fh = eh\n    fl = el\n    el = (dl + t1l) | 0\n    eh = (dh + t1h + getCarry(el, dl)) | 0\n    dh = ch\n    dl = cl\n    ch = bh\n    cl = bl\n    bh = ah\n    bl = al\n    al = (t1l + t2l) | 0\n    ah = (t1h + t2h + getCarry(al, t1l)) | 0\n  }\n\n  this._al = (this._al + al) | 0\n  this._bl = (this._bl + bl) | 0\n  this._cl = (this._cl + cl) | 0\n  this._dl = (this._dl + dl) | 0\n  this._el = (this._el + el) | 0\n  this._fl = (this._fl + fl) | 0\n  this._gl = (this._gl + gl) | 0\n  this._hl = (this._hl + hl) | 0\n\n  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0\n  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0\n  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0\n  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0\n  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0\n  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0\n  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0\n  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0\n}\n\nSha512.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(64)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n  writeInt64BE(this._gh, this._gl, 48)\n  writeInt64BE(this._hh, this._hl, 56)\n\n  return H\n}\n\nmodule.exports = Sha512\n","var OMeta = require(\"ometa-js/lib/ometajs/core\"), SBVRLibs = require(\"@balena/sbvr-parser/sbvr-libs\").SBVRLibs, SBVRCompilerLibs = exports.SBVRCompilerLibs = SBVRLibs._extend({\n    ResolveSynonym: function(name) {\n        var $elf = this, _fromIdx = this.input.idx;\n        return this._or(function() {\n            this._pred(this.synonyms[name]);\n            return this.synonyms[name];\n        }, function() {\n            return name;\n        });\n    }\n});\n\nSBVRCompilerLibs.initialize = function() {\n    SBVRLibs.initialize.call(this);\n    this.synonyms = {};\n};\n\nSBVRCompilerLibs.TYPE_VOCAB = \"Type\";\n\nSBVRCompilerLibs.IsPrimitive = function(term) {\n    return term[2] == this.TYPE_VOCAB ? term[1] : !1 !== (term = this.FollowConceptType(term)) && term[2] == this.TYPE_VOCAB && term[1];\n};\n\nSBVRCompilerLibs.IsChild = function(child, parent) {\n    do {\n        if (this.IdentifiersEqual(child, parent)) return !0;\n    } while (!1 !== (child = this.FollowConceptType(child)));\n    return !1;\n};\n\nSBVRCompilerLibs.MappedFactType = function(factType) {\n    var traverseInfo = this._traverseFactType(factType), mappedFactType = [];\n    if (!1 === traverseInfo || !traverseInfo.hasOwnProperty(\"__valid\")) return !1;\n    for (var i = 0; i < traverseInfo.__valid.length; i++) mappedFactType[i] = traverseInfo.__valid[i].slice();\n    mappedFactType[1][2] = factType[1][2];\n    return mappedFactType;\n};\n\nSBVRCompilerLibs.UnmappedFactType = function(factType) {\n    var mappedFactType = this.MappedFactType(factType);\n    if (!1 === mappedFactType) return !1;\n    for (var i = 0; i < mappedFactType.length; i++) mappedFactType[i] = mappedFactType[i].slice(0, 3);\n    return mappedFactType;\n};\n\nSBVRCompilerLibs.GetResourceName = function(termOrFactType) {\n    var i = 0, resource = [];\n    if (\"string\" == typeof termOrFactType) return this.ResolveSynonym(termOrFactType);\n    for (void 0; i < termOrFactType.length; i++) resource.push(this.ResolveSynonym(termOrFactType[i][1]));\n    return resource.join(\"-\");\n};\n\nSBVRCompilerLibs.GetTable = function(termNameOrFactType) {\n    return this.tables[this.GetResourceName(termNameOrFactType)];\n};\n\nSBVRCompilerLibs.GetTableID = function(termOrFactType) {\n    switch (termOrFactType[0]) {\n      case \"Term\":\n      case \"Name\":\n        return termOrFactType[1];\n\n      default:\n        return termOrFactType;\n    }\n};\n\nSBVRCompilerLibs.GetTableField = function(table, fieldName) {\n    var fieldID = this.GetTableFieldID(table, fieldName);\n    return !1 !== fieldID && table.fields[fieldID];\n};\n\nSBVRCompilerLibs.GetTableFieldID = function(table, fieldName) {\n    for (var tableFields = table.fields, i = 0; i < tableFields.length; i++) if (tableFields[i].fieldName == fieldName) return i;\n    return !1;\n};","\"use strict\";\n\nvar assign            = require(\"../object/assign\")\n  , isObject          = require(\"../object/is-object\")\n  , isValue           = require(\"../object/is-value\")\n  , captureStackTrace = Error.captureStackTrace;\n\nmodule.exports = function (message/*, code, ext*/) {\n\tvar err = new Error(message), code = arguments[1], ext = arguments[2];\n\tif (!isValue(ext)) {\n\t\tif (isObject(code)) {\n\t\t\text = code;\n\t\t\tcode = null;\n\t\t}\n\t}\n\tif (isValue(ext)) assign(err, ext);\n\tif (isValue(code)) err.code = code;\n\tif (captureStackTrace) captureStackTrace(err, module.exports);\n\treturn err;\n};\n","\"use strict\";\n\nvar value                    = require(\"./valid-value\")\n  , defineProperty           = Object.defineProperty\n  , getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor\n  , getOwnPropertyNames      = Object.getOwnPropertyNames\n  , getOwnPropertySymbols    = Object.getOwnPropertySymbols;\n\nmodule.exports = function (target, source) {\n\tvar error, sourceObject = Object(value(source));\n\ttarget = Object(value(target));\n\tgetOwnPropertyNames(sourceObject).forEach(function (name) {\n\t\ttry {\n\t\t\tdefineProperty(target, name, getOwnPropertyDescriptor(source, name));\n\t\t} catch (e) { error = e; }\n\t});\n\tif (typeof getOwnPropertySymbols === \"function\") {\n\t\tgetOwnPropertySymbols(sourceObject).forEach(function (symbol) {\n\t\t\ttry {\n\t\t\t\tdefineProperty(target, symbol, getOwnPropertyDescriptor(source, symbol));\n\t\t\t} catch (e) { error = e; }\n\t\t});\n\t}\n\tif (error !== undefined) throw error;\n\treturn target;\n};\n","\"use strict\";\n\nvar isFunction = require(\"../function/is\");\n\nvar classRe = /^\\s*class[\\s{/}]/, functionToString = Function.prototype.toString;\n\nmodule.exports = function (value) {\n\tif (!isFunction(value)) return false;\n\tif (classRe.test(functionToString.call(value))) return false;\n\treturn true;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? String.prototype.contains : require(\"./shim\");\n","\"use strict\";\n\nvar toArray  = require(\"es5-ext/array/to-array\")\n  , isValue  = require(\"es5-ext/object/is-value\")\n  , callable = require(\"es5-ext/object/valid-callable\");\n\nvar slice = Array.prototype.slice, resolveArgs;\n\nresolveArgs = function (args) {\n\treturn this.map(function (resolve, i) {\n\t\treturn resolve ? resolve(args[i]) : args[i];\n\t}).concat(slice.call(args, this.length));\n};\n\nmodule.exports = function (resolvers) {\n\tresolvers = toArray(resolvers);\n\tresolvers.forEach(function (resolve) {\n\t\tif (isValue(resolve)) callable(resolve);\n\t});\n\treturn resolveArgs.bind(resolvers);\n};\n","\"use strict\";\n\nvar isSymbol = require(\"./is-symbol\");\n\nmodule.exports = function (value) {\n\tif (!isSymbol(value)) throw new TypeError(value + \" is not a symbol\");\n\treturn value;\n};\n","\"use strict\";\n\nvar callable = require(\"es5-ext/object/valid-callable\");\n\nmodule.exports = function (userNormalizer) {\n\tvar normalizer;\n\tif (typeof userNormalizer === \"function\") return { set: userNormalizer, get: userNormalizer };\n\tnormalizer = { get: callable(userNormalizer.get) };\n\tif (userNormalizer.set !== undefined) {\n\t\tnormalizer.set = callable(userNormalizer.set);\n\t\tif (userNormalizer.delete) normalizer.delete = callable(userNormalizer.delete);\n\t\tif (userNormalizer.clear) normalizer.clear = callable(userNormalizer.clear);\n\t\treturn normalizer;\n\t}\n\tnormalizer.set = normalizer.get;\n\treturn normalizer;\n};\n","// Deprecated\n\n\"use strict\";\n\nmodule.exports = function (obj) { return typeof obj === \"function\"; };\n","module.exports = isPromise;\nmodule.exports.default = isPromise;\n\nfunction isPromise(obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n}\n","module.exports = require(\"./lib/randomstring\");","import { SBVRParser } from '@balena/sbvr-parser';\n// tslint:disable-next-line:no-var-requires\nconst Types: string = require('@balena/sbvr-types/Type.sbvr');\nimport { version as sbvrParserVersion } from '@balena/sbvr-parser/package.json';\nimport { version } from '@balena/sbvr-parser/package.json';\n\nexport const ExtendedSBVRParser = SBVRParser._extend({\n\tinitialize() {\n\t\tSBVRParser.initialize.call(this);\n\t\tthis.AddCustomAttribute('Database ID Field:');\n\t\tthis.AddCustomAttribute('Database Table Name:');\n\t\tthis.AddBuiltInVocab(Types);\n\t\treturn this;\n\t},\n\tversion: sbvrParserVersion + '+' + version,\n});\n","import type { Tx } from '../database-layer/db';\nimport type { Resolvable } from '../sbvr-api/common-types';\nimport type { Config, Model } from '../config-loader/config-loader';\n\nimport { Engines } from '@balena/abstract-sql-compiler';\nimport * as Bluebird from 'bluebird';\nimport * as _ from 'lodash';\nimport { TypedError } from 'typed-error';\nimport { migrator as migratorEnv } from '../config-loader/env';\nimport * as sbvrUtils from '../sbvr-api/sbvr-utils';\n\n// tslint:disable-next-line:no-var-requires\nconst modelText: string = require('./migrations.sbvr');\n\ntype ApiRootModel = Model & { apiRoot: string };\n\ntype SbvrUtils = typeof sbvrUtils;\n\ntype MigrationTuple = [string, Migration];\n\nexport type MigrationFn = (tx: Tx, sbvrUtils: SbvrUtils) => Resolvable<void>;\n\nexport type Migration = string | MigrationFn;\n\nexport class MigrationError extends TypedError {}\n\n// Tagged template to convert binds from `?` format to the necessary output format,\n// eg `$1`/`$2`/etc for postgres\nconst binds = (strings: TemplateStringsArray, ...bindNums: number[]) =>\n\tstrings\n\t\t.map((str, i) => {\n\t\t\tif (i === bindNums.length) {\n\t\t\t\treturn str;\n\t\t\t}\n\t\t\tif (i + 1 !== bindNums[i]) {\n\t\t\t\tthrow new SyntaxError('Migration sql binds must be sequential');\n\t\t\t}\n\t\t\tif (sbvrUtils.db.engine === Engines.postgres) {\n\t\t\t\treturn str + `$${bindNums[i]}`;\n\t\t\t}\n\t\t\treturn str + `?`;\n\t\t})\n\t\t.join('');\n\nexport const postRun = async (tx: Tx, model: ApiRootModel): Promise<void> => {\n\tconst { initSql } = model;\n\tif (initSql == null) {\n\t\treturn;\n\t}\n\n\tconst modelName = model.apiRoot;\n\n\tconst exists = await checkModelAlreadyExists(tx, modelName);\n\tif (!exists) {\n\t\t(sbvrUtils.api.migrations?.logger.info ?? console.info)(\n\t\t\t'First time executing, running init script',\n\t\t);\n\t\tawait Bluebird.using(lockMigrations(tx, modelName), async () => {\n\t\t\tawait tx.executeSql(initSql);\n\t\t});\n\t}\n};\n\nexport const run = async (tx: Tx, model: ApiRootModel): Promise<void> => {\n\tconst { migrations } = model;\n\tif (migrations == null || _.isEmpty(migrations)) {\n\t\treturn;\n\t}\n\n\tconst modelName = model.apiRoot;\n\n\t// migrations only run if the model has been executed before,\n\t// to make changes that can't be automatically applied\n\tconst exists = await checkModelAlreadyExists(tx, modelName);\n\tif (!exists) {\n\t\t(sbvrUtils.api.migrations?.logger.info ?? console.info)(\n\t\t\t'First time model has executed, skipping migrations',\n\t\t);\n\n\t\treturn await setExecutedMigrations(tx, modelName, Object.keys(migrations));\n\t}\n\tawait Bluebird.using(lockMigrations(tx, modelName), async () => {\n\t\tconst executedMigrations = await getExecutedMigrations(tx, modelName);\n\t\tconst pendingMigrations = filterAndSortPendingMigrations(\n\t\t\tmigrations,\n\t\t\texecutedMigrations,\n\t\t);\n\t\tif (pendingMigrations.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst newlyExecutedMigrations = await executeMigrations(\n\t\t\ttx,\n\t\t\tpendingMigrations,\n\t\t);\n\t\tawait setExecutedMigrations(tx, modelName, [\n\t\t\t...executedMigrations,\n\t\t\t...newlyExecutedMigrations,\n\t\t]);\n\t});\n};\n\nconst checkModelAlreadyExists = async (\n\ttx: Tx,\n\tmodelName: string,\n): Promise<boolean> => {\n\tconst result = await tx.tableList(\"name = 'migration'\");\n\tif (result.rows.length === 0) {\n\t\treturn false;\n\t}\n\tconst { rows } = await tx.executeSql(\n\t\tbinds`\nSELECT 1\nFROM \"model\"\nWHERE \"model\".\"is of-vocabulary\" = ${1}\nLIMIT 1`,\n\t\t[modelName],\n\t);\n\n\treturn rows.length > 0;\n};\n\nconst getExecutedMigrations = async (\n\ttx: Tx,\n\tmodelName: string,\n): Promise<string[]> => {\n\tconst { rows } = await tx.executeSql(\n\t\tbinds`\nSELECT \"migration\".\"executed migrations\" AS \"executed_migrations\"\nFROM \"migration\"\nWHERE \"migration\".\"model name\" = ${1}`,\n\t\t[modelName],\n\t);\n\n\tconst data = rows[0];\n\tif (data == null) {\n\t\treturn [];\n\t}\n\n\treturn JSON.parse(data.executed_migrations) as string[];\n};\n\nconst setExecutedMigrations = async (\n\ttx: Tx,\n\tmodelName: string,\n\texecutedMigrations: string[],\n): Promise<void> => {\n\tconst stringifiedMigrations = JSON.stringify(executedMigrations);\n\n\tconst result = await tx.tableList(\"name = 'migration'\");\n\tif (result.rows.length === 0) {\n\t\treturn;\n\t}\n\n\tconst { rowsAffected } = await tx.executeSql(\n\t\tbinds`\nUPDATE \"migration\"\nSET \"model name\" = ${1},\n\"executed migrations\" = ${2}\nWHERE \"migration\".\"model name\" = ${3}`,\n\t\t[modelName, stringifiedMigrations, modelName],\n\t);\n\n\tif (rowsAffected === 0) {\n\t\ttx.executeSql(\n\t\t\tbinds`\nINSERT INTO \"migration\" (\"model name\", \"executed migrations\")\nVALUES (${1}, ${2})`,\n\t\t\t[modelName, stringifiedMigrations],\n\t\t);\n\t}\n};\n\n// turns {\"key1\": migration, \"key3\": migration, \"key2\": migration}\n// into  [[\"key1\", migration], [\"key2\", migration], [\"key3\", migration]]\nconst filterAndSortPendingMigrations = (\n\tmigrations: NonNullable<Model['migrations']>,\n\texecutedMigrations: string[],\n): MigrationTuple[] =>\n\t(_(migrations).omit(executedMigrations) as _.Object<typeof migrations>)\n\t\t.toPairs()\n\t\t.sortBy(([migrationKey]) => migrationKey)\n\t\t.value();\n\nconst lockMigrations = (tx: Tx, modelName: string): Bluebird.Disposer<void> =>\n\tBluebird.try(async () => {\n\t\ttry {\n\t\t\tawait tx.executeSql(\n\t\t\t\tbinds`\nDELETE FROM \"migration lock\"\nWHERE \"model name\" = ${1}\nAND \"created at\" < ${2}`,\n\t\t\t\t[modelName, new Date(Date.now() - migratorEnv.lockTimeout)],\n\t\t\t);\n\t\t\tawait tx.executeSql(\n\t\t\t\tbinds`\nINSERT INTO \"migration lock\" (\"model name\")\nVALUES (${1})`,\n\t\t\t\t[modelName],\n\t\t\t);\n\t\t} catch (err) {\n\t\t\tawait Bluebird.delay(migratorEnv.lockFailDelay);\n\t\t\tthrow err;\n\t\t}\n\t}).disposer(async () => {\n\t\ttry {\n\t\t\tawait tx.executeSql(\n\t\t\t\tbinds`\nDELETE FROM \"migration lock\"\nWHERE \"model name\" = ${1}`,\n\t\t\t\t[modelName],\n\t\t\t);\n\t\t} catch {\n\t\t\t// We ignore errors here as it's mostly likely caused by the migration failing and\n\t\t\t// rolling back the transaction, and if we rethrow here we'll overwrite the real error\n\t\t\t// making it much harder for users to see what went wrong and fix it\n\t\t}\n\t});\n\nconst executeMigrations = async (\n\ttx: Tx,\n\tmigrations: MigrationTuple[] = [],\n): Promise<string[]> => {\n\ttry {\n\t\tfor (const migration of migrations) {\n\t\t\tawait executeMigration(tx, migration);\n\t\t}\n\t} catch (err) {\n\t\t(sbvrUtils.api.migrations?.logger.error ?? console.error)(\n\t\t\t'Error while executing migrations, rolled back',\n\t\t);\n\t\tthrow new MigrationError(err);\n\t}\n\treturn migrations.map(([migrationKey]) => migrationKey); // return migration keys\n};\n\nconst executeMigration = async (\n\ttx: Tx,\n\t[key, migration]: MigrationTuple,\n): Promise<void> => {\n\t(sbvrUtils.api.migrations?.logger.info ?? console.info)(\n\t\t`Running migration ${JSON.stringify(key)}`,\n\t);\n\n\tif (typeof migration === 'function') {\n\t\tawait migration(tx, sbvrUtils);\n\t} else if (typeof migration === 'string') {\n\t\tawait tx.executeSql(migration);\n\t} else {\n\t\tthrow new MigrationError(`Invalid migration type: ${typeof migration}`);\n\t}\n};\n\nexport const config: Config = {\n\tmodels: [\n\t\t{\n\t\t\tmodelName: 'migrations',\n\t\t\tapiRoot: 'migrations',\n\t\t\tmodelText,\n\t\t\tmigrations: {\n\t\t\t\t'11.0.0-modified-at': `\n\t\t\t\t\tALTER TABLE \"migration\"\n\t\t\t\t\tADD COLUMN IF NOT EXISTS \"modified at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL;\n\t\t\t\t`,\n\t\t\t\t'11.0.1-modified-at': `\n\t\t\t\t\tALTER TABLE \"migration lock\"\n\t\t\t\t\tADD COLUMN IF NOT EXISTS \"modified at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL;\n\t\t\t\t`,\n\t\t\t},\n\t\t},\n\t],\n};\n","// Generated by PEG.js v0.11.0-master.b7b87ea, https://pegjs.org/\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function C() { this.constructor = child; }\n  C.prototype = parent.prototype;\n  child.prototype = new C();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message = message;\n  this.expected = expected;\n  this.found = found;\n  this.location = location;\n  this.name = \"SyntaxError\";\n\n  // istanbul ignore next\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found, location) {\n  var DESCRIBE_EXPECTATION_FNS = {\n    literal: function(expectation) {\n      return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n    },\n\n    class: function(expectation) {\n      var escapedParts = expectation.parts.map(function(part) {\n        return Array.isArray(part)\n          ? classEscape(part[0]) + \"-\" + classEscape(part[1])\n          : classEscape(part);\n      });\n\n      return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n    },\n\n    any: function() {\n      return \"any character\";\n    },\n\n    end: function() {\n      return \"end of input\";\n    },\n\n    other: function(expectation) {\n      return expectation.description;\n    },\n\n    not: function(expectation) {\n      return \"not \" + describeExpectation(expectation.expected);\n    }\n  };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\"/g,  \"\\\\\\\"\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\\]/g, \"\\\\]\")\n      .replace(/\\^/g, \"\\\\^\")\n      .replace(/-/g,  \"\\\\-\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = expected.map(describeExpectation);\n    var i, j;\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== undefined ? options : {};\n\n  var peg$FAILED = {};\n\n  var peg$startRuleFunctions = { Process: peg$parseProcess, ProcessRule: peg$parseProcessRule };\n  var peg$startRuleFunction = peg$parseProcess;\n\n  var peg$c0 = \"/$metadata\";\n  var peg$c1 = \"/\";\n  var peg$c2 = \"&\";\n  var peg$c3 = \"$\";\n  var peg$c4 = \"%24\";\n  var peg$c5 = \"@\";\n  var peg$c6 = \"=\";\n  var peg$c7 = \"orderby=\";\n  var peg$c8 = \",\";\n  var peg$c9 = \"asc\";\n  var peg$c10 = \"desc\";\n  var peg$c11 = \"top=\";\n  var peg$c12 = \"skip=\";\n  var peg$c13 = \"inlinecount=\";\n  var peg$c14 = \"allpages\";\n  var peg$c15 = \"none\";\n  var peg$c16 = \"count=\";\n  var peg$c17 = \"expand=\";\n  var peg$c18 = \"select=\";\n  var peg$c19 = \"*\";\n  var peg$c20 = \"filter=\";\n  var peg$c21 = \"+\";\n  var peg$c22 = \"json\";\n  var peg$c23 = \"atom\";\n  var peg$c24 = \"xml\";\n  var peg$c25 = \"format=\";\n  var peg$c26 = \";\";\n  var peg$c27 = \"odata.\";\n  var peg$c28 = \"metadata=\";\n  var peg$c29 = \"minimal\";\n  var peg$c30 = \"full\";\n  var peg$c31 = \"in\";\n  var peg$c32 = \"(\";\n  var peg$c33 = \")\";\n  var peg$c34 = \"eq\";\n  var peg$c35 = \"ne\";\n  var peg$c36 = \"gt\";\n  var peg$c37 = \"ge\";\n  var peg$c38 = \"lt\";\n  var peg$c39 = \"le\";\n  var peg$c40 = \"and\";\n  var peg$c41 = \"or\";\n  var peg$c42 = \"sub\";\n  var peg$c43 = \"add\";\n  var peg$c44 = \"mod\";\n  var peg$c45 = \"div\";\n  var peg$c46 = \"mul\";\n  var peg$c47 = \"not\";\n  var peg$c48 = \"cast\";\n  var peg$c49 = \"ceiling\";\n  var peg$c50 = \"concat\";\n  var peg$c51 = \"contains\";\n  var peg$c52 = \"date\";\n  var peg$c53 = \"day\";\n  var peg$c54 = \"endswith\";\n  var peg$c55 = \"floor\";\n  var peg$c56 = \"fractionalseconds\";\n  var peg$c57 = \"hour\";\n  var peg$c58 = \"indexof\";\n  var peg$c59 = \"isof\";\n  var peg$c60 = \"length\";\n  var peg$c61 = \"maxdatetime\";\n  var peg$c62 = \"mindatetime\";\n  var peg$c63 = \"minute\";\n  var peg$c64 = \"month\";\n  var peg$c65 = \"now\";\n  var peg$c66 = \"replace\";\n  var peg$c67 = \"round\";\n  var peg$c68 = \"second\";\n  var peg$c69 = \"startswith\";\n  var peg$c70 = \"substringof\";\n  var peg$c71 = \"substring\";\n  var peg$c72 = \"time\";\n  var peg$c73 = \"tolower\";\n  var peg$c74 = \"totaloffsetminutes\";\n  var peg$c75 = \"totalseconds\";\n  var peg$c76 = \"toupper\";\n  var peg$c77 = \"trim\";\n  var peg$c78 = \"year\";\n  var peg$c79 = \"any\";\n  var peg$c80 = \"all\";\n  var peg$c81 = \":\";\n  var peg$c82 = \"/$count\";\n  var peg$c83 = \"/$links\";\n  var peg$c84 = \"?\";\n  var peg$c85 = \".\";\n  var peg$c86 = \"null\";\n  var peg$c87 = \"true\";\n  var peg$c88 = \"false\";\n  var peg$c89 = \"duration\";\n  var peg$c90 = \"P\";\n  var peg$c91 = \"D\";\n  var peg$c92 = \"T\";\n  var peg$c93 = \"H\";\n  var peg$c94 = \"M\";\n  var peg$c95 = \"S\";\n  var peg$c96 = \"%2B\";\n  var peg$c97 = \"-\";\n  var peg$c98 = \"'\";\n  var peg$c99 = \"%27\";\n  var peg$c100 = \"datetime\";\n  var peg$c101 = \" \";\n  var peg$c102 = \"%20\";\n\n  var peg$r0 = /^[a-z]/i;\n  var peg$r1 = /^[&;]/;\n  var peg$r2 = /^[^:\\/?#[\\]@!$*&()+,;= %]/;\n  var peg$r3 = /^[0-9]/;\n  var peg$r4 = /^[^:\\/?#[\\]@!$*&()+,;=]/;\n\n  var peg$e0 = peg$literalExpectation(\"/$metadata\", false);\n  var peg$e1 = peg$literalExpectation(\"/\", false);\n  var peg$e2 = peg$literalExpectation(\"&\", false);\n  var peg$e3 = peg$otherExpectation(\"$ query options\");\n  var peg$e4 = peg$literalExpectation(\"@\", false);\n  var peg$e5 = peg$literalExpectation(\"=\", false);\n  var peg$e6 = peg$literalExpectation(\"orderby=\", false);\n  var peg$e7 = peg$literalExpectation(\",\", false);\n  var peg$e8 = peg$literalExpectation(\"asc\", false);\n  var peg$e9 = peg$literalExpectation(\"desc\", false);\n  var peg$e10 = peg$literalExpectation(\"top=\", false);\n  var peg$e11 = peg$literalExpectation(\"skip=\", false);\n  var peg$e12 = peg$literalExpectation(\"inlinecount=\", false);\n  var peg$e13 = peg$literalExpectation(\"allpages\", false);\n  var peg$e14 = peg$literalExpectation(\"none\", false);\n  var peg$e15 = peg$literalExpectation(\"count=\", false);\n  var peg$e16 = peg$literalExpectation(\"expand=\", false);\n  var peg$e17 = peg$literalExpectation(\"select=\", false);\n  var peg$e18 = peg$literalExpectation(\"*\", false);\n  var peg$e19 = peg$literalExpectation(\"filter=\", false);\n  var peg$e20 = peg$classExpectation([[\"a\", \"z\"]], false, true);\n  var peg$e21 = peg$literalExpectation(\"+\", false);\n  var peg$e22 = peg$literalExpectation(\"json\", false);\n  var peg$e23 = peg$literalExpectation(\"atom\", false);\n  var peg$e24 = peg$literalExpectation(\"xml\", false);\n  var peg$e25 = peg$literalExpectation(\"format=\", false);\n  var peg$e26 = peg$literalExpectation(\";\", false);\n  var peg$e27 = peg$literalExpectation(\"odata.\", false);\n  var peg$e28 = peg$literalExpectation(\"metadata=\", false);\n  var peg$e29 = peg$literalExpectation(\"minimal\", false);\n  var peg$e30 = peg$literalExpectation(\"full\", false);\n  var peg$e31 = peg$literalExpectation(\"in\", false);\n  var peg$e32 = peg$literalExpectation(\"(\", false);\n  var peg$e33 = peg$literalExpectation(\")\", false);\n  var peg$e34 = peg$literalExpectation(\"eq\", false);\n  var peg$e35 = peg$literalExpectation(\"ne\", false);\n  var peg$e36 = peg$literalExpectation(\"gt\", false);\n  var peg$e37 = peg$literalExpectation(\"ge\", false);\n  var peg$e38 = peg$literalExpectation(\"lt\", false);\n  var peg$e39 = peg$literalExpectation(\"le\", false);\n  var peg$e40 = peg$literalExpectation(\"and\", false);\n  var peg$e41 = peg$literalExpectation(\"or\", false);\n  var peg$e42 = peg$literalExpectation(\"sub\", false);\n  var peg$e43 = peg$literalExpectation(\"add\", false);\n  var peg$e44 = peg$literalExpectation(\"mod\", false);\n  var peg$e45 = peg$literalExpectation(\"div\", false);\n  var peg$e46 = peg$literalExpectation(\"mul\", false);\n  var peg$e47 = peg$literalExpectation(\"not\", false);\n  var peg$e48 = peg$literalExpectation(\"cast\", false);\n  var peg$e49 = peg$literalExpectation(\"ceiling\", false);\n  var peg$e50 = peg$literalExpectation(\"concat\", false);\n  var peg$e51 = peg$literalExpectation(\"contains\", false);\n  var peg$e52 = peg$literalExpectation(\"date\", false);\n  var peg$e53 = peg$literalExpectation(\"day\", false);\n  var peg$e54 = peg$literalExpectation(\"endswith\", false);\n  var peg$e55 = peg$literalExpectation(\"floor\", false);\n  var peg$e56 = peg$literalExpectation(\"fractionalseconds\", false);\n  var peg$e57 = peg$literalExpectation(\"hour\", false);\n  var peg$e58 = peg$literalExpectation(\"indexof\", false);\n  var peg$e59 = peg$literalExpectation(\"isof\", false);\n  var peg$e60 = peg$literalExpectation(\"length\", false);\n  var peg$e61 = peg$literalExpectation(\"maxdatetime\", false);\n  var peg$e62 = peg$literalExpectation(\"mindatetime\", false);\n  var peg$e63 = peg$literalExpectation(\"minute\", false);\n  var peg$e64 = peg$literalExpectation(\"month\", false);\n  var peg$e65 = peg$literalExpectation(\"now\", false);\n  var peg$e66 = peg$literalExpectation(\"replace\", false);\n  var peg$e67 = peg$literalExpectation(\"round\", false);\n  var peg$e68 = peg$literalExpectation(\"second\", false);\n  var peg$e69 = peg$literalExpectation(\"startswith\", false);\n  var peg$e70 = peg$literalExpectation(\"substringof\", false);\n  var peg$e71 = peg$literalExpectation(\"substring\", false);\n  var peg$e72 = peg$literalExpectation(\"time\", false);\n  var peg$e73 = peg$literalExpectation(\"tolower\", false);\n  var peg$e74 = peg$literalExpectation(\"totaloffsetminutes\", false);\n  var peg$e75 = peg$literalExpectation(\"totalseconds\", false);\n  var peg$e76 = peg$literalExpectation(\"toupper\", false);\n  var peg$e77 = peg$literalExpectation(\"trim\", false);\n  var peg$e78 = peg$literalExpectation(\"year\", false);\n  var peg$e79 = peg$literalExpectation(\"any\", false);\n  var peg$e80 = peg$literalExpectation(\"all\", false);\n  var peg$e81 = peg$literalExpectation(\":\", false);\n  var peg$e82 = peg$literalExpectation(\"/$count\", false);\n  var peg$e83 = peg$classExpectation([\"&\", \";\"], false, false);\n  var peg$e84 = peg$literalExpectation(\"/$links\", false);\n  var peg$e85 = peg$literalExpectation(\"?\", false);\n  var peg$e86 = peg$classExpectation([\":\", \"/\", \"?\", \"#\", \"[\", \"]\", \"@\", \"!\", \"$\", \"*\", \"&\", \"(\", \")\", \"+\", \",\", \";\", \"=\", \" \", \"%\"], true, false);\n  var peg$e87 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n  var peg$e88 = peg$literalExpectation(\".\", false);\n  var peg$e89 = peg$literalExpectation(\"null\", false);\n  var peg$e90 = peg$literalExpectation(\"true\", false);\n  var peg$e91 = peg$literalExpectation(\"false\", false);\n  var peg$e92 = peg$literalExpectation(\"duration\", false);\n  var peg$e93 = peg$literalExpectation(\"P\", false);\n  var peg$e94 = peg$literalExpectation(\"D\", false);\n  var peg$e95 = peg$literalExpectation(\"T\", false);\n  var peg$e96 = peg$literalExpectation(\"H\", false);\n  var peg$e97 = peg$literalExpectation(\"M\", false);\n  var peg$e98 = peg$literalExpectation(\"S\", false);\n  var peg$e99 = peg$classExpectation([\":\", \"/\", \"?\", \"#\", \"[\", \"]\", \"@\", \"!\", \"$\", \"*\", \"&\", \"(\", \")\", \"+\", \",\", \";\", \"=\"], true, false);\n  var peg$e100 = peg$literalExpectation(\"%2B\", false);\n  var peg$e101 = peg$literalExpectation(\"-\", false);\n  var peg$e102 = peg$literalExpectation(\"'\", false);\n  var peg$e103 = peg$literalExpectation(\"%27\", false);\n  var peg$e104 = peg$anyExpectation();\n  var peg$e105 = peg$literalExpectation(\"datetime\", false);\n  var peg$e106 = peg$literalExpectation(\"$\", false);\n  var peg$e107 = peg$literalExpectation(\" \", false);\n  var peg$e108 = peg$literalExpectation(\"%20\", false);\n\n  var peg$f0 = function() {reset(); return true;};\n  var peg$f1 = function(tree) { return { tree: tree, binds: binds } };\n  var peg$f2 = function() {\n  \t\treset();\n  \t\tvar tree = eval(`peg$parse${options.rule}()`);\n  \t\treturn {\n  \t\t\ttree,\n  \t\t\tbinds\n  \t\t}\n  \t};\n  var peg$f3 = function(model) { return model };\n  var peg$f4 = function() { return { resource: '$metadata' } };\n  var peg$f5 = function() { return { resource: '$serviceroot' } };\n  var peg$f6 = function(option, options) { return CollapseObjectArray([option, ...options]) };\n  var peg$f7 = function(name, n) { return [ 'Real', n ] };\n  var peg$f8 = function(name, b) { return [ 'Boolean', b ] };\n  var peg$f9 = function(name, s) { return [ 'Text', s ] };\n  var peg$f10 = function(name, value) { return !binds['@' + name] };\n  var peg$f11 = function(name, value) {\n  \t\tbinds['@' + name] = value\n  \t\treturn {\n  \t\t\tname: '@' + name,\n  \t\t\tvalue: value\n  \t\t}\n  \t};\n  var peg$f12 = function(name, value) { return { name: name, value: value } };\n  var peg$f13 = function(property, properties) { return { name: '$orderby', value: { properties: [property, ...properties] } } };\n  var peg$f14 = function(property) { return 'desc' };\n  var peg$f15 = function(property, order) {\n  \t\tproperty.order = order;\n  \t\treturn property\n  \t};\n  var peg$f16 = function(value) { return { name: '$top', value: value } };\n  var peg$f17 = function(value) { return { name: '$skip', value: value } };\n  var peg$f18 = function() { return '' };\n  var peg$f19 = function(value) { return { name: '$inlinecount', value: value } };\n  var peg$f20 = function(value) { return { name: '$count', value: value } };\n  var peg$f21 = function(properties) { return { name: '$expand', value: { properties: properties } } };\n  var peg$f22 = function(properties) { return { properties: properties } };\n  var peg$f23 = function(value) { return { name: '$select', value: value } };\n  var peg$f24 = function(expr) { return { name: '$filter', value: expr } };\n  var peg$f25 = function(type, metadata) { return { name: '$format', value: { type, metadata } } };\n  var peg$f26 = function(type) { return { name: '$format', value: type } };\n  var peg$f27 = function() {\n  \t\tprecedence = 0;\n  \t};\n  var peg$f28 = function() {\n  \t\t\treturn precedence;\n  \t\t};\n  var peg$f29 = function(minPrecedence, x) { return [x] };\n  var peg$f30 = function(minPrecedence, lhs, op) {\n  \t\t\t\tprecedence = operatorPrecedence[op] + 1\n  \t\t\t\treturn precedence > minPrecedence\n  \t\t\t};\n  var peg$f31 = function(minPrecedence, lhs, op, rhs) {\n  \t\t\t\tif (Array.isArray(lhs[0]) && op === lhs[0][0]) {\n  \t\t\t\t\tlhs[0].push(rhs);\n  \t\t\t\t} else {\n  \t\t\t\t\tlhs[0] = [ op, lhs[0], rhs ];\n  \t\t\t\t}\n  \t\t\t};\n  var peg$f32 = function(minPrecedence, lhs, op, rhs) {lhs[0] = [ op, lhs[0], rhs ]};\n  var peg$f33 = function(minPrecedence, lhs) { return lhs[0] };\n  var peg$f34 = function(minPrecedence) {return minPrecedence > 0};\n  var peg$f35 = function(minPrecedence) {\n  \t\t\tprecedence = 0;\n  \t\t\treturn peg$parseFilterByExpressionLoop()\n  \t\t};\n  var peg$f36 = function(first, rest) { return [ first, ...rest ] };\n  var peg$f37 = function(methodName, first, rest) { return [ first, ...rest ] };\n  var peg$f38 = function(methodName) { return [] };\n  var peg$f39 = function(methodName, args) { return args.length === methods[methodName] || (Array.isArray(methods[methodName]) && methods[methodName].includes(args.length)) };\n  var peg$f40 = function(methodName, args) { return [ 'call', { args: args, method: methodName } ] };\n  var peg$f41 = function(name, identifier, expression) { return { expression: expression, identifier: identifier, method: name } };\n  var peg$f42 = function(path, paths) { return [path, ...paths] };\n  var peg$f43 = function(resource, property) { return true };\n  var peg$f44 = function(resource, property, count) { return { name: resource, property, count } };\n  var peg$f45 = function(resource) { return true };\n  var peg$f46 = function(resource, count, option, options) { return CollapseObjectArray([option, ...options]) };\n  var peg$f47 = function(resource, count) { return {} };\n  var peg$f48 = function(resource, count, optionsObj, next) { return { name: resource, property: next, count: count, options: optionsObj} };\n  var peg$f49 = function(resource, next) { return { name: resource, property: next } };\n  var peg$f50 = function(resource, lambda) { return { name: resource, lambda: lambda } };\n  var peg$f51 = function(resource, method) { return { name: resource, method: method } };\n  var peg$f52 = function(keyBind, keyBinds) { return CollapseObjectArray([keyBind, ...keyBinds]) };\n  var peg$f53 = function(name, value) { return { name, value }};\n  var peg$f54 = function(resource) { return { resource } };\n  var peg$f55 = function(result, key) { result.key = key };\n  var peg$f56 = function(result, link) {result.link = link};\n  var peg$f57 = function(result, property) {result.property = property};\n  var peg$f58 = function(result) {result.count = true};\n  var peg$f59 = function(result) { return result };\n  var peg$f60 = function(result, options) {result.options = options};\n  var peg$f61 = function(resourceName) { return decodeURIComponent(resourceName) };\n  var peg$f62 = function(sign, d) { return Number(sign + d) };\n  var peg$f63 = function(d) { return parseInt(d, 10) };\n  var peg$f64 = function() { return null };\n  var peg$f65 = function() { return true };\n  var peg$f66 = function() { return false };\n  var peg$f67 = function(sign, day, hour, minute, second) {return hour || minute || second};\n  var peg$f68 = function(sign, day, hour, minute, second) {\n  \t\t\treturn {\n  \t\t\t\thour: hour || undefined,\n  \t\t\t\tminute: minute || undefined,\n  \t\t\t\tsecond: second || undefined\n  \t\t\t}\n  \t\t};\n  var peg$f69 = function(sign, day, time) {return day || time};\n  var peg$f70 = function(sign, day, time) { return {\n  \t\tnegative: sign === '-',\n  \t\tday: day || undefined,\n  \t\thour: time ? time.hour : undefined,\n  \t\tminute: time ? time.minute : undefined,\n  \t\tsecond: time ? time.second : undefined,\n  \t} };\n  var peg$f71 = function(d) { return Number(d) };\n  var peg$f72 = function(text) { return decodeURIComponent(text) };\n  var peg$f73 = function() { return '+' };\n  var peg$f74 = function() { return '\\'' };\n  var peg$f75 = function(text) { return decodeURIComponent(text.join('')) };\n  var peg$f76 = function(param) { return { bind: '@' + param } };\n  var peg$f77 = function(n) { return Bind('Real', n) };\n  var peg$f78 = function() { return 'Date Time' };\n  var peg$f79 = function() { return 'Date' };\n  var peg$f80 = function(type, date) { return Date.parse(date) };\n  var peg$f81 = function(type, date) { return isNaN(date) };\n  var peg$f82 = function(type, date) { return [type, date] };\n  var peg$f83 = function(d) { return Bind(d[0], d[1]) };\n  var peg$f84 = function(b) { return Bind('Boolean', b) };\n  var peg$f85 = function(resource) {\n  \t\tvar bind = Bind('ContentReference', resource)\n  \t\treturn { resource: bind, key: bind }\n  \t};\n  var peg$f86 = function(t) { return Bind('Text', t) };\n\n  var peg$currPos = 0;\n  var peg$savedPos = 0;\n  var peg$posDetailsCache = [{ line: 1, column: 1 }];\n  var peg$expected = [];\n  var peg$silentFails = 0;\n\n  var peg$resultsCache = {};\n\n  var peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos];\n    var p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line: details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n\n      return details;\n    }\n  }\n\n\n  function peg$computeLocation(startPos, endPos) {\n    var loc = {};\n\n\n\n    var startPosDetails = peg$computePosDetails(startPos);\n    loc.start = {\n      offset: startPos,\n      line: startPosDetails.line,\n      column: startPosDetails.column\n    };\n\n    var endPosDetails = peg$computePosDetails(endPos);\n    loc.end = {\n      offset: endPos,\n      line: endPosDetails.line,\n      column: endPosDetails.column\n    };\n\n    return loc;\n  }\n\n  function peg$begin() {\n    peg$expected.push({ pos: peg$currPos, variants: [] });\n  }\n\n  function peg$expect(expected) {\n    var top = peg$expected[peg$expected.length - 1];\n\n    if (peg$currPos < top.pos) { return; }\n\n    if (peg$currPos > top.pos) {\n      top.pos = peg$currPos;\n      top.variants = [];\n    }\n\n    top.variants.push(expected);\n  }\n\n  function peg$end(invert) {\n    var expected = peg$expected.pop();\n    var top = peg$expected[peg$expected.length - 1];\n    var variants = expected.variants;\n\n    if (top.pos !== expected.pos) { return; }\n\n    if (invert) {\n      variants = variants.map(function(e) {\n        return e.type === \"not\" ? e.expected : { type: \"not\", expected: e };\n      });\n    }\n\n    Array.prototype.push.apply(top.variants, variants);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found, location),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$buildError() {\n    var expected = peg$expected[0];\n    var failPos = expected.pos;\n\n    return peg$buildStructuredError(\n      expected.variants,\n      failPos < input.length ? input.charAt(failPos) : null,\n      failPos < input.length\n        ? peg$computeLocation(failPos, failPos + 1)\n        : peg$computeLocation(failPos, failPos)\n    );\n  }\n\n  function peg$parseProcess() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 0;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    peg$savedPos = peg$currPos;\n    s1 = peg$f0();\n    if (s1) {\n      s1 = undefined;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseOData();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f1(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseProcessRule() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 1;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = '';\n    peg$savedPos = s0;\n    s1 = peg$f2();\n    s0 = s1;\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseOData() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 2;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parsePathSegment();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f3(s1);\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e0);\n      if (input.substr(peg$currPos, 10) === peg$c0) {\n        s1 = peg$c0;\n        peg$currPos += 10;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$f4();\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        rule$expects(peg$e1);\n        if (input.charCodeAt(peg$currPos) === 47) {\n          s1 = peg$c1;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$f5();\n        }\n        s0 = s1;\n      }\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseQueryOptions() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 3;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseQueryOption();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      rule$expects(peg$e2);\n      if (input.charCodeAt(peg$currPos) === 38) {\n        s4 = peg$c2;\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseQueryOption();\n        if (s5 !== peg$FAILED) {\n          s3 = s5;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        rule$expects(peg$e2);\n        if (input.charCodeAt(peg$currPos) === 38) {\n          s4 = peg$c2;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseQueryOption();\n          if (s5 !== peg$FAILED) {\n            s3 = s5;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      peg$savedPos = s0;\n      s0 = peg$f6(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseQueryOption() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 4;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseDollar();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSelectOption();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parseFilterByOption();\n        if (s2 === peg$FAILED) {\n          s2 = peg$parseExpandOption();\n          if (s2 === peg$FAILED) {\n            s2 = peg$parseSortOption();\n            if (s2 === peg$FAILED) {\n              s2 = peg$parseTopOption();\n              if (s2 === peg$FAILED) {\n                s2 = peg$parseSkipOption();\n                if (s2 === peg$FAILED) {\n                  s2 = peg$parseCountOption();\n                  if (s2 === peg$FAILED) {\n                    s2 = peg$parseInlineCountOption();\n                    if (s2 === peg$FAILED) {\n                      s2 = peg$parseFormatOption();\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s0 = s2;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseOperationParam();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseParameterAliasOption();\n      }\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseDollar() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 5;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    rule$expects(peg$e3);\n    peg$silentFails++;\n    if (input.charCodeAt(peg$currPos) === 36) {\n      s0 = peg$c3;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 3) === peg$c4) {\n        s0 = peg$c4;\n        peg$currPos += 3;\n      } else {\n        s0 = peg$FAILED;\n      }\n    }\n    peg$silentFails--;\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseParameterAliasOption() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 6;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e4);\n    if (input.charCodeAt(peg$currPos) === 64) {\n      s1 = peg$c5;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseText();\n      rule$expects(peg$e5);\n      if (input.charCodeAt(peg$currPos) === 61) {\n        s3 = peg$c6;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = peg$currPos;\n        s5 = peg$parseNumber();\n        if (s5 !== peg$FAILED) {\n          peg$savedPos = s4;\n          s5 = peg$f7(s2, s5);\n        }\n        s4 = s5;\n        if (s4 === peg$FAILED) {\n          s4 = peg$currPos;\n          s5 = peg$parseBoolean();\n          if (s5 !== peg$FAILED) {\n            peg$savedPos = s4;\n            s5 = peg$f8(s2, s5);\n          }\n          s4 = s5;\n          if (s4 === peg$FAILED) {\n            s4 = peg$currPos;\n            s5 = peg$parseQuotedText();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s4;\n              s5 = peg$f9(s2, s5);\n            }\n            s4 = s5;\n            if (s4 === peg$FAILED) {\n              s4 = peg$parseDate();\n            }\n          }\n        }\n        if (s4 !== peg$FAILED) {\n          peg$savedPos = peg$currPos;\n          s5 = peg$f10(s2, s4);\n          if (s5) {\n            s5 = undefined;\n          } else {\n            s5 = peg$FAILED;\n          }\n          if (s5 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f11(s2, s4);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseOperationParam() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 7;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseText();\n    rule$expects(peg$e5);\n    if (input.charCodeAt(peg$currPos) === 61) {\n      s2 = peg$c6;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parseText();\n      peg$savedPos = s0;\n      s0 = peg$f12(s1, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseSortOption() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 8;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e6);\n    if (input.substr(peg$currPos, 8) === peg$c7) {\n      s1 = peg$c7;\n      peg$currPos += 8;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSortProperty();\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$currPos;\n        rule$expects(peg$e7);\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s5 = peg$c8;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parseSortProperty();\n          if (s6 !== peg$FAILED) {\n            s4 = s6;\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$currPos;\n          rule$expects(peg$e7);\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s5 = peg$c8;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parseSortProperty();\n            if (s6 !== peg$FAILED) {\n              s4 = s6;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        }\n        peg$savedPos = s0;\n        s0 = peg$f13(s2, s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseSortProperty() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 9;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parsePropertyPath();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = peg$parseboundary();\n      if (s3 !== peg$FAILED) {\n        rule$expects(peg$e8);\n        if (input.substr(peg$currPos, 3) === peg$c9) {\n          s4 = peg$c9;\n          peg$currPos += 3;\n        } else {\n          s4 = peg$FAILED;\n        }\n        if (s4 === peg$FAILED) {\n          rule$expects(peg$e9);\n          if (input.substr(peg$currPos, 4) === peg$c10) {\n            s4 = peg$c10;\n            peg$currPos += 4;\n          } else {\n            s4 = peg$FAILED;\n          }\n        }\n        if (s4 !== peg$FAILED) {\n          s2 = s4;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 === peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = '';\n        peg$savedPos = s2;\n        s3 = peg$f14(s1);\n        s2 = s3;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f15(s1, s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseTopOption() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 10;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e10);\n    if (input.substr(peg$currPos, 4) === peg$c11) {\n      s1 = peg$c11;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseUnsignedInteger();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f16(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseSkipOption() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 11;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e11);\n    if (input.substr(peg$currPos, 5) === peg$c12) {\n      s1 = peg$c12;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseUnsignedInteger();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f17(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseInlineCountOption() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 12;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e12);\n    if (input.substr(peg$currPos, 12) === peg$c13) {\n      s1 = peg$c13;\n      peg$currPos += 12;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      rule$expects(peg$e13);\n      if (input.substr(peg$currPos, 8) === peg$c14) {\n        s2 = peg$c14;\n        peg$currPos += 8;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 === peg$FAILED) {\n        rule$expects(peg$e14);\n        if (input.substr(peg$currPos, 4) === peg$c15) {\n          s2 = peg$c15;\n          peg$currPos += 4;\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 === peg$FAILED) {\n          s2 = peg$currPos;\n          s3 = peg$parseText();\n          peg$savedPos = s2;\n          s3 = peg$f18();\n          s2 = s3;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f19(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseCountOption() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 13;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e15);\n    if (input.substr(peg$currPos, 6) === peg$c16) {\n      s1 = peg$c16;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseBoolean();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f20(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseExpandOption() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 14;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e16);\n    if (input.substr(peg$currPos, 7) === peg$c17) {\n      s1 = peg$c17;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseExpandPropertyPathList();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f21(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseSelectOption() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 15;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e17);\n    if (input.substr(peg$currPos, 7) === peg$c18) {\n      s1 = peg$c18;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      rule$expects(peg$e18);\n      if (input.charCodeAt(peg$currPos) === 42) {\n        s2 = peg$c19;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 === peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = peg$parsePropertyPathList();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s2;\n          s3 = peg$f22(s3);\n        }\n        s2 = s3;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f23(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseFilterByOption() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 16;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e19);\n    if (input.substr(peg$currPos, 7) === peg$c20) {\n      s1 = peg$c20;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseFilterByExpression();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f24(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseContentType() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 17;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = [];\n    rule$expects(peg$e20);\n    if (peg$r0.test(input.charAt(peg$currPos))) {\n      s3 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s3 = peg$FAILED;\n    }\n    if (s3 !== peg$FAILED) {\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        rule$expects(peg$e20);\n        if (peg$r0.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n        }\n      }\n    } else {\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      rule$expects(peg$e1);\n      if (input.charCodeAt(peg$currPos) === 47) {\n        s3 = peg$c1;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        rule$expects(peg$e20);\n        if (peg$r0.test(input.charAt(peg$currPos))) {\n          s5 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n        }\n        if (s5 !== peg$FAILED) {\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            rule$expects(peg$e20);\n            if (peg$r0.test(input.charAt(peg$currPos))) {\n              s5 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n            }\n          }\n        } else {\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$currPos;\n          rule$expects(peg$e21);\n          if (input.charCodeAt(peg$currPos) === 43) {\n            s6 = peg$c21;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n          }\n          if (s6 !== peg$FAILED) {\n            s7 = [];\n            rule$expects(peg$e20);\n            if (peg$r0.test(input.charAt(peg$currPos))) {\n              s8 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s8 = peg$FAILED;\n            }\n            if (s8 !== peg$FAILED) {\n              while (s8 !== peg$FAILED) {\n                s7.push(s8);\n                rule$expects(peg$e20);\n                if (peg$r0.test(input.charAt(peg$currPos))) {\n                  s8 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s8 = peg$FAILED;\n                }\n              }\n            } else {\n              s7 = peg$FAILED;\n            }\n            if (s7 !== peg$FAILED) {\n              s6 = [s6, s7];\n              s5 = s6;\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          if (s5 === peg$FAILED) {\n            s5 = null;\n          }\n          s2 = [s2, s3, s4, s5];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 === peg$FAILED) {\n      rule$expects(peg$e22);\n      if (input.substr(peg$currPos, 4) === peg$c22) {\n        s1 = peg$c22;\n        peg$currPos += 4;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 === peg$FAILED) {\n        rule$expects(peg$e23);\n        if (input.substr(peg$currPos, 4) === peg$c23) {\n          s1 = peg$c23;\n          peg$currPos += 4;\n        } else {\n          s1 = peg$FAILED;\n        }\n        if (s1 === peg$FAILED) {\n          rule$expects(peg$e24);\n          if (input.substr(peg$currPos, 3) === peg$c24) {\n            s1 = peg$c24;\n            peg$currPos += 3;\n          } else {\n            s1 = peg$FAILED;\n          }\n        }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseFormatOption() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 18;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e25);\n    if (input.substr(peg$currPos, 7) === peg$c25) {\n      s1 = peg$c25;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseContentType();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        rule$expects(peg$e26);\n        if (input.charCodeAt(peg$currPos) === 59) {\n          s4 = peg$c26;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          rule$expects(peg$e27);\n          if (input.substr(peg$currPos, 6) === peg$c27) {\n            s5 = peg$c27;\n            peg$currPos += 6;\n          } else {\n            s5 = peg$FAILED;\n          }\n          if (s5 === peg$FAILED) {\n            s5 = null;\n          }\n          rule$expects(peg$e28);\n          if (input.substr(peg$currPos, 9) === peg$c28) {\n            s6 = peg$c28;\n            peg$currPos += 9;\n          } else {\n            s6 = peg$FAILED;\n          }\n          if (s6 !== peg$FAILED) {\n            rule$expects(peg$e14);\n            if (input.substr(peg$currPos, 4) === peg$c15) {\n              s7 = peg$c15;\n              peg$currPos += 4;\n            } else {\n              s7 = peg$FAILED;\n            }\n            if (s7 === peg$FAILED) {\n              rule$expects(peg$e29);\n              if (input.substr(peg$currPos, 7) === peg$c29) {\n                s7 = peg$c29;\n                peg$currPos += 7;\n              } else {\n                s7 = peg$FAILED;\n              }\n              if (s7 === peg$FAILED) {\n                rule$expects(peg$e30);\n                if (input.substr(peg$currPos, 4) === peg$c30) {\n                  s7 = peg$c30;\n                  peg$currPos += 4;\n                } else {\n                  s7 = peg$FAILED;\n                }\n              }\n            }\n            if (s7 !== peg$FAILED) {\n              peg$savedPos = s3;\n              s3 = peg$f25(s2, s7);\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 === peg$FAILED) {\n          s3 = peg$currPos;\n          s4 = '';\n          peg$savedPos = s3;\n          s4 = peg$f26(s2);\n          s3 = s4;\n        }\n        if (s3 !== peg$FAILED) {\n          s0 = s3;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseFilterByExpression() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 19;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = '';\n    peg$savedPos = s1;\n    s2 = peg$f27();\n    s1 = s2;\n    s2 = peg$parseFilterByExpressionLoop();\n    if (s2 !== peg$FAILED) {\n      s0 = s2;\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseFilterByExpressionLoop() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 20;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = '';\n    peg$savedPos = s1;\n    s2 = peg$f28();\n    s1 = s2;\n    s2 = peg$currPos;\n    s3 = peg$currPos;\n    s4 = peg$parseFilterByValue();\n    if (s4 !== peg$FAILED) {\n      peg$savedPos = s3;\n      s4 = peg$f29(s1, s4);\n    }\n    s3 = s4;\n    if (s3 !== peg$FAILED) {\n      s4 = [];\n      s5 = peg$currPos;\n      s6 = peg$parseFilterByOperand();\n      if (s6 !== peg$FAILED) {\n        peg$savedPos = peg$currPos;\n        s7 = peg$f30(s1, s3, s6);\n        if (s7) {\n          s7 = undefined;\n        } else {\n          s7 = peg$FAILED;\n        }\n        if (s7 !== peg$FAILED) {\n          s8 = peg$parseFilterByExpressionLoop();\n          if (s8 !== peg$FAILED) {\n            peg$savedPos = s5;\n            s5 = peg$f31(s1, s3, s6, s8);\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s5;\n          s5 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s5;\n        s5 = peg$FAILED;\n      }\n      if (s5 === peg$FAILED) {\n        s5 = peg$currPos;\n        s6 = peg$parseboundary();\n        if (s6 !== peg$FAILED) {\n          rule$expects(peg$e31);\n          if (input.substr(peg$currPos, 2) === peg$c31) {\n            s7 = peg$c31;\n            peg$currPos += 2;\n          } else {\n            s7 = peg$FAILED;\n          }\n          if (s7 !== peg$FAILED) {\n            s8 = peg$parseboundary();\n            if (s8 !== peg$FAILED) {\n              s9 = peg$parseGroupedPrimitive();\n              if (s9 !== peg$FAILED) {\n                peg$savedPos = s5;\n                s5 = peg$f32(s1, s3, s7, s9);\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s5;\n          s5 = peg$FAILED;\n        }\n      }\n      while (s5 !== peg$FAILED) {\n        s4.push(s5);\n        s5 = peg$currPos;\n        s6 = peg$parseFilterByOperand();\n        if (s6 !== peg$FAILED) {\n          peg$savedPos = peg$currPos;\n          s7 = peg$f30(s1, s3, s6);\n          if (s7) {\n            s7 = undefined;\n          } else {\n            s7 = peg$FAILED;\n          }\n          if (s7 !== peg$FAILED) {\n            s8 = peg$parseFilterByExpressionLoop();\n            if (s8 !== peg$FAILED) {\n              peg$savedPos = s5;\n              s5 = peg$f31(s1, s3, s6, s8);\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s5;\n          s5 = peg$FAILED;\n        }\n        if (s5 === peg$FAILED) {\n          s5 = peg$currPos;\n          s6 = peg$parseboundary();\n          if (s6 !== peg$FAILED) {\n            rule$expects(peg$e31);\n            if (input.substr(peg$currPos, 2) === peg$c31) {\n              s7 = peg$c31;\n              peg$currPos += 2;\n            } else {\n              s7 = peg$FAILED;\n            }\n            if (s7 !== peg$FAILED) {\n              s8 = peg$parseboundary();\n              if (s8 !== peg$FAILED) {\n                s9 = peg$parseGroupedPrimitive();\n                if (s9 !== peg$FAILED) {\n                  peg$savedPos = s5;\n                  s5 = peg$f32(s1, s3, s7, s9);\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n        }\n      }\n      peg$savedPos = s2;\n      s2 = peg$f33(s1, s3);\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n    if (s2 === peg$FAILED) {\n      s2 = peg$currPos;\n      peg$savedPos = peg$currPos;\n      s3 = peg$f34(s1);\n      if (s3) {\n        s3 = undefined;\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s2;\n        s3 = peg$f35(s1);\n      }\n      s2 = s3;\n    }\n    if (s2 !== peg$FAILED) {\n      s0 = s2;\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseFilterByValue() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 21;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$parseGroupedPrecedenceExpression();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseFilterMethodCallExpression();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseFilterNegateExpression();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseParameterAlias();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parsePrimitive();\n          }\n        }\n      }\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parsePrimitive() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 22;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e32);\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c32;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsespaces();\n      s3 = peg$parsePrimitive();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsespaces();\n        rule$expects(peg$e33);\n        if (input.charCodeAt(peg$currPos) === 41) {\n          s5 = peg$c33;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n        }\n        if (s5 !== peg$FAILED) {\n          s0 = s3;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseQuotedTextBind();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseNumberBind();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseBooleanBind();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseNull();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseDateBind();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parseDuration();\n                if (s0 === peg$FAILED) {\n                  s0 = peg$parseLambdaPropertyPath();\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$parsePropertyPath();\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseGroupedPrecedenceExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 23;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e32);\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c32;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsespaces();\n      s3 = peg$parseFilterByExpression();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsespaces();\n        rule$expects(peg$e33);\n        if (input.charCodeAt(peg$currPos) === 41) {\n          s5 = peg$c33;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n        }\n        if (s5 !== peg$FAILED) {\n          s0 = s3;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseFilterByOperand() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 24;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parsespaces();\n    rule$expects(peg$e34);\n    if (input.substr(peg$currPos, 2) === peg$c34) {\n      s2 = peg$c34;\n      peg$currPos += 2;\n    } else {\n      s2 = peg$FAILED;\n    }\n    if (s2 === peg$FAILED) {\n      rule$expects(peg$e35);\n      if (input.substr(peg$currPos, 2) === peg$c35) {\n        s2 = peg$c35;\n        peg$currPos += 2;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 === peg$FAILED) {\n        rule$expects(peg$e36);\n        if (input.substr(peg$currPos, 2) === peg$c36) {\n          s2 = peg$c36;\n          peg$currPos += 2;\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 === peg$FAILED) {\n          rule$expects(peg$e37);\n          if (input.substr(peg$currPos, 2) === peg$c37) {\n            s2 = peg$c37;\n            peg$currPos += 2;\n          } else {\n            s2 = peg$FAILED;\n          }\n          if (s2 === peg$FAILED) {\n            rule$expects(peg$e38);\n            if (input.substr(peg$currPos, 2) === peg$c38) {\n              s2 = peg$c38;\n              peg$currPos += 2;\n            } else {\n              s2 = peg$FAILED;\n            }\n            if (s2 === peg$FAILED) {\n              rule$expects(peg$e39);\n              if (input.substr(peg$currPos, 2) === peg$c39) {\n                s2 = peg$c39;\n                peg$currPos += 2;\n              } else {\n                s2 = peg$FAILED;\n              }\n              if (s2 === peg$FAILED) {\n                rule$expects(peg$e40);\n                if (input.substr(peg$currPos, 3) === peg$c40) {\n                  s2 = peg$c40;\n                  peg$currPos += 3;\n                } else {\n                  s2 = peg$FAILED;\n                }\n                if (s2 === peg$FAILED) {\n                  rule$expects(peg$e41);\n                  if (input.substr(peg$currPos, 2) === peg$c41) {\n                    s2 = peg$c41;\n                    peg$currPos += 2;\n                  } else {\n                    s2 = peg$FAILED;\n                  }\n                  if (s2 === peg$FAILED) {\n                    rule$expects(peg$e42);\n                    if (input.substr(peg$currPos, 3) === peg$c42) {\n                      s2 = peg$c42;\n                      peg$currPos += 3;\n                    } else {\n                      s2 = peg$FAILED;\n                    }\n                    if (s2 === peg$FAILED) {\n                      rule$expects(peg$e43);\n                      if (input.substr(peg$currPos, 3) === peg$c43) {\n                        s2 = peg$c43;\n                        peg$currPos += 3;\n                      } else {\n                        s2 = peg$FAILED;\n                      }\n                      if (s2 === peg$FAILED) {\n                        rule$expects(peg$e44);\n                        if (input.substr(peg$currPos, 3) === peg$c44) {\n                          s2 = peg$c44;\n                          peg$currPos += 3;\n                        } else {\n                          s2 = peg$FAILED;\n                        }\n                        if (s2 === peg$FAILED) {\n                          rule$expects(peg$e45);\n                          if (input.substr(peg$currPos, 3) === peg$c45) {\n                            s2 = peg$c45;\n                            peg$currPos += 3;\n                          } else {\n                            s2 = peg$FAILED;\n                          }\n                          if (s2 === peg$FAILED) {\n                            rule$expects(peg$e46);\n                            if (input.substr(peg$currPos, 3) === peg$c46) {\n                              s2 = peg$c46;\n                              peg$currPos += 3;\n                            } else {\n                              s2 = peg$FAILED;\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parseboundary();\n      if (s3 !== peg$FAILED) {\n        s0 = s2;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseFilterNegateExpression() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 25;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parsespaces();\n    rule$expects(peg$e47);\n    if (input.substr(peg$currPos, 3) === peg$c47) {\n      s2 = peg$c47;\n      peg$currPos += 3;\n    } else {\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parseboundary();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parseFilterByValue();\n        if (s4 === peg$FAILED) {\n          s4 = peg$currPos;\n          rule$expects(peg$e32);\n          if (input.charCodeAt(peg$currPos) === 40) {\n            s5 = peg$c32;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsespaces();\n            s7 = peg$parseFilterByExpression();\n            if (s7 !== peg$FAILED) {\n              s8 = peg$parsespaces();\n              rule$expects(peg$e33);\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s9 = peg$c33;\n                peg$currPos++;\n              } else {\n                s9 = peg$FAILED;\n              }\n              if (s9 !== peg$FAILED) {\n                s4 = s7;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        }\n        if (s4 !== peg$FAILED) {\n          s0 = [ s2, s4 ];\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseGroupedPrimitive() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 26;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e32);\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c32;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsespaces();\n      s3 = peg$parsePrimitive();\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$currPos;\n        rule$expects(peg$e7);\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s6 = peg$c8;\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n        }\n        if (s6 !== peg$FAILED) {\n          s7 = peg$parsespaces();\n          s8 = peg$parsePrimitive();\n          if (s8 !== peg$FAILED) {\n            s5 = s8;\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s5;\n          s5 = peg$FAILED;\n        }\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$currPos;\n          rule$expects(peg$e7);\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s6 = peg$c8;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n          }\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parsespaces();\n            s8 = peg$parsePrimitive();\n            if (s8 !== peg$FAILED) {\n              s5 = s8;\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n        }\n        rule$expects(peg$e33);\n        if (input.charCodeAt(peg$currPos) === 41) {\n          s5 = peg$c33;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n        }\n        if (s5 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f36(s3, s4);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseFilterMethodCallExpression() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 27;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e48);\n    if (input.substr(peg$currPos, 4) === peg$c48) {\n      s1 = peg$c48;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 === peg$FAILED) {\n      rule$expects(peg$e49);\n      if (input.substr(peg$currPos, 7) === peg$c49) {\n        s1 = peg$c49;\n        peg$currPos += 7;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 === peg$FAILED) {\n        rule$expects(peg$e50);\n        if (input.substr(peg$currPos, 6) === peg$c50) {\n          s1 = peg$c50;\n          peg$currPos += 6;\n        } else {\n          s1 = peg$FAILED;\n        }\n        if (s1 === peg$FAILED) {\n          rule$expects(peg$e51);\n          if (input.substr(peg$currPos, 8) === peg$c51) {\n            s1 = peg$c51;\n            peg$currPos += 8;\n          } else {\n            s1 = peg$FAILED;\n          }\n          if (s1 === peg$FAILED) {\n            rule$expects(peg$e52);\n            if (input.substr(peg$currPos, 4) === peg$c52) {\n              s1 = peg$c52;\n              peg$currPos += 4;\n            } else {\n              s1 = peg$FAILED;\n            }\n            if (s1 === peg$FAILED) {\n              rule$expects(peg$e53);\n              if (input.substr(peg$currPos, 3) === peg$c53) {\n                s1 = peg$c53;\n                peg$currPos += 3;\n              } else {\n                s1 = peg$FAILED;\n              }\n              if (s1 === peg$FAILED) {\n                rule$expects(peg$e54);\n                if (input.substr(peg$currPos, 8) === peg$c54) {\n                  s1 = peg$c54;\n                  peg$currPos += 8;\n                } else {\n                  s1 = peg$FAILED;\n                }\n                if (s1 === peg$FAILED) {\n                  rule$expects(peg$e55);\n                  if (input.substr(peg$currPos, 5) === peg$c55) {\n                    s1 = peg$c55;\n                    peg$currPos += 5;\n                  } else {\n                    s1 = peg$FAILED;\n                  }\n                  if (s1 === peg$FAILED) {\n                    rule$expects(peg$e56);\n                    if (input.substr(peg$currPos, 17) === peg$c56) {\n                      s1 = peg$c56;\n                      peg$currPos += 17;\n                    } else {\n                      s1 = peg$FAILED;\n                    }\n                    if (s1 === peg$FAILED) {\n                      rule$expects(peg$e57);\n                      if (input.substr(peg$currPos, 4) === peg$c57) {\n                        s1 = peg$c57;\n                        peg$currPos += 4;\n                      } else {\n                        s1 = peg$FAILED;\n                      }\n                      if (s1 === peg$FAILED) {\n                        rule$expects(peg$e58);\n                        if (input.substr(peg$currPos, 7) === peg$c58) {\n                          s1 = peg$c58;\n                          peg$currPos += 7;\n                        } else {\n                          s1 = peg$FAILED;\n                        }\n                        if (s1 === peg$FAILED) {\n                          rule$expects(peg$e59);\n                          if (input.substr(peg$currPos, 4) === peg$c59) {\n                            s1 = peg$c59;\n                            peg$currPos += 4;\n                          } else {\n                            s1 = peg$FAILED;\n                          }\n                          if (s1 === peg$FAILED) {\n                            rule$expects(peg$e60);\n                            if (input.substr(peg$currPos, 6) === peg$c60) {\n                              s1 = peg$c60;\n                              peg$currPos += 6;\n                            } else {\n                              s1 = peg$FAILED;\n                            }\n                            if (s1 === peg$FAILED) {\n                              rule$expects(peg$e61);\n                              if (input.substr(peg$currPos, 11) === peg$c61) {\n                                s1 = peg$c61;\n                                peg$currPos += 11;\n                              } else {\n                                s1 = peg$FAILED;\n                              }\n                              if (s1 === peg$FAILED) {\n                                rule$expects(peg$e62);\n                                if (input.substr(peg$currPos, 11) === peg$c62) {\n                                  s1 = peg$c62;\n                                  peg$currPos += 11;\n                                } else {\n                                  s1 = peg$FAILED;\n                                }\n                                if (s1 === peg$FAILED) {\n                                  rule$expects(peg$e63);\n                                  if (input.substr(peg$currPos, 6) === peg$c63) {\n                                    s1 = peg$c63;\n                                    peg$currPos += 6;\n                                  } else {\n                                    s1 = peg$FAILED;\n                                  }\n                                  if (s1 === peg$FAILED) {\n                                    rule$expects(peg$e64);\n                                    if (input.substr(peg$currPos, 5) === peg$c64) {\n                                      s1 = peg$c64;\n                                      peg$currPos += 5;\n                                    } else {\n                                      s1 = peg$FAILED;\n                                    }\n                                    if (s1 === peg$FAILED) {\n                                      rule$expects(peg$e65);\n                                      if (input.substr(peg$currPos, 3) === peg$c65) {\n                                        s1 = peg$c65;\n                                        peg$currPos += 3;\n                                      } else {\n                                        s1 = peg$FAILED;\n                                      }\n                                      if (s1 === peg$FAILED) {\n                                        rule$expects(peg$e66);\n                                        if (input.substr(peg$currPos, 7) === peg$c66) {\n                                          s1 = peg$c66;\n                                          peg$currPos += 7;\n                                        } else {\n                                          s1 = peg$FAILED;\n                                        }\n                                        if (s1 === peg$FAILED) {\n                                          rule$expects(peg$e67);\n                                          if (input.substr(peg$currPos, 5) === peg$c67) {\n                                            s1 = peg$c67;\n                                            peg$currPos += 5;\n                                          } else {\n                                            s1 = peg$FAILED;\n                                          }\n                                          if (s1 === peg$FAILED) {\n                                            rule$expects(peg$e68);\n                                            if (input.substr(peg$currPos, 6) === peg$c68) {\n                                              s1 = peg$c68;\n                                              peg$currPos += 6;\n                                            } else {\n                                              s1 = peg$FAILED;\n                                            }\n                                            if (s1 === peg$FAILED) {\n                                              rule$expects(peg$e69);\n                                              if (input.substr(peg$currPos, 10) === peg$c69) {\n                                                s1 = peg$c69;\n                                                peg$currPos += 10;\n                                              } else {\n                                                s1 = peg$FAILED;\n                                              }\n                                              if (s1 === peg$FAILED) {\n                                                rule$expects(peg$e70);\n                                                if (input.substr(peg$currPos, 11) === peg$c70) {\n                                                  s1 = peg$c70;\n                                                  peg$currPos += 11;\n                                                } else {\n                                                  s1 = peg$FAILED;\n                                                }\n                                                if (s1 === peg$FAILED) {\n                                                  rule$expects(peg$e71);\n                                                  if (input.substr(peg$currPos, 9) === peg$c71) {\n                                                    s1 = peg$c71;\n                                                    peg$currPos += 9;\n                                                  } else {\n                                                    s1 = peg$FAILED;\n                                                  }\n                                                  if (s1 === peg$FAILED) {\n                                                    rule$expects(peg$e72);\n                                                    if (input.substr(peg$currPos, 4) === peg$c72) {\n                                                      s1 = peg$c72;\n                                                      peg$currPos += 4;\n                                                    } else {\n                                                      s1 = peg$FAILED;\n                                                    }\n                                                    if (s1 === peg$FAILED) {\n                                                      rule$expects(peg$e73);\n                                                      if (input.substr(peg$currPos, 7) === peg$c73) {\n                                                        s1 = peg$c73;\n                                                        peg$currPos += 7;\n                                                      } else {\n                                                        s1 = peg$FAILED;\n                                                      }\n                                                      if (s1 === peg$FAILED) {\n                                                        rule$expects(peg$e74);\n                                                        if (input.substr(peg$currPos, 18) === peg$c74) {\n                                                          s1 = peg$c74;\n                                                          peg$currPos += 18;\n                                                        } else {\n                                                          s1 = peg$FAILED;\n                                                        }\n                                                        if (s1 === peg$FAILED) {\n                                                          rule$expects(peg$e75);\n                                                          if (input.substr(peg$currPos, 12) === peg$c75) {\n                                                            s1 = peg$c75;\n                                                            peg$currPos += 12;\n                                                          } else {\n                                                            s1 = peg$FAILED;\n                                                          }\n                                                          if (s1 === peg$FAILED) {\n                                                            rule$expects(peg$e76);\n                                                            if (input.substr(peg$currPos, 7) === peg$c76) {\n                                                              s1 = peg$c76;\n                                                              peg$currPos += 7;\n                                                            } else {\n                                                              s1 = peg$FAILED;\n                                                            }\n                                                            if (s1 === peg$FAILED) {\n                                                              rule$expects(peg$e77);\n                                                              if (input.substr(peg$currPos, 4) === peg$c77) {\n                                                                s1 = peg$c77;\n                                                                peg$currPos += 4;\n                                                              } else {\n                                                                s1 = peg$FAILED;\n                                                              }\n                                                              if (s1 === peg$FAILED) {\n                                                                rule$expects(peg$e78);\n                                                                if (input.substr(peg$currPos, 4) === peg$c78) {\n                                                                  s1 = peg$c78;\n                                                                  peg$currPos += 4;\n                                                                } else {\n                                                                  s1 = peg$FAILED;\n                                                                }\n                                                              }\n                                                            }\n                                                          }\n                                                        }\n                                                      }\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      rule$expects(peg$e32);\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s2 = peg$c32;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsespaces();\n        s4 = peg$currPos;\n        s5 = peg$parseFilterByExpression();\n        if (s5 !== peg$FAILED) {\n          s6 = [];\n          s7 = peg$currPos;\n          s8 = peg$parsespaces();\n          rule$expects(peg$e7);\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s9 = peg$c8;\n            peg$currPos++;\n          } else {\n            s9 = peg$FAILED;\n          }\n          if (s9 !== peg$FAILED) {\n            s10 = peg$parsespaces();\n            s11 = peg$parseFilterByExpression();\n            if (s11 !== peg$FAILED) {\n              s7 = s11;\n            } else {\n              peg$currPos = s7;\n              s7 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s7;\n            s7 = peg$FAILED;\n          }\n          while (s7 !== peg$FAILED) {\n            s6.push(s7);\n            s7 = peg$currPos;\n            s8 = peg$parsespaces();\n            rule$expects(peg$e7);\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s9 = peg$c8;\n              peg$currPos++;\n            } else {\n              s9 = peg$FAILED;\n            }\n            if (s9 !== peg$FAILED) {\n              s10 = peg$parsespaces();\n              s11 = peg$parseFilterByExpression();\n              if (s11 !== peg$FAILED) {\n                s7 = s11;\n              } else {\n                peg$currPos = s7;\n                s7 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s7;\n              s7 = peg$FAILED;\n            }\n          }\n          s7 = peg$parsespaces();\n          peg$savedPos = s4;\n          s4 = peg$f37(s1, s5, s6);\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 === peg$FAILED) {\n          s4 = peg$currPos;\n          s5 = '';\n          peg$savedPos = s4;\n          s5 = peg$f38(s1);\n          s4 = s5;\n        }\n        if (s4 !== peg$FAILED) {\n          peg$savedPos = peg$currPos;\n          s5 = peg$f39(s1, s4);\n          if (s5) {\n            s5 = undefined;\n          } else {\n            s5 = peg$FAILED;\n          }\n          if (s5 !== peg$FAILED) {\n            rule$expects(peg$e33);\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s6 = peg$c33;\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s0 = peg$f40(s1, s4);\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseLambdaMethodCall() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 28;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e79);\n    if (input.substr(peg$currPos, 3) === peg$c79) {\n      s1 = peg$c79;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 === peg$FAILED) {\n      rule$expects(peg$e80);\n      if (input.substr(peg$currPos, 3) === peg$c80) {\n        s1 = peg$c80;\n        peg$currPos += 3;\n      } else {\n        s1 = peg$FAILED;\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      rule$expects(peg$e32);\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s2 = peg$c32;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsespaces();\n        s4 = peg$parseResourceName();\n        if (s4 !== peg$FAILED) {\n          rule$expects(peg$e81);\n          if (input.charCodeAt(peg$currPos) === 58) {\n            s5 = peg$c81;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parseFilterByExpression();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parsespaces();\n              rule$expects(peg$e33);\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s8 = peg$c33;\n                peg$currPos++;\n              } else {\n                s8 = peg$FAILED;\n              }\n              if (s8 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s0 = peg$f41(s1, s4, s6);\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseResourceMethodCall() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 29;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseResourceName();\n    if (s1 !== peg$FAILED) {\n      rule$expects(peg$e32);\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s2 = peg$c32;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsespaces();\n        s4 = peg$currPos;\n        s5 = peg$parseFilterByExpression();\n        if (s5 !== peg$FAILED) {\n          s6 = [];\n          s7 = peg$currPos;\n          s8 = peg$parsespaces();\n          rule$expects(peg$e7);\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s9 = peg$c8;\n            peg$currPos++;\n          } else {\n            s9 = peg$FAILED;\n          }\n          if (s9 !== peg$FAILED) {\n            s10 = peg$parsespaces();\n            s11 = peg$parseFilterByExpression();\n            if (s11 !== peg$FAILED) {\n              s7 = s11;\n            } else {\n              peg$currPos = s7;\n              s7 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s7;\n            s7 = peg$FAILED;\n          }\n          while (s7 !== peg$FAILED) {\n            s6.push(s7);\n            s7 = peg$currPos;\n            s8 = peg$parsespaces();\n            rule$expects(peg$e7);\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s9 = peg$c8;\n              peg$currPos++;\n            } else {\n              s9 = peg$FAILED;\n            }\n            if (s9 !== peg$FAILED) {\n              s10 = peg$parsespaces();\n              s11 = peg$parseFilterByExpression();\n              if (s11 !== peg$FAILED) {\n                s7 = s11;\n              } else {\n                peg$currPos = s7;\n                s7 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s7;\n              s7 = peg$FAILED;\n            }\n          }\n          s7 = peg$parsespaces();\n          peg$savedPos = s4;\n          s4 = peg$f37(s1, s5, s6);\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 === peg$FAILED) {\n          s4 = peg$currPos;\n          s5 = '';\n          peg$savedPos = s4;\n          s5 = peg$f38(s1);\n          s4 = s5;\n        }\n        if (s4 !== peg$FAILED) {\n          rule$expects(peg$e33);\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s5 = peg$c33;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n          }\n          if (s5 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f40(s1, s4);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parsePropertyPathList() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 30;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parsePropertyPath();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      rule$expects(peg$e7);\n      if (input.charCodeAt(peg$currPos) === 44) {\n        s4 = peg$c8;\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parsePropertyPath();\n        if (s5 !== peg$FAILED) {\n          s3 = s5;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        rule$expects(peg$e7);\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s4 = peg$c8;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsePropertyPath();\n          if (s5 !== peg$FAILED) {\n            s3 = s5;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      peg$savedPos = s0;\n      s0 = peg$f42(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parsePropertyPath() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 31;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseResourceName();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      rule$expects(peg$e1);\n      if (input.charCodeAt(peg$currPos) === 47) {\n        s3 = peg$c1;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsePropertyPath();\n        if (s4 !== peg$FAILED) {\n          s2 = s4;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$currPos;\n      rule$expects(peg$e82);\n      if (input.substr(peg$currPos, 7) === peg$c82) {\n        s4 = peg$c82;\n        peg$currPos += 7;\n      } else {\n        s4 = peg$FAILED;\n      }\n      if (s4 !== peg$FAILED) {\n        peg$savedPos = s3;\n        s4 = peg$f43(s1, s2);\n      }\n      s3 = s4;\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f44(s1, s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseExpandPropertyPathList() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 32;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseExpandPropertyPath();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      rule$expects(peg$e7);\n      if (input.charCodeAt(peg$currPos) === 44) {\n        s4 = peg$c8;\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseExpandPropertyPath();\n        if (s5 !== peg$FAILED) {\n          s3 = s5;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        rule$expects(peg$e7);\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s4 = peg$c8;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseExpandPropertyPath();\n          if (s5 !== peg$FAILED) {\n            s3 = s5;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      peg$savedPos = s0;\n      s0 = peg$f42(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseExpandPropertyPath() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 33;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseResourceName();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      rule$expects(peg$e82);\n      if (input.substr(peg$currPos, 7) === peg$c82) {\n        s3 = peg$c82;\n        peg$currPos += 7;\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s2;\n        s3 = peg$f45(s1);\n      }\n      s2 = s3;\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$currPos;\n      rule$expects(peg$e32);\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s4 = peg$c32;\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = peg$currPos;\n        s6 = peg$parseQueryOption();\n        if (s6 !== peg$FAILED) {\n          s7 = [];\n          s8 = peg$currPos;\n          rule$expects(peg$e83);\n          if (peg$r1.test(input.charAt(peg$currPos))) {\n            s9 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s9 = peg$FAILED;\n          }\n          if (s9 !== peg$FAILED) {\n            s10 = peg$parseQueryOption();\n            if (s10 !== peg$FAILED) {\n              s8 = s10;\n            } else {\n              peg$currPos = s8;\n              s8 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s8;\n            s8 = peg$FAILED;\n          }\n          while (s8 !== peg$FAILED) {\n            s7.push(s8);\n            s8 = peg$currPos;\n            rule$expects(peg$e83);\n            if (peg$r1.test(input.charAt(peg$currPos))) {\n              s9 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s9 = peg$FAILED;\n            }\n            if (s9 !== peg$FAILED) {\n              s10 = peg$parseQueryOption();\n              if (s10 !== peg$FAILED) {\n                s8 = s10;\n              } else {\n                peg$currPos = s8;\n                s8 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s8;\n              s8 = peg$FAILED;\n            }\n          }\n          peg$savedPos = s5;\n          s5 = peg$f46(s1, s2, s6, s7);\n        } else {\n          peg$currPos = s5;\n          s5 = peg$FAILED;\n        }\n        if (s5 === peg$FAILED) {\n          s5 = peg$currPos;\n          s6 = '';\n          peg$savedPos = s5;\n          s6 = peg$f47(s1, s2);\n          s5 = s6;\n        }\n        if (s5 !== peg$FAILED) {\n          rule$expects(peg$e33);\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s6 = peg$c33;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n          }\n          if (s6 !== peg$FAILED) {\n            s3 = s5;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$currPos;\n      rule$expects(peg$e1);\n      if (input.charCodeAt(peg$currPos) === 47) {\n        s5 = peg$c1;\n        peg$currPos++;\n      } else {\n        s5 = peg$FAILED;\n      }\n      if (s5 !== peg$FAILED) {\n        s6 = peg$parsePropertyPath();\n        if (s6 !== peg$FAILED) {\n          s4 = s6;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s4;\n        s4 = peg$FAILED;\n      }\n      if (s4 === peg$FAILED) {\n        s4 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f48(s1, s2, s3, s4);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseLambdaPropertyPath() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 34;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseResourceName();\n    if (s1 !== peg$FAILED) {\n      rule$expects(peg$e1);\n      if (input.charCodeAt(peg$currPos) === 47) {\n        s2 = peg$c1;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        s4 = peg$parseLambdaPropertyPath();\n        if (s4 !== peg$FAILED) {\n          peg$savedPos = s3;\n          s4 = peg$f49(s1, s4);\n        }\n        s3 = s4;\n        if (s3 === peg$FAILED) {\n          s3 = peg$currPos;\n          s4 = peg$parseLambdaMethodCall();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s3;\n            s4 = peg$f50(s1, s4);\n          }\n          s3 = s4;\n          if (s3 === peg$FAILED) {\n            s3 = peg$currPos;\n            s4 = peg$parseResourceMethodCall();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s3;\n              s4 = peg$f51(s1, s4);\n            }\n            s3 = s4;\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          s0 = s3;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseKey() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 35;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e32);\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c32;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseKeyBind();\n      if (s2 === peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = peg$parseNamedKeyBind();\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$currPos;\n          rule$expects(peg$e7);\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s6 = peg$c8;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n          }\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseNamedKeyBind();\n            if (s7 !== peg$FAILED) {\n              s5 = s7;\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$currPos;\n            rule$expects(peg$e7);\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s6 = peg$c8;\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseNamedKeyBind();\n              if (s7 !== peg$FAILED) {\n                s5 = s7;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          }\n          peg$savedPos = s2;\n          s2 = peg$f52(s3, s4);\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        rule$expects(peg$e33);\n        if (input.charCodeAt(peg$currPos) === 41) {\n          s3 = peg$c33;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s0 = s2;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseNamedKeyBind() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 36;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseResourceName();\n    if (s1 !== peg$FAILED) {\n      rule$expects(peg$e5);\n      if (input.charCodeAt(peg$currPos) === 61) {\n        s2 = peg$c6;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseKeyBind();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f53(s1, s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseKeyBind() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 37;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$parseNumberBind();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseQuotedTextBind();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseParameterAlias();\n      }\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseLinks() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 38;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e84);\n    if (input.substr(peg$currPos, 7) === peg$c83) {\n      s1 = peg$c83;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSubPathSegment();\n      if (s2 !== peg$FAILED) {\n        s0 = s2;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parsePathSegment() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 39;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    rule$expects(peg$e1);\n    if (input.charCodeAt(peg$currPos) === 47) {\n      s2 = peg$c1;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$currPos;\n      s4 = peg$parseResourceName();\n      if (s4 !== peg$FAILED) {\n        peg$savedPos = s3;\n        s4 = peg$f54(s4);\n      }\n      s3 = s4;\n      if (s3 !== peg$FAILED) {\n        s4 = peg$currPos;\n        s5 = peg$currPos;\n        s6 = peg$parseKey();\n        if (s6 !== peg$FAILED) {\n          peg$savedPos = s5;\n          s6 = peg$f55(s3, s6);\n        }\n        s5 = s6;\n        if (s5 !== peg$FAILED) {\n          s6 = peg$currPos;\n          s7 = peg$parseLinks();\n          if (s7 !== peg$FAILED) {\n            peg$savedPos = s6;\n            s7 = peg$f56(s3, s7);\n          }\n          s6 = s7;\n          if (s6 === peg$FAILED) {\n            s6 = peg$currPos;\n            s7 = peg$parseSubPathSegment();\n            if (s7 !== peg$FAILED) {\n              peg$savedPos = s6;\n              s7 = peg$f57(s3, s7);\n            }\n            s6 = s7;\n          }\n          if (s6 === peg$FAILED) {\n            s6 = null;\n          }\n          s5 = [s5, s6];\n          s4 = s5;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 === peg$FAILED) {\n          s4 = peg$currPos;\n          rule$expects(peg$e82);\n          if (input.substr(peg$currPos, 7) === peg$c82) {\n            s5 = peg$c82;\n            peg$currPos += 7;\n          } else {\n            s5 = peg$FAILED;\n          }\n          if (s5 !== peg$FAILED) {\n            peg$savedPos = s4;\n            s5 = peg$f58(s3);\n          }\n          s4 = s5;\n        }\n        if (s4 === peg$FAILED) {\n          s4 = null;\n        }\n        peg$savedPos = s1;\n        s1 = peg$f59(s3);\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 === peg$FAILED) {\n      s1 = peg$currPos;\n      s2 = peg$parseContentReference();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        s4 = peg$parseLinks();\n        if (s4 !== peg$FAILED) {\n          peg$savedPos = s3;\n          s4 = peg$f56(s2, s4);\n        }\n        s3 = s4;\n        if (s3 === peg$FAILED) {\n          s3 = peg$currPos;\n          s4 = peg$parseSubPathSegment();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s3;\n            s4 = peg$f57(s2, s4);\n          }\n          s3 = s4;\n        }\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        peg$savedPos = s1;\n        s1 = peg$f59(s2);\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      rule$expects(peg$e85);\n      if (input.charCodeAt(peg$currPos) === 63) {\n        s3 = peg$c84;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = peg$currPos;\n        s5 = peg$parseQueryOptions();\n        if (s5 !== peg$FAILED) {\n          peg$savedPos = s4;\n          s5 = peg$f60(s1, s5);\n        }\n        s4 = s5;\n        if (s4 === peg$FAILED) {\n          s4 = null;\n        }\n        s3 = [s3, s4];\n        s2 = s3;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f59(s1);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseSubPathSegment() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 40;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e1);\n    if (input.charCodeAt(peg$currPos) === 47) {\n      s1 = peg$c1;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = peg$parseResourceName();\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s2;\n        s3 = peg$f54(s3);\n      }\n      s2 = s3;\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        s4 = peg$parseKey();\n        if (s4 !== peg$FAILED) {\n          peg$savedPos = s3;\n          s4 = peg$f55(s2, s4);\n        }\n        s3 = s4;\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        s4 = peg$currPos;\n        rule$expects(peg$e84);\n        if (input.substr(peg$currPos, 7) === peg$c83) {\n          s5 = peg$c83;\n          peg$currPos += 7;\n        } else {\n          s5 = peg$FAILED;\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parseSubPathSegment();\n          if (s6 !== peg$FAILED) {\n            peg$savedPos = s4;\n            s4 = peg$f56(s2, s6);\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 === peg$FAILED) {\n          s4 = peg$currPos;\n          s5 = peg$parseSubPathSegment();\n          if (s5 !== peg$FAILED) {\n            peg$savedPos = s4;\n            s5 = peg$f57(s2, s5);\n          }\n          s4 = s5;\n        }\n        if (s4 === peg$FAILED) {\n          s4 = null;\n        }\n        s5 = peg$currPos;\n        rule$expects(peg$e82);\n        if (input.substr(peg$currPos, 7) === peg$c82) {\n          s6 = peg$c82;\n          peg$currPos += 7;\n        } else {\n          s6 = peg$FAILED;\n        }\n        if (s6 !== peg$FAILED) {\n          peg$savedPos = s5;\n          s6 = peg$f58(s2);\n        }\n        s5 = s6;\n        if (s5 === peg$FAILED) {\n          s5 = null;\n        }\n        s6 = peg$currPos;\n        rule$expects(peg$e85);\n        if (input.charCodeAt(peg$currPos) === 63) {\n          s7 = peg$c84;\n          peg$currPos++;\n        } else {\n          s7 = peg$FAILED;\n        }\n        if (s7 !== peg$FAILED) {\n          s8 = peg$currPos;\n          s9 = peg$parseQueryOptions();\n          if (s9 !== peg$FAILED) {\n            peg$savedPos = s8;\n            s9 = peg$f60(s2, s9);\n          }\n          s8 = s9;\n          if (s8 === peg$FAILED) {\n            s8 = null;\n          }\n          s7 = [s7, s8];\n          s6 = s7;\n        } else {\n          peg$currPos = s6;\n          s6 = peg$FAILED;\n        }\n        if (s6 === peg$FAILED) {\n          s6 = null;\n        }\n        peg$savedPos = s0;\n        s0 = peg$f59(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseResourceName() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 41;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = [];\n    rule$expects(peg$e86);\n    if (peg$r2.test(input.charAt(peg$currPos))) {\n      s3 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s3 = peg$FAILED;\n    }\n    if (s3 !== peg$FAILED) {\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        rule$expects(peg$e86);\n        if (peg$r2.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n        }\n      }\n    } else {\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      s1 = input.substring(s1, peg$currPos);\n    } else {\n      s1 = s2;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f61(s1);\n    }\n    s0 = s1;\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseNumber() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 42;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseSign();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = peg$currPos;\n      s4 = [];\n      rule$expects(peg$e87);\n      if (peg$r3.test(input.charAt(peg$currPos))) {\n        s5 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s5 = peg$FAILED;\n      }\n      if (s5 !== peg$FAILED) {\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          rule$expects(peg$e87);\n          if (peg$r3.test(input.charAt(peg$currPos))) {\n            s5 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n          }\n        }\n      } else {\n        s4 = peg$FAILED;\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = peg$currPos;\n        rule$expects(peg$e88);\n        if (input.charCodeAt(peg$currPos) === 46) {\n          s6 = peg$c85;\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n        }\n        if (s6 !== peg$FAILED) {\n          s7 = [];\n          rule$expects(peg$e87);\n          if (peg$r3.test(input.charAt(peg$currPos))) {\n            s8 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s8 = peg$FAILED;\n          }\n          if (s8 !== peg$FAILED) {\n            while (s8 !== peg$FAILED) {\n              s7.push(s8);\n              rule$expects(peg$e87);\n              if (peg$r3.test(input.charAt(peg$currPos))) {\n                s8 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s8 = peg$FAILED;\n              }\n            }\n          } else {\n            s7 = peg$FAILED;\n          }\n          if (s7 !== peg$FAILED) {\n            s6 = [s6, s7];\n            s5 = s6;\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s5;\n          s5 = peg$FAILED;\n        }\n        if (s5 === peg$FAILED) {\n          s5 = null;\n        }\n        s4 = [s4, s5];\n        s3 = s4;\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = input.substring(s2, peg$currPos);\n      } else {\n        s2 = s3;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f62(s1, s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseUnsignedInteger() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 43;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = [];\n    rule$expects(peg$e87);\n    if (peg$r3.test(input.charAt(peg$currPos))) {\n      s3 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s3 = peg$FAILED;\n    }\n    if (s3 !== peg$FAILED) {\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        rule$expects(peg$e87);\n        if (peg$r3.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n        }\n      }\n    } else {\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      s1 = input.substring(s1, peg$currPos);\n    } else {\n      s1 = s2;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f63(s1);\n    }\n    s0 = s1;\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseNull() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 44;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e89);\n    if (input.substr(peg$currPos, 4) === peg$c86) {\n      s1 = peg$c86;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f64();\n    }\n    s0 = s1;\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseBoolean() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 45;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e90);\n    if (input.substr(peg$currPos, 4) === peg$c87) {\n      s1 = peg$c87;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f65();\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e91);\n      if (input.substr(peg$currPos, 5) === peg$c88) {\n        s1 = peg$c88;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$f66();\n      }\n      s0 = s1;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseDuration() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 46;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e92);\n    if (input.substr(peg$currPos, 8) === peg$c89) {\n      s1 = peg$c89;\n      peg$currPos += 8;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseApostrophe();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseSign();\n        if (s3 !== peg$FAILED) {\n          rule$expects(peg$e93);\n          if (input.charCodeAt(peg$currPos) === 80) {\n            s4 = peg$c90;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$currPos;\n            s6 = peg$parseUnsignedInteger();\n            if (s6 !== peg$FAILED) {\n              rule$expects(peg$e94);\n              if (input.charCodeAt(peg$currPos) === 68) {\n                s7 = peg$c91;\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n              }\n              if (s7 !== peg$FAILED) {\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            s6 = peg$currPos;\n            rule$expects(peg$e95);\n            if (input.charCodeAt(peg$currPos) === 84) {\n              s7 = peg$c92;\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n            }\n            if (s7 !== peg$FAILED) {\n              s8 = peg$currPos;\n              s9 = peg$parseUnsignedInteger();\n              if (s9 !== peg$FAILED) {\n                rule$expects(peg$e96);\n                if (input.charCodeAt(peg$currPos) === 72) {\n                  s10 = peg$c93;\n                  peg$currPos++;\n                } else {\n                  s10 = peg$FAILED;\n                }\n                if (s10 !== peg$FAILED) {\n                  s8 = s9;\n                } else {\n                  peg$currPos = s8;\n                  s8 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s8;\n                s8 = peg$FAILED;\n              }\n              if (s8 === peg$FAILED) {\n                s8 = null;\n              }\n              s9 = peg$currPos;\n              s10 = peg$parseUnsignedInteger();\n              if (s10 !== peg$FAILED) {\n                rule$expects(peg$e97);\n                if (input.charCodeAt(peg$currPos) === 77) {\n                  s11 = peg$c94;\n                  peg$currPos++;\n                } else {\n                  s11 = peg$FAILED;\n                }\n                if (s11 !== peg$FAILED) {\n                  s9 = s10;\n                } else {\n                  peg$currPos = s9;\n                  s9 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s9;\n                s9 = peg$FAILED;\n              }\n              if (s9 === peg$FAILED) {\n                s9 = null;\n              }\n              s10 = peg$currPos;\n              s11 = peg$parseDurationNumber();\n              if (s11 !== peg$FAILED) {\n                rule$expects(peg$e98);\n                if (input.charCodeAt(peg$currPos) === 83) {\n                  s12 = peg$c95;\n                  peg$currPos++;\n                } else {\n                  s12 = peg$FAILED;\n                }\n                if (s12 !== peg$FAILED) {\n                  s10 = s11;\n                } else {\n                  peg$currPos = s10;\n                  s10 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s10;\n                s10 = peg$FAILED;\n              }\n              if (s10 === peg$FAILED) {\n                s10 = null;\n              }\n              peg$savedPos = peg$currPos;\n              s11 = peg$f67(s3, s5, s8, s9, s10);\n              if (s11) {\n                s11 = undefined;\n              } else {\n                s11 = peg$FAILED;\n              }\n              if (s11 !== peg$FAILED) {\n                peg$savedPos = s6;\n                s6 = peg$f68(s3, s5, s8, s9, s10);\n              } else {\n                peg$currPos = s6;\n                s6 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n            if (s6 === peg$FAILED) {\n              s6 = null;\n            }\n            peg$savedPos = peg$currPos;\n            s7 = peg$f69(s3, s5, s6);\n            if (s7) {\n              s7 = undefined;\n            } else {\n              s7 = peg$FAILED;\n            }\n            if (s7 !== peg$FAILED) {\n              s8 = peg$parseApostrophe();\n              if (s8 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s0 = peg$f70(s3, s5, s6);\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseDurationNumber() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 47;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$currPos;\n    s3 = [];\n    rule$expects(peg$e87);\n    if (peg$r3.test(input.charAt(peg$currPos))) {\n      s4 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s4 = peg$FAILED;\n    }\n    if (s4 !== peg$FAILED) {\n      while (s4 !== peg$FAILED) {\n        s3.push(s4);\n        rule$expects(peg$e87);\n        if (peg$r3.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n        }\n      }\n    } else {\n      s3 = peg$FAILED;\n    }\n    if (s3 !== peg$FAILED) {\n      rule$expects(peg$e88);\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s4 = peg$c85;\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = [];\n        rule$expects(peg$e87);\n        if (peg$r3.test(input.charAt(peg$currPos))) {\n          s6 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n        }\n        if (s6 !== peg$FAILED) {\n          while (s6 !== peg$FAILED) {\n            s5.push(s6);\n            rule$expects(peg$e87);\n            if (peg$r3.test(input.charAt(peg$currPos))) {\n              s6 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n            }\n          }\n        } else {\n          s5 = peg$FAILED;\n        }\n        if (s5 !== peg$FAILED) {\n          s3 = [s3, s4, s5];\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      s1 = input.substring(s1, peg$currPos);\n    } else {\n      s1 = s2;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f71(s1);\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseUnsignedInteger();\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseText() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 48;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = [];\n    rule$expects(peg$e99);\n    if (peg$r4.test(input.charAt(peg$currPos))) {\n      s3 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s3 = peg$FAILED;\n    }\n    while (s3 !== peg$FAILED) {\n      s2.push(s3);\n      rule$expects(peg$e99);\n      if (peg$r4.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n      }\n    }\n    s1 = input.substring(s1, peg$currPos);\n    peg$savedPos = s0;\n    s1 = peg$f72(s1);\n    s0 = s1;\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseSign() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 49;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    rule$expects(peg$e21);\n    if (input.charCodeAt(peg$currPos) === 43) {\n      s0 = peg$c21;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e100);\n      if (input.substr(peg$currPos, 3) === peg$c96) {\n        s1 = peg$c96;\n        peg$currPos += 3;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$f73();\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        rule$expects(peg$e101);\n        if (input.charCodeAt(peg$currPos) === 45) {\n          s0 = peg$c97;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = '';\n        }\n      }\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseApostrophe() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 50;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    rule$expects(peg$e102);\n    if (input.charCodeAt(peg$currPos) === 39) {\n      s0 = peg$c98;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e103);\n      if (input.substr(peg$currPos, 3) === peg$c99) {\n        s1 = peg$c99;\n        peg$currPos += 3;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$f74();\n      }\n      s0 = s1;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseQuotedText() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 51;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseApostrophe();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$currPos;\n      peg$begin();\n      s5 = peg$parseApostrophe();\n      peg$end(true);\n      if (s5 === peg$FAILED) {\n        s4 = undefined;\n      } else {\n        peg$currPos = s4;\n        s4 = peg$FAILED;\n      }\n      if (s4 !== peg$FAILED) {\n        rule$expects(peg$e104);\n        if (input.length > peg$currPos) {\n          s5 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n        }\n        if (s5 !== peg$FAILED) {\n          s3 = s5;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      if (s3 === peg$FAILED) {\n        s3 = peg$currPos;\n        s4 = peg$parseApostrophe();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseApostrophe();\n          if (s5 !== peg$FAILED) {\n            s3 = s5;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        peg$begin();\n        s5 = peg$parseApostrophe();\n        peg$end(true);\n        if (s5 === peg$FAILED) {\n          s4 = undefined;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          rule$expects(peg$e104);\n          if (input.length > peg$currPos) {\n            s5 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n          }\n          if (s5 !== peg$FAILED) {\n            s3 = s5;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 === peg$FAILED) {\n          s3 = peg$currPos;\n          s4 = peg$parseApostrophe();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseApostrophe();\n            if (s5 !== peg$FAILED) {\n              s3 = s5;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n      }\n      s3 = peg$parseApostrophe();\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f75(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseParameterAlias() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 52;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e4);\n    if (input.charCodeAt(peg$currPos) === 64) {\n      s1 = peg$c5;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseResourceName();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f76(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseNumberBind() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 53;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseNumber();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f77(s1);\n    }\n    s0 = s1;\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseDate() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 54;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    rule$expects(peg$e105);\n    if (input.substr(peg$currPos, 8) === peg$c100) {\n      s2 = peg$c100;\n      peg$currPos += 8;\n    } else {\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      peg$savedPos = s1;\n      s2 = peg$f78();\n    }\n    s1 = s2;\n    if (s1 === peg$FAILED) {\n      s1 = peg$currPos;\n      rule$expects(peg$e52);\n      if (input.substr(peg$currPos, 4) === peg$c52) {\n        s2 = peg$c52;\n        peg$currPos += 4;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s1;\n        s2 = peg$f79();\n      }\n      s1 = s2;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = peg$parseQuotedText();\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s2;\n        s3 = peg$f80(s1, s3);\n      }\n      s2 = s3;\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = peg$currPos;\n        s3 = peg$f81(s1, s2);\n        if (s3) {\n          s3 = peg$FAILED;\n        } else {\n          s3 = undefined;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f82(s1, s2);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseDateBind() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 55;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseDate();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f83(s1);\n    }\n    s0 = s1;\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseBooleanBind() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 56;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseBoolean();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f84(s1);\n    }\n    s0 = s1;\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseContentReference() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 57;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e106);\n    if (input.charCodeAt(peg$currPos) === 36) {\n      s1 = peg$c3;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseResourceName();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f85(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseQuotedTextBind() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 58;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseQuotedText();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f86(s1);\n    }\n    s0 = s1;\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parseboundary() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 59;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    peg$begin();\n    rule$expects(peg$e32);\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c32;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    peg$end(false);\n    if (s1 !== peg$FAILED) {\n      peg$currPos = s0;\n      s0 = undefined;\n    } else {\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = [];\n      s1 = peg$parsespace();\n      if (s1 !== peg$FAILED) {\n        while (s1 !== peg$FAILED) {\n          s0.push(s1);\n          s1 = peg$parsespace();\n        }\n      } else {\n        s0 = peg$FAILED;\n      }\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parsespaces() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 60;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    s0 = [];\n    s1 = peg$parsespace();\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      s1 = peg$parsespace();\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n  function peg$parsespace() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    var key = peg$currPos * 62 + 61;\n    var cached = peg$resultsCache[key];\n    var rule$expectations = [];\n\n    rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n      rule$expectations.push(expected);\n    }\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      rule$expectations = cached.expectations;\n      if (peg$silentFails === 0) {\n        rule$expectations.forEach(peg$expect);\n      }\n\n      return cached.result;\n    }\n\n    rule$expects(peg$e107);\n    if (input.charCodeAt(peg$currPos) === 32) {\n      s0 = peg$c101;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      rule$expects(peg$e108);\n      if (input.substr(peg$currPos, 3) === peg$c102) {\n        s0 = peg$c102;\n        peg$currPos += 3;\n      } else {\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        rule$expects(peg$e21);\n        if (input.charCodeAt(peg$currPos) === 43) {\n          s0 = peg$c21;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n        }\n      }\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0,\n      expectations: rule$expectations\n    };\n\n    return s0;\n  }\n\n\n  \tvar methods = {\n  \t\tcast: [ 1, 2 ],\n  \t\tceiling: 1,\n  \t\tconcat: 2,\n  \t\tcontains: 2,\n  \t\tdate: 1,\n  \t\tday: 1,\n  \t\tendswith: 2,\n  \t\tfloor: 1,\n  \t\tfractionalseconds: 1,\n  \t\thour: 1,\n  \t\tindexof: 2,\n  \t\tisof: [ 1, 2 ],\n  \t\tlength: 1,\n  \t\tmaxdatetime: 0,\n  \t\tmindatetime: 0,\n  \t\tminute: 1,\n  \t\tmonth: 1,\n  \t\tnow: 0,\n  \t\treplace: 3,\n  \t\tround: 1,\n  \t\tsecond: 1,\n  \t\tstartswith: 2,\n  \t\tsubstringof: 2,\n  \t\tsubstring: [ 2, 3 ],\n  \t\ttime: 1,\n  \t\ttolower: 1,\n  \t\ttotaloffsetminutes: 1,\n  \t\ttotalseconds: 1,\n  \t\ttoupper: 1,\n  \t\ttrim: 1,\n  \t\tyear: 1\n  \t};\n\n  \tvar operatorPrecedence = {\n  \t\tor: 0,\n  \t\tand: 0,\n  \t\teq: 1,\n  \t\tne: 1,\n  \t\tgt: 1,\n  \t\tge: 1,\n  \t\tlt: 1,\n  \t\tle: 1,\n  \t\tsub: 2,\n  \t\tadd: 3,\n  \t\tmod: 4,\n  \t\tdiv: 5,\n  \t\tmul: 6\n  \t};\n\n  \t// v4 operator precedence\n  \t// var operatorPrecedence = {\n  \t// \tor: 0,\n  \t// \tand: 1,\n  \t// \teq: 2,\n  \t// \tne: 2,\n  \t// \tgt: 3,\n  \t// \tge: 3,\n  \t// \tlt: 3,\n  \t// \tle: 3,\n  \t// \tadd: 4,\n  \t// \tsub: 4,\n  \t// \tmul: 5,\n  \t// \tdiv: 5,\n  \t// \tmod: 5\n  \t// };\n\n  \tvar binds = [];\n  \tvar precedence = 0;\n  \tfunction reset() {\n  \t\tbinds = [];\n  \t\tprecedence = 0;\n  \t};\n\n  \tfunction CollapseObjectArray(options) {\n  \t\tvar optionsObj = {};\n  \t\tfor(var i in options) {\n  \t\t\toptionsObj[options[i].name] = options[i].value;\n  \t\t}\n  \t\treturn optionsObj;\n  \t};\n\n  \tfunction Bind(type, value) {\n  \t\tbinds.push([type, value])\n  \t\treturn { bind: binds.length - 1 }\n  \t}\n\n\n  peg$begin();\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$expect(peg$endExpectation());\n    }\n\n    throw peg$buildError();\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse: peg$parse\n};\n","import type { Resolvable } from './common-types';\n\nimport * as _ from 'lodash';\n\nexport type MappingFunction = <T, U>(\n\ta: T[],\n\tfn: (v: T) => Resolvable<U>,\n) => Promise<Array<U | Error>>;\n\n// The settle version of `Promise.mapSeries`\nexport const settleMapSeries: MappingFunction = async <T, U>(\n\ta: T[],\n\tfn: (v: T) => Resolvable<U>,\n) => {\n\tconst results: Array<U | Error> = [];\n\tfor (const p of a) {\n\t\ttry {\n\t\t\tconst result = await fn(p);\n\t\t\tresults.push(result);\n\t\t} catch (err) {\n\t\t\tresults.push(ensureError(err));\n\t\t}\n\t}\n\treturn results;\n};\n\n// This is used to guarantee that we convert a `.catch` result into an error, so that later code checking `_.isError` will work as expected\nconst ensureError = (err: any): Error => {\n\tif (err instanceof Error || _.isError(err)) {\n\t\treturn err;\n\t}\n\treturn new Error(err);\n};\n\n// Maps fn over collection and returns an array of Promises. If any promise in the\n// collection is rejected it returns an array with the error, along with all the\n// promises that were fulfilled up to that point\nconst mapTill: MappingFunction = async <T, U>(\n\ta: T[],\n\tfn: (v: T) => Resolvable<U>,\n) => {\n\tconst results: Array<U | Error> = [];\n\tfor (const p of a) {\n\t\ttry {\n\t\t\tconst result = await fn(p);\n\t\t\tresults.push(result);\n\t\t} catch (err) {\n\t\t\tresults.push(ensureError(err));\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn results;\n};\n\n// Used to obtain the appropriate mapping function depending on the\n// semantics specified by the Prefer: header.\nexport const getMappingFn = (headers?: {\n\tprefer?: string | string[];\n\t[key: string]: string | string[] | undefined;\n}): MappingFunction => {\n\tif (headers != null && headers.prefer === 'odata.continue-on-error') {\n\t\treturn settleMapSeries;\n\t} else {\n\t\treturn mapTill;\n\t}\n};\n","import type * as AbstractSQLCompiler from '@balena/abstract-sql-compiler';\nimport type {\n\tODataBinds,\n\tODataOptions,\n\tODataQuery,\n\tSupportedMethod,\n} from '@balena/odata-parser';\nimport type { Tx } from '../database-layer/db';\nimport type { InstantiatedHooks } from './hooks';\nimport type { AnyObject } from './common-types';\n\nimport * as ODataParser from '@balena/odata-parser';\nexport const SyntaxError = ODataParser.SyntaxError;\nimport { OData2AbstractSQL } from '@balena/odata-to-abstract-sql';\nimport * as _ from 'lodash';\nimport * as memoize from 'memoizee';\nimport memoizeWeak = require('memoizee/weak');\n\nexport { BadRequestError, ParsingError, TranslationError } from './errors';\nimport * as deepFreeze from 'deep-freeze';\nimport * as env from '../config-loader/env';\nimport {\n\tBadRequestError,\n\tParsingError,\n\tPermissionError,\n\tTranslationError,\n} from './errors';\nimport * as sbvrUtils from './sbvr-utils';\n\nexport type OdataBinds = ODataBinds;\n\nexport interface UnparsedRequest {\n\tmethod: string;\n\turl: string;\n\tdata?: any;\n\theaders?: { [header: string]: string };\n\tchangeSet?: UnparsedRequest[];\n\t_isChangeSet?: boolean;\n}\n\nexport interface ODataRequest {\n\tmethod: SupportedMethod;\n\turl: string;\n\todataQuery: ODataQuery;\n\todataBinds: OdataBinds;\n\tvalues: AnyObject;\n\tabstractSqlModel?: AbstractSQLCompiler.AbstractSqlModel;\n\tabstractSqlQuery?: AbstractSQLCompiler.AbstractSqlQuery;\n\tsqlQuery?: AbstractSQLCompiler.SqlResult | AbstractSQLCompiler.SqlResult[];\n\tresourceName: string;\n\tvocabulary: string;\n\t_defer?: boolean;\n\tid?: number;\n\tcustom: AnyObject;\n\ttx?: Tx;\n\tmodifiedFields?: ReturnType<\n\t\tAbstractSQLCompiler.EngineInstance['getModifiedFields']\n\t>;\n\taffectedIds?: number[];\n\tpendingAffectedIds?: Promise<number[]>;\n\thooks?: InstantiatedHooks;\n\tengine?: AbstractSQLCompiler.Engines;\n}\n\n// Converts a value to its string representation and tries to parse is as an\n// OData bind\nexport const parseId = (b: any) => {\n\tconst { tree, binds } = ODataParser.parse(String(b), {\n\t\tstartRule: 'ProcessRule',\n\t\trule: 'KeyBind',\n\t});\n\treturn binds[tree.bind];\n};\n\nexport const memoizedParseOdata = (() => {\n\tconst parseOdata = (url: string) => {\n\t\tconst odata = ODataParser.parse(url);\n\t\t// if we parse a canAccess action rewrite the resource to ensure we\n\t\t// do not run the resource hooks\n\t\tif (\n\t\t\todata.tree.property != null &&\n\t\t\todata.tree.property.resource === 'canAccess'\n\t\t) {\n\t\t\todata.tree.resource =\n\t\t\t\todata.tree.resource + '#' + odata.tree.property.resource;\n\t\t}\n\t\treturn odata;\n\t};\n\n\tconst _memoizedParseOdata = memoize(parseOdata, {\n\t\tprimitive: true,\n\t\tmax: env.cache.parseOData.max,\n\t});\n\treturn (url: string) => {\n\t\tconst queryParamsIndex = url.indexOf('?');\n\t\tif (queryParamsIndex !== -1) {\n\t\t\tif (/[?&(]@/.test(url)) {\n\t\t\t\t// Try to cache based on parameter aliases if there might be some\n\t\t\t\tconst parameterAliases = new URLSearchParams();\n\t\t\t\tconst queryParams = new URLSearchParams(url.slice(queryParamsIndex));\n\t\t\t\tArray.from(queryParams.entries()).forEach(([key, value]) => {\n\t\t\t\t\tif (key.startsWith('@')) {\n\t\t\t\t\t\tparameterAliases.append(key, value);\n\t\t\t\t\t\tqueryParams.delete(key);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tconst parameterAliasesString = parameterAliases.toString();\n\t\t\t\tif (parameterAliasesString !== '') {\n\t\t\t\t\tconst parsed = _.cloneDeep(\n\t\t\t\t\t\t_memoizedParseOdata(\n\t\t\t\t\t\t\turl.slice(0, queryParamsIndex) +\n\t\t\t\t\t\t\t\t'?' +\n\t\t\t\t\t\t\t\tdecodeURIComponent(queryParams.toString()),\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tconst parsedParams = ODataParser.parse(\n\t\t\t\t\t\tdecodeURIComponent(parameterAliasesString),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstartRule: 'ProcessRule',\n\t\t\t\t\t\t\trule: 'QueryOptions',\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t\tparsed.tree.options ??= {};\n\t\t\t\t\tfor (const key of Object.keys(parsedParams.tree)) {\n\t\t\t\t\t\tparsed.tree.options[key] = parsedParams.tree[key];\n\t\t\t\t\t\tparsed.binds[key] = parsedParams.binds[key];\n\t\t\t\t\t}\n\t\t\t\t\treturn parsed;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// If we're doing a complex url then skip caching due to # of permutations\n\t\t\treturn parseOdata(url);\n\t\t} else if (url.includes('(')) {\n\t\t\t// We're parsing a url like `/pilot(1)` so whilst there are no query options\n\t\t\t// there are still enough permutations to ruin the hit %\n\t\t\treturn parseOdata(url);\n\t\t} else {\n\t\t\t// Else if it's simple we can easily skip the parsing as we know we'll get a high % hit rate\n\t\t\t// We deep clone to avoid mutations polluting the cache\n\t\t\treturn _.cloneDeep(_memoizedParseOdata(url));\n\t\t}\n\t};\n})();\n\nexport const memoizedGetOData2AbstractSQL = memoizeWeak(\n\t(abstractSqlModel: AbstractSQLCompiler.AbstractSqlModel) => {\n\t\treturn new OData2AbstractSQL(abstractSqlModel);\n\t},\n);\n\nconst memoizedOdata2AbstractSQL = (() => {\n\tconst $memoizedOdata2AbstractSQL = memoizeWeak(\n\t\t(\n\t\t\tabstractSqlModel: AbstractSQLCompiler.AbstractSqlModel,\n\t\t\todataQuery: ODataQuery,\n\t\t\tmethod: SupportedMethod,\n\t\t\tbodyKeys: string[],\n\t\t\texistingBindVarsLength: number,\n\t\t) => {\n\t\t\ttry {\n\t\t\t\tconst odata2AbstractSQL =\n\t\t\t\t\tmemoizedGetOData2AbstractSQL(abstractSqlModel);\n\t\t\t\tconst abstractSql = odata2AbstractSQL.match(\n\t\t\t\t\todataQuery,\n\t\t\t\t\tmethod,\n\t\t\t\t\tbodyKeys,\n\t\t\t\t\texistingBindVarsLength,\n\t\t\t\t);\n\t\t\t\t// We deep freeze to prevent mutations, which would pollute the cache\n\t\t\t\tdeepFreeze(abstractSql);\n\t\t\t\treturn abstractSql;\n\t\t\t} catch (e) {\n\t\t\t\tif (e instanceof PermissionError) {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t\tconsole.error(\n\t\t\t\t\t'Failed to translate url: ',\n\t\t\t\t\tJSON.stringify(odataQuery, null, '\\t'),\n\t\t\t\t\tmethod,\n\t\t\t\t\te,\n\t\t\t\t);\n\t\t\t\tthrow new TranslationError('Failed to translate url');\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tnormalizer: (\n\t\t\t\t_abstractSqlModel: AbstractSQLCompiler.AbstractSqlModel,\n\t\t\t\t[odataQuery, method, bodyKeys, existingBindVarsLength]: [\n\t\t\t\t\tODataQuery,\n\t\t\t\t\tSupportedMethod,\n\t\t\t\t\tstring[],\n\t\t\t\t\tnumber,\n\t\t\t\t],\n\t\t\t) => {\n\t\t\t\treturn (\n\t\t\t\t\tJSON.stringify(odataQuery) +\n\t\t\t\t\tmethod +\n\t\t\t\t\tbodyKeys +\n\t\t\t\t\texistingBindVarsLength\n\t\t\t\t);\n\t\t\t},\n\t\t\tmax: env.cache.odataToAbstractSql.max,\n\t\t},\n\t);\n\n\treturn (\n\t\trequest: Pick<\n\t\t\tODataRequest,\n\t\t\t| 'method'\n\t\t\t| 'odataQuery'\n\t\t\t| 'odataBinds'\n\t\t\t| 'values'\n\t\t\t| 'vocabulary'\n\t\t\t| 'abstractSqlModel'\n\t\t>,\n\t) => {\n\t\tconst { method, odataBinds, values } = request;\n\t\tlet { odataQuery } = request;\n\t\tconst abstractSqlModel = sbvrUtils.getAbstractSqlModel(request);\n\t\t// Sort the body keys to improve cache hits\n\t\tconst sortedBody = Object.keys(values).sort();\n\t\t// Remove unused options for odata-to-abstract-sql to improve cache hits\n\t\tif (odataQuery.options) {\n\t\t\todataQuery = {\n\t\t\t\t...odataQuery,\n\t\t\t\toptions: _.pick(\n\t\t\t\t\todataQuery.options,\n\t\t\t\t\t'$select',\n\t\t\t\t\t'$filter',\n\t\t\t\t\t'$expand',\n\t\t\t\t\t'$orderby',\n\t\t\t\t\t'$top',\n\t\t\t\t\t'$skip',\n\t\t\t\t\t'$count',\n\t\t\t\t\t'$inlinecount',\n\t\t\t\t\t'$format',\n\t\t\t\t) as ODataOptions,\n\t\t\t};\n\t\t}\n\t\tconst { tree, extraBodyVars, extraBindVars } = $memoizedOdata2AbstractSQL(\n\t\t\tabstractSqlModel,\n\t\t\todataQuery,\n\t\t\tmethod,\n\t\t\tsortedBody,\n\t\t\todataBinds.length,\n\t\t);\n\t\tObject.assign(values, extraBodyVars);\n\t\todataBinds.push(...extraBindVars);\n\t\treturn tree;\n\t};\n})();\n\nexport const metadataEndpoints = ['$metadata', '$serviceroot'];\n\nexport async function parseOData(\n\tb: UnparsedRequest & { _isChangeSet?: false },\n): Promise<ODataRequest>;\nexport async function parseOData(\n\tb: UnparsedRequest & { _isChangeSet: true },\n): Promise<ODataRequest[]>;\nexport async function parseOData(\n\tb: UnparsedRequest,\n): Promise<ODataRequest | ODataRequest[]>;\nexport async function parseOData(\n\tb: UnparsedRequest,\n): Promise<ODataRequest | ODataRequest[]> {\n\ttry {\n\t\tif (b._isChangeSet && b.changeSet != null) {\n\t\t\t// We sort the CS set once, we must assure that requests which reference\n\t\t\t// other requests in the changeset are placed last. Once they are sorted\n\t\t\t// Map will guarantee retrival of results in insertion order\n\t\t\tconst sortedCS = _.sortBy(b.changeSet, (el) => el.url[0] !== '/');\n\t\t\tconst csReferences = new Map<ODataRequest['id'], ODataRequest>();\n\t\t\tfor (const cs of sortedCS) {\n\t\t\t\tparseODataChangeset(csReferences, cs);\n\t\t\t}\n\t\t\treturn Array.from(csReferences.values());\n\t\t} else {\n\t\t\tconst { url, apiRoot } = splitApiRoot(b.url);\n\t\t\tconst odata = memoizedParseOdata(url);\n\n\t\t\treturn {\n\t\t\t\tmethod: b.method as SupportedMethod,\n\t\t\t\turl,\n\t\t\t\tvocabulary: apiRoot,\n\t\t\t\tresourceName: odata.tree.resource,\n\t\t\t\todataBinds: odata.binds,\n\t\t\t\todataQuery: odata.tree,\n\t\t\t\tvalues: b.data ?? {},\n\t\t\t\tcustom: {},\n\t\t\t\t_defer: false,\n\t\t\t};\n\t\t}\n\t} catch (err) {\n\t\tif (err instanceof ODataParser.SyntaxError) {\n\t\t\tthrow new BadRequestError(`Malformed url: '${b.url}'`);\n\t\t}\n\t\tif (!(err instanceof BadRequestError || err instanceof ParsingError)) {\n\t\t\tconsole.error('Failed to parse url: ', b.method, b.url, err);\n\t\t\tthrow new ParsingError(`Failed to parse url: '${b.url}'`);\n\t\t}\n\t\tthrow err;\n\t}\n}\n\nconst parseODataChangeset = (\n\tcsReferences: Map<ODataRequest['id'], ODataRequest>,\n\tb: UnparsedRequest,\n): void => {\n\tconst contentId: ODataRequest['id'] = mustExtractHeader(b, 'content-id');\n\n\tif (csReferences.has(contentId)) {\n\t\tthrow new BadRequestError('Content-Id must be unique inside a changeset');\n\t}\n\n\tlet defer: boolean;\n\tlet odata;\n\tlet apiRoot: string;\n\tlet url;\n\n\tif (b.url[0] === '/') {\n\t\t({ url, apiRoot } = splitApiRoot(b.url));\n\t\todata = memoizedParseOdata(url);\n\t\tdefer = false;\n\t} else {\n\t\turl = b.url;\n\t\todata = memoizedParseOdata(url);\n\t\tconst { bind } = odata.tree.resource;\n\t\tconst [, id] = odata.binds[bind];\n\t\t// Use reference to collect information\n\t\tconst ref = csReferences.get(id);\n\t\tif (ref === undefined) {\n\t\t\tthrow new BadRequestError('Content-Id refers to a non existent resource');\n\t\t}\n\t\tapiRoot = ref.vocabulary;\n\t\t// Update resource with actual resourceName\n\t\todata.tree.resource = ref.resourceName;\n\t\tdefer = true;\n\t}\n\n\tconst parseResult: ODataRequest = {\n\t\tmethod: b.method as SupportedMethod,\n\t\turl,\n\t\tvocabulary: apiRoot,\n\t\tresourceName: odata.tree.resource,\n\t\todataBinds: odata.binds,\n\t\todataQuery: odata.tree,\n\t\tvalues: b.data ?? {},\n\t\tcustom: {},\n\t\tid: contentId,\n\t\t_defer: defer,\n\t};\n\tcsReferences.set(contentId, parseResult);\n};\n\nconst splitApiRoot = (url: string) => {\n\tconst urlParts = url.split('/');\n\tconst apiRoot = urlParts[1];\n\tif (apiRoot == null) {\n\t\tthrow new ParsingError(`No such api root: ${apiRoot}`);\n\t}\n\turl = '/' + urlParts.slice(2).join('/');\n\treturn { url, apiRoot };\n};\n\nconst mustExtractHeader = (\n\tbody: { headers?: { [header: string]: string } },\n\theader: string,\n) => {\n\tconst h: any = body.headers?.[header]?.[0];\n\tif (_.isEmpty(h)) {\n\t\tthrow new BadRequestError(`${header} must be specified`);\n\t}\n\treturn h;\n};\n\nexport const translateUri = <\n\tT extends Pick<\n\t\tODataRequest,\n\t\t| 'method'\n\t\t| 'odataQuery'\n\t\t| 'odataBinds'\n\t\t| 'values'\n\t\t| 'vocabulary'\n\t\t| 'resourceName'\n\t\t| 'abstractSqlModel'\n\t>,\n>(\n\trequest: T & {\n\t\tabstractSqlQuery?: ODataRequest['abstractSqlQuery'];\n\t},\n): typeof request => {\n\tif (request.abstractSqlQuery != null) {\n\t\treturn request;\n\t}\n\tconst isMetadataEndpoint =\n\t\tmetadataEndpoints.includes(request.resourceName) ||\n\t\trequest.method === 'OPTIONS';\n\tif (!isMetadataEndpoint) {\n\t\tconst abstractSqlQuery = memoizedOdata2AbstractSQL(request);\n\t\trequest = { ...request };\n\t\trequest.values = new Proxy(request.values, {\n\t\t\tset: (obj: ODataRequest['values'], prop: string, value) => {\n\t\t\t\tif (!obj.hasOwnProperty(prop)) {\n\t\t\t\t\tsbvrUtils.api[request.vocabulary].logger.warn(\n\t\t\t\t\t\t`Assigning a new request.values property '${prop}' however it will be ignored`,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tobj[prop] = value;\n\t\t\t\treturn true;\n\t\t\t},\n\t\t});\n\t\trequest.abstractSqlQuery = abstractSqlQuery;\n\t\treturn request;\n\t}\n\treturn request;\n};\n","\"use strict\";\n\nvar aFrom  = require(\"../array/from\")\n  , assign = require(\"./assign\")\n  , value  = require(\"./valid-value\");\n\nmodule.exports = function (obj/*, propertyNames, options*/) {\n\tvar copy = Object(value(obj)), propertyNames = arguments[1], options = Object(arguments[2]);\n\tif (copy !== obj && !propertyNames) return copy;\n\tvar result = {};\n\tif (propertyNames) {\n\t\taFrom(propertyNames, function (propertyName) {\n\t\t\tif (options.ensure || propertyName in obj) result[propertyName] = obj[propertyName];\n\t\t});\n\t} else {\n\t\tassign(result, obj);\n\t}\n\treturn result;\n};\n","\"use strict\";\n\nvar create = Object.create, getPrototypeOf = Object.getPrototypeOf, plainObject = {};\n\nmodule.exports = function (/* CustomCreate*/) {\n\tvar setPrototypeOf = Object.setPrototypeOf, customCreate = arguments[0] || create;\n\tif (typeof setPrototypeOf !== \"function\") return false;\n\treturn getPrototypeOf(setPrototypeOf(customCreate(null), plainObject)) === plainObject;\n};\n","/* eslint no-proto: \"off\" */\n\n// Big thanks to @WebReflection for sorting this out\n// https://gist.github.com/WebReflection/5593554\n\n\"use strict\";\n\nvar isObject         = require(\"../is-object\")\n  , value            = require(\"../valid-value\")\n  , objIsPrototypeOf = Object.prototype.isPrototypeOf\n  , defineProperty   = Object.defineProperty\n  , nullDesc         = { configurable: true, enumerable: false, writable: true, value: undefined }\n  , validate;\n\nvalidate = function (obj, prototype) {\n\tvalue(obj);\n\tif (prototype === null || isObject(prototype)) return obj;\n\tthrow new TypeError(\"Prototype must be null or an object\");\n};\n\nmodule.exports = (function (status) {\n\tvar fn, set;\n\tif (!status) return null;\n\tif (status.level === 2) {\n\t\tif (status.set) {\n\t\t\tset = status.set;\n\t\t\tfn = function (obj, prototype) {\n\t\t\t\tset.call(validate(obj, prototype), prototype);\n\t\t\t\treturn obj;\n\t\t\t};\n\t\t} else {\n\t\t\tfn = function (obj, prototype) {\n\t\t\t\tvalidate(obj, prototype).__proto__ = prototype;\n\t\t\t\treturn obj;\n\t\t\t};\n\t\t}\n\t} else {\n\t\tfn = function self(obj, prototype) {\n\t\t\tvar isNullBase;\n\t\t\tvalidate(obj, prototype);\n\t\t\tisNullBase = objIsPrototypeOf.call(self.nullPolyfill, obj);\n\t\t\tif (isNullBase) delete self.nullPolyfill.__proto__;\n\t\t\tif (prototype === null) prototype = self.nullPolyfill;\n\t\t\tobj.__proto__ = prototype;\n\t\t\tif (isNullBase) defineProperty(self.nullPolyfill, \"__proto__\", nullDesc);\n\t\t\treturn obj;\n\t\t};\n\t}\n\treturn Object.defineProperty(fn, \"level\", {\n\t\tconfigurable: false,\n\t\tenumerable: false,\n\t\twritable: false,\n\t\tvalue: status.level\n\t});\n})(\n\t(function () {\n\t\tvar tmpObj1 = Object.create(null)\n\t\t  , tmpObj2 = {}\n\t\t  , set\n\t\t  , desc = Object.getOwnPropertyDescriptor(Object.prototype, \"__proto__\");\n\n\t\tif (desc) {\n\t\t\ttry {\n\t\t\t\tset = desc.set; // Opera crashes at this point\n\t\t\t\tset.call(tmpObj1, tmpObj2);\n\t\t\t} catch (ignore) {}\n\t\t\tif (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { set: set, level: 2 };\n\t\t}\n\n\t\ttmpObj1.__proto__ = tmpObj2;\n\t\tif (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { level: 2 };\n\n\t\ttmpObj1 = {};\n\t\ttmpObj1.__proto__ = tmpObj2;\n\t\tif (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { level: 1 };\n\n\t\treturn false;\n\t})()\n);\n\nrequire(\"../create\");\n","\"use strict\";\n\nvar isArguments    = require(\"es5-ext/function/is-arguments\")\n  , isString       = require(\"es5-ext/string/is-string\")\n  , ArrayIterator  = require(\"./array\")\n  , StringIterator = require(\"./string\")\n  , iterable       = require(\"./valid-iterable\")\n  , iteratorSymbol = require(\"es6-symbol\").iterator;\n\nmodule.exports = function (obj) {\n\tif (typeof iterable(obj)[iteratorSymbol] === \"function\") return obj[iteratorSymbol]();\n\tif (isArguments(obj)) return new ArrayIterator(obj);\n\tif (isString(obj)) return new StringIterator(obj);\n\treturn new ArrayIterator(obj);\n};\n","\"use strict\";\n\nvar clear    = require(\"es5-ext/array/#/clear\")\n  , assign   = require(\"es5-ext/object/assign\")\n  , callable = require(\"es5-ext/object/valid-callable\")\n  , value    = require(\"es5-ext/object/valid-value\")\n  , d        = require(\"d\")\n  , autoBind = require(\"d/auto-bind\")\n  , Symbol   = require(\"es6-symbol\");\n\nvar defineProperty = Object.defineProperty, defineProperties = Object.defineProperties, Iterator;\n\nmodule.exports = Iterator = function (list, context) {\n\tif (!(this instanceof Iterator)) throw new TypeError(\"Constructor requires 'new'\");\n\tdefineProperties(this, {\n\t\t__list__: d(\"w\", value(list)),\n\t\t__context__: d(\"w\", context),\n\t\t__nextIndex__: d(\"w\", 0)\n\t});\n\tif (!context) return;\n\tcallable(context.on);\n\tcontext.on(\"_add\", this._onAdd);\n\tcontext.on(\"_delete\", this._onDelete);\n\tcontext.on(\"_clear\", this._onClear);\n};\n\n// Internal %IteratorPrototype% doesn't expose its constructor\ndelete Iterator.prototype.constructor;\n\ndefineProperties(\n\tIterator.prototype,\n\tassign(\n\t\t{\n\t\t\t_next: d(function () {\n\t\t\t\tvar i;\n\t\t\t\tif (!this.__list__) return undefined;\n\t\t\t\tif (this.__redo__) {\n\t\t\t\t\ti = this.__redo__.shift();\n\t\t\t\t\tif (i !== undefined) return i;\n\t\t\t\t}\n\t\t\t\tif (this.__nextIndex__ < this.__list__.length) return this.__nextIndex__++;\n\t\t\t\tthis._unBind();\n\t\t\t\treturn undefined;\n\t\t\t}),\n\t\t\tnext: d(function () {\n\t\t\t\treturn this._createResult(this._next());\n\t\t\t}),\n\t\t\t_createResult: d(function (i) {\n\t\t\t\tif (i === undefined) return { done: true, value: undefined };\n\t\t\t\treturn { done: false, value: this._resolve(i) };\n\t\t\t}),\n\t\t\t_resolve: d(function (i) {\n\t\t\t\treturn this.__list__[i];\n\t\t\t}),\n\t\t\t_unBind: d(function () {\n\t\t\t\tthis.__list__ = null;\n\t\t\t\tdelete this.__redo__;\n\t\t\t\tif (!this.__context__) return;\n\t\t\t\tthis.__context__.off(\"_add\", this._onAdd);\n\t\t\t\tthis.__context__.off(\"_delete\", this._onDelete);\n\t\t\t\tthis.__context__.off(\"_clear\", this._onClear);\n\t\t\t\tthis.__context__ = null;\n\t\t\t}),\n\t\t\ttoString: d(function () {\n\t\t\t\treturn \"[object \" + (this[Symbol.toStringTag] || \"Object\") + \"]\";\n\t\t\t})\n\t\t},\n\t\tautoBind({\n\t\t\t_onAdd: d(function (index) {\n\t\t\t\tif (index >= this.__nextIndex__) return;\n\t\t\t\t++this.__nextIndex__;\n\t\t\t\tif (!this.__redo__) {\n\t\t\t\t\tdefineProperty(this, \"__redo__\", d(\"c\", [index]));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.__redo__.forEach(function (redo, i) {\n\t\t\t\t\tif (redo >= index) this.__redo__[i] = ++redo;\n\t\t\t\t}, this);\n\t\t\t\tthis.__redo__.push(index);\n\t\t\t}),\n\t\t\t_onDelete: d(function (index) {\n\t\t\t\tvar i;\n\t\t\t\tif (index >= this.__nextIndex__) return;\n\t\t\t\t--this.__nextIndex__;\n\t\t\t\tif (!this.__redo__) return;\n\t\t\t\ti = this.__redo__.indexOf(index);\n\t\t\t\tif (i !== -1) this.__redo__.splice(i, 1);\n\t\t\t\tthis.__redo__.forEach(function (redo, j) {\n\t\t\t\t\tif (redo > index) this.__redo__[j] = --redo;\n\t\t\t\t}, this);\n\t\t\t}),\n\t\t\t_onClear: d(function () {\n\t\t\t\tif (this.__redo__) clear.call(this.__redo__);\n\t\t\t\tthis.__nextIndex__ = 0;\n\t\t\t})\n\t\t})\n\t)\n);\n\ndefineProperty(\n\tIterator.prototype,\n\tSymbol.iterator,\n\td(function () {\n\t\treturn this;\n\t})\n);\n","\"use strict\";\n\nvar isValue       = require(\"../value/is\")\n  , isObject      = require(\"../object/is\")\n  , stringCoerce  = require(\"../string/coerce\")\n  , toShortString = require(\"./to-short-string\");\n\nvar resolveMessage = function (message, value) {\n\treturn message.replace(\"%v\", toShortString(value));\n};\n\nmodule.exports = function (value, defaultMessage, inputOptions) {\n\tif (!isObject(inputOptions)) throw new TypeError(resolveMessage(defaultMessage, value));\n\tif (!isValue(value)) {\n\t\tif (\"default\" in inputOptions) return inputOptions[\"default\"];\n\t\tif (inputOptions.isOptional) return null;\n\t}\n\tvar errorMessage = stringCoerce(inputOptions.errorMessage);\n\tif (!isValue(errorMessage)) errorMessage = defaultMessage;\n\tthrow new TypeError(resolveMessage(errorMessage, value));\n};\n","import * as _ from 'lodash';\n\nimport * as AbstractSQLCompiler from '@balena/abstract-sql-compiler';\nimport {\n\tODataBinds,\n\todataNameToSqlName,\n\tisBindReference,\n} from '@balena/odata-to-abstract-sql';\nimport deepFreeze = require('deep-freeze');\nimport * as memoize from 'memoizee';\nimport memoizeWeak = require('memoizee/weak');\nimport * as env from '../config-loader/env';\nimport { BadRequestError, SqlCompilationError } from './errors';\nimport * as sbvrUtils from './sbvr-utils';\nimport { ODataRequest } from './uri-parser';\n\nconst getMemoizedCompileRule = memoize(\n\t(engine: AbstractSQLCompiler.Engines) =>\n\t\tmemoizeWeak(\n\t\t\t(abstractSqlQuery: AbstractSQLCompiler.AbstractSqlQuery) => {\n\t\t\t\tconst sqlQuery =\n\t\t\t\t\tAbstractSQLCompiler[engine].compileRule(abstractSqlQuery);\n\t\t\t\tconst modifiedFields =\n\t\t\t\t\tAbstractSQLCompiler[engine].getModifiedFields(abstractSqlQuery);\n\t\t\t\tif (modifiedFields != null) {\n\t\t\t\t\tdeepFreeze(modifiedFields);\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tsqlQuery,\n\t\t\t\t\tmodifiedFields,\n\t\t\t\t};\n\t\t\t},\n\t\t\t{ max: env.cache.abstractSqlCompiler.max },\n\t\t),\n\t{ primitive: true },\n);\n\nexport const compileRequest = (request: ODataRequest) => {\n\tif (request.abstractSqlQuery != null) {\n\t\tconst { engine } = request;\n\t\tif (engine == null) {\n\t\t\tthrow new SqlCompilationError('No database engine specified');\n\t\t}\n\t\ttry {\n\t\t\tconst { sqlQuery, modifiedFields } = getMemoizedCompileRule(engine)(\n\t\t\t\trequest.abstractSqlQuery,\n\t\t\t);\n\t\t\trequest.sqlQuery = sqlQuery;\n\t\t\trequest.modifiedFields = modifiedFields;\n\t\t} catch (err) {\n\t\t\tsbvrUtils.api[request.vocabulary].logger.error(\n\t\t\t\t'Failed to compile abstract sql: ',\n\t\t\t\trequest.abstractSqlQuery,\n\t\t\t\terr,\n\t\t\t);\n\t\t\tthrow new SqlCompilationError(err);\n\t\t}\n\t}\n\treturn request;\n};\n\nexport const resolveOdataBind = (odataBinds: ODataBinds, value: any) => {\n\tif (value != null && typeof value === 'object' && isBindReference(value)) {\n\t\t[, value] = odataBinds[value.bind];\n\t}\n\treturn value;\n};\n\nexport const getAndCheckBindValues = async (\n\trequest: Required<\n\t\tPick<ODataRequest, 'vocabulary' | 'odataBinds' | 'values' | 'engine'>\n\t>,\n\tbindings: AbstractSQLCompiler.Binding[],\n) => {\n\tconst { odataBinds, values, engine } = request;\n\tconst sqlModelTables = sbvrUtils.getAbstractSqlModel(request).tables;\n\treturn await Promise.all(\n\t\tbindings.map(async (binding) => {\n\t\t\tlet fieldName: string = '';\n\t\t\tlet field: { dataType: string };\n\t\t\tlet value: any;\n\t\t\tif (binding[0] === 'Bind') {\n\t\t\t\tconst bindValue = binding[1];\n\t\t\t\tif (Array.isArray(bindValue)) {\n\t\t\t\t\tlet tableName;\n\t\t\t\t\t[tableName, fieldName] = bindValue;\n\n\t\t\t\t\tconst referencedName = tableName + '.' + fieldName;\n\t\t\t\t\tvalue = values[referencedName];\n\t\t\t\t\tif (value === undefined) {\n\t\t\t\t\t\tvalue = values[fieldName];\n\t\t\t\t\t}\n\n\t\t\t\t\tvalue = resolveOdataBind(odataBinds, value);\n\n\t\t\t\t\tconst sqlTableName = odataNameToSqlName(tableName);\n\t\t\t\t\tconst sqlFieldName = odataNameToSqlName(fieldName);\n\t\t\t\t\tconst maybeField = sqlModelTables[sqlTableName].fields.find(\n\t\t\t\t\t\t(f) => f.fieldName === sqlFieldName,\n\t\t\t\t\t);\n\t\t\t\t\tif (maybeField == null) {\n\t\t\t\t\t\tthrow new Error(`Could not find field '${fieldName}'`);\n\t\t\t\t\t}\n\t\t\t\t\tfield = maybeField;\n\t\t\t\t} else if (Number.isInteger(bindValue)) {\n\t\t\t\t\tif (bindValue >= odataBinds.length) {\n\t\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t\t`Invalid binding number '${bindValue}' for binds: `,\n\t\t\t\t\t\t\todataBinds,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthrow new Error('Invalid binding');\n\t\t\t\t\t}\n\t\t\t\t\tlet dataType;\n\t\t\t\t\t[dataType, value] = odataBinds[bindValue];\n\t\t\t\t\tfield = { dataType };\n\t\t\t\t} else if (typeof bindValue === 'string') {\n\t\t\t\t\tif (!odataBinds.hasOwnProperty(bindValue)) {\n\t\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t\t`Invalid binding '${bindValue}' for binds: `,\n\t\t\t\t\t\t\todataBinds,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthrow new Error('Invalid binding');\n\t\t\t\t\t}\n\t\t\t\t\tlet dataType;\n\t\t\t\t\t[dataType, value] = odataBinds[bindValue];\n\t\t\t\t\tfield = { dataType };\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(`Unknown binding: ${binding}`);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet dataType;\n\t\t\t\t[dataType, value] = binding;\n\t\t\t\tfield = { dataType };\n\t\t\t}\n\n\t\t\tif (value === undefined) {\n\t\t\t\tthrow new Error(`Bind value cannot be undefined: ${binding}`);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\treturn await AbstractSQLCompiler[engine].dataTypeValidate(value, field);\n\t\t\t} catch (err) {\n\t\t\t\tthrow new BadRequestError(`\"${fieldName}\" ${err.message}`);\n\t\t\t}\n\t\t}),\n\t);\n};\n\nconst checkModifiedFields = (\n\truleReferencedFields: AbstractSQLCompiler.RuleReferencedFields,\n\tmodifiedFields: AbstractSQLCompiler.ModifiedFields,\n) => {\n\tconst refs = ruleReferencedFields[modifiedFields.table];\n\t// If there are no referenced fields of the modified table then the rule is not affected\n\tif (refs == null) {\n\t\treturn false;\n\t}\n\t// If there are no referenced fields for the given action type then the rule is not affected\n\tif (refs[modifiedFields.action].length === 0) {\n\t\treturn false;\n\t}\n\n\t// If there are no specific fields listed then that means they were all modified (ie insert/delete) and so the rule can be affected\n\tif (modifiedFields.fields == null) {\n\t\treturn true;\n\t}\n\n\t// Otherwise check if there are any matching fields to see if the rule is affected\n\treturn (\n\t\t_.intersection(refs[modifiedFields.action], modifiedFields.fields).length >\n\t\t0\n\t);\n};\nexport const isRuleAffected = (\n\trule: AbstractSQLCompiler.SqlRule,\n\trequest?: ODataRequest,\n) => {\n\t// If there is no abstract sql query then nothing was modified\n\tif (request?.abstractSqlQuery == null) {\n\t\treturn false;\n\t}\n\t// If for some reason there are no referenced fields known for the rule then we just assume it may have been modified\n\tif (rule.ruleReferencedFields == null) {\n\t\treturn true;\n\t}\n\tconst { modifiedFields } = request;\n\t// If we can't get any modified fields we assume the rule may have been modified\n\tif (modifiedFields == null) {\n\t\tconsole.warn(\n\t\t\t`Could not determine the modified table/fields info for '${request.method}' to ${request.vocabulary}`,\n\t\t\trequest.abstractSqlQuery,\n\t\t);\n\t\treturn true;\n\t}\n\tif (Array.isArray(modifiedFields)) {\n\t\treturn modifiedFields.some(\n\t\t\t_.partial(checkModifiedFields, rule.ruleReferencedFields),\n\t\t);\n\t}\n\treturn checkModifiedFields(rule.ruleReferencedFields, modifiedFields);\n};\n","import type * as BodyParser from 'body-parser';\nimport type * as Compression from 'compression';\nimport type * as CookieParser from 'cookie-parser';\nimport type * as ExpressSession from 'express-session';\nimport type * as MethodOverride from 'method-override';\nimport type * as Multer from 'multer';\nimport type * as Passport from 'passport';\nimport type * as Path from 'path';\nimport type * as ServeStatic from 'serve-static';\n\nimport * as Pinejs from './module';\nexport { sbvrUtils, PinejsSessionStore } from './module';\n\nexport { ExtendedSBVRParser } from '../extended-sbvr-parser/extended-sbvr-parser';\n\nimport * as passportPinejs from '../passport-pinejs/passport-pinejs';\n\nimport * as express from 'express';\n\nconst app = express();\n\nswitch (app.get('env')) {\n\tcase 'production':\n\t\tconsole.log = () => {\n\t\t\t// noop\n\t\t};\n\t\tbreak;\n}\n\nif (!process.browser) {\n\t// tslint:disable:no-var-requires\n\tconst passport: typeof Passport = require('passport');\n\tconst path: typeof Path = require('path');\n\tconst compression: typeof Compression = require('compression');\n\tconst serveStatic: typeof ServeStatic = require('serve-static');\n\tconst cookieParser: typeof CookieParser = require('cookie-parser');\n\tconst bodyParser: typeof BodyParser = require('body-parser');\n\tconst multer: typeof Multer = require('multer');\n\tconst methodOverride: typeof MethodOverride = require('method-override');\n\tconst expressSession: typeof ExpressSession = require('express-session');\n\t// tslint:enable:no-var-requires\n\n\tapp.use(compression());\n\n\tconst root = process.argv[2] || __dirname;\n\tapp.use('/', serveStatic(path.join(root, 'static')));\n\n\tapp.use(cookieParser());\n\tapp.use(bodyParser());\n\tapp.use(multer().any());\n\tapp.use(methodOverride());\n\tapp.use(\n\t\texpressSession({\n\t\t\tsecret: 'A pink cat jumped over a rainbow',\n\t\t\tstore: new Pinejs.PinejsSessionStore(),\n\t\t}),\n\t);\n\tapp.use(passport.initialize());\n\tapp.use(passport.session());\n\n\tapp.use((req, res, next) => {\n\t\tconst origin = req.get('Origin') || '*';\n\t\tres.header('Access-Control-Allow-Origin', origin);\n\t\tres.header(\n\t\t\t'Access-Control-Allow-Methods',\n\t\t\t'GET, PUT, POST, PATCH, DELETE, OPTIONS, HEAD',\n\t\t);\n\t\tres.header(\n\t\t\t'Access-Control-Allow-Headers',\n\t\t\t'Content-Type, Authorization, Application-Record-Count, MaxDataServiceVersion, X-Requested-With',\n\t\t);\n\t\tres.header('Access-Control-Allow-Credentials', 'true');\n\t\tnext();\n\t});\n\n\tapp.use((req, _res, next) => {\n\t\tconsole.log('%s %s', req.method, req.url);\n\t\tnext();\n\t});\n}\n\nexport const initialised = Pinejs.init(app)\n\t.then(async (configLoader) => {\n\t\tawait Promise.all([\n\t\t\tconfigLoader.loadConfig(passportPinejs.config),\n\t\t\tconfigLoader.loadConfig(Pinejs.PinejsSessionStore.config),\n\t\t]);\n\n\t\tif (\n\t\t\ttypeof process === 'undefined' ||\n\t\t\tprocess == null ||\n\t\t\t!process.env.DISABLE_DEFAULT_AUTH\n\t\t) {\n\t\t\tapp.post(\n\t\t\t\t'/login',\n\t\t\t\tpassportPinejs.login((err, user, req, res) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tconsole.error('Error logging in', err, err.stack);\n\t\t\t\t\t\tres.sendStatus(500);\n\t\t\t\t\t} else if (user === false) {\n\t\t\t\t\t\tif (req.xhr === true) {\n\t\t\t\t\t\t\tres.sendStatus(401);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tres.redirect('/login.html');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (req.xhr === true) {\n\t\t\t\t\t\t\tres.sendStatus(200);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tres.redirect('/');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tapp.get('/logout', passportPinejs.logout, (_req, res) => {\n\t\t\t\tres.redirect('/');\n\t\t\t});\n\t\t}\n\n\t\tapp.listen(process.env.PORT || 1337, () => {\n\t\t\tconsole.info('Server started');\n\t\t});\n\t})\n\t.catch((err) => {\n\t\tconsole.error('Error initialising server', err, err.stack);\n\t\tprocess.exit(1);\n\t});\n","import type * as Fs from 'fs';\n\nif (!process.browser) {\n\tif (typeof nodeRequire === 'undefined' || nodeRequire == null) {\n\t\t// `nodeRequire` is a special variable we use to bypass webpack's resolving of `require`\n\t\t// statements on build for the cases where we need to always use the nodejs require, eg\n\t\t// in the config-loader which dynamically loads code at runtime, and for adding custom\n\t\t// filetype handlers - it works by being replaced with `require` after the webpack build\n\t\t// finishes.\n\t\t// In the case of `nodeRequire` being undefined it means we're being run in a nodejs\n\t\t// environment directly, without a webpack build, and have to manually create it as an\n\t\t// alias for the nodejs require so that things continue to work.\n\n\t\t// Alias require as nodeRequire for the config-loader hack.\n\t\tglobal.nodeRequire = require;\n\t}\n\t// Register a .sbvr loader\n\t// tslint:disable-next-line:no-var-requires\n\tconst fs: typeof Fs = require('fs');\n\tnodeRequire.extensions['.sbvr'] = (module: NodeModule, filename: string) =>\n\t\t(module.exports = fs.readFileSync(filename, 'utf8'));\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","module.exports = require(\"pg\");","'use strict'\n\nvar url = require('url')\nvar fs = require('fs')\n\n//Parse method copied from https://github.com/brianc/node-postgres\n//Copyright (c) 2010-2014 Brian Carlson (brian.m.carlson@gmail.com)\n//MIT License\n\n//parses a connection string\nfunction parse(str) {\n  //unix socket\n  if (str.charAt(0) === '/') {\n    var config = str.split(' ')\n    return { host: config[0], database: config[1] }\n  }\n\n  // url parse expects spaces encoded as %20\n  var result = url.parse(\n    / |%[^a-f0-9]|%[a-f0-9][^a-f0-9]/i.test(str) ? encodeURI(str).replace(/\\%25(\\d\\d)/g, '%$1') : str,\n    true\n  )\n  var config = result.query\n  for (var k in config) {\n    if (Array.isArray(config[k])) {\n      config[k] = config[k][config[k].length - 1]\n    }\n  }\n\n  var auth = (result.auth || ':').split(':')\n  config.user = auth[0]\n  config.password = auth.splice(1).join(':')\n\n  config.port = result.port\n  if (result.protocol == 'socket:') {\n    config.host = decodeURI(result.pathname)\n    config.database = result.query.db\n    config.client_encoding = result.query.encoding\n    return config\n  }\n  if (!config.host) {\n    // Only set the host if there is no equivalent query param.\n    config.host = result.hostname\n  }\n\n  // If the host is missing it might be a URL-encoded path to a socket.\n  var pathname = result.pathname\n  if (!config.host && pathname && /^%2f/i.test(pathname)) {\n    var pathnameSplit = pathname.split('/')\n    config.host = decodeURIComponent(pathnameSplit[0])\n    pathname = pathnameSplit.splice(1).join('/')\n  }\n  // result.pathname is not always guaranteed to have a '/' prefix (e.g. relative urls)\n  // only strip the slash if it is present.\n  if (pathname && pathname.charAt(0) === '/') {\n    pathname = pathname.slice(1) || null\n  }\n  config.database = pathname && decodeURI(pathname)\n\n  if (config.ssl === 'true' || config.ssl === '1') {\n    config.ssl = true\n  }\n\n  if (config.ssl === '0') {\n    config.ssl = false\n  }\n\n  if (config.sslcert || config.sslkey || config.sslrootcert || config.sslmode) {\n    config.ssl = {}\n  }\n\n  if (config.sslcert) {\n    config.ssl.cert = fs.readFileSync(config.sslcert).toString()\n  }\n\n  if (config.sslkey) {\n    config.ssl.key = fs.readFileSync(config.sslkey).toString()\n  }\n\n  if (config.sslrootcert) {\n    config.ssl.ca = fs.readFileSync(config.sslrootcert).toString()\n  }\n\n  switch (config.sslmode) {\n    case 'disable': {\n      config.ssl = false\n      break\n    }\n    case 'prefer':\n    case 'require':\n    case 'verify-ca':\n    case 'verify-full': {\n      break\n    }\n    case 'no-verify': {\n      config.ssl.rejectUnauthorized = false\n      break\n    }\n  }\n\n  return config\n}\n\nmodule.exports = parse\n\nparse.parse = parse\n","module.exports = require(\"url\");","module.exports = require(\"mysql\");","import type * as Express from 'express';\nimport type { AbstractSqlModel } from '@balena/abstract-sql-compiler';\nimport type { Database } from '../database-layer/db';\nimport type { Migration } from '../migrator/migrator';\nimport type { AnyObject, Resolvable } from '../sbvr-api/common-types';\n\nimport * as fs from 'fs';\nimport * as _ from 'lodash';\nimport * as path from 'path';\n\nimport * as sbvrUtils from '../sbvr-api/sbvr-utils';\n\nimport * as permissions from '../sbvr-api/permissions';\n\nexport type SetupFunction = (\n\tapp: Express.Application,\n\tsbvrUtilsInstance: typeof sbvrUtils,\n\tdb: Database,\n) => Resolvable<void>;\n\nexport interface Model {\n\tapiRoot?: string;\n\tmodelName?: string;\n\tmodelFile?: string;\n\tmodelText?: string;\n\tabstractSql?: AbstractSqlModel;\n\tmigrationsPath?: string;\n\tmigrations?: {\n\t\t[index: string]: Migration;\n\t};\n\tinitSqlPath?: string;\n\tinitSql?: string;\n\tcustomServerCode?:\n\t\t| string\n\t\t| {\n\t\t\t\tsetup: SetupFunction;\n\t\t  };\n\tlogging?: { [key in keyof Console | 'default']?: boolean };\n}\nexport interface User {\n\tusername: string;\n\tpassword: string;\n\tpermissions: string[];\n}\nexport interface Config {\n\tmodels: Model[];\n\tusers?: User[];\n}\n\nconst getOrCreate = async (\n\tauthApiTx: sbvrUtils.PinejsClient,\n\tresource: string,\n\tuniqueFields: AnyObject,\n\textraFields?: AnyObject,\n) => {\n\tconst result = (await authApiTx.get({\n\t\tresource,\n\t\tid: uniqueFields,\n\t\toptions: {\n\t\t\t$select: 'id',\n\t\t},\n\t})) as { id: number } | undefined;\n\tif (result != null) {\n\t\treturn result.id;\n\t}\n\tconst { id } = (await authApiTx.post({\n\t\tresource,\n\t\tbody: { ...uniqueFields, ...extraFields },\n\t\toptions: { returnResource: false },\n\t})) as { id: number };\n\treturn id;\n};\n\nconst getOrCreatePermission = async (\n\tauthApiTx: sbvrUtils.PinejsClient,\n\tpermissionName: string,\n) => {\n\ttry {\n\t\treturn await getOrCreate(authApiTx, 'permission', { name: permissionName });\n\t} catch (e) {\n\t\te.message = `Could not create or find permission \"${permissionName}\": ${e.message}`;\n\t\tthrow e;\n\t}\n};\n\n// Setup function\nexport const setup = (app: Express.Application) => {\n\tconst loadConfig = (data: Config): Promise<void> =>\n\t\tsbvrUtils.db.transaction(async (tx) => {\n\t\t\tconst authApiTx = sbvrUtils.api.Auth.clone({\n\t\t\t\tpassthrough: {\n\t\t\t\t\ttx,\n\t\t\t\t\treq: permissions.root,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tconst { users } = data;\n\t\t\tif (users != null) {\n\t\t\t\tconst permissionsCache: {\n\t\t\t\t\t[index: string]: Promise<number>;\n\t\t\t\t} = {};\n\t\t\t\tusers.forEach((user) => {\n\t\t\t\t\tif (user.permissions == null) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tuser.permissions.forEach((permissionName) => {\n\t\t\t\t\t\tif (permissionsCache[permissionName] != null) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpermissionsCache[permissionName] = getOrCreatePermission(\n\t\t\t\t\t\t\tauthApiTx,\n\t\t\t\t\t\t\tpermissionName,\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tawait Promise.all(\n\t\t\t\t\tusers.map(async (user) => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst userID = await getOrCreate(\n\t\t\t\t\t\t\t\tauthApiTx,\n\t\t\t\t\t\t\t\t'user',\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tusername: user.username,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tpassword: user.password,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (user.permissions != null) {\n\t\t\t\t\t\t\t\tawait Promise.all(\n\t\t\t\t\t\t\t\t\tuser.permissions.map(async (permissionName) => {\n\t\t\t\t\t\t\t\t\t\tconst permissionID = await permissionsCache[permissionName];\n\t\t\t\t\t\t\t\t\t\tawait getOrCreate(authApiTx, 'user__has__permission', {\n\t\t\t\t\t\t\t\t\t\t\tuser: userID,\n\t\t\t\t\t\t\t\t\t\t\tpermission: permissionID,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\te.message = `Could not create or find user \"${user.username}\": ${e.message}`;\n\t\t\t\t\t\t\tthrow e;\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tawait Promise.all(\n\t\t\t\tdata.models.map(async (model) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\t(model.abstractSql != null || model.modelText != null) &&\n\t\t\t\t\t\tmodel.apiRoot != null\n\t\t\t\t\t) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait sbvrUtils.executeModel(\n\t\t\t\t\t\t\t\ttx,\n\t\t\t\t\t\t\t\tmodel as sbvrUtils.ExecutableModel,\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tconst apiRoute = `/${model.apiRoot}/*`;\n\t\t\t\t\t\t\tapp.options(apiRoute, (_req, res) => res.sendStatus(200));\n\t\t\t\t\t\t\tapp.all(apiRoute, sbvrUtils.handleODataRequest);\n\n\t\t\t\t\t\t\tconsole.info(\n\t\t\t\t\t\t\t\t'Successfully executed ' + model.modelName + ' model.',\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tconst message = `Failed to execute ${model.modelName} model from ${model.modelFile}`;\n\t\t\t\t\t\t\tif (_.isError(err)) {\n\t\t\t\t\t\t\t\terr.message = message;\n\t\t\t\t\t\t\t\tthrow err;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthrow new Error(message);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (model.customServerCode != null) {\n\t\t\t\t\t\tlet customCode: SetupFunction;\n\t\t\t\t\t\tif (typeof model.customServerCode === 'string') {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tcustomCode = nodeRequire(model.customServerCode).setup;\n\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\te.message = `Error loading custom server code: '${e.message}'`;\n\t\t\t\t\t\t\t\tthrow e;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (_.isObject(model.customServerCode)) {\n\t\t\t\t\t\t\tcustomCode = model.customServerCode.setup;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t`Invalid type for customServerCode '${typeof model.customServerCode}'`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (typeof customCode !== 'function') {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tawait customCode(app, sbvrUtils, sbvrUtils.db);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\n\tconst loadConfigFile = async (configPath: string): Promise<Config> => {\n\t\tconsole.info('Loading config:', configPath);\n\t\treturn await import(configPath);\n\t};\n\n\tconst loadApplicationConfig = async (config: string | Config | undefined) => {\n\t\ttry {\n\t\t\tconsole.info('Loading application config');\n\t\t\tlet root: string;\n\t\t\tlet configObj: Config;\n\t\t\tif (config == null) {\n\t\t\t\troot = path.resolve(process.argv[2]) || __dirname;\n\t\t\t\tconfigObj = await loadConfigFile(path.join(root, 'config.json'));\n\t\t\t} else if (typeof config === 'string') {\n\t\t\t\troot = path.dirname(config);\n\t\t\t\tconfigObj = await loadConfigFile(config);\n\t\t\t} else if (_.isObject(config)) {\n\t\t\t\troot = process.cwd();\n\t\t\t\tconfigObj = config;\n\t\t\t} else {\n\t\t\t\tthrow new Error(`Invalid type for config '${typeof config}'`);\n\t\t\t}\n\t\t\tconst resolvePath = (s: string): string => {\n\t\t\t\tif (path.isAbsolute(s)) {\n\t\t\t\t\treturn s;\n\t\t\t\t}\n\t\t\t\treturn path.join(root, s);\n\t\t\t};\n\n\t\t\tawait Promise.all(\n\t\t\t\tconfigObj.models.map(async (model) => {\n\t\t\t\t\tif (model.modelFile != null) {\n\t\t\t\t\t\tmodel.modelText = await fs.promises.readFile(\n\t\t\t\t\t\t\tresolvePath(model.modelFile),\n\t\t\t\t\t\t\t'utf8',\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof model.customServerCode === 'string') {\n\t\t\t\t\t\tmodel.customServerCode = resolvePath(model.customServerCode);\n\t\t\t\t\t}\n\t\t\t\t\tmodel.migrations ??= {};\n\t\t\t\t\tconst { migrations } = model;\n\n\t\t\t\t\tif (model.migrationsPath) {\n\t\t\t\t\t\tconst migrationsPath = resolvePath(model.migrationsPath);\n\n\t\t\t\t\t\tconst fileNames = await fs.promises.readdir(migrationsPath);\n\t\t\t\t\t\tawait Promise.all(\n\t\t\t\t\t\t\tfileNames.map(async (filename) => {\n\t\t\t\t\t\t\t\tconst filePath = path.join(migrationsPath, filename);\n\t\t\t\t\t\t\t\tconst [migrationKey] = filename.split('-', 1);\n\n\t\t\t\t\t\t\t\tswitch (path.extname(filename)) {\n\t\t\t\t\t\t\t\t\tcase '.coffee':\n\t\t\t\t\t\t\t\t\tcase '.ts':\n\t\t\t\t\t\t\t\t\tcase '.js':\n\t\t\t\t\t\t\t\t\t\tmigrations[migrationKey] = nodeRequire(filePath);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase '.sql':\n\t\t\t\t\t\t\t\t\t\tmigrations[migrationKey] = await fs.promises.readFile(\n\t\t\t\t\t\t\t\t\t\t\tfilePath,\n\t\t\t\t\t\t\t\t\t\t\t'utf8',\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t\t\t\t\t\t`Unrecognised migration file extension, skipping: ${path.extname(\n\t\t\t\t\t\t\t\t\t\t\t\tfilename,\n\t\t\t\t\t\t\t\t\t\t\t)}`,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (model.initSqlPath) {\n\t\t\t\t\t\tconst initSqlPath = resolvePath(model.initSqlPath);\n\t\t\t\t\t\tmodel.initSql = await fs.promises.readFile(initSqlPath, 'utf8');\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t\tawait loadConfig(configObj);\n\t\t} catch (err) {\n\t\t\tconsole.error('Error loading application config', err, err.stack);\n\t\t\tprocess.exit(1);\n\t\t}\n\t};\n\n\treturn {\n\t\tloadConfig,\n\t\tloadApplicationConfig,\n\t};\n};\n","module.exports = require(\"path\");","import type * as Fs from 'fs';\n\nimport * as _ from 'lodash';\n\nconst cacheFile = process.env.PINEJS_CACHE_FILE || '.pinejs-cache.json';\nlet cache: null | {\n\t[name: string]: {\n\t\t[version: string]: {\n\t\t\t[srcJson: string]: any;\n\t\t};\n\t};\n} = null;\nlet fs: undefined | typeof Fs;\ntry {\n\t// tslint:disable-next-line:no-var-requires\n\tfs = require('fs');\n} catch (e) {\n\t// Ignore error\n}\n\nconst SAVE_DEBOUNCE_TIME = 5000;\n\nconst saveCache = _.debounce(() => {\n\tif (fs != null) {\n\t\tfs.writeFile(cacheFile, JSON.stringify(cache), 'utf8', (err) => {\n\t\t\tif (err) {\n\t\t\t\tconsole.warn('Error saving pinejs cache:', err);\n\t\t\t}\n\t\t});\n\t}\n}, SAVE_DEBOUNCE_TIME);\n\nconst clearCache = _.debounce(() => {\n\tcache = null;\n}, SAVE_DEBOUNCE_TIME * 2);\n\nexport const cachedCompile = <T>(\n\tname: string,\n\tversion: string,\n\tsrc: any,\n\tfn: () => T,\n): T => {\n\tif (cache == null) {\n\t\tif (fs != null) {\n\t\t\ttry {\n\t\t\t\tcache = JSON.parse(fs.readFileSync(cacheFile, 'utf8'));\n\t\t\t} catch (e) {\n\t\t\t\t// Ignore error\n\t\t\t}\n\t\t}\n\t\tcache ??= {};\n\t}\n\tconst key = [name, version, JSON.stringify(src)];\n\tlet result = _.get(cache, key);\n\tif (result == null) {\n\t\tresult = fn();\n\t\t_.set(cache, key, result);\n\t\tsaveCache();\n\t}\n\t// Schedule clearing the cache once we have made use of it since it usually means we're\n\t// done with it and it allows us to free up the memory - if it does end up being\n\t// requested again after being cleared then it will just trigger a reload of the cache\n\t// but that should be a rare case, as long as the clear timeout is a reasonable length\n\tclearCache();\n\treturn _.cloneDeep(result);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validate = exports.nativeFactTypes = exports.types = void 0;\nconst TypeUtils = require(\"../type-utils\");\nexports.types = {\n    postgres: 'BIGINT',\n    mysql: 'BIGINT',\n    websql: 'BIGINT',\n    odata: {\n        name: 'Edm.Int64',\n    },\n};\nexports.nativeFactTypes = {\n    Integer: TypeUtils.nativeFactTypeTemplates.comparison,\n    Real: TypeUtils.nativeFactTypeTemplates.comparison,\n};\nexports.validate = TypeUtils.validate.integer;\n//# sourceMappingURL=big-integer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validate = exports.fetchProcessing = exports.types = void 0;\nconst TypeUtils = require(\"../type-utils\");\nconst typeFunc = (necessity, index, defaultValue = ' DEFAULT 0') => 'INTEGER' + defaultValue + necessity + index;\ntypeFunc.castType = 'INTEGER';\nexports.types = {\n    postgres: typeFunc,\n    mysql: typeFunc,\n    websql: typeFunc,\n    odata: {\n        name: 'Edm.Boolean',\n    },\n};\nconst fetchProcessing = (data) => data === true || data === 1;\nexports.fetchProcessing = fetchProcessing;\nexports.validate = TypeUtils.validate.checkRequired((originalValue) => {\n    const value = Number(originalValue);\n    if (Number.isNaN(value) || ![0, 1].includes(value)) {\n        throw new Error(`is not a boolean: ${JSON.stringify(originalValue)} (${typeof originalValue})`);\n    }\n    return value;\n});\n//# sourceMappingURL=boolean.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validate = exports.types = void 0;\nconst TypeUtils = require(\"../type-utils\");\nexports.types = {\n    postgres: 'CITEXT',\n    mysql: 'TEXT COLLATE utf8_unicode_ci',\n    websql: 'TEXT COLLATE NOCASE',\n    odata: {\n        name: 'Edm.String',\n    },\n};\nexports.validate = TypeUtils.validate.text();\n//# sourceMappingURL=case-insensitive-text.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validate = exports.fetchProcessing = exports.nativeProperties = exports.types = void 0;\nconst TypeUtils = require(\"../type-utils\");\nexports.types = {\n    postgres: 'INTEGER',\n    mysql: 'INTEGER',\n    websql: 'INTEGER',\n    odata: {\n        name: 'Self.Color',\n        complexType: `\\\n<ComplexType Name=\"Color\">\n\t<Property Name=\"r\" Nullable=\"false\" Type=\"Edm.Int8\"/>\\\n\t<Property Name=\"g\" Nullable=\"false\" Type=\"Edm.Int8\"/>\\\n\t<Property Name=\"b\" Nullable=\"false\" Type=\"Edm.Int8\"/>\\\n\t<Property Name=\"a\" Nullable=\"false\" Type=\"Edm.Int8\"/>\\\n</ComplexType>`,\n    },\n};\nexports.nativeProperties = {\n    has: {\n        'Red Component': (from) => [\n            'BitwiseAnd',\n            ['BitwiseShiftRight', from, 16],\n            255,\n        ],\n        'Green Component': (from) => [\n            'BitwiseAnd',\n            ['BitwiseShiftRight', from, 8],\n            255,\n        ],\n        'Blue Component': (from) => ['BitwiseShiftRight', from, 255],\n        'Alpha Component': (from) => [\n            'BitwiseAnd',\n            ['BitwiseShiftRight', from, 24],\n            255,\n        ],\n    },\n};\nconst fetchProcessing = (data) => {\n    return {\n        r: (data >> 16) & 0xff,\n        g: (data >> 8) & 0xff,\n        b: data & 0xff,\n        a: (data >> 24) & 0xff,\n    };\n};\nexports.fetchProcessing = fetchProcessing;\nexports.validate = TypeUtils.validate.checkRequired((value) => {\n    let processedValue;\n    if (typeof value !== 'object') {\n        processedValue = parseInt(value, 10);\n        if (Number.isNaN(processedValue)) {\n            throw new Error('is neither an integer or color object: ' + value);\n        }\n    }\n    else {\n        processedValue = 0;\n        Object.keys(value).forEach((component) => {\n            const componentValue = value[component];\n            if (Number.isNaN(componentValue) || componentValue > 255) {\n                throw new Error('has invalid component value of ' +\n                    componentValue +\n                    ' for component ' +\n                    component);\n            }\n            switch (component.toLowerCase()) {\n                case 'r':\n                case 'red':\n                    processedValue |= componentValue << 16;\n                    break;\n                case 'g':\n                case 'green':\n                    processedValue |= componentValue << 8;\n                    break;\n                case 'b':\n                case 'blue':\n                    processedValue |= componentValue;\n                    break;\n                case 'a':\n                case 'alpha':\n                    processedValue |= componentValue << 24;\n                    break;\n                default:\n                    throw new Error('has an unknown component: ' + component);\n            }\n        });\n    }\n    return processedValue;\n});\n//# sourceMappingURL=color.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validate = exports.nativeFactTypes = exports.types = void 0;\nconst TypeUtils = require(\"../type-utils\");\nexports.types = {\n    postgres: 'INTEGER',\n    mysql: 'INTEGER',\n    websql: 'INTEGER',\n    odata: {\n        name: 'Edm.Int64',\n    },\n};\nexports.nativeFactTypes = {\n    Integer: TypeUtils.nativeFactTypeTemplates.comparison,\n    Real: TypeUtils.nativeFactTypeTemplates.comparison,\n};\nexports.validate = TypeUtils.validate.integer;\n//# sourceMappingURL=concept-type.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validate = exports.nativeFactTypes = exports.fetchProcessing = exports.types = void 0;\nconst TypeUtils = require(\"../type-utils\");\nexports.types = {\n    postgres: 'DATE',\n    mysql: 'DATE',\n    websql: 'INTEGER',\n    odata: {\n        name: 'Edm.DateTime',\n    },\n};\nconst fetchProcessing = (data) => {\n    if (data != null) {\n        return new Date(data);\n    }\n    return data;\n};\nexports.fetchProcessing = fetchProcessing;\nexports.nativeFactTypes = {\n    Date: {\n        ...TypeUtils.nativeFactTypeTemplates.equality,\n        'is before': (from, to) => ['LessThan', from, to],\n    },\n};\nexports.validate = TypeUtils.validate.date;\n//# sourceMappingURL=date.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validate = exports.nativeNames = exports.nativeFactTypes = exports.fetchProcessing = exports.types = void 0;\nconst TypeUtils = require(\"../type-utils\");\nexports.types = {\n    postgres: 'TIMESTAMP',\n    mysql: 'TIMESTAMP',\n    websql: 'INTEGER',\n    odata: {\n        name: 'Edm.DateTime',\n    },\n};\nconst fetchProcessing = (data) => {\n    if (data != null) {\n        return new Date(data);\n    }\n    return data;\n};\nexports.fetchProcessing = fetchProcessing;\nexports.nativeFactTypes = {\n    'Date Time': {\n        ...TypeUtils.nativeFactTypeTemplates.equality,\n        'is before': (from, to) => ['LessThan', from, to],\n    },\n};\nexports.nativeNames = {\n    'Current Time': ['Now'],\n};\nexports.validate = TypeUtils.validate.date;\n//# sourceMappingURL=date-time.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validate = exports.types = void 0;\nconst TypeUtils = require(\"../type-utils\");\nexports.types = {\n    postgres: 'BYTEA',\n    mysql: 'BLOB',\n    websql: 'BLOB',\n    odata: {\n        name: 'Edm.String',\n    },\n};\nexports.validate = TypeUtils.validate.checkRequired((value) => {\n    if (Buffer.isBuffer(value)) {\n        return value;\n    }\n    if (typeof value !== 'string') {\n        throw new Error(`could not be converted to binary: ${typeof value}`);\n    }\n    if (value.length % 2 !== 0) {\n        throw new Error('could not be converted to binary: hex string must have an even length');\n    }\n    if (!/^[a-fA-F0-9]*$/.test(value)) {\n        throw new Error('could not be converted to binary: hex string must contain only hex characters');\n    }\n    try {\n        return new Buffer(value, 'hex');\n    }\n    catch (e) {\n        throw new Error(`could not be converted to binary: ${e.message}`);\n    }\n});\n//# sourceMappingURL=file.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validate = exports.nativeFactTypes = exports.types = void 0;\nconst TypeUtils = require(\"../type-utils\");\nexports.types = {\n    postgres: 'INTEGER',\n    mysql: 'INTEGER',\n    websql: 'INTEGER',\n    odata: {\n        name: 'Edm.Int64',\n    },\n};\nexports.nativeFactTypes = {\n    Integer: TypeUtils.nativeFactTypeTemplates.comparison,\n    Real: TypeUtils.nativeFactTypeTemplates.comparison,\n};\nexports.validate = TypeUtils.validate.integer;\n//# sourceMappingURL=foreign-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.compare = exports.validate = exports.types = void 0;\nconst TypeUtils = require(\"../type-utils\");\nlet bcrypt;\ntry {\n    bcrypt = require('bcrypt');\n}\ncatch (_a) {\n    bcrypt = require('bcryptjs');\n}\nexports.types = {\n    postgres: 'CHAR(60)',\n    mysql: 'CHAR(60)',\n    websql: 'CHAR(60)',\n    odata: {\n        name: 'Edm.String',\n    },\n};\nexports.validate = TypeUtils.validate.checkRequired(async (value) => {\n    if (typeof value !== 'string') {\n        throw new Error('is not a string');\n    }\n    const salt = await bcrypt.genSalt();\n    return bcrypt.hash(value, salt);\n});\nexports.compare = bcrypt.compare.bind(bcrypt);\n//# sourceMappingURL=hashed.js.map","module.exports = require(\"bcrypt\");","module.exports = require(\"bcryptjs\");","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validate = exports.nativeFactTypes = exports.types = void 0;\nconst TypeUtils = require(\"../type-utils\");\nexports.types = {\n    postgres: 'INTEGER',\n    mysql: 'INTEGER',\n    websql: 'INTEGER',\n    odata: {\n        name: 'Edm.Int32',\n    },\n};\nexports.nativeFactTypes = {\n    Integer: TypeUtils.nativeFactTypeTemplates.comparison,\n    Real: TypeUtils.nativeFactTypeTemplates.comparison,\n};\nexports.validate = TypeUtils.validate.integer;\n//# sourceMappingURL=integer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validate = exports.types = void 0;\nconst TypeUtils = require(\"../type-utils\");\nexports.types = {\n    postgres: 'INTERVAL',\n    mysql: 'INTEGER',\n    websql: 'INTEGER',\n    odata: {\n        name: 'Edm.Int64',\n    },\n};\nexports.validate = TypeUtils.validate.integer;\n//# sourceMappingURL=interval.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validate = exports.fetchProcessing = exports.types = void 0;\nconst TypeUtils = require(\"../type-utils\");\nexports.types = {\n    postgres: 'TEXT',\n    mysql: 'TEXT',\n    websql: 'TEXT',\n    odata: {\n        name: 'Edm.String',\n    },\n};\nconst fetchProcessing = (data) => JSON.parse(data);\nexports.fetchProcessing = fetchProcessing;\nexports.validate = TypeUtils.validate.checkRequired((value) => {\n    try {\n        return JSON.stringify(value);\n    }\n    catch (_a) {\n        throw new Error('cannot be turned into JSON: ' + value);\n    }\n});\n//# sourceMappingURL=json.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validate = exports.nativeFactTypes = exports.types = void 0;\nconst TypeUtils = require(\"../type-utils\");\nexports.types = {\n    postgres: 'REAL',\n    mysql: 'REAL',\n    websql: 'REAL',\n    odata: {\n        name: 'Edm.Double',\n    },\n};\nexports.nativeFactTypes = {\n    Integer: TypeUtils.nativeFactTypeTemplates.comparison,\n    Real: TypeUtils.nativeFactTypeTemplates.comparison,\n};\nexports.validate = TypeUtils.validate.checkRequired((value) => {\n    const processedValue = parseFloat(value);\n    if (Number.isNaN(processedValue)) {\n        throw new Error('is not a number: ' + value);\n    }\n    return processedValue;\n});\n//# sourceMappingURL=real.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validate = exports.types = void 0;\nconst TypeUtils = require(\"../type-utils\");\nconst mysqlType = (necessity, index, defaultValue = '') => 'INTEGER' + defaultValue + necessity + index + ' AUTO_INCREMENT';\nmysqlType.castType = 'INTEGER';\nconst websqlType = (necessity, index, defaultValue = '') => 'INTEGER' + defaultValue + necessity + index + ' AUTOINCREMENT';\nwebsqlType.castType = 'INTEGER';\nexports.types = {\n    postgres: 'SERIAL',\n    mysql: mysqlType,\n    websql: websqlType,\n    odata: {\n        name: 'Edm.Int64',\n    },\n};\nexports.validate = TypeUtils.validate.integer;\n//# sourceMappingURL=serial.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.compare = exports.validate = exports.validateSync = exports.types = void 0;\nconst TypeUtils = require(\"../type-utils\");\nlet sha256;\ntry {\n    const crypto = require('crypto');\n    sha256 = (value) => {\n        const hash = crypto.createHash('sha256');\n        hash.update(value);\n        return `$sha256$${hash.digest('base64')}`;\n    };\n}\ncatch (_a) {\n    const shajs = require('sha.js');\n    sha256 = (value) => {\n        const hash = shajs('sha256');\n        hash.update(value);\n        return `$sha256$${hash.digest('base64')}`;\n    };\n}\nexports.types = {\n    postgres: 'CHAR(54)',\n    mysql: 'CHAR(54)',\n    websql: 'CHAR(54)',\n    odata: {\n        name: 'Edm.String',\n    },\n};\nexports.validateSync = sha256;\nexports.validate = TypeUtils.validate.checkRequired((value) => {\n    if (typeof value !== 'string') {\n        throw new Error('is not a string');\n    }\n    return sha256(value);\n});\nconst compare = async (value, result) => {\n    return sha256(value) === result;\n};\nexports.compare = compare;\n//# sourceMappingURL=sha.js.map","var exports = module.exports = function SHA (algorithm) {\n  algorithm = algorithm.toLowerCase()\n\n  var Algorithm = exports[algorithm]\n  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')\n\n  return new Algorithm()\n}\n\nexports.sha = require('./sha')\nexports.sha1 = require('./sha1')\nexports.sha224 = require('./sha224')\nexports.sha256 = require('./sha256')\nexports.sha384 = require('./sha384')\nexports.sha512 = require('./sha512')\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined\n * in FIPS PUB 180-1\n * This source code is derived from sha1.js of the same repository.\n * The difference between SHA-0 and SHA-1 is just a bitwise rotate left\n * operation was added.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha, Hash)\n\nSha.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha\n","module.exports = require(\"util\");","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","module.exports = require(\"buffer\");","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS PUB 180-1\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha1 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha1, Hash)\n\nSha1.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl1 (num) {\n  return (num << 1) | (num >>> 31)\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha1.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha1.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha1\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Sha256 = require('./sha256')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar W = new Array(64)\n\nfunction Sha224 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha224, Sha256)\n\nSha224.prototype.init = function () {\n  this._a = 0xc1059ed8\n  this._b = 0x367cd507\n  this._c = 0x3070dd17\n  this._d = 0xf70e5939\n  this._e = 0xffc00b31\n  this._f = 0x68581511\n  this._g = 0x64f98fa7\n  this._h = 0xbefa4fa4\n\n  return this\n}\n\nSha224.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(28)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n\n  return H\n}\n\nmodule.exports = Sha224\n","var inherits = require('inherits')\nvar SHA512 = require('./sha512')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar W = new Array(160)\n\nfunction Sha384 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha384, SHA512)\n\nSha384.prototype.init = function () {\n  this._ah = 0xcbbb9d5d\n  this._bh = 0x629a292a\n  this._ch = 0x9159015a\n  this._dh = 0x152fecd8\n  this._eh = 0x67332667\n  this._fh = 0x8eb44a87\n  this._gh = 0xdb0c2e0d\n  this._hh = 0x47b5481d\n\n  this._al = 0xc1059ed8\n  this._bl = 0x367cd507\n  this._cl = 0x3070dd17\n  this._dl = 0xf70e5939\n  this._el = 0xffc00b31\n  this._fl = 0x68581511\n  this._gl = 0x64f98fa7\n  this._hl = 0xbefa4fa4\n\n  return this\n}\n\nSha384.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(48)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n\n  return H\n}\n\nmodule.exports = Sha384\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validate = exports.types = void 0;\nconst TypeUtils = require(\"../type-utils\");\nexports.types = {\n    postgres: 'VARCHAR(255)',\n    mysql: 'VARCHAR(255)',\n    websql: 'VARCHAR(255)',\n    odata: {\n        name: 'Edm.String',\n    },\n};\nexports.validate = TypeUtils.validate.text(255);\n//# sourceMappingURL=short-text.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validate = exports.nativeFactTypes = exports.nativeProperties = exports.types = void 0;\nconst TypeUtils = require(\"../type-utils\");\nexports.types = {\n    postgres: 'TEXT',\n    mysql: 'TEXT',\n    websql: 'TEXT',\n    odata: {\n        name: 'Edm.String',\n    },\n};\nexports.nativeProperties = {\n    has: {\n        Length: (from) => ['CharacterLength', from],\n    },\n};\nexports.nativeFactTypes = {\n    Text: {\n        ...TypeUtils.nativeFactTypeTemplates.equality,\n        'starts with': (from, to) => ['Startswith', from, to],\n        'ends with': (from, to) => ['Endswith', from, to],\n        contains: (from, to) => ['Contains', from, to],\n    },\n};\nexports.validate = TypeUtils.validate.text();\n//# sourceMappingURL=text.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validate = exports.fetchProcessing = exports.types = void 0;\nconst TypeUtils = require(\"../type-utils\");\nexports.types = {\n    postgres: 'TIME',\n    mysql: 'TIME',\n    websql: 'INTEGER',\n    odata: {\n        name: 'Edm.DateTime',\n    },\n};\nconst fetchProcessing = (data) => {\n    if (data != null) {\n        return new Date('Thu, 01 Jan 1970 ' + data);\n    }\n    return data;\n};\nexports.fetchProcessing = fetchProcessing;\nconst validate = async (value, required) => {\n    const date = await TypeUtils.validate.date(value, required);\n    if (date == null) {\n        return date;\n    }\n    return date.toLocaleTimeString();\n};\nexports.validate = validate;\n//# sourceMappingURL=time.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.optimizeSchema = exports.Engines = void 0;\nvar Engines;\n(function (Engines) {\n    Engines[\"postgres\"] = \"postgres\";\n    Engines[\"mysql\"] = \"mysql\";\n    Engines[\"websql\"] = \"websql\";\n})(Engines = exports.Engines || (exports.Engines = {}));\nconst AbstractSQLOptimiser_1 = require(\"./AbstractSQLOptimiser\");\nconst sbvrTypes = require(\"@balena/sbvr-types\");\nconst _ = require(\"lodash\");\nconst AbstractSQLCompiler_1 = require(\"./AbstractSQLCompiler\");\nconst countFroms = (n) => {\n    let count = 0;\n    n.forEach((p) => {\n        if (Array.isArray(p)) {\n            if (AbstractSQLCompiler_1.isFromNode(p)) {\n                count++;\n            }\n            else {\n                count += countFroms(p);\n            }\n        }\n    });\n    return count;\n};\nconst optimizeSchema = (abstractSqlModel) => {\n    abstractSqlModel.rules = abstractSqlModel.rules\n        .map((rule) => {\n        var _a;\n        const ruleBodyNode = rule.find((r) => r[0] === 'Body');\n        if (ruleBodyNode == null || typeof ruleBodyNode === 'string') {\n            throw new Error('Invalid rule');\n        }\n        let ruleBody = ruleBodyNode[1];\n        if (typeof ruleBody === 'string') {\n            throw new Error('Invalid rule');\n        }\n        const ruleSENode = rule.find((r) => r[0] === 'StructuredEnglish');\n        if (ruleSENode == null) {\n            throw new Error('Invalid structured English');\n        }\n        const ruleSE = ruleSENode[1];\n        if (typeof ruleSE !== 'string') {\n            throw new Error('Invalid structured English');\n        }\n        ruleBodyNode[1] = ruleBody = AbstractSQLOptimiser_1.AbstractSQLOptimiser(ruleBody, true);\n        const count = countFroms(ruleBody);\n        if (count === 1 &&\n            ruleBody[0] === 'NotExists' &&\n            ruleBody[1][0] === 'SelectQuery') {\n            const selectQueryNodes = ruleBody[1].slice(1);\n            if (selectQueryNodes.every((n) => ['Select', 'From', 'Where'].includes(n[0]))) {\n                let fromNode = selectQueryNodes.find(AbstractSQLCompiler_1.isFromNode)[1];\n                if (fromNode[0] === 'Alias') {\n                    fromNode = fromNode[1];\n                }\n                if (fromNode[0] === 'Table') {\n                    const whereNodes = selectQueryNodes.filter((n) => n[0] === 'Where');\n                    let whereNode;\n                    if (whereNodes.length > 1) {\n                        whereNode = ['And', ...whereNodes.map((n) => n[1])];\n                    }\n                    else {\n                        whereNode = whereNodes[0][1];\n                    }\n                    whereNode = ['Not', whereNode];\n                    const convertReferencedFieldsToFields = (n) => {\n                        n.forEach((p, i) => {\n                            if (Array.isArray(p)) {\n                                if (p[0] === 'ReferencedField') {\n                                    n[i] = ['Field', p[2]];\n                                }\n                                else {\n                                    convertReferencedFieldsToFields(p);\n                                }\n                            }\n                        });\n                    };\n                    convertReferencedFieldsToFields(whereNode);\n                    const tableName = fromNode[1];\n                    const sha = sbvrTypes.SHA.validateSync(`${tableName}$${JSON.stringify(ruleBody)}`).replace(/^\\$sha256\\$/, '');\n                    const table = _.find(abstractSqlModel.tables, (t) => t.name === tableName);\n                    if (table) {\n                        (_a = table.checks) !== null && _a !== void 0 ? _a : (table.checks = []);\n                        table.checks.push({\n                            description: ruleSE,\n                            name: `${tableName.slice(0, 30)}$${sha}`.slice(0, 63),\n                            abstractSql: whereNode,\n                        });\n                        return;\n                    }\n                }\n            }\n        }\n        return rule;\n    })\n        .filter((v) => v != null);\n    return abstractSqlModel;\n};\nexports.optimizeSchema = optimizeSchema;\n//# sourceMappingURL=AbstractSQLSchemaOptimiser.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getModifiedFields = exports.getRuleReferencedFields = exports.getReferencedFields = void 0;\nconst _ = require(\"lodash\");\nconst AbstractSQLCompiler_1 = require(\"./AbstractSQLCompiler\");\nconst AbstractSQLOptimiser_1 = require(\"./AbstractSQLOptimiser\");\nconst getReferencedFields = (ruleBody) => {\n    const referencedFields = exports.getRuleReferencedFields(ruleBody);\n    return _.mapValues(referencedFields, ({ update }) => _.uniq(update));\n};\nexports.getReferencedFields = getReferencedFields;\nvar IsSafe;\n(function (IsSafe) {\n    IsSafe[\"Insert\"] = \"ins\";\n    IsSafe[\"Delete\"] = \"del\";\n    IsSafe[\"Unknown\"] = \"\";\n})(IsSafe || (IsSafe = {}));\nconst getRuleReferencedScope = (rulePart, scope, isSafe) => {\n    scope = { ...scope };\n    const fromNodes = rulePart.filter(AbstractSQLCompiler_1.isFromNode);\n    fromNodes.forEach((node) => {\n        const nested = node[1];\n        if (nested[0] === 'Alias') {\n            const [, from, alias] = nested;\n            if (typeof alias !== 'string') {\n                throw new Error('Cannot handle non-string aliases');\n            }\n            switch (from[0]) {\n                case 'Table':\n                    scope[alias] = { tableName: from[1], isSafe };\n                    break;\n                case 'SelectQuery':\n                    scope[alias] = { tableName: '', isSafe };\n                    break;\n                default:\n                    throw new Error(`Cannot handle aliased ${from[0]} nodes`);\n            }\n        }\n        else if (nested[0] === 'Table') {\n            scope[nested[1]] = { tableName: nested[1], isSafe };\n        }\n        else {\n            throw Error(`Unsupported FromNode for scoping: ${nested[0]}`);\n        }\n    });\n    return scope;\n};\nconst $getRuleReferencedFields = (referencedFields, rulePart, isSafe, scope = {}) => {\n    if (!Array.isArray(rulePart)) {\n        return;\n    }\n    switch (rulePart[0]) {\n        case 'SelectQuery':\n            scope = getRuleReferencedScope(rulePart, scope, isSafe);\n            rulePart.forEach((node) => {\n                $getRuleReferencedFields(referencedFields, node, isSafe, scope);\n            });\n            return;\n        case 'ReferencedField':\n            const aliasName = rulePart[1];\n            const fieldName = rulePart[2];\n            if (typeof aliasName !== 'string' || typeof fieldName !== 'string') {\n                throw new Error(`Invalid ReferencedField: ${rulePart}`);\n            }\n            const a = scope[aliasName];\n            if (a.tableName !== '') {\n                if (referencedFields[a.tableName] == null) {\n                    referencedFields[a.tableName] = {\n                        create: [],\n                        update: [],\n                        delete: [],\n                    };\n                }\n                if (a.isSafe !== IsSafe.Insert) {\n                    referencedFields[a.tableName].create.push(fieldName);\n                }\n                if (a.isSafe !== IsSafe.Delete) {\n                    referencedFields[a.tableName].delete.push(fieldName);\n                }\n                referencedFields[a.tableName].update.push(fieldName);\n            }\n            return;\n        case 'Field':\n            throw new Error('Cannot find queried fields for unreferenced fields');\n        case 'Not':\n        case 'NotExists':\n            if (isSafe === IsSafe.Insert) {\n                isSafe = IsSafe.Delete;\n            }\n            else if (isSafe === IsSafe.Delete) {\n                isSafe = IsSafe.Insert;\n            }\n        case 'Where':\n        case 'And':\n        case 'Exists':\n            rulePart.forEach((node) => {\n                $getRuleReferencedFields(referencedFields, node, isSafe, scope);\n            });\n            return;\n        default:\n            rulePart.forEach((node) => {\n                $getRuleReferencedFields(referencedFields, node, IsSafe.Unknown, scope);\n            });\n    }\n};\nconst getRuleReferencedFields = (ruleBody) => {\n    ruleBody = AbstractSQLOptimiser_1.AbstractSQLOptimiser(ruleBody);\n    const referencedFields = {};\n    $getRuleReferencedFields(referencedFields, ruleBody, IsSafe.Insert);\n    for (const tableName of Object.keys(referencedFields)) {\n        const tableRefs = referencedFields[tableName];\n        for (const method of Object.keys(tableRefs)) {\n            tableRefs[method] = _.uniq(tableRefs[method]);\n        }\n    }\n    return referencedFields;\n};\nexports.getRuleReferencedFields = getRuleReferencedFields;\nconst checkQuery = (query) => {\n    const queryType = query[0];\n    if (!['InsertQuery', 'UpdateQuery', 'DeleteQuery'].includes(queryType)) {\n        return;\n    }\n    const froms = query.filter(AbstractSQLCompiler_1.isFromNode);\n    if (froms.length !== 1) {\n        return;\n    }\n    const table = froms[0][1];\n    let tableName;\n    if (table[0] === 'Table') {\n        tableName = table[1];\n    }\n    else if (typeof table === 'string') {\n        tableName = table;\n    }\n    else {\n        return;\n    }\n    if (queryType === 'InsertQuery') {\n        return { table: tableName, action: 'create' };\n    }\n    if (queryType === 'DeleteQuery') {\n        return { table: tableName, action: 'delete' };\n    }\n    const fields = _(query)\n        .filter((v) => v != null && v[0] === 'Fields')\n        .flatMap((v) => v[1])\n        .value();\n    return { table: tableName, action: 'update', fields };\n};\nconst getModifiedFields = (abstractSqlQuery) => {\n    if (abstractSqlQuery[0] === 'UpsertQuery') {\n        return abstractSqlQuery.slice(1).map(checkQuery);\n    }\n    else if (Array.isArray(abstractSqlQuery[0])) {\n        return abstractSqlQuery.map(checkQuery);\n    }\n    else {\n        return checkQuery(abstractSqlQuery);\n    }\n};\nexports.getModifiedFields = getModifiedFields;\n//# sourceMappingURL=referenced-fields.js.map","const { LF2AbstractSQLPrep } = require('./lf-to-abstract-sql-prep');\nconst { LF2AbstractSQL } = require('./lf-to-abstract-sql');\nmodule.exports = {\n\tLF2AbstractSQLPrep: LF2AbstractSQLPrep,\n\tLF2AbstractSQL: LF2AbstractSQL,\n\ttranslate: function (lf, types) {\n\t\tlf = LF2AbstractSQLPrep.match(lf, 'Process');\n\t\tvar translator = LF2AbstractSQL.createInstance();\n\t\ttranslator.addTypes(types);\n\t\treturn translator.match(lf, 'Process');\n\t},\n\tcreateTranslator: function (types) {\n\t\tvar translator = LF2AbstractSQL.createInstance();\n\t\ttranslator.addTypes(types);\n\t\treturn function (lf) {\n\t\t\tlf = LF2AbstractSQLPrep.match(lf, 'Process');\n\t\t\ttranslator.reset();\n\t\t\treturn translator.match(lf, 'Process');\n\t\t};\n\t},\n};\n","var OMeta = require(\"ometa-js/lib/ometajs/core\"), SBVRCompilerLibs = require(\"./sbvr-compiler-libs\").SBVRCompilerLibs, LFOptimiser = require(\"@balena/sbvr-parser/lf-optimiser\").LFOptimiser, LF2AbstractSQLPrep = exports.LF2AbstractSQLPrep = LFOptimiser._extend({\n    AttrConceptType: function(termName) {\n        var $elf = this, _fromIdx = this.input.idx, conceptType;\n        conceptType = LFOptimiser._superApplyWithArgs(this, \"AttrConceptType\", termName);\n        this._opt(function() {\n            this._pred(!1 === this.primitives[termName] && !1 !== this.primitives[conceptType]);\n            this.primitives[conceptType] = !1;\n            return this._apply(\"SetHelped\");\n        });\n        return conceptType;\n    },\n    AttrDatabaseAttribute: function(termOrFactType) {\n        var $elf = this, _fromIdx = this.input.idx, attrVal, newAttrVal;\n        attrVal = this.anything();\n        newAttrVal = \"Term\" == termOrFactType[0] && (!this.attributes.hasOwnProperty(termOrFactType[3]) || !0 === this.attributes[termOrFactType[3]]) || \"FactType\" == termOrFactType[0] && 4 == termOrFactType.length && (!this.attributes.hasOwnProperty(termOrFactType[3]) || !0 === this.attributes[termOrFactType[3]]) && this.primitives.hasOwnProperty(termOrFactType[3]) && !1 !== this.primitives[termOrFactType[3]];\n        this.attributes[termOrFactType] = newAttrVal;\n        this._opt(function() {\n            this._pred(newAttrVal != attrVal);\n            return this._apply(\"SetHelped\");\n        });\n        return newAttrVal;\n    },\n    AttrDatabasePrimitive: function(termOrFactType) {\n        var $elf = this, _fromIdx = this.input.idx, attrVal, newAttrVal;\n        attrVal = this.anything();\n        newAttrVal = attrVal;\n        this._opt(function() {\n            this._pred(this.primitives.hasOwnProperty(termOrFactType));\n            newAttrVal = this.primitives[termOrFactType];\n            this._pred(newAttrVal != attrVal);\n            return this._apply(\"SetHelped\");\n        });\n        this.primitives[termOrFactType] = newAttrVal;\n        return newAttrVal;\n    },\n    AttrTermForm: function(factType) {\n        var $elf = this, _fromIdx = this.input.idx;\n        this.termForms[factType] = !0;\n        return this.anything();\n    },\n    UniversalQuantification: function() {\n        var $elf = this, _fromIdx = this.input.idx, v, xs;\n        v = this._applyWithArgs(\"token\", \"Variable\");\n        xs = this._many(function() {\n            return this._apply(\"trans\");\n        });\n        this._apply(\"SetHelped\");\n        return [ \"LogicalNegation\", [ \"ExistentialQuantification\", v, [ \"LogicalNegation\" ].concat(xs) ] ];\n    },\n    AtMostNQuantification: function() {\n        var $elf = this, _fromIdx = this.input.idx, maxCard, v, xs;\n        maxCard = this._applyWithArgs(\"token\", \"MaximumCardinality\");\n        v = this._applyWithArgs(\"token\", \"Variable\");\n        xs = this._many(function() {\n            return this._apply(\"trans\");\n        });\n        this._apply(\"SetHelped\");\n        maxCard[1][1]++;\n        return [ \"LogicalNegation\", [ \"AtLeastNQuantification\", [ \"MinimumCardinality\", maxCard[1] ], v ].concat(xs) ];\n    },\n    CardinalityOptimisation2: function(v1) {\n        var $elf = this, _fromIdx = this.input.idx, actualFactType, atomicForm, card, factType, required, v2;\n        this._pred(3 == v1.length);\n        required = this._or(function() {\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"ExactQuantification\");\n                card = this._applyWithArgs(\"token\", \"Cardinality\");\n                this._pred(1 == card[1][1]);\n                v2 = this._applyWithArgs(\"token\", \"Variable\");\n                return atomicForm = this._applyWithArgs(\"token\", \"AtomicFormulation\");\n            });\n            return !0;\n        }, function() {\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"AtMostNQuantification\");\n                card = this._applyWithArgs(\"token\", \"MaximumCardinality\");\n                this._pred(1 == card[1][1]);\n                v2 = this._applyWithArgs(\"token\", \"Variable\");\n                return atomicForm = this._applyWithArgs(\"token\", \"AtomicFormulation\");\n            });\n            return !1;\n        });\n        this._apply(\"end\");\n        this._pred(3 == v2.length);\n        factType = atomicForm[1];\n        this._pred(!this.termForms[factType]);\n        this._pred(4 == atomicForm.length && 4 == factType.length);\n        actualFactType = this._applyWithArgs(\"UnmappedFactType\", factType.slice(1));\n        actualFactType = [ \"FactType\" ].concat(actualFactType);\n        this._or(function() {\n            this._pred(this.IdentifiersEqual(v1[2], actualFactType[1]) && this.IdentifiersEqual(v2[2], actualFactType[3]));\n            return this.foreignKeys[actualFactType] = required;\n        }, function() {\n            this._pred(this.IdentifiersEqual(v1[2], actualFactType[3]) && this.IdentifiersEqual(v2[2], actualFactType[1]));\n            return this.uniqueKeys[actualFactType] = required;\n        });\n        return this._apply(\"SetHelped\");\n    },\n    CardinalityOptimisation: function() {\n        var $elf = this, _fromIdx = this.input.idx, v1;\n        return this._form(function() {\n            switch (this.anything()) {\n              case \"LogicalNegation\":\n                return this._form(function() {\n                    this._applyWithArgs(\"exactly\", \"ExistentialQuantification\");\n                    v1 = this._applyWithArgs(\"token\", \"Variable\");\n                    return this._form(function() {\n                        this._applyWithArgs(\"exactly\", \"LogicalNegation\");\n                        return this._applyWithArgs(\"CardinalityOptimisation2\", v1);\n                    });\n                });\n\n              case \"UniversalQuantification\":\n                v1 = this._applyWithArgs(\"token\", \"Variable\");\n                return this._applyWithArgs(\"CardinalityOptimisation2\", v1);\n\n              default:\n                throw this._fail();\n            }\n        });\n    },\n    NecessityOptimisation: function() {\n        var $elf = this, _fromIdx = this.input.idx;\n        return this._apply(\"CardinalityOptimisation\");\n    },\n    ObligationOptimisation: function() {\n        var $elf = this, _fromIdx = this.input.idx;\n        return this._apply(\"CardinalityOptimisation\");\n    },\n    Rule: function() {\n        var $elf = this, _fromIdx = this.input.idx;\n        return this._or(function() {\n            this._form(function() {\n                switch (this.anything()) {\n                  case \"NecessityFormulation\":\n                    return this._apply(\"NecessityOptimisation\");\n\n                  case \"ObligationFormulation\":\n                    return this._apply(\"ObligationOptimisation\");\n\n                  default:\n                    throw this._fail();\n                }\n            });\n            this._applyWithArgs(\"token\", \"StructuredEnglish\");\n            return null;\n        }, function() {\n            return LFOptimiser._superApply(this, \"Rule\");\n        });\n    }\n});\n\nLF2AbstractSQLPrep.initialize = function() {\n    Object.assign(this, SBVRCompilerLibs);\n    SBVRCompilerLibs.initialize.call(this);\n    LFOptimiser.initialize.call(this);\n    this.foreignKeys = {};\n    this.uniqueKeys = {};\n    this.primitives = {};\n    this.attributes = {};\n    this.termForms = {};\n};\n\nLF2AbstractSQLPrep.defaultAttributes = function(termOrFactType, attrsFound, attrs) {\n    switch (termOrFactType[0]) {\n      case \"Name\":\n      case \"Term\":\n        if (!this.IsPrimitive(termOrFactType) && !attrsFound.hasOwnProperty(\"DatabaseIDField\")) {\n            attrs.splice(1, 0, [ \"DatabaseIDField\", \"id\" ]);\n            this.SetHelped();\n        }\n        if (!attrsFound.hasOwnProperty(\"ReferenceScheme\")) {\n            attrs.splice(1, 0, [ \"ReferenceScheme\", \"id\" ]);\n            this.SetHelped();\n        }\n        if (!attrsFound.hasOwnProperty(\"DatabaseTableName\")) {\n            var tableName = this.GetResourceName(termOrFactType[1]);\n            attrs.splice(1, 0, [ \"DatabaseTableName\", tableName ]);\n            this.SetHelped();\n        }\n        if (!attrsFound.hasOwnProperty(\"DatabasePrimitive\")) {\n            this.primitives.hasOwnProperty(termOrFactType) || (this.primitives[termOrFactType] = this.IsPrimitive(termOrFactType));\n            attrs.splice(1, 0, [ \"DatabasePrimitive\", this.primitives[termOrFactType] ]);\n            this.SetHelped();\n        }\n        break;\n\n      case \"FactType\":\n        var actualFactType = this.UnmappedFactType(termOrFactType.slice(1));\n        actualFactType = [ \"FactType\" ].concat(actualFactType);\n        if (!this.IsPrimitive(actualFactType[1])) {\n            if (!attrsFound.hasOwnProperty(\"DatabaseIDField\")) {\n                attrs.splice(1, 0, [ \"DatabaseIDField\", \"id\" ]);\n                this.SetHelped();\n            }\n            if (!attrsFound.hasOwnProperty(\"DatabaseTableName\")) {\n                var tableName = this.GetResourceName(actualFactType.slice(1));\n                attrs.splice(1, 0, [ \"DatabaseTableName\", tableName ]);\n                this.SetHelped();\n            }\n            if (this.uniqueKeys.hasOwnProperty(actualFactType)) if (attrsFound.hasOwnProperty(\"Unique\")) {\n                if (attrsFound.Unique != this.uniqueKeys[actualFactType]) {\n                    console.error(attrsFound.Unique, this.uniqueKeys[actualFactType]);\n                    ___MISMATCHED_UNIQUE_KEY___.die();\n                }\n            } else {\n                attrs.splice(1, 0, [ \"Unique\", this.uniqueKeys[actualFactType] ]);\n                this.SetHelped();\n            }\n            if (this.foreignKeys.hasOwnProperty(actualFactType)) {\n                if (!attrsFound.hasOwnProperty(\"DatabaseAttribute\")) {\n                    attrs.splice(1, 0, [ \"DatabaseAttribute\", !1 ]);\n                    this.SetHelped();\n                }\n                if (attrsFound.hasOwnProperty(\"ForeignKey\")) {\n                    if (attrsFound.ForeignKey != this.foreignKeys[actualFactType]) {\n                        console.error(attrsFound.ForeignKey, this.foreignKeys[actualFactType]);\n                        ___MISMATCHED_FOREIGN_KEY___.die();\n                    }\n                } else {\n                    attrs.splice(1, 0, [ \"ForeignKey\", this.foreignKeys[actualFactType] ]);\n                    this.SetHelped();\n                }\n            }\n            if (3 == actualFactType.length) {\n                this.primitives.hasOwnProperty(actualFactType[1]) && !1 === this.primitives[actualFactType[1]] || this.SetHelped();\n                this.primitives[actualFactType[1]] = !1;\n            } else if (actualFactType.length > 4) for (var i = 1; i < actualFactType.length; i += 2) {\n                this.attributes.hasOwnProperty(actualFactType[i]) && !1 === this.attributes[actualFactType[i]] || this.SetHelped();\n                this.attributes[actualFactType[i]] = !1;\n            }\n        }\n    }\n    termOrFactType.push(attrs);\n};","var OMeta = require(\"ometa-js/lib/ometajs/core\"), LFValidator = require(\"./lf-validator\").LFValidator, LFOptimiser = exports.LFOptimiser = LFValidator._extend({\n    Helped: function() {\n        var $elf = this, _fromIdx = this.input.idx;\n        this._pred(!0 === this.helped);\n        return this.helped = !1;\n    },\n    SetHelped: function() {\n        var $elf = this, _fromIdx = this.input.idx;\n        return this.helped = !0;\n    },\n    Process: function() {\n        var $elf = this, _fromIdx = this.input.idx, x;\n        x = this.anything();\n        x = this._applyWithArgs(\"trans\", x);\n        this._many(function() {\n            this._applyWithArgs(\"Helped\", \"disableMemoisation\");\n            return this._or(function() {\n                return x = this._applyWithArgs(\"trans\", x);\n            }, function() {\n                console.error(\"Failed to reprocess?!\");\n                return this._pred(!1);\n            });\n        });\n        return x;\n    },\n    AtLeastNQuantification: function() {\n        var $elf = this, _fromIdx = this.input.idx, i, v, xs;\n        return this._or(function() {\n            i = this._applyWithArgs(\"token\", \"MinimumCardinality\");\n            this._pred(1 == i[1][1]);\n            v = this._applyWithArgs(\"token\", \"Variable\");\n            xs = this._many(function() {\n                return this._apply(\"trans\");\n            });\n            this._apply(\"SetHelped\");\n            return [ \"ExistentialQuantification\", v ].concat(xs);\n        }, function() {\n            return LFValidator._superApply(this, \"AtLeastNQuantification\");\n        });\n    },\n    NumericalRangeQuantification: function() {\n        var $elf = this, _fromIdx = this.input.idx, i, j, v, xs;\n        return this._or(function() {\n            i = this._applyWithArgs(\"token\", \"MinimumCardinality\");\n            j = this._applyWithArgs(\"token\", \"MaximumCardinality\");\n            this._pred(i[1][1] == j[1][1]);\n            v = this._applyWithArgs(\"token\", \"Variable\");\n            xs = this._many(function() {\n                return this._apply(\"trans\");\n            });\n            this._apply(\"SetHelped\");\n            return [ \"ExactQuantification\", [ \"Cardinality\", i[1] ], v ].concat(xs);\n        }, function() {\n            return LFValidator._superApply(this, \"NumericalRangeQuantification\");\n        });\n    },\n    LogicalNegation: function() {\n        var $elf = this, _fromIdx = this.input.idx, xs;\n        return this._or(function() {\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"LogicalNegation\");\n                return xs = this._apply(\"trans\");\n            });\n            this._apply(\"SetHelped\");\n            return xs;\n        }, function() {\n            return LFValidator._superApply(this, \"LogicalNegation\");\n        });\n    },\n    ExactQuantification: function() {\n        var $elf = this, _fromIdx = this.input.idx, i, v, xs;\n        return this._or(function() {\n            i = this._applyWithArgs(\"token\", \"Cardinality\");\n            v = this._applyWithArgs(\"token\", \"Variable\");\n            xs = this._many(function() {\n                return this._apply(\"trans\");\n            });\n            this._pred(0 === i[1][1]);\n            this._apply(\"SetHelped\");\n            return [ \"LogicalNegation\", [ \"ExistentialQuantification\", v ].concat(xs) ];\n        }, function() {\n            return LFValidator._superApply(this, \"ExactQuantification\");\n        });\n    }\n});\n\nLFOptimiser.initialize = function() {\n    LFValidator.initialize.call(this);\n    this._didSomething = !1;\n};","var OMeta = require(\"ometa-js/lib/ometajs/core\"), SBVRLibs = require(\"./sbvr-libs\").SBVRLibs, LFValidator = exports.LFValidator = SBVRLibs._extend({\n    trans: function() {\n        var $elf = this, _fromIdx = this.input.idx, a, t;\n        this._form(function() {\n            t = this.anything();\n            return a = this._applyWithArgs(\"apply\", t);\n        });\n        return a;\n    },\n    token: function(x) {\n        var $elf = this, _fromIdx = this.input.idx, a, t;\n        this._form(function() {\n            t = this.anything();\n            this._pred(t == x);\n            return a = this._applyWithArgs(\"apply\", x);\n        });\n        return a;\n    },\n    letters: function() {\n        var $elf = this, _fromIdx = this.input.idx, l;\n        l = this._many1(function() {\n            return this._apply(\"letter\");\n        });\n        this._many(function() {\n            return this._apply(\"space\");\n        });\n        return l.join(\"\");\n    },\n    Number: function() {\n        var $elf = this, _fromIdx = this.input.idx, n;\n        n = this._apply(\"number\");\n        this._pred(!isNaN(n));\n        return [ \"Number\", parseInt(n, 10) ];\n    },\n    Model: function() {\n        var $elf = this, _fromIdx = this.input.idx, x, xs;\n        xs = [];\n        this._many(function() {\n            x = this._or(function() {\n                return this._applyWithArgs(\"token\", \"Vocabulary\");\n            }, function() {\n                return this._applyWithArgs(\"token\", \"Term\");\n            }, function() {\n                return this._applyWithArgs(\"token\", \"Name\");\n            }, function() {\n                return this._applyWithArgs(\"token\", \"FactType\");\n            }, function() {\n                return this._applyWithArgs(\"token\", \"Rule\");\n            });\n            return this._opt(function() {\n                this._pred(null != x);\n                return xs.push(x);\n            });\n        });\n        return [ \"Model\" ].concat(xs);\n    },\n    FactType: function() {\n        var $elf = this, _fromIdx = this.input.idx, attrs, factType, identifier, verb;\n        factType = [];\n        this._many(function() {\n            identifier = this._or(function() {\n                return this._applyWithArgs(\"token\", \"Term\");\n            }, function() {\n                return this._applyWithArgs(\"token\", \"Name\");\n            });\n            verb = this._applyWithArgs(\"token\", \"Verb\");\n            return factType = factType.concat([ identifier, verb ]);\n        });\n        this._opt(function() {\n            identifier = this._or(function() {\n                return this._applyWithArgs(\"token\", \"Term\");\n            }, function() {\n                return this._applyWithArgs(\"token\", \"Name\");\n            });\n            return factType.push(identifier);\n        });\n        this._opt(function() {\n            return this._lookahead(function() {\n                attrs = this.anything();\n                return this._applyWithArgs(\"AddFactType\", factType, factType);\n            });\n        });\n        return this._applyWithArgs(\"addAttributes\", [ \"FactType\" ].concat(factType));\n    },\n    Vocabulary: function() {\n        var $elf = this, _fromIdx = this.input.idx, vocab;\n        vocab = this.anything();\n        this._applyWithArgs(\"AddVocabulary\", vocab, vocab);\n        return this._applyWithArgs(\"addAttributes\", [ \"Vocabulary\", vocab ]);\n    },\n    Term: function() {\n        var $elf = this, _fromIdx = this.input.idx, data, term, vocab;\n        term = this.anything();\n        vocab = this.anything();\n        return this._or(function() {\n            data = this._or(function() {\n                return this._applyWithArgs(\"token\", \"Number\");\n            }, function() {\n                return this._apply(\"Value\");\n            });\n            return [ \"Term\", term, vocab, data ];\n        }, function() {\n            return this._applyWithArgs(\"addAttributes\", [ \"Term\", term, vocab ]);\n        });\n    },\n    Name: function() {\n        var $elf = this, _fromIdx = this.input.idx, name, vocab;\n        name = this.anything();\n        vocab = this.anything();\n        return this._applyWithArgs(\"addAttributes\", [ \"Name\", name, vocab ]);\n    },\n    Verb: function() {\n        var $elf = this, _fromIdx = this.input.idx, negated, v;\n        v = this.anything();\n        negated = this._or(function() {\n            return this._apply(\"true\");\n        }, function() {\n            return this._apply(\"false\");\n        });\n        return [ \"Verb\", v, negated ];\n    },\n    Disjunction: function() {\n        var $elf = this, _fromIdx = this.input.idx, xs;\n        xs = this._many(function() {\n            return this._apply(\"trans\");\n        });\n        return [ \"Disjunction\" ].concat(xs);\n    },\n    Conjunction: function() {\n        var $elf = this, _fromIdx = this.input.idx, xs;\n        xs = this._many(function() {\n            return this._apply(\"trans\");\n        });\n        return [ \"Conjunction\" ].concat(xs);\n    },\n    Rule: function() {\n        var $elf = this, _fromIdx = this.input.idx, t, x;\n        x = this._or(function() {\n            return this._applyWithArgs(\"token\", \"ObligationFormulation\");\n        }, function() {\n            return this._applyWithArgs(\"token\", \"NecessityFormulation\");\n        }, function() {\n            return this._applyWithArgs(\"token\", \"PossibilityFormulation\");\n        }, function() {\n            return this._applyWithArgs(\"token\", \"PermissibilityFormulation\");\n        });\n        t = this._applyWithArgs(\"token\", \"StructuredEnglish\");\n        return [ \"Rule\", x, t ];\n    },\n    addAttributes: function(termOrFactType) {\n        var $elf = this, _fromIdx = this.input.idx, attrName, attrVal, attrs, attrsFound;\n        this._or(function() {\n            return this._apply(\"end\");\n        }, function() {\n            attrsFound = {};\n            attrs = [ \"Attributes\" ];\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Attributes\");\n                this._many(function() {\n                    return this._form(function() {\n                        attrName = this.anything();\n                        attrVal = this._applyWithArgs(\"ApplyFirstExisting\", [ \"Attr\" + attrName, \"DefaultAttr\" ], [ termOrFactType ]);\n                        return this._opt(function() {\n                            this._pred(null != attrVal);\n                            attrsFound[attrName] = attrVal;\n                            return attrs.push([ attrName, attrVal ]);\n                        });\n                    });\n                });\n                return this._apply(\"end\");\n            });\n            return this._applyWithArgs(\"defaultAttributes\", termOrFactType, attrsFound, attrs);\n        });\n        return termOrFactType;\n    },\n    DefaultAttr: function(tableID) {\n        var $elf = this, _fromIdx = this.input.idx;\n        return this.anything();\n    },\n    AttrConceptType: function(termOrFactType) {\n        var $elf = this, _fromIdx = this.input.idx, conceptType, term, vocab;\n        term = this._form(function() {\n            this._applyWithArgs(\"exactly\", \"Term\");\n            conceptType = this.anything();\n            return vocab = this.anything();\n        });\n        this.vocabularies[this.currentVocabulary].ConceptTypes[termOrFactType] = term;\n        return term;\n    },\n    AttrDefinition: function(termOrFactType) {\n        var $elf = this, _fromIdx = this.input.idx, values;\n        return this._or(function() {\n            return this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Enum\");\n                return values = this._many1(function() {\n                    return this.anything();\n                });\n            });\n        }, function() {\n            return this._apply(\"trans\");\n        });\n    },\n    AttrNecessity: function(termOrFactType) {\n        var $elf = this, _fromIdx = this.input.idx;\n        return this._or(function() {\n            return this._applyWithArgs(\"token\", \"Rule\");\n        }, function() {\n            return this._apply(\"DefaultAttr\");\n        });\n    },\n    AttrSynonymousForm: function(factType) {\n        var $elf = this, _fromIdx = this.input.idx, synForm;\n        synForm = this.anything();\n        this._applyWithArgs(\"AddFactType\", synForm, factType.slice(1));\n        return synForm;\n    },\n    StructuredEnglish: function() {\n        var $elf = this, _fromIdx = this.input.idx, a;\n        a = this.anything();\n        return [ \"StructuredEnglish\", a ];\n    },\n    ObligationFormulation: function() {\n        var $elf = this, _fromIdx = this.input.idx, xs;\n        xs = this._many(function() {\n            return this._apply(\"trans\");\n        });\n        return [ \"ObligationFormulation\" ].concat(xs);\n    },\n    NecessityFormulation: function() {\n        var $elf = this, _fromIdx = this.input.idx, xs;\n        xs = this._many(function() {\n            return this._apply(\"trans\");\n        });\n        return [ \"NecessityFormulation\" ].concat(xs);\n    },\n    PossibilityFormulation: function() {\n        var $elf = this, _fromIdx = this.input.idx, xs;\n        xs = this._many(function() {\n            return this._apply(\"trans\");\n        });\n        return [ \"PossibilityFormulation\" ].concat(xs);\n    },\n    PermissibilityFormulation: function() {\n        var $elf = this, _fromIdx = this.input.idx, xs;\n        xs = this._many(function() {\n            return this._apply(\"trans\");\n        });\n        return [ \"PermissibilityFormulation\" ].concat(xs);\n    },\n    LogicalNegation: function() {\n        var $elf = this, _fromIdx = this.input.idx, xs;\n        xs = this._apply(\"trans\");\n        return [ \"LogicalNegation\" ].concat([ xs ]);\n    },\n    quant: function() {\n        var $elf = this, _fromIdx = this.input.idx, x;\n        return this._or(function() {\n            return this._applyWithArgs(\"token\", \"Disjunction\");\n        }, function() {\n            return this._applyWithArgs(\"token\", \"Conjunction\");\n        }, function() {\n            return this._applyWithArgs(\"token\", \"UniversalQuantification\");\n        }, function() {\n            return this._applyWithArgs(\"token\", \"ExistentialQuantification\");\n        }, function() {\n            return this._applyWithArgs(\"token\", \"ExactQuantification\");\n        }, function() {\n            return this._applyWithArgs(\"token\", \"AtMostNQuantification\");\n        }, function() {\n            return this._applyWithArgs(\"token\", \"AtLeastNQuantification\");\n        }, function() {\n            return this._applyWithArgs(\"token\", \"NumericalRangeQuantification\");\n        }, function() {\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"LogicalNegation\");\n                return x = this._apply(\"quant\");\n            });\n            return [ \"LogicalNegation\", x ];\n        });\n    },\n    UniversalQuantification: function() {\n        var $elf = this, _fromIdx = this.input.idx, v, xs;\n        v = this._applyWithArgs(\"token\", \"Variable\");\n        xs = this._many(function() {\n            return this._apply(\"trans\");\n        });\n        return [ \"UniversalQuantification\", v ].concat(xs);\n    },\n    ExistentialQuantification: function() {\n        var $elf = this, _fromIdx = this.input.idx, v, xs;\n        v = this._applyWithArgs(\"token\", \"Variable\");\n        xs = this._many(function() {\n            return this._apply(\"trans\");\n        });\n        return [ \"ExistentialQuantification\", v ].concat(xs);\n    },\n    ExactQuantification: function() {\n        var $elf = this, _fromIdx = this.input.idx, i, v, xs;\n        i = this._applyWithArgs(\"token\", \"Cardinality\");\n        v = this._applyWithArgs(\"token\", \"Variable\");\n        xs = this._many(function() {\n            return this._apply(\"trans\");\n        });\n        return [ \"ExactQuantification\", i, v ].concat(xs);\n    },\n    AtMostNQuantification: function() {\n        var $elf = this, _fromIdx = this.input.idx, a, v, xs;\n        a = this._applyWithArgs(\"token\", \"MaximumCardinality\");\n        v = this._applyWithArgs(\"token\", \"Variable\");\n        xs = this._many(function() {\n            return this._apply(\"trans\");\n        });\n        return [ \"AtMostNQuantification\", a, v ].concat(xs);\n    },\n    AtLeastNQuantification: function() {\n        var $elf = this, _fromIdx = this.input.idx, i, v, xs;\n        i = this._applyWithArgs(\"token\", \"MinimumCardinality\");\n        v = this._applyWithArgs(\"token\", \"Variable\");\n        xs = this._many(function() {\n            return this._apply(\"trans\");\n        });\n        return [ \"AtLeastNQuantification\", i, v ].concat(xs);\n    },\n    NumericalRangeQuantification: function() {\n        var $elf = this, _fromIdx = this.input.idx, a, i, v, xs;\n        i = this._applyWithArgs(\"token\", \"MinimumCardinality\");\n        a = this._applyWithArgs(\"token\", \"MaximumCardinality\");\n        v = this._applyWithArgs(\"token\", \"Variable\");\n        xs = this._many(function() {\n            return this._apply(\"trans\");\n        });\n        return [ \"NumericalRangeQuantification\", i, a, v ].concat(xs);\n    },\n    Cardinality: function() {\n        var $elf = this, _fromIdx = this.input.idx, n;\n        n = this._applyWithArgs(\"token\", \"Number\");\n        return [ \"Cardinality\", n ];\n    },\n    MinimumCardinality: function() {\n        var $elf = this, _fromIdx = this.input.idx, n;\n        n = this._applyWithArgs(\"token\", \"Number\");\n        return [ \"MinimumCardinality\", n ];\n    },\n    MaximumCardinality: function() {\n        var $elf = this, _fromIdx = this.input.idx, n;\n        n = this._applyWithArgs(\"token\", \"Number\");\n        return [ \"MaximumCardinality\", n ];\n    },\n    Variable: function() {\n        var $elf = this, _fromIdx = this.input.idx, num, term, w;\n        num = this._applyWithArgs(\"token\", \"Number\");\n        term = this._applyWithArgs(\"token\", \"Term\");\n        w = this._many(function() {\n            return this._or(function() {\n                return this._applyWithArgs(\"token\", \"AtomicFormulation\");\n            }, function() {\n                return this._apply(\"quant\");\n            });\n        });\n        return [ \"Variable\", num, term ].concat(w);\n    },\n    Real: function() {\n        var $elf = this, _fromIdx = this.input.idx, num;\n        num = this._apply(\"number\");\n        this._pred(!isNaN(num));\n        return [ \"Real\", num ];\n    },\n    Integer: function() {\n        var $elf = this, _fromIdx = this.input.idx, num;\n        num = this._apply(\"number\");\n        this._pred(!isNaN(num));\n        return [ \"Integer\", num ];\n    },\n    Text: function() {\n        var $elf = this, _fromIdx = this.input.idx, text;\n        text = this.anything();\n        return [ \"Text\", text ];\n    },\n    Value: function() {\n        var $elf = this, _fromIdx = this.input.idx;\n        return this._or(function() {\n            return this._applyWithArgs(\"token\", \"Real\");\n        }, function() {\n            return this._applyWithArgs(\"token\", \"Integer\");\n        }, function() {\n            return this._applyWithArgs(\"token\", \"Text\");\n        });\n    },\n    RoleBinding: function() {\n        var $elf = this, _fromIdx = this.input.idx, bindIdentifier, identifier;\n        identifier = this._or(function() {\n            return this._applyWithArgs(\"token\", \"Term\");\n        }, function() {\n            return this._applyWithArgs(\"token\", \"Name\");\n        });\n        bindIdentifier = this._or(function() {\n            return this._apply(\"number\");\n        }, function() {\n            return this._apply(\"Value\");\n        }, function() {\n            return this._applyWithArgs(\"token\", \"Name\");\n        });\n        return [ \"RoleBinding\", identifier, bindIdentifier ];\n    },\n    AtomicFormulation: function() {\n        var $elf = this, _fromIdx = this.input.idx, b, f;\n        f = this._applyWithArgs(\"token\", \"FactType\");\n        b = this._many(function() {\n            return this._applyWithArgs(\"token\", \"RoleBinding\");\n        });\n        return [ \"AtomicFormulation\", f ].concat(b);\n    }\n});\n\nLFValidator.initialize = function() {\n    SBVRLibs.initialize.call(this);\n};\n\nLFValidator.defaultAttributes = function(termOrVerb, attrsFound, attrs) {\n    termOrVerb.push(attrs);\n};","var OMeta = require(\"ometa-js/lib/ometajs/core\"), SBVRCompilerLibs = require(\"./sbvr-compiler-libs\").SBVRCompilerLibs, _ = require(\"lodash\"), updateModifiedAt = {\n    type: \"trigger\",\n    body: 'NEW.\"modified at\" = NOW();\\nRETURN NEW;',\n    language: \"plpgsql\"\n}, LINK_RESOLVE_QUEUED = !0, LINK_RESOLVE_DONE = !1, LF2AbstractSQL = exports.LF2AbstractSQL = SBVRCompilerLibs._extend({\n    Number: function() {\n        var $elf = this, _fromIdx = this.input.idx, num;\n        this._form(function() {\n            this._applyWithArgs(\"exactly\", \"Number\");\n            num = this._apply(\"number\");\n            return this._pred(!isNaN(num));\n        });\n        return num;\n    },\n    Real: function() {\n        var $elf = this, _fromIdx = this.input.idx, num;\n        this._form(function() {\n            this._applyWithArgs(\"exactly\", \"Real\");\n            num = this._apply(\"number\");\n            return this._pred(!isNaN(num));\n        });\n        return [ \"Real\", num ];\n    },\n    Integer: function() {\n        var $elf = this, _fromIdx = this.input.idx, num;\n        this._form(function() {\n            this._applyWithArgs(\"exactly\", \"Integer\");\n            num = this._apply(\"number\");\n            return this._pred(!isNaN(num));\n        });\n        return [ \"Integer\", num ];\n    },\n    Text: function() {\n        var $elf = this, _fromIdx = this.input.idx, text;\n        this._form(function() {\n            this._applyWithArgs(\"exactly\", \"Text\");\n            return text = this.anything();\n        });\n        return [ \"Text\", text ];\n    },\n    Value: function() {\n        var $elf = this, _fromIdx = this.input.idx;\n        return this._or(function() {\n            return this._apply(\"Real\");\n        }, function() {\n            return this._apply(\"Integer\");\n        }, function() {\n            return this._apply(\"Text\");\n        });\n    },\n    Identifier: function() {\n        var $elf = this, _fromIdx = this.input.idx, name, num, type, vocab;\n        this._form(function() {\n            type = function() {\n                switch (this.anything()) {\n                  case \"Name\":\n                    return \"Name\";\n\n                  case \"Term\":\n                    return \"Term\";\n\n                  default:\n                    throw this._fail();\n                }\n            }.call(this);\n            name = this.anything();\n            vocab = this.anything();\n            return this._opt(function() {\n                return this._or(function() {\n                    return num = this._apply(\"Number\");\n                }, function() {\n                    return this._apply(\"Value\");\n                });\n            });\n        });\n        return {\n            type: type,\n            name: name,\n            num: num,\n            vocab: vocab\n        };\n    },\n    IdentifierName: function() {\n        var $elf = this, _fromIdx = this.input.idx, identifierName, resourceName;\n        identifierName = this.anything();\n        resourceName = this._applyWithArgs(\"GetResourceName\", identifierName);\n        this._or(function() {\n            return this._pred(!this.tables.hasOwnProperty(resourceName));\n        }, function() {\n            console.error(\"We already have an identifier with a name of: \" + identifierName);\n            return this._pred(!1);\n        });\n        this._applyWithArgs(\"CreateTable\", resourceName, identifierName);\n        return identifierName;\n    },\n    Attributes: function(termOrFactType) {\n        var $elf = this, _fromIdx = this.input.idx, attrOrder, attributeName, attributeVals, attributes;\n        return this._or(function() {\n            return this._apply(\"end\");\n        }, function() {\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Attributes\");\n                attributes = {};\n                return this._many(function() {\n                    this._form(function() {\n                        attributeName = this.anything();\n                        return attributeVals = this._many(function() {\n                            return this.anything();\n                        });\n                    });\n                    return attributes[attributeName] = attributeVals;\n                });\n            });\n            attrOrder = [ \"DatabaseTableName\", \"DatabaseIDField\", \"DatabasePrimitive\", \"TermForm\", \"ConceptType\", \"SynonymousForm\", \"Synonym\", \"ReferenceScheme\", \"ForeignKey\", \"Attribute\", \"Unique\" ];\n            return function() {\n                attrOrder.forEach(function(attributeName) {\n                    attributes.hasOwnProperty(attributeName) && $elf._applyWithArgs.apply($elf, [ \"Attr\" + attributeName, termOrFactType ].concat(attributes[attributeName]));\n                });\n                return _(attributes).omit(attrOrder).each(function(attributeVals, attributeName) {\n                    $elf._applyWithArgs.apply($elf, [ \"ApplyFirstExisting\", [ \"Attr\" + attributeName, \"DefaultAttr\" ], [ termOrFactType ].concat(attributeVals) ]);\n                });\n            }.call(this);\n        });\n    },\n    DefaultAttr: function(termOrFactType) {\n        var $elf = this, _fromIdx = this.input.idx;\n        return this.anything();\n    },\n    AttrConceptType: function(termOrFactType) {\n        var $elf = this, _fromIdx = this.input.idx, conceptTable, conceptTerm, conceptType, dataType, fieldID, identifierTable, primitive, references, vocab;\n        conceptTerm = this._form(function() {\n            this._applyWithArgs(\"exactly\", \"Term\");\n            conceptType = this.anything();\n            return vocab = this.anything();\n        });\n        (function() {\n            this.termForms[termOrFactType] && (termOrFactType = this.termForms[termOrFactType]);\n        }).call(this);\n        this.vocabularies[termOrFactType[2]].ConceptTypes[termOrFactType] = conceptTerm;\n        primitive = this._applyWithArgs(\"IsPrimitive\", conceptTerm);\n        conceptTable = this._applyWithArgs(\"GetTable\", conceptType);\n        identifierTable = this._applyWithArgs(\"GetTable\", termOrFactType[1]);\n        this._or(function() {\n            this._pred(!1 !== primitive && conceptType === primitive);\n            dataType = primitive;\n            this._opt(function() {\n                this._pred(identifierTable.hasOwnProperty(\"referenceScheme\"));\n                fieldID = this._applyWithArgs(\"GetTableFieldID\", identifierTable, identifierTable.referenceScheme);\n                this._pred(!1 !== fieldID);\n                return identifierTable.fields.splice(fieldID, 1);\n            });\n            return identifierTable.referenceScheme = conceptType;\n        }, function() {\n            dataType = \"ConceptType\";\n            return references = this._applyWithArgs(\"GetReference\", conceptTable);\n        });\n        this._applyWithArgs(\"AddTableField\", identifierTable, conceptType, dataType, !0, null, references);\n        return this._applyWithArgs(\"AddRelationship\", identifierTable, [ [ \"Verb\", \"has\" ], conceptTerm ], conceptType, references);\n    },\n    AttrDatabaseIDField: function(termOrFactType) {\n        var $elf = this, _fromIdx = this.input.idx, fieldID, idField, table, tableID;\n        idField = this.anything();\n        tableID = this._applyWithArgs(\"GetTableID\", termOrFactType);\n        table = this._applyWithArgs(\"GetTable\", tableID);\n        return this._or(function() {\n            return this._pred(\"string\" == typeof table);\n        }, function() {\n            fieldID = this._applyWithArgs(\"AddTableField\", table, idField, \"Serial\", !0, \"PRIMARY KEY\");\n            this._opt(function() {\n                this._pred(!1 !== fieldID);\n                return table.fields[fieldID].index = \"PRIMARY KEY\";\n            });\n            return table.idField = idField;\n        });\n    },\n    AttrReferenceScheme: function(termOrFactType) {\n        var $elf = this, _fromIdx = this.input.idx, fieldID, referenceScheme, table, tableID;\n        referenceScheme = this.anything();\n        referenceScheme = this._or(function() {\n            this._pred(Array.isArray(referenceScheme));\n            return referenceScheme[1];\n        }, function() {\n            return referenceScheme;\n        });\n        tableID = this._applyWithArgs(\"GetTableID\", termOrFactType);\n        table = this._applyWithArgs(\"GetTable\", tableID);\n        return this._or(function() {\n            return this._pred(\"string\" == typeof table);\n        }, function() {\n            this._opt(function() {\n                this._pred(table.hasOwnProperty(\"referenceScheme\"));\n                fieldID = this._applyWithArgs(\"GetTableFieldID\", table, table.referenceScheme);\n                this._pred(!1 !== fieldID);\n                return table.fields[fieldID].fieldName = referenceScheme;\n            });\n            return table.referenceScheme = referenceScheme;\n        });\n    },\n    AttrDatabaseTableName: function(termOrFactType) {\n        var $elf = this, _fromIdx = this.input.idx, baseTable, fieldName, linkResourceName, references, table, tableID, tableName;\n        tableName = this.anything();\n        tableID = this._applyWithArgs(\"GetTableID\", termOrFactType);\n        table = this._applyWithArgs(\"GetTable\", tableID);\n        this._or(function() {\n            return this._pred(\"string\" == typeof table);\n        }, function() {\n            return table.name = tableName;\n        });\n        return this._opt(function() {\n            this._pred(Array.isArray(termOrFactType[0]) && termOrFactType.length > 2);\n            linkResourceName = this._applyWithArgs(\"GetResourceName\", termOrFactType);\n            baseTable = this._applyWithArgs(\"GetTable\", termOrFactType[0][1]);\n            fieldName = this._applyWithArgs(\"FactTypeFieldName\", [ [ \"Term\", linkResourceName ], [ \"Verb\", \"has\" ], termOrFactType[0] ]);\n            references = this._applyWithArgs(\"GetReference\", table, fieldName);\n            this._applyWithArgs(\"AddRelationship\", baseTable, termOrFactType.slice(1), baseTable.idField, references, !0);\n            return this._applyWithArgs(\"AddRelationship\", baseTable, termOrFactType, baseTable.idField, references, !0);\n        });\n    },\n    AttrDatabasePrimitive: function(termOrFactType) {\n        var $elf = this, _fromIdx = this.input.idx, attrVal, tableID;\n        attrVal = this.anything();\n        tableID = this._applyWithArgs(\"GetTableID\", termOrFactType);\n        return this.GetTable(tableID).primitive = attrVal;\n    },\n    AttrDatabaseAttribute: function(factType) {\n        var $elf = this, _fromIdx = this.input.idx, attrVal, attributeTable, baseTable, fieldID, fieldName, linkResourceName;\n        attrVal = this.anything();\n        return this._opt(function() {\n            this._pred(attrVal);\n            this.attributes[factType] = attrVal;\n            linkResourceName = this._applyWithArgs(\"GetResourceName\", factType);\n            delete this.relationships[linkResourceName];\n            this.tables[linkResourceName] = \"Attribute\";\n            baseTable = this._applyWithArgs(\"GetTable\", factType[0][1]);\n            fieldName = this._applyWithArgs(\"FactTypeFieldName\", factType);\n            attributeTable = this._applyWithArgs(\"GetTable\", factType[2][1]);\n            fieldID = this._applyWithArgs(\"GetTableFieldID\", baseTable, fieldName);\n            baseTable.fields[fieldID].dataType = attributeTable.primitive;\n            this._applyWithArgs(\"AddRelationship\", baseTable, factType, fieldName);\n            return this._applyWithArgs(\"AddRelationship\", baseTable, factType.slice(1), fieldName);\n        });\n    },\n    AttrForeignKey: function(factType) {\n        var $elf = this, _fromIdx = this.input.idx, baseTable, factTypeResourceName, fieldID, fkName, fkTable, foreignTerm, index, linkResourceName, references, required;\n        required = this.anything();\n        baseTable = this._applyWithArgs(\"GetTable\", factType[0][1]);\n        foreignTerm = factType[2][1];\n        fkName = this._applyWithArgs(\"FactTypeFieldName\", factType);\n        fkTable = this._applyWithArgs(\"GetTable\", foreignTerm);\n        this._opt(function() {\n            this._pred(baseTable.idField == fkName);\n            fieldID = this._applyWithArgs(\"GetTableFieldID\", baseTable, fkName);\n            this._pred(!1 !== fieldID);\n            index = baseTable.fields[fieldID].index;\n            return baseTable.fields.splice(fieldID, 1);\n        });\n        references = this._applyWithArgs(\"GetReference\", fkTable);\n        fieldID = this._applyWithArgs(\"AddTableField\", baseTable, fkName, \"ForeignKey\", required, index, references);\n        this._applyWithArgs(\"AddRelationship\", baseTable, factType.slice(1), fkName, references);\n        factTypeResourceName = this._applyWithArgs(\"GetResourceName\", factType);\n        _.forEach($elf.synonymousForms[factTypeResourceName], function(synForm) {\n            if (0 === $elf.MappedFactType(synForm)[0][3]) $elf.AddRelationship(baseTable, synForm.slice(1), fkName, references); else {\n                var synResourceName = $elf.GetResourceName(synForm[0][1]), reverseReferences = $elf.GetReference(baseTable, fkName);\n                $elf.AddRelationship(synResourceName, synForm.slice(1), references.fieldName, reverseReferences);\n            }\n        });\n        this._opt(function() {\n            this._pred(fieldID);\n            return baseTable.fields[fieldID].required = required;\n        });\n        linkResourceName = this._applyWithArgs(\"GetResourceName\", factType);\n        delete this.relationships[linkResourceName];\n        return this.tables[linkResourceName] = \"ForeignKey\";\n    },\n    AttrUnique: function(factType) {\n        var $elf = this, _fromIdx = this.input.idx, baseTable, fieldID, required, uniqueField;\n        required = this.anything();\n        baseTable = this._applyWithArgs(\"GetTable\", factType);\n        this._opt(function() {\n            this._pred(\"Attribute\" === baseTable || \"ForeignKey\" === baseTable);\n            return baseTable = this._applyWithArgs(\"GetTable\", factType[0][1]);\n        });\n        uniqueField = this._applyWithArgs(\"FactTypeFieldName\", factType);\n        fieldID = this._applyWithArgs(\"GetTableFieldID\", baseTable, uniqueField);\n        this._pred(!1 !== fieldID);\n        return baseTable.fields[fieldID].index = \"UNIQUE\";\n    },\n    AttrSynonym: function(term) {\n        var $elf = this, _fromIdx = this.input.idx, synonym;\n        synonym = this.anything();\n        return this.synonyms[synonym[1]] = term[1];\n    },\n    AttrSynonymousForm: function(factType) {\n        var $elf = this, _fromIdx = this.input.idx, fieldName, fkTable, fromTable, linkRef, linkTable, references, resourceName, synForm;\n        synForm = this.anything();\n        this._applyWithArgs(\"AddFactType\", synForm, factType);\n        return this._or(function() {\n            return this._pred(this.IsPrimitive(factType[0]) || this.IsPrimitive(synForm[0]));\n        }, function() {\n            resourceName = this._applyWithArgs(\"GetResourceName\", factType);\n            (function() {\n                null == this.synonymousForms[resourceName] && (this.synonymousForms[resourceName] = []);\n                return this.synonymousForms[resourceName].push(synForm);\n            }).call(this);\n            fieldName = this._applyWithArgs(\"FactTypeFieldName\", factType);\n            return this._or(function() {\n                this._pred(2 == factType.length);\n                resourceName = this._applyWithArgs(\"GetResourceName\", factType[0][1]);\n                return this._applyWithArgs(\"AddRelationship\", resourceName, synForm.slice(1), fieldName);\n            }, function() {\n                fkTable = this._applyWithArgs(\"GetTable\", synForm[2][1]);\n                references = this._opt(function() {\n                    this._pred(!fkTable.primitive);\n                    return this._applyWithArgs(\"GetReference\", fkTable);\n                });\n                this._applyWithArgs(\"AddRelationship\", resourceName, synForm.slice(1), synForm[2][1], references);\n                return this._opt(function() {\n                    this._pred(references);\n                    linkTable = this._applyWithArgs(\"GetTable\", factType);\n                    fromTable = this._applyWithArgs(\"GetTable\", synForm[0][1]);\n                    linkRef = this._applyWithArgs(\"GetReference\", linkTable, fieldName);\n                    return this._applyWithArgs(\"AddRelationship\", fromTable, synForm.slice(1), references.fieldName, linkRef);\n                });\n            });\n        });\n    },\n    AttrTermForm: function(factType) {\n        var $elf = this, _fromIdx = this.input.idx, linkResourceName, linkTable, termForm;\n        termForm = this.anything();\n        linkResourceName = this._applyWithArgs(\"GetResourceName\", factType);\n        linkTable = this._applyWithArgs(\"GetTable\", factType);\n        return function() {\n            var linkVerb;\n            this.termForms[factType] = termForm;\n            this.synonyms[termForm[1]] = linkResourceName;\n            for (var i = 0; i < factType.length; i++) if (\"Term\" === factType[i][0]) {\n                var hasFactType = [ termForm, [ \"Verb\", \"has\", !1 ], factType[i] ], extraFactType = [ termForm, linkVerb || [ \"Verb\", \"has\" ], factType[i] ];\n                this.AddFactType(hasFactType, extraFactType);\n                linkVerb && \"has\" !== linkVerb[1] && this.AddFactType(extraFactType, extraFactType);\n                var termTable = this.GetTable(factType[i][1]);\n                if (termTable.primitive) this.tables[this.GetResourceName(extraFactType)] = \"Attribute\"; else {\n                    this.tables[this.GetResourceName(extraFactType)] = \"ForeignKey\";\n                    var fieldName = this.FactTypeFieldName(extraFactType), references = this.GetReference(linkTable, fieldName);\n                    this.AddRelationship(termTable, [ [ \"Verb\", \"has\" ], termForm ], termTable.idField, references);\n                }\n            } else \"Verb\" === factType[i][0] && (linkVerb = factType[i]);\n        }.call(this);\n    },\n    AttrNecessity: function(tableID) {\n        var $elf = this, _fromIdx = this.input.idx;\n        return this._apply(\"Rule\");\n    },\n    AttrDefinition: function(factType) {\n        var $elf = this, _fromIdx = this.input.idx, baseTable, checks, fieldID, uniqueField, values;\n        return this._or(function() {\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"Enum\");\n                return values = this._many1(function() {\n                    return this._apply(\"Value\");\n                });\n            });\n            baseTable = this._applyWithArgs(\"GetTable\", factType);\n            this._opt(function() {\n                this._pred(\"Attribute\" === baseTable || \"ForeignKey\" === baseTable);\n                return baseTable = this._applyWithArgs(\"GetTable\", factType[0][1]);\n            });\n            this._pred(baseTable);\n            uniqueField = this._applyWithArgs(\"FactTypeFieldName\", factType);\n            fieldID = this._applyWithArgs(\"GetTableFieldID\", baseTable, uniqueField);\n            this._pred(!1 !== fieldID);\n            checks = baseTable.fields[fieldID].checks = baseTable.fields[fieldID].checks || [];\n            return checks.push([ \"In\", [ \"Field\", baseTable.fields[fieldID].fieldName ] ].concat(values));\n        }, function() {\n            return this.anything();\n        });\n    },\n    FactType: function() {\n        var $elf = this, _fromIdx = this.input.idx, attributes, factType, factTypePart, fieldID, fieldName, fkTable, identifier, identifierTable, linkHasFactType, linkTable, linkVerb, linkVerbFactType, negated, references, resourceName, uniqueFields, verb;\n        this._lookahead(function() {\n            return factType = this._many1(function() {\n                factTypePart = this.anything();\n                this._lookahead(function() {\n                    return attributes = this.anything();\n                });\n                return factTypePart;\n            });\n        });\n        this._applyWithArgs(\"AddFactType\", factType, factType);\n        this._or(function() {\n            this._pred(this.IsPrimitive(factType[0]));\n            return this._many1(function() {\n                factTypePart = this.anything();\n                return this._lookahead(function() {\n                    return attributes = this.anything();\n                });\n            });\n        }, function() {\n            resourceName = this._applyWithArgs(\"GetResourceName\", factType);\n            return this._or(function() {\n                this._pred(2 == factType.length);\n                this._many1(function() {\n                    factTypePart = this.anything();\n                    return this._lookahead(function() {\n                        return attributes = this.anything();\n                    });\n                });\n                identifierTable = this._applyWithArgs(\"GetTable\", factType[0][1]);\n                fieldName = this._applyWithArgs(\"FactTypeFieldName\", factType);\n                this._applyWithArgs(\"AddTableField\", identifierTable, fieldName, \"Boolean\", !0);\n                delete this.relationships[resourceName];\n                this.tables[resourceName] = \"BooleanAttribute\";\n                return this._applyWithArgs(\"AddRelationship\", identifierTable, factType.slice(1), fieldName);\n            }, function() {\n                linkTable = this._applyWithArgs(\"CreateTable\", resourceName, _(factType).map(1).join(\" \"));\n                uniqueFields = [];\n                this._many1(function() {\n                    return this._or(function() {\n                        identifier = this._apply(\"Identifier\");\n                        linkHasFactType = [ [ \"Term\", resourceName ], [ \"Verb\", \"has\" ], [ \"Term\", identifier.name ] ];\n                        linkVerbFactType = [ [ \"Term\", resourceName ], linkVerb, [ \"Term\", identifier.name ] ];\n                        fieldName = this._or(function() {\n                            this._pred(linkVerb);\n                            return this._applyWithArgs(\"FactTypeFieldName\", linkVerbFactType);\n                        }, function() {\n                            return this._applyWithArgs(\"FactTypeFieldName\", linkHasFactType);\n                        });\n                        uniqueFields.push(fieldName);\n                        fkTable = this._applyWithArgs(\"GetTable\", identifier.name);\n                        references = this._or(function() {\n                            this._pred(fkTable.primitive);\n                            this._applyWithArgs(\"AddTableField\", linkTable, fieldName, fkTable.primitive, !0);\n                            return null;\n                        }, function() {\n                            references = this._applyWithArgs(\"GetReference\", fkTable);\n                            fieldID = this._applyWithArgs(\"AddTableField\", linkTable, fieldName, \"ForeignKey\", !0, null, references);\n                            return references;\n                        });\n                        this._applyWithArgs(\"AddRelationship\", resourceName, linkHasFactType.slice(2), fieldName, references);\n                        return this._opt(function() {\n                            this._pred(linkVerb);\n                            return this._applyWithArgs(\"AddRelationship\", resourceName, linkVerbFactType.slice(1), fieldName, references);\n                        });\n                    }, function() {\n                        this._form(function() {\n                            this._applyWithArgs(\"exactly\", \"Verb\");\n                            verb = this.anything();\n                            return negated = this.anything();\n                        });\n                        return linkVerb = [ \"Verb\", verb ];\n                    });\n                });\n                return linkTable.indexes.push({\n                    type: \"UNIQUE\",\n                    fields: uniqueFields\n                });\n            });\n        });\n        return factType;\n    },\n    Cardinality: function() {\n        var $elf = this, _fromIdx = this.input.idx, cardinality;\n        this._form(function() {\n            (function() {\n                switch (this.anything()) {\n                  case \"Cardinality\":\n                    return \"Cardinality\";\n\n                  case \"MaximumCardinality\":\n                    return \"MaximumCardinality\";\n\n                  case \"MinimumCardinality\":\n                    return \"MinimumCardinality\";\n\n                  default:\n                    throw this._fail();\n                }\n            }).call(this);\n            return cardinality = this._apply(\"Number\");\n        });\n        return cardinality;\n    },\n    Variable: function() {\n        var $elf = this, _fromIdx = this.input.idx, bind, checkConceptTypeResolver, identifier, num, query, selectBody, varNum, whereBody;\n        this._form(function() {\n            this._applyWithArgs(\"exactly\", \"Variable\");\n            num = this._apply(\"Number\");\n            identifier = this._apply(\"Identifier\");\n            query = this._or(function() {\n                bind = this.bindAttributes[num];\n                this._pred(bind);\n                selectBody = _.clone(bind.binding);\n                return [ \"SelectQuery\", [ \"Select\", [ selectBody ] ] ];\n            }, function() {\n                varNum = \".\" + num;\n                query = [ \"SelectQuery\", [ \"Select\", [] ] ];\n                checkConceptTypeResolver = this._applyWithArgs(\"CreateConceptTypesResolver\", query, identifier, varNum);\n                return query;\n            });\n            return this._opt(function() {\n                checkConceptTypeResolver && checkConceptTypeResolver();\n                whereBody = this._apply(\"RulePart\");\n                return this._applyWithArgs(\"AddWhereClause\", query, whereBody);\n            });\n        });\n        this._opt(function() {\n            checkConceptTypeResolver && checkConceptTypeResolver();\n            whereBody = this._apply(\"RulePart\");\n            return this._applyWithArgs(\"AddWhereClause\", query, whereBody);\n        });\n        return this._or(function() {\n            this._pred(selectBody && !query.some(function(p) {\n                return \"From\" === p[0];\n            }));\n            this._opt(function() {\n                whereBody = query.find(function(part) {\n                    return \"Where\" === part[0];\n                });\n                this._pred(whereBody);\n                return selectBody.whereBody = whereBody[1];\n            });\n            return selectBody;\n        }, function() {\n            return query;\n        });\n    },\n    RoleBindings: function(actualFactType) {\n        var $elf = this, _fromIdx = this.input.idx, binds;\n        binds = [];\n        (function() {\n            for (var i = 0; i < actualFactType.length; i += 2) {\n                var j = actualFactType.findIndex(function(p) {\n                    return p[3] === i;\n                });\n                binds[j / 2] = this.RoleBinding(actualFactType[j][1]);\n            }\n        }).call(this);\n        this._apply(\"end\");\n        return binds;\n    },\n    RoleBinding: function(baseTermName) {\n        var $elf = this, _fromIdx = this.input.idx, baseBind, binding, conceptTypeResolver, data, identifier, nativeNameBinding, number;\n        this._form(function() {\n            this._applyWithArgs(\"exactly\", \"RoleBinding\");\n            identifier = this._apply(\"Identifier\");\n            return this._or(function() {\n                return number = this._apply(\"number\");\n            }, function() {\n                return data = this._apply(\"Value\");\n            }, function() {\n                return nativeNameBinding = this._applyWithArgs(\"NativeNameBinding\", baseTermName);\n            });\n        });\n        binding = this._or(function() {\n            this._pred(data);\n            return data;\n        }, function() {\n            this._pred(nativeNameBinding);\n            return nativeNameBinding;\n        }, function() {\n            baseBind = this.bindAttributes[number];\n            this._pred(baseBind);\n            return baseBind.binding;\n        }, function() {\n            conceptTypeResolver = this.conceptTypeResolvers[identifier.name + \".\" + number];\n            return [ \"ReferencedField\", baseTermName + \".\" + number, identifier.name ];\n        });\n        return {\n            identifier: identifier,\n            number: number,\n            data: data,\n            binding: binding,\n            used: function() {\n                conceptTypeResolver && conceptTypeResolver(baseTermName);\n            }\n        };\n    },\n    NativeNameBinding: function(baseTermName) {\n        var $elf = this, _fromIdx = this.input.idx, name;\n        name = this._apply(\"Identifier\");\n        this._pred(\"Name\" === name.type);\n        this._pred(this.IsPrimitive(this.ReconstructIdentifier(name)));\n        this._pred(this.sbvrTypes[baseTermName] && this.sbvrTypes[baseTermName].nativeNames && this.sbvrTypes[baseTermName].nativeNames[name.name]);\n        return this.sbvrTypes[baseTermName].nativeNames[name.name];\n    },\n    NativeProperty: function(actualFactType) {\n        var $elf = this, _fromIdx = this.input.idx, binds, negated, operator, primitive, property, verb;\n        this._pred(this.IsPrimitive(actualFactType[0]));\n        this._pred(this.IsPrimitive(actualFactType[2]));\n        binds = this._applyWithArgs(\"RoleBindings\", actualFactType);\n        negated = actualFactType[1][2];\n        operator = this._or(function() {\n            this._pred(negated);\n            return \"NotEquals\";\n        }, function() {\n            return \"Equals\";\n        });\n        this._pred(2 == binds.length);\n        primitive = actualFactType[0][1];\n        verb = actualFactType[1][1];\n        property = actualFactType[2][1];\n        this._pred(this.sbvrTypes[primitive] && this.sbvrTypes[primitive].nativeProperties && this.sbvrTypes[primitive].nativeProperties[verb] && this.sbvrTypes[primitive].nativeProperties[verb][property]);\n        return [ operator, [ \"Boolean\", !0 ], [ \"Boolean\", !0 ] ];\n    },\n    NativeFactType: function(actualFactType) {\n        var $elf = this, _fromIdx = this.input.idx, binds, comparison, negated, primitive, secondPrimitive, verb;\n        this._pred(3 == actualFactType.length);\n        this._pred(this.IsPrimitive(actualFactType[0]));\n        this._pred(this.IsPrimitive(actualFactType[2]));\n        return this._or(function() {\n            binds = this._applyWithArgs(\"RoleBindings\", actualFactType);\n            this._pred(2 == binds.length);\n            primitive = actualFactType[0][1];\n            verb = actualFactType[1][1];\n            secondPrimitive = actualFactType[2][1];\n            this._pred(this.sbvrTypes[primitive] && this.sbvrTypes[primitive].nativeFactTypes && this.sbvrTypes[primitive].nativeFactTypes[secondPrimitive] && this.sbvrTypes[primitive].nativeFactTypes[secondPrimitive][verb]);\n            comparison = this.sbvrTypes[primitive].nativeFactTypes[secondPrimitive][verb](binds[0].binding, binds[1].binding);\n            negated = actualFactType[1][2];\n            return this._or(function() {\n                this._pred(negated);\n                return [ \"Not\", comparison ];\n            }, function() {\n                return comparison;\n            });\n        }, function() {\n            return this._applyWithArgs(\"foreign\", ___NativeFactTypeMatchingFailed___, \"die\");\n        });\n    },\n    LinkTableAlias: function() {\n        var $elf = this, _fromIdx = this.input.idx, bindNumbers, binding, factType, identifierName, identifierType, mapping, partAlias, verb, vocab;\n        this._form(function() {\n            return bindNumbers = this._many1(function() {\n                binding = this.anything();\n                return binding.number;\n            });\n        });\n        this._form(function() {\n            return factType = this._many(function() {\n                this._form(function() {\n                    return partAlias = this._or(function() {\n                        switch (this.anything()) {\n                          case \"Verb\":\n                            verb = this.anything();\n                            this.anything();\n                            return verb;\n\n                          default:\n                            throw this._fail();\n                        }\n                    }, function() {\n                        identifierType = this.anything();\n                        identifierName = this.anything();\n                        vocab = this.anything();\n                        mapping = this._opt(function() {\n                            return this.anything();\n                        });\n                        return identifierName + \".\" + bindNumbers.shift();\n                    });\n                });\n                return partAlias;\n            });\n        });\n        return factType.join(\"-\");\n    },\n    LinkTable: function(actualFactType) {\n        var $elf = this, _fromIdx = this.input.idx, binds, linkTable, query, tableAlias;\n        binds = this._applyWithArgs(\"RoleBindings\", actualFactType);\n        tableAlias = this._applyWithArgs(\"LinkTableAlias\", binds, actualFactType);\n        linkTable = this._applyWithArgs(\"GetTable\", actualFactType);\n        query = [ \"SelectQuery\", [ \"Select\", [] ], [ \"From\", [ linkTable.name, tableAlias ] ] ];\n        binds.forEach(function(bind, i) {\n            var baseIdentifierName = actualFactType[2 * i][1];\n            if (!$elf.GetTable(baseIdentifierName).primitive) {\n                var relationships = $elf.relationships[linkTable.resourceName];\n                $elf.ResolveSynonym(baseIdentifierName).split(\"-\").forEach(function(partName) {\n                    relationships = relationships[partName];\n                });\n                var relationshipMapping = relationships.$;\n                $elf.CreateLinkTableResolver(query, tableAlias, bind, relationshipMapping);\n            }\n        });\n        return [ \"Exists\", query ];\n    },\n    ForeignKey: function(actualFactType) {\n        var $elf = this, _fromIdx = this.input.idx, bindFrom, bindTo, binds, fieldName, tableTo;\n        this._pred(\"ForeignKey\" == this.GetTable(actualFactType));\n        this._or(function() {\n            binds = this._applyWithArgs(\"RoleBindings\", actualFactType);\n            this._pred(2 == binds.length);\n            bindFrom = binds[0];\n            bindTo = binds[1];\n            fieldName = this._applyWithArgs(\"FactTypeFieldName\", actualFactType);\n            return tableTo = this._applyWithArgs(\"GetTable\", actualFactType[2][1]);\n        }, function() {\n            return this._applyWithArgs(\"foreign\", ___ForeignKeyMatchingFailed___, \"die\");\n        });\n        (function() {\n            bindFrom.used();\n            return bindTo.used();\n        }).call(this);\n        return [ \"Equals\", [ \"ReferencedField\", bindFrom.binding[1], fieldName ], [ \"ReferencedField\", bindTo.binding[1], tableTo.idField ] ];\n    },\n    BooleanAttribute: function(actualFactType) {\n        var $elf = this, _fromIdx = this.input.idx, attributeName, binds, negated;\n        this._pred(\"BooleanAttribute\" == this.GetTable(actualFactType));\n        this._or(function() {\n            binds = this._applyWithArgs(\"RoleBindings\", actualFactType);\n            this._pred(1 == binds.length);\n            attributeName = this._applyWithArgs(\"FactTypeFieldName\", actualFactType);\n            return negated = actualFactType[1][2];\n        }, function() {\n            console.error(this.input);\n            return this._applyWithArgs(\"foreign\", ___BooleanAttributeMatchingFailed___, \"die\");\n        });\n        binds[0].used();\n        return [ \"Equals\", [ \"ReferencedField\", binds[0].binding[1], attributeName ], [ \"Boolean\", !negated ] ];\n    },\n    Attribute: function(actualFactType) {\n        var $elf = this, _fromIdx = this.input.idx, bind, bindAttr, bindReal, binds, negated, operator;\n        this._pred(\"Attribute\" == this.GetTable(actualFactType));\n        this._or(function() {\n            binds = this._applyWithArgs(\"RoleBindings\", actualFactType);\n            this._pred(2 == binds.length);\n            bindReal = binds[0];\n            return bindAttr = binds[1];\n        }, function() {\n            return this._applyWithArgs(\"foreign\", ___AttributeMatchingFailed___, \"die\");\n        });\n        negated = actualFactType[1][2];\n        operator = this._or(function() {\n            this._pred(negated);\n            return \"NotEquals\";\n        }, function() {\n            return \"Equals\";\n        });\n        return this._or(function() {\n            bind = this.bindAttributes[bindAttr.number];\n            (function() {\n                bindReal.used();\n                return bindAttr.binding = [ \"ReferencedField\", bindReal.binding[1], bind.binding[2] ];\n            }).call(this);\n            this._pred(!_.isEqual(bindAttr.binding, bind.binding));\n            return [ operator, bindAttr.binding, bind.binding ];\n        }, function() {\n            return [ operator, [ \"Boolean\", !0 ], [ \"Boolean\", !0 ] ];\n        });\n    },\n    AtomicFormulation: function() {\n        var $elf = this, _fromIdx = this.input.idx, actualFactType, factType, whereClause;\n        this._form(function() {\n            this._applyWithArgs(\"exactly\", \"AtomicFormulation\");\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"FactType\");\n                return factType = this._many1(function() {\n                    return this.anything();\n                });\n            });\n            actualFactType = this._applyWithArgs(\"MappedFactType\", factType);\n            return whereClause = this._or(function() {\n                return this._applyWithArgs(\"NativeProperty\", actualFactType);\n            }, function() {\n                return this._applyWithArgs(\"NativeFactType\", actualFactType);\n            }, function() {\n                return this._applyWithArgs(\"ForeignKey\", actualFactType);\n            }, function() {\n                return this._applyWithArgs(\"BooleanAttribute\", actualFactType);\n            }, function() {\n                return this._applyWithArgs(\"Attribute\", actualFactType);\n            }, function() {\n                return this._applyWithArgs(\"LinkTable\", actualFactType);\n            });\n        });\n        return whereClause;\n    },\n    AtLeast: function() {\n        var $elf = this, _fromIdx = this.input.idx, minCard, variable, where;\n        this._form(function() {\n            this._applyWithArgs(\"exactly\", \"AtLeastNQuantification\");\n            minCard = this._apply(\"Cardinality\");\n            return variable = this._apply(\"Variable\");\n        });\n        where = this._or(function() {\n            this._pred(0 == minCard);\n            return [ \"Boolean\", !0 ];\n        }, function() {\n            this._pred(\"SelectQuery\" == variable[0] && 0 == variable[1][1].length);\n            variable[1][1].push([ \"Count\", \"*\" ]);\n            return [ \"GreaterThanOrEqual\", variable, [ \"Number\", minCard ] ];\n        }, function() {\n            this._pred(minCard > 1);\n            return [ \"Boolean\", !1 ];\n        }, function() {\n            return [ \"Exists\", variable ];\n        });\n        return this._or(function() {\n            this._pred(variable.whereBody);\n            return [ \"And\", variable.whereBody, where ];\n        }, function() {\n            return where;\n        });\n    },\n    Exactly: function() {\n        var $elf = this, _fromIdx = this.input.idx, card, exists, variable, where;\n        this._form(function() {\n            this._applyWithArgs(\"exactly\", \"ExactQuantification\");\n            card = this._apply(\"Cardinality\");\n            return variable = this._apply(\"Variable\");\n        });\n        where = this._or(function() {\n            this._pred(\"SelectQuery\" == variable[0] && 0 == variable[1][1].length);\n            variable[1][1].push([ \"Count\", \"*\" ]);\n            return [ \"Equals\", variable, [ \"Number\", card ] ];\n        }, function() {\n            exists = [ \"Exists\", variable ];\n            return this._or(function() {\n                this._pred(0 == card);\n                return [ \"Not\", exists ];\n            }, function() {\n                this._pred(1 == card);\n                return exists;\n            }, function() {\n                return [ \"Boolean\", !1 ];\n            });\n        });\n        return this._or(function() {\n            this._pred(variable.whereBody);\n            return [ \"And\", variable.whereBody, where ];\n        }, function() {\n            return where;\n        });\n    },\n    Range: function() {\n        var $elf = this, _fromIdx = this.input.idx, exists, maxCard, minCard, variable, where;\n        this._form(function() {\n            this._applyWithArgs(\"exactly\", \"NumericalRangeQuantification\");\n            minCard = this._apply(\"Cardinality\");\n            maxCard = this._apply(\"Cardinality\");\n            return variable = this._apply(\"Variable\");\n        });\n        where = this._or(function() {\n            this._pred(\"SelectQuery\" == variable[0] && 0 == variable[1][1].length);\n            variable[1][1].push([ \"Count\", \"*\" ]);\n            return [ \"Between\", variable, [ \"Number\", minCard ], [ \"Number\", maxCard ] ];\n        }, function() {\n            exists = [ \"Exists\", variable ];\n            return this._or(function() {\n                this._pred(0 == minCard);\n                return this._or(function() {\n                    this._pred(0 == maxCard);\n                    return [ \"Not\", exists ];\n                }, function() {\n                    return [ \"Boolean\", !0 ];\n                });\n            }, function() {\n                this._pred(1 == minCard);\n                return exists;\n            }, function() {\n                return [ \"Boolean\", !1 ];\n            });\n        });\n        return this._or(function() {\n            this._pred(variable.whereBody);\n            return [ \"And\", variable.whereBody, where ];\n        }, function() {\n            return where;\n        });\n    },\n    Disjunction: function() {\n        var $elf = this, _fromIdx = this.input.idx, first, rest;\n        this._form(function() {\n            this._applyWithArgs(\"exactly\", \"Disjunction\");\n            first = this._apply(\"RulePart\");\n            return rest = this._many1(function() {\n                return this._apply(\"RulePart\");\n            });\n        });\n        return [ \"Or\", first ].concat(rest);\n    },\n    Conjunction: function() {\n        var $elf = this, _fromIdx = this.input.idx, first, rest;\n        this._form(function() {\n            this._applyWithArgs(\"exactly\", \"Conjunction\");\n            first = this._apply(\"RulePart\");\n            return rest = this._many1(function() {\n                return this._apply(\"RulePart\");\n            });\n        });\n        return [ \"And\", first ].concat(rest);\n    },\n    Exists: function() {\n        var $elf = this, _fromIdx = this.input.idx, variable, where;\n        this._form(function() {\n            this._applyWithArgs(\"exactly\", \"ExistentialQuantification\");\n            return variable = this._apply(\"Variable\");\n        });\n        where = [ \"Exists\", variable ];\n        return this._or(function() {\n            this._pred(variable.whereBody);\n            return [ \"And\", variable.whereBody, where ];\n        }, function() {\n            return where;\n        });\n    },\n    Negation: function() {\n        var $elf = this, _fromIdx = this.input.idx, whereBody;\n        this._form(function() {\n            this._applyWithArgs(\"exactly\", \"LogicalNegation\");\n            return whereBody = this._apply(\"RulePart\");\n        });\n        return [ \"Not\", whereBody ];\n    },\n    RulePart: function() {\n        var $elf = this, _fromIdx = this.input.idx, x;\n        return this._or(function() {\n            return this._apply(\"AtomicFormulation\");\n        }, function() {\n            return this._apply(\"AtLeast\");\n        }, function() {\n            return this._apply(\"Exactly\");\n        }, function() {\n            return this._apply(\"Exists\");\n        }, function() {\n            return this._apply(\"Negation\");\n        }, function() {\n            return this._apply(\"Range\");\n        }, function() {\n            return this._apply(\"Disjunction\");\n        }, function() {\n            return this._apply(\"Conjunction\");\n        }, function() {\n            x = this.anything();\n            console.error(\"Hit unhandled operation:\", x);\n            return this._pred(!1);\n        });\n    },\n    RuleBody: function() {\n        var $elf = this, _fromIdx = this.input.idx, rule;\n        this._form(function() {\n            (function() {\n                switch (this.anything()) {\n                  case \"NecessityFormulation\":\n                    return \"NecessityFormulation\";\n\n                  case \"ObligationFormulation\":\n                    return \"ObligationFormulation\";\n\n                  case \"PermissibilityFormulation\":\n                    return \"PermissibilityFormulation\";\n\n                  case \"PossibilityFormulation\":\n                    return \"PossibilityFormulation\";\n\n                  default:\n                    throw this._fail();\n                }\n            }).call(this);\n            return rule = this._apply(\"RulePart\");\n        });\n        return rule;\n    },\n    ReconstructIdentifier: function(bindIdentifier) {\n        var $elf = this, _fromIdx = this.input.idx;\n        return [ bindIdentifier.type, bindIdentifier.name, bindIdentifier.vocab ];\n    },\n    ProcessAtomicFormulations: function() {\n        var $elf = this, _fromIdx = this.input.idx;\n        this.bindAttributes = [];\n        this.bindAttributeDepth = [];\n        this.nonPrimitiveExists = !1;\n        this._lookahead(function() {\n            return this._applyWithArgs(\"ProcessAtomicFormulationsRecurse\", 0, \"ProcessAtomicFormulationsAttributes\");\n        });\n        this._lookahead(function() {\n            return this._applyWithArgs(\"ProcessAtomicFormulationsRecurse\", 0, \"ProcessAtomicFormulationsNonPrimitive\");\n        });\n        return this._lookahead(function() {\n            return this._applyWithArgs(\"ProcessAtomicFormulationsRecurse\", 0, \"ProcessAtomicFormulationsNativeProperties\");\n        });\n    },\n    ProcessAtomicFormulationsRecurse: function(depth, rule) {\n        var $elf = this, _fromIdx = this.input.idx, actualFactType, factType, unmappedFactType;\n        return this._many(function() {\n            return this._or(function() {\n                this._pred(Array.isArray(this.input.hd));\n                return this._form(function() {\n                    return this._or(function() {\n                        switch (this.anything()) {\n                          case \"AtomicFormulation\":\n                            this._form(function() {\n                                this._applyWithArgs(\"exactly\", \"FactType\");\n                                return factType = this._many1(function() {\n                                    return this.anything();\n                                });\n                            });\n                            unmappedFactType = this._applyWithArgs(\"UnmappedFactType\", factType);\n                            actualFactType = this._applyWithArgs(\"MappedFactType\", factType);\n                            return this._applyWithArgs(rule, depth, unmappedFactType, actualFactType);\n\n                          default:\n                            throw this._fail();\n                        }\n                    }, function() {\n                        return this._applyWithArgs(\"ProcessAtomicFormulationsRecurse\", depth + 1, rule);\n                    });\n                });\n            }, function() {\n                return this.anything();\n            });\n        });\n    },\n    ProcessAtomicFormulationsNonPrimitive: function(depth, unmappedFactType, actualFactType) {\n        var $elf = this, _fromIdx = this.input.idx, binds;\n        binds = this._applyWithArgs(\"RoleBindings\", actualFactType);\n        return function() {\n            for (var i = 0; i < binds.length; i++) if (!this.IsPrimitive(this.ReconstructIdentifier(binds[i].identifier))) {\n                this.nonPrimitiveExists = !0;\n                break;\n            }\n        }.call(this);\n    },\n    ProcessAtomicFormulationsAttributes: function(depth, unmappedFactType, actualFactType) {\n        var $elf = this, _fromIdx = this.input.idx, attrBinding, attrFieldName, baseAttrFactType, baseBinding, binds, tableAlias;\n        binds = this._applyWithArgs(\"RoleBindings\", actualFactType);\n        return this._or(function() {\n            this._pred(this.attributes.hasOwnProperty(unmappedFactType) && this.attributes[unmappedFactType]);\n            baseBinding = binds.find(function(bind) {\n                return !$elf.IsPrimitive($elf.ReconstructIdentifier(bind.identifier));\n            });\n            attrBinding = binds.find(function(bind) {\n                return $elf.IsPrimitive($elf.ReconstructIdentifier(bind.identifier)) && (null == $elf.bindAttributeDepth[bind.number] || $elf.bindAttributeDepth[bind.number] > depth);\n            });\n            baseAttrFactType = _.cloneDeep(unmappedFactType);\n            baseAttrFactType[2][1] = attrBinding.identifier.name;\n            attrFieldName = this._applyWithArgs(\"FactTypeFieldName\", baseAttrFactType);\n            return function() {\n                this.bindAttributeDepth[attrBinding.number] = depth;\n                return this.bindAttributes[attrBinding.number] = {\n                    binding: [ \"ReferencedField\", baseBinding.binding[1], attrFieldName ]\n                };\n            }.call(this);\n        }, function() {\n            this._pred(binds.some(function(bind) {\n                return !$elf.IsPrimitive($elf.ReconstructIdentifier(bind.identifier));\n            }));\n            tableAlias = this._applyWithArgs(\"LinkTableAlias\", binds, actualFactType);\n            return function() {\n                for (var i = 0; i < actualFactType.length; i += 2) {\n                    var table = this.GetTable(actualFactType[i][1]), bindNumber = binds[i / 2].number;\n                    if (table && table.primitive && (null == this.bindAttributeDepth[bindNumber] || this.bindAttributeDepth[bindNumber] > depth)) {\n                        this.bindAttributeDepth[bindNumber] = depth;\n                        this.bindAttributes[bindNumber] = {\n                            binding: [ \"ReferencedField\", tableAlias, actualFactType[i][1] ]\n                        };\n                    }\n                }\n            }.call(this);\n        });\n    },\n    ProcessAtomicFormulationsNativeProperties: function(depth, unmappedFactType, actualFactType) {\n        var $elf = this, _fromIdx = this.input.idx, binding, binds, primitive, property, verb;\n        binds = this._applyWithArgs(\"RoleBindings\", actualFactType);\n        this._pred(binds.every(function(bind) {\n            return $elf.IsPrimitive($elf.ReconstructIdentifier(bind.identifier));\n        }));\n        this._pred(2 == binds.length);\n        primitive = actualFactType[0][1];\n        verb = actualFactType[1][1];\n        property = actualFactType[2][1];\n        this._pred(this.sbvrTypes[primitive] && this.sbvrTypes[primitive].nativeProperties && this.sbvrTypes[primitive].nativeProperties[verb] && this.sbvrTypes[primitive].nativeProperties[verb][property]);\n        binding = this.sbvrTypes[primitive].nativeProperties[verb][property](binds[0].binding, binds[1].binding);\n        return function() {\n            this.bindAttributeDepth[binds[1].number] = depth;\n            return this.bindAttributes[binds[1].number] = {\n                binding: binding\n            };\n        }.call(this);\n    },\n    Rule: function() {\n        var $elf = this, _fromIdx = this.input.idx, ruleBody, ruleText;\n        this._apply(\"ResetRuleState\");\n        return this._form(function() {\n            this._applyWithArgs(\"exactly\", \"Rule\");\n            this._lookahead(function() {\n                return this._apply(\"ProcessAtomicFormulations\");\n            });\n            ruleBody = this._or(function() {\n                this._pred(this.nonPrimitiveExists);\n                return this._apply(\"RuleBody\");\n            }, function() {\n                return this.anything();\n            });\n            this._form(function() {\n                this._applyWithArgs(\"exactly\", \"StructuredEnglish\");\n                return ruleText = this.anything();\n            });\n            return this._opt(function() {\n                this._pred(this.nonPrimitiveExists);\n                return this.rules.push([ \"Rule\", [ \"Body\", ruleBody ], [ \"StructuredEnglish\", ruleText ] ]);\n            });\n        });\n    },\n    Process: function() {\n        var $elf = this, _fromIdx = this.input.idx, attributes, factType, hasDependants, identifierName, type, vocab;\n        this._form(function() {\n            this._applyWithArgs(\"exactly\", \"Model\");\n            return this._many1(function() {\n                return this._or(function() {\n                    return this._form(function() {\n                        return this._or(function() {\n                            switch (this.anything()) {\n                              case \"Vocabulary\":\n                                vocab = this.anything();\n                                return attributes = this.anything();\n\n                              default:\n                                throw this._fail();\n                            }\n                        }, function() {\n                            type = function() {\n                                switch (this.anything()) {\n                                  case \"Name\":\n                                    return \"Name\";\n\n                                  case \"Term\":\n                                    return \"Term\";\n\n                                  default:\n                                    throw this._fail();\n                                }\n                            }.call(this);\n                            identifierName = this._apply(\"IdentifierName\");\n                            vocab = this.anything();\n                            this._applyWithArgs(\"AddVocabulary\", vocab);\n                            return this._applyWithArgs(\"Attributes\", [ type, identifierName, vocab ]);\n                        }, function() {\n                            switch (this.anything()) {\n                              case \"FactType\":\n                                factType = this._apply(\"FactType\");\n                                return this._applyWithArgs(\"Attributes\", factType);\n\n                              default:\n                                throw this._fail();\n                            }\n                        });\n                    });\n                }, function() {\n                    return this._apply(\"Rule\");\n                });\n            });\n        });\n        hasDependants = {};\n        _.forEach(this.tables, function(table) {\n            _.forEach(table.fields, function(field) {\n                \"ForeignKey\" !== field.dataType && \"ConceptType\" !== field.dataType || (hasDependants[field.references.resourceName] = !0);\n            });\n        });\n        return {\n            tables: _.omitBy(this.tables, function(table, resourceName) {\n                return \"string\" == typeof table || table.primitive && !hasDependants[resourceName];\n            }),\n            functions: {\n                trigger_update_modified_at: updateModifiedAt\n            },\n            relationships: this.relationships,\n            rules: this.rules,\n            synonyms: this.synonyms\n        };\n    },\n    GetReference: function(table, field) {\n        var $elf = this, _fromIdx = this.input.idx;\n        return {\n            resourceName: table.resourceName,\n            fieldName: field || table.idField\n        };\n    }\n});\n\nLF2AbstractSQL.CreateTable = function(resourceName, modelName) {\n    var table = {\n        fields: [],\n        primitive: !1,\n        name: null,\n        indexes: [],\n        idField: null,\n        resourceName: resourceName,\n        modelName: modelName,\n        triggers: []\n    };\n    this.AddTableField(table, \"created at\", \"Date Time\", !0, null, null, \"CURRENT_TIMESTAMP\");\n    this.AddTableField(table, \"modified at\", \"Date Time\", !0, null, null, \"CURRENT_TIMESTAMP\");\n    this.AddTableTrigger(table, \"BEFORE\", \"UPDATE\", \"ROW\", \"trigger_update_modified_at\");\n    return this.tables[resourceName] = table;\n};\n\nLF2AbstractSQL.AddTableTrigger = function(table, when, operation, level, fnName) {\n    table.triggers.push({\n        when: when,\n        operation: operation,\n        level: level,\n        fnName: fnName\n    });\n};\n\nLF2AbstractSQL.AddTableField = function(table, fieldName, dataType, required, index, references, defaultValue) {\n    var fieldID = this.GetTableFieldID(table, fieldName);\n    if (!1 === fieldID) {\n        var f = {\n            dataType: dataType,\n            fieldName: fieldName,\n            required: required\n        };\n        null != references && (f.references = references);\n        null != index && (f.index = index);\n        null != defaultValue && (f.defaultValue = defaultValue);\n        table.fields.push(f);\n    }\n    return fieldID;\n};\n\nLF2AbstractSQL.AddRelationship = function(resourceName, factType, fieldName, references, forceHas) {\n    var $elf = this;\n    if (!0 !== forceHas && \"has\" === factType[0][1]) {\n        var strippedFactType = _.clone(factType);\n        strippedFactType.shift();\n        this.AddRelationship(resourceName, strippedFactType, fieldName, references);\n    }\n    _.isObject(resourceName) && (resourceName = resourceName.resourceName);\n    null == this.relationships[resourceName] && (this.relationships[resourceName] = {});\n    var relationships = this.relationships[resourceName];\n    _(factType).flatMap(function(factTypePart) {\n        return $elf.ResolveSynonym(factTypePart[1]).split(\"-\");\n    }).each(function(partName) {\n        null == relationships[partName] && (relationships[partName] = {});\n        relationships = relationships[partName];\n    });\n    var relationReference = [ fieldName ];\n    null != references && relationReference.push([ references.resourceName, references.fieldName ]);\n    relationships.$ = relationReference;\n};\n\nLF2AbstractSQL.FactTypeFieldName = function(factType) {\n    if (factType.length > 3) throw new Error(\"Multiple term fact types are unsupported\");\n    return 2 === factType.length ? factType[1][1] : \"has\" === factType[1][1] ? factType[2][1] : factType[1][1] + \"-\" + factType[2][1];\n};\n\nLF2AbstractSQL.AddWhereClause = function(query, whereBody) {\n    if (!_.isEqual(whereBody, [ \"Equals\", [ \"Boolean\", !0 ], [ \"Boolean\", !0 ] ])) if (\"Exists\" != whereBody[0] || \"SelectQuery\" != whereBody[1][0] && \"InsertQuery\" != whereBody[1][0] && \"UpdateQuery\" != whereBody[1][0] && \"UpsertQuery\" != whereBody[1][0]) {\n        for (var i = 1; i < query.length; i++) if (\"Where\" == query[i][0]) {\n            query[i][1] = [ \"And\", query[i][1], whereBody ];\n            return;\n        }\n        query.push([ \"Where\", whereBody ]);\n    } else {\n        whereBody = whereBody[1].slice(1);\n        for (var i = 0; i < whereBody.length; i++) \"From\" == whereBody[i][0] && query.push(whereBody[i]);\n        for (var i = 0; i < whereBody.length; i++) \"Where\" == whereBody[i][0] && this.AddWhereClause(query, whereBody[i][1]);\n    }\n};\n\nLF2AbstractSQL.CreateConceptTypesResolver = function(query, identifier, varNum) {\n    var parentAlias = identifier.name + varNum, concept = this.ReconstructIdentifier(identifier), conceptTypeResolutions, $elf = this;\n    if (this.conceptTypeResolvers[parentAlias]) throw new Error('Concept type resolver already added for \"' + parentAlias + '\"!');\n    conceptTypeResolutions = [];\n    var conceptTypeResolver = function(untilConcept) {\n        var conceptTable, conceptAlias;\n        if (0 === conceptTypeResolutions.length) {\n            conceptTypeResolutions.push(identifier.name);\n            query.push([ \"From\", [ this.GetTable(identifier.name).name, parentAlias ] ]);\n            this.ResolveLinkTable(parentAlias);\n        }\n        parentAlias = _.last(conceptTypeResolutions);\n        if (!0 !== parentAlias && !conceptTypeResolutions.includes(untilConcept)) {\n            for (;!1 !== (concept = this.FollowConceptType(concept)); ) {\n                conceptAlias = concept[1] + varNum;\n                conceptTable = this.GetTable(concept[1]);\n                if (!1 !== conceptTable.primitive) break;\n                query.push([ \"From\", [ conceptTable.name, conceptAlias ] ]);\n                this.AddWhereClause(query, [ \"Equals\", [ \"ReferencedField\", parentAlias, concept[1] ], [ \"ReferencedField\", conceptAlias, conceptTable.idField ] ]);\n                this.ResolveLinkTable(parentAlias);\n                parentAlias = conceptAlias;\n                conceptTypeResolutions.push(parentAlias);\n                if (null != untilConcept && !this.IdentifiersEqual(concept, untilConcept)) break;\n            }\n            !1 === concept && conceptTypeResolutions.push(!0);\n        }\n    }.bind(this);\n    this.conceptTypeResolvers[parentAlias] = conceptTypeResolver;\n    return function() {\n        var next = $elf.input.head();\n        next && \"AtomicFormulation\" !== next[0] && conceptTypeResolver(identifier.name);\n    };\n};\n\nLF2AbstractSQL.ResolveLinkTable = function(tableAlias) {\n    this.linkTableResolvers[tableAlias] !== LINK_RESOLVE_DONE && (\"function\" == typeof this.linkTableResolvers[tableAlias] ? this.linkTableResolvers[tableAlias]() : this.linkTableResolvers[tableAlias] = LINK_RESOLVE_QUEUED);\n};\n\nLF2AbstractSQL.CreateLinkTableResolver = function(query, linkTableAlias, bind, relationshipMapping) {\n    var parentAlias = bind.identifier.name + \".\" + bind.number, $elf = this, linkTableResolver = function() {\n        $elf.linkTableResolvers[parentAlias] = LINK_RESOLVE_DONE;\n        bind.used();\n        $elf.AddWhereClause(query, [ \"Equals\", [ \"ReferencedField\", linkTableAlias, relationshipMapping[0] ], [ \"ReferencedField\", bind.binding[1], relationshipMapping[1][1] ] ]);\n    };\n    if (this.linkTableResolvers[parentAlias] === LINK_RESOLVE_QUEUED || this.linkTableResolvers[parentAlias] === LINK_RESOLVE_DONE || null != bind.identifier.num) linkTableResolver(); else if (\"function\" == typeof this.linkTableResolvers[parentAlias]) {\n        var existingLinkTableResolver = this.linkTableResolvers[parentAlias];\n        this.linkTableResolvers[parentAlias] = function() {\n            existingLinkTableResolver();\n            linkTableResolver();\n        };\n    } else this.linkTableResolvers[parentAlias] = linkTableResolver;\n};\n\nLF2AbstractSQL.initialize = function() {\n    this.reset();\n    this.sbvrTypes = {};\n    this.termForms = {};\n};\n\nLF2AbstractSQL.reset = function() {\n    SBVRCompilerLibs.initialize.call(this);\n    this.tables = {};\n    this.relationships = {};\n    this.synonymousForms = {};\n    this.rules = [];\n    this.attributes = {};\n    this.bindAttributes = [];\n    this.bindAttributeDepth = [];\n    this.ResetRuleState();\n};\n\nLF2AbstractSQL.ResetRuleState = function() {\n    this.conceptTypeResolvers = {};\n    this.linkTableResolvers = {};\n};\n\nLF2AbstractSQL.addTypes = function(types) {\n    Object.assign(this.sbvrTypes, types);\n};","\"use strict\";\n\n// eslint-disable-next-line no-empty-function\nmodule.exports = function () {};\n","\"use strict\";\n\nvar sign  = require(\"../math/sign\")\n  , abs   = Math.abs\n  , floor = Math.floor;\n\nmodule.exports = function (value) {\n\tif (isNaN(value)) return 0;\n\tvalue = Number(value);\n\tif (value === 0 || !isFinite(value)) return value;\n\treturn sign(value) * floor(abs(value));\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Math.sign : require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar sign = Math.sign;\n\tif (typeof sign !== \"function\") return false;\n\treturn sign(10) === 1 && sign(-20) === -1;\n};\n","\"use strict\";\n\nmodule.exports = function (value) {\n\tvalue = Number(value);\n\tif (isNaN(value) || value === 0) return value;\n\treturn value > 0 ? 1 : -1;\n};\n","\"use strict\";\n\nvar callable      = require(\"es5-ext/object/valid-callable\")\n  , forEach       = require(\"es5-ext/object/for-each\")\n  , extensions    = require(\"./lib/registered-extensions\")\n  , configure     = require(\"./lib/configure-map\")\n  , resolveLength = require(\"./lib/resolve-length\");\n\nmodule.exports = function self(fn /*, options */) {\n\tvar options, length, conf;\n\n\tcallable(fn);\n\toptions = Object(arguments[1]);\n\n\tif (options.async && options.promise) {\n\t\tthrow new Error(\"Options 'async' and 'promise' cannot be used together\");\n\t}\n\n\t// Do not memoize already memoized function\n\tif (hasOwnProperty.call(fn, \"__memoized__\") && !options.force) return fn;\n\n\t// Resolve length;\n\tlength = resolveLength(options.length, fn.length, options.async && extensions.async);\n\n\t// Configure cache map\n\tconf = configure(fn, length, options);\n\n\t// Bind eventual extensions\n\tforEach(extensions, function (extFn, name) {\n\t\tif (options[name]) extFn(options[name], conf, options);\n\t});\n\n\tif (self.__profiler__) self.__profiler__(conf);\n\n\tconf.updateEnv();\n\treturn conf.memoized;\n};\n","// Internal method, used by iteration functions.\n// Calls a function for each key-value pair found in object\n// Optionally takes compareFn to iterate object in specific order\n\n\"use strict\";\n\nvar callable                = require(\"./valid-callable\")\n  , value                   = require(\"./valid-value\")\n  , bind                    = Function.prototype.bind\n  , call                    = Function.prototype.call\n  , keys                    = Object.keys\n  , objPropertyIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nmodule.exports = function (method, defVal) {\n\treturn function (obj, cb/*, thisArg, compareFn*/) {\n\t\tvar list, thisArg = arguments[2], compareFn = arguments[3];\n\t\tobj = Object(value(obj));\n\t\tcallable(cb);\n\n\t\tlist = keys(obj);\n\t\tif (compareFn) {\n\t\t\tlist.sort(typeof compareFn === \"function\" ? bind.call(compareFn, obj) : undefined);\n\t\t}\n\t\tif (typeof method !== \"function\") method = list[method];\n\t\treturn call.call(method, list, function (key, index) {\n\t\t\tif (!objPropertyIsEnumerable.call(obj, key)) return defVal;\n\t\t\treturn call.call(cb, thisArg, obj[key], key, obj, index);\n\t\t});\n\t};\n};\n","/* eslint no-eq-null: 0, eqeqeq: 0, no-unused-vars: 0 */\n\n\"use strict\";\n\nvar customError      = require(\"es5-ext/error/custom\")\n  , defineLength     = require(\"es5-ext/function/_define-length\")\n  , d                = require(\"d\")\n  , ee               = require(\"event-emitter\").methods\n  , resolveResolve   = require(\"./resolve-resolve\")\n  , resolveNormalize = require(\"./resolve-normalize\");\n\nvar apply = Function.prototype.apply\n  , call = Function.prototype.call\n  , create = Object.create\n  , defineProperties = Object.defineProperties\n  , on = ee.on\n  , emit = ee.emit;\n\nmodule.exports = function (original, length, options) {\n\tvar cache = create(null)\n\t  , conf\n\t  , memLength\n\t  , get\n\t  , set\n\t  , del\n\t  , clear\n\t  , extDel\n\t  , extGet\n\t  , extHas\n\t  , normalizer\n\t  , getListeners\n\t  , setListeners\n\t  , deleteListeners\n\t  , memoized\n\t  , resolve;\n\tif (length !== false) memLength = length;\n\telse if (isNaN(original.length)) memLength = 1;\n\telse memLength = original.length;\n\n\tif (options.normalizer) {\n\t\tnormalizer = resolveNormalize(options.normalizer);\n\t\tget = normalizer.get;\n\t\tset = normalizer.set;\n\t\tdel = normalizer.delete;\n\t\tclear = normalizer.clear;\n\t}\n\tif (options.resolvers != null) resolve = resolveResolve(options.resolvers);\n\n\tif (get) {\n\t\tmemoized = defineLength(function (arg) {\n\t\t\tvar id, result, args = arguments;\n\t\t\tif (resolve) args = resolve(args);\n\t\t\tid = get(args);\n\t\t\tif (id !== null) {\n\t\t\t\tif (hasOwnProperty.call(cache, id)) {\n\t\t\t\t\tif (getListeners) conf.emit(\"get\", id, args, this);\n\t\t\t\t\treturn cache[id];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (args.length === 1) result = call.call(original, this, args[0]);\n\t\t\telse result = apply.call(original, this, args);\n\t\t\tif (id === null) {\n\t\t\t\tid = get(args);\n\t\t\t\tif (id !== null) throw customError(\"Circular invocation\", \"CIRCULAR_INVOCATION\");\n\t\t\t\tid = set(args);\n\t\t\t} else if (hasOwnProperty.call(cache, id)) {\n\t\t\t\tthrow customError(\"Circular invocation\", \"CIRCULAR_INVOCATION\");\n\t\t\t}\n\t\t\tcache[id] = result;\n\t\t\tif (setListeners) conf.emit(\"set\", id, null, result);\n\t\t\treturn result;\n\t\t}, memLength);\n\t} else if (length === 0) {\n\t\tmemoized = function () {\n\t\t\tvar result;\n\t\t\tif (hasOwnProperty.call(cache, \"data\")) {\n\t\t\t\tif (getListeners) conf.emit(\"get\", \"data\", arguments, this);\n\t\t\t\treturn cache.data;\n\t\t\t}\n\t\t\tif (arguments.length) result = apply.call(original, this, arguments);\n\t\t\telse result = call.call(original, this);\n\t\t\tif (hasOwnProperty.call(cache, \"data\")) {\n\t\t\t\tthrow customError(\"Circular invocation\", \"CIRCULAR_INVOCATION\");\n\t\t\t}\n\t\t\tcache.data = result;\n\t\t\tif (setListeners) conf.emit(\"set\", \"data\", null, result);\n\t\t\treturn result;\n\t\t};\n\t} else {\n\t\tmemoized = function (arg) {\n\t\t\tvar result, args = arguments, id;\n\t\t\tif (resolve) args = resolve(arguments);\n\t\t\tid = String(args[0]);\n\t\t\tif (hasOwnProperty.call(cache, id)) {\n\t\t\t\tif (getListeners) conf.emit(\"get\", id, args, this);\n\t\t\t\treturn cache[id];\n\t\t\t}\n\t\t\tif (args.length === 1) result = call.call(original, this, args[0]);\n\t\t\telse result = apply.call(original, this, args);\n\t\t\tif (hasOwnProperty.call(cache, id)) {\n\t\t\t\tthrow customError(\"Circular invocation\", \"CIRCULAR_INVOCATION\");\n\t\t\t}\n\t\t\tcache[id] = result;\n\t\t\tif (setListeners) conf.emit(\"set\", id, null, result);\n\t\t\treturn result;\n\t\t};\n\t}\n\tconf = {\n\t\toriginal: original,\n\t\tmemoized: memoized,\n\t\tprofileName: options.profileName,\n\t\tget: function (args) {\n\t\t\tif (resolve) args = resolve(args);\n\t\t\tif (get) return get(args);\n\t\t\treturn String(args[0]);\n\t\t},\n\t\thas: function (id) { return hasOwnProperty.call(cache, id); },\n\t\tdelete: function (id) {\n\t\t\tvar result;\n\t\t\tif (!hasOwnProperty.call(cache, id)) return;\n\t\t\tif (del) del(id);\n\t\t\tresult = cache[id];\n\t\t\tdelete cache[id];\n\t\t\tif (deleteListeners) conf.emit(\"delete\", id, result);\n\t\t},\n\t\tclear: function () {\n\t\t\tvar oldCache = cache;\n\t\t\tif (clear) clear();\n\t\t\tcache = create(null);\n\t\t\tconf.emit(\"clear\", oldCache);\n\t\t},\n\t\ton: function (type, listener) {\n\t\t\tif (type === \"get\") getListeners = true;\n\t\t\telse if (type === \"set\") setListeners = true;\n\t\t\telse if (type === \"delete\") deleteListeners = true;\n\t\t\treturn on.call(this, type, listener);\n\t\t},\n\t\temit: emit,\n\t\tupdateEnv: function () { original = conf.original; }\n\t};\n\tif (get) {\n\t\textDel = defineLength(function (arg) {\n\t\t\tvar id, args = arguments;\n\t\t\tif (resolve) args = resolve(args);\n\t\t\tid = get(args);\n\t\t\tif (id === null) return;\n\t\t\tconf.delete(id);\n\t\t}, memLength);\n\t} else if (length === 0) {\n\t\textDel = function () { return conf.delete(\"data\"); };\n\t} else {\n\t\textDel = function (arg) {\n\t\t\tif (resolve) arg = resolve(arguments)[0];\n\t\t\treturn conf.delete(arg);\n\t\t};\n\t}\n\textGet = defineLength(function () {\n\t\tvar id, args = arguments;\n\t\tif (length === 0) return cache.data;\n\t\tif (resolve) args = resolve(args);\n\t\tif (get) id = get(args);\n\t\telse id = String(args[0]);\n\t\treturn cache[id];\n\t});\n\textHas = defineLength(function () {\n\t\tvar id, args = arguments;\n\t\tif (length === 0) return conf.has(\"data\");\n\t\tif (resolve) args = resolve(args);\n\t\tif (get) id = get(args);\n\t\telse id = String(args[0]);\n\t\tif (id === null) return false;\n\t\treturn conf.has(id);\n\t});\n\tdefineProperties(memoized, {\n\t\t__memoized__: d(true),\n\t\tdelete: d(extDel),\n\t\tclear: d(conf.clear),\n\t\t_get: d(extGet),\n\t\t_has: d(extHas)\n\t});\n\treturn conf;\n};\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar assign = Object.assign, obj;\n\tif (typeof assign !== \"function\") return false;\n\tobj = { foo: \"raz\" };\n\tassign(obj, { bar: \"dwa\" }, { trzy: \"trzy\" });\n\treturn obj.foo + obj.bar + obj.trzy === \"razdwatrzy\";\n};\n","\"use strict\";\n\nvar keys  = require(\"../keys\")\n  , value = require(\"../valid-value\")\n  , max   = Math.max;\n\nmodule.exports = function (dest, src/*, …srcn*/) {\n\tvar error, i, length = max(arguments.length, 2), assign;\n\tdest = Object(value(dest));\n\tassign = function (key) {\n\t\ttry {\n\t\t\tdest[key] = src[key];\n\t\t} catch (e) {\n\t\t\tif (!error) error = e;\n\t\t}\n\t};\n\tfor (i = 1; i < length; ++i) {\n\t\tsrc = arguments[i];\n\t\tkeys(src).forEach(assign);\n\t}\n\tif (error !== undefined) throw error;\n\treturn dest;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Object.keys : require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\ttry {\n\t\tObject.keys(\"primitive\");\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n","\"use strict\";\n\nvar isValue = require(\"../is-value\");\n\nvar keys = Object.keys;\n\nmodule.exports = function (object) { return keys(isValue(object) ? Object(object) : object); };\n","\"use strict\";\n\nvar isPrototype = require(\"../prototype/is\");\n\nmodule.exports = function (value) {\n\tif (typeof value !== \"function\") return false;\n\n\tif (!hasOwnProperty.call(value, \"length\")) return false;\n\n\ttry {\n\t\tif (typeof value.length !== \"number\") return false;\n\t\tif (typeof value.call !== \"function\") return false;\n\t\tif (typeof value.apply !== \"function\") return false;\n\t} catch (error) {\n\t\treturn false;\n\t}\n\n\treturn !isPrototype(value);\n};\n","\"use strict\";\n\nvar isObject = require(\"../object/is\");\n\nmodule.exports = function (value) {\n\tif (!isObject(value)) return false;\n\ttry {\n\t\tif (!value.constructor) return false;\n\t\treturn value.constructor.prototype === value;\n\t} catch (error) {\n\t\treturn false;\n\t}\n};\n","\"use strict\";\n\nvar str = \"razdwatrzy\";\n\nmodule.exports = function () {\n\tif (typeof str.contains !== \"function\") return false;\n\treturn str.contains(\"dwa\") === true && str.contains(\"foo\") === false;\n};\n","\"use strict\";\n\nvar indexOf = String.prototype.indexOf;\n\nmodule.exports = function (searchString/*, position*/) {\n\treturn indexOf.call(this, searchString, arguments[1]) > -1;\n};\n","'use strict';\n\nvar d        = require('d')\n  , callable = require('es5-ext/object/valid-callable')\n\n  , apply = Function.prototype.apply, call = Function.prototype.call\n  , create = Object.create, defineProperty = Object.defineProperty\n  , defineProperties = Object.defineProperties\n  , hasOwnProperty = Object.prototype.hasOwnProperty\n  , descriptor = { configurable: true, enumerable: false, writable: true }\n\n  , on, once, off, emit, methods, descriptors, base;\n\non = function (type, listener) {\n\tvar data;\n\n\tcallable(listener);\n\n\tif (!hasOwnProperty.call(this, '__ee__')) {\n\t\tdata = descriptor.value = create(null);\n\t\tdefineProperty(this, '__ee__', descriptor);\n\t\tdescriptor.value = null;\n\t} else {\n\t\tdata = this.__ee__;\n\t}\n\tif (!data[type]) data[type] = listener;\n\telse if (typeof data[type] === 'object') data[type].push(listener);\n\telse data[type] = [data[type], listener];\n\n\treturn this;\n};\n\nonce = function (type, listener) {\n\tvar once, self;\n\n\tcallable(listener);\n\tself = this;\n\ton.call(this, type, once = function () {\n\t\toff.call(self, type, once);\n\t\tapply.call(listener, this, arguments);\n\t});\n\n\tonce.__eeOnceListener__ = listener;\n\treturn this;\n};\n\noff = function (type, listener) {\n\tvar data, listeners, candidate, i;\n\n\tcallable(listener);\n\n\tif (!hasOwnProperty.call(this, '__ee__')) return this;\n\tdata = this.__ee__;\n\tif (!data[type]) return this;\n\tlisteners = data[type];\n\n\tif (typeof listeners === 'object') {\n\t\tfor (i = 0; (candidate = listeners[i]); ++i) {\n\t\t\tif ((candidate === listener) ||\n\t\t\t\t\t(candidate.__eeOnceListener__ === listener)) {\n\t\t\t\tif (listeners.length === 2) data[type] = listeners[i ? 0 : 1];\n\t\t\t\telse listeners.splice(i, 1);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif ((listeners === listener) ||\n\t\t\t\t(listeners.__eeOnceListener__ === listener)) {\n\t\t\tdelete data[type];\n\t\t}\n\t}\n\n\treturn this;\n};\n\nemit = function (type) {\n\tvar i, l, listener, listeners, args;\n\n\tif (!hasOwnProperty.call(this, '__ee__')) return;\n\tlisteners = this.__ee__[type];\n\tif (!listeners) return;\n\n\tif (typeof listeners === 'object') {\n\t\tl = arguments.length;\n\t\targs = new Array(l - 1);\n\t\tfor (i = 1; i < l; ++i) args[i - 1] = arguments[i];\n\n\t\tlisteners = listeners.slice();\n\t\tfor (i = 0; (listener = listeners[i]); ++i) {\n\t\t\tapply.call(listener, this, args);\n\t\t}\n\t} else {\n\t\tswitch (arguments.length) {\n\t\tcase 1:\n\t\t\tcall.call(listeners, this);\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tcall.call(listeners, this, arguments[1]);\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tcall.call(listeners, this, arguments[1], arguments[2]);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tl = arguments.length;\n\t\t\targs = new Array(l - 1);\n\t\t\tfor (i = 1; i < l; ++i) {\n\t\t\t\targs[i - 1] = arguments[i];\n\t\t\t}\n\t\t\tapply.call(listeners, this, args);\n\t\t}\n\t}\n};\n\nmethods = {\n\ton: on,\n\tonce: once,\n\toff: off,\n\temit: emit\n};\n\ndescriptors = {\n\ton: d(on),\n\tonce: d(once),\n\toff: d(off),\n\temit: d(emit)\n};\n\nbase = defineProperties({}, descriptors);\n\nmodule.exports = exports = function (o) {\n\treturn (o == null) ? create(base) : defineProperties(Object(o), descriptors);\n};\nexports.methods = methods;\n","\"use strict\";\n\nvar from    = require(\"./from\")\n  , isArray = Array.isArray;\n\nmodule.exports = function (arrayLike) { return isArray(arrayLike) ? arrayLike : from(arrayLike); };\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar from = Array.from, arr, result;\n\tif (typeof from !== \"function\") return false;\n\tarr = [\"raz\", \"dwa\"];\n\tresult = from(arr);\n\treturn Boolean(result && result !== arr && result[1] === \"dwa\");\n};\n","\"use strict\";\n\nvar iteratorSymbol = require(\"es6-symbol\").iterator\n  , isArguments    = require(\"../../function/is-arguments\")\n  , isFunction     = require(\"../../function/is-function\")\n  , toPosInt       = require(\"../../number/to-pos-integer\")\n  , callable       = require(\"../../object/valid-callable\")\n  , validValue     = require(\"../../object/valid-value\")\n  , isValue        = require(\"../../object/is-value\")\n  , isString       = require(\"../../string/is-string\")\n  , isArray        = Array.isArray\n  , call           = Function.prototype.call\n  , desc           = { configurable: true, enumerable: true, writable: true, value: null }\n  , defineProperty = Object.defineProperty;\n\n// eslint-disable-next-line complexity, max-lines-per-function\nmodule.exports = function (arrayLike/*, mapFn, thisArg*/) {\n\tvar mapFn = arguments[1]\n\t  , thisArg = arguments[2]\n\t  , Context\n\t  , i\n\t  , j\n\t  , arr\n\t  , length\n\t  , code\n\t  , iterator\n\t  , result\n\t  , getIterator\n\t  , value;\n\n\tarrayLike = Object(validValue(arrayLike));\n\n\tif (isValue(mapFn)) callable(mapFn);\n\tif (!this || this === Array || !isFunction(this)) {\n\t\t// Result: Plain array\n\t\tif (!mapFn) {\n\t\t\tif (isArguments(arrayLike)) {\n\t\t\t\t// Source: Arguments\n\t\t\t\tlength = arrayLike.length;\n\t\t\t\tif (length !== 1) return Array.apply(null, arrayLike);\n\t\t\t\tarr = new Array(1);\n\t\t\t\tarr[0] = arrayLike[0];\n\t\t\t\treturn arr;\n\t\t\t}\n\t\t\tif (isArray(arrayLike)) {\n\t\t\t\t// Source: Array\n\t\t\t\tarr = new Array((length = arrayLike.length));\n\t\t\t\tfor (i = 0; i < length; ++i) arr[i] = arrayLike[i];\n\t\t\t\treturn arr;\n\t\t\t}\n\t\t}\n\t\tarr = [];\n\t} else {\n\t\t// Result: Non plain array\n\t\tContext = this;\n\t}\n\n\tif (!isArray(arrayLike)) {\n\t\tif ((getIterator = arrayLike[iteratorSymbol]) !== undefined) {\n\t\t\t// Source: Iterator\n\t\t\titerator = callable(getIterator).call(arrayLike);\n\t\t\tif (Context) arr = new Context();\n\t\t\tresult = iterator.next();\n\t\t\ti = 0;\n\t\t\twhile (!result.done) {\n\t\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, result.value, i) : result.value;\n\t\t\t\tif (Context) {\n\t\t\t\t\tdesc.value = value;\n\t\t\t\t\tdefineProperty(arr, i, desc);\n\t\t\t\t} else {\n\t\t\t\t\tarr[i] = value;\n\t\t\t\t}\n\t\t\t\tresult = iterator.next();\n\t\t\t\t++i;\n\t\t\t}\n\t\t\tlength = i;\n\t\t} else if (isString(arrayLike)) {\n\t\t\t// Source: String\n\t\t\tlength = arrayLike.length;\n\t\t\tif (Context) arr = new Context();\n\t\t\tfor (i = 0, j = 0; i < length; ++i) {\n\t\t\t\tvalue = arrayLike[i];\n\t\t\t\tif (i + 1 < length) {\n\t\t\t\t\tcode = value.charCodeAt(0);\n\t\t\t\t\t// eslint-disable-next-line max-depth\n\t\t\t\t\tif (code >= 0xd800 && code <= 0xdbff) value += arrayLike[++i];\n\t\t\t\t}\n\t\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, value, j) : value;\n\t\t\t\tif (Context) {\n\t\t\t\t\tdesc.value = value;\n\t\t\t\t\tdefineProperty(arr, j, desc);\n\t\t\t\t} else {\n\t\t\t\t\tarr[j] = value;\n\t\t\t\t}\n\t\t\t\t++j;\n\t\t\t}\n\t\t\tlength = j;\n\t\t}\n\t}\n\tif (length === undefined) {\n\t\t// Source: array or array-like\n\t\tlength = toPosInt(arrayLike.length);\n\t\tif (Context) arr = new Context(length);\n\t\tfor (i = 0; i < length; ++i) {\n\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, arrayLike[i], i) : arrayLike[i];\n\t\t\tif (Context) {\n\t\t\t\tdesc.value = value;\n\t\t\t\tdefineProperty(arr, i, desc);\n\t\t\t} else {\n\t\t\t\tarr[i] = value;\n\t\t\t}\n\t\t}\n\t}\n\tif (Context) {\n\t\tdesc.value = null;\n\t\tarr.length = length;\n\t}\n\treturn arr;\n};\n","\"use strict\";\n\nvar global     = require(\"ext/global-this\")\n  , validTypes = { object: true, symbol: true };\n\nmodule.exports = function () {\n\tvar Symbol = global.Symbol;\n\tvar symbol;\n\tif (typeof Symbol !== \"function\") return false;\n\tsymbol = Symbol(\"test symbol\");\n\ttry { String(symbol); }\n\tcatch (e) { return false; }\n\n\t// Return 'true' also for polyfills\n\tif (!validTypes[typeof Symbol.iterator]) return false;\n\tif (!validTypes[typeof Symbol.toPrimitive]) return false;\n\tif (!validTypes[typeof Symbol.toStringTag]) return false;\n\n\treturn true;\n};\n","\"use strict\";\n\nmodule.exports = function () {\n\tif (typeof globalThis !== \"object\") return false;\n\tif (!globalThis) return false;\n\treturn globalThis.Array === Array;\n};\n","var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of Object.prototype being sealed (via preventExtensions, seal or freeze)\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ is resolved with global context, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n","// ES2015 Symbol polyfill for environments that do not (or partially) support it\n\n\"use strict\";\n\nvar d                    = require(\"d\")\n  , validateSymbol       = require(\"./validate-symbol\")\n  , NativeSymbol         = require(\"ext/global-this\").Symbol\n  , generateName         = require(\"./lib/private/generate-name\")\n  , setupStandardSymbols = require(\"./lib/private/setup/standard-symbols\")\n  , setupSymbolRegistry  = require(\"./lib/private/setup/symbol-registry\");\n\nvar create = Object.create\n  , defineProperties = Object.defineProperties\n  , defineProperty = Object.defineProperty;\n\nvar SymbolPolyfill, HiddenSymbol, isNativeSafe;\n\nif (typeof NativeSymbol === \"function\") {\n\ttry {\n\t\tString(NativeSymbol());\n\t\tisNativeSafe = true;\n\t} catch (ignore) {}\n} else {\n\tNativeSymbol = null;\n}\n\n// Internal constructor (not one exposed) for creating Symbol instances.\n// This one is used to ensure that `someSymbol instanceof Symbol` always return false\nHiddenSymbol = function Symbol(description) {\n\tif (this instanceof HiddenSymbol) throw new TypeError(\"Symbol is not a constructor\");\n\treturn SymbolPolyfill(description);\n};\n\n// Exposed `Symbol` constructor\n// (returns instances of HiddenSymbol)\nmodule.exports = SymbolPolyfill = function Symbol(description) {\n\tvar symbol;\n\tif (this instanceof Symbol) throw new TypeError(\"Symbol is not a constructor\");\n\tif (isNativeSafe) return NativeSymbol(description);\n\tsymbol = create(HiddenSymbol.prototype);\n\tdescription = description === undefined ? \"\" : String(description);\n\treturn defineProperties(symbol, {\n\t\t__description__: d(\"\", description),\n\t\t__name__: d(\"\", generateName(description))\n\t});\n};\n\nsetupStandardSymbols(SymbolPolyfill);\nsetupSymbolRegistry(SymbolPolyfill);\n\n// Internal tweaks for real symbol producer\ndefineProperties(HiddenSymbol.prototype, {\n\tconstructor: d(SymbolPolyfill),\n\ttoString: d(\"\", function () { return this.__name__; })\n});\n\n// Proper implementation of methods exposed on Symbol.prototype\n// They won't be accessible on produced symbol instances as they derive from HiddenSymbol.prototype\ndefineProperties(SymbolPolyfill.prototype, {\n\ttoString: d(function () { return \"Symbol (\" + validateSymbol(this).__description__ + \")\"; }),\n\tvalueOf: d(function () { return validateSymbol(this); })\n});\ndefineProperty(\n\tSymbolPolyfill.prototype,\n\tSymbolPolyfill.toPrimitive,\n\td(\"\", function () {\n\t\tvar symbol = validateSymbol(this);\n\t\tif (typeof symbol === \"symbol\") return symbol;\n\t\treturn symbol.toString();\n\t})\n);\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d(\"c\", \"Symbol\"));\n\n// Proper implementaton of toPrimitive and toStringTag for returned symbol instances\ndefineProperty(\n\tHiddenSymbol.prototype, SymbolPolyfill.toStringTag,\n\td(\"c\", SymbolPolyfill.prototype[SymbolPolyfill.toStringTag])\n);\n\n// Note: It's important to define `toPrimitive` as last one, as some implementations\n// implement `toPrimitive` natively without implementing `toStringTag` (or other specified symbols)\n// And that may invoke error in definition flow:\n// See: https://github.com/medikoo/es6-symbol/issues/13#issuecomment-164146149\ndefineProperty(\n\tHiddenSymbol.prototype, SymbolPolyfill.toPrimitive,\n\td(\"c\", SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive])\n);\n","\"use strict\";\n\nmodule.exports = function (value) {\n\tif (!value) return false;\n\tif (typeof value === \"symbol\") return true;\n\tif (!value.constructor) return false;\n\tif (value.constructor.name !== \"Symbol\") return false;\n\treturn value[value.constructor.toStringTag] === \"Symbol\";\n};\n","\"use strict\";\n\nvar d = require(\"d\");\n\nvar create = Object.create, defineProperty = Object.defineProperty, objPrototype = Object.prototype;\n\nvar created = create(null);\nmodule.exports = function (desc) {\n\tvar postfix = 0, name, ie11BugWorkaround;\n\twhile (created[desc + (postfix || \"\")]) ++postfix;\n\tdesc += postfix || \"\";\n\tcreated[desc] = true;\n\tname = \"@@\" + desc;\n\tdefineProperty(\n\t\tobjPrototype,\n\t\tname,\n\t\td.gs(null, function (value) {\n\t\t\t// For IE11 issue see:\n\t\t\t// https://connect.microsoft.com/IE/feedbackdetail/view/1928508/\n\t\t\t//    ie11-broken-getters-on-dom-objects\n\t\t\t// https://github.com/medikoo/es6-symbol/issues/12\n\t\t\tif (ie11BugWorkaround) return;\n\t\t\tie11BugWorkaround = true;\n\t\t\tdefineProperty(this, name, d(value));\n\t\t\tie11BugWorkaround = false;\n\t\t})\n\t);\n\treturn name;\n};\n","\"use strict\";\n\nvar d            = require(\"d\")\n  , NativeSymbol = require(\"ext/global-this\").Symbol;\n\nmodule.exports = function (SymbolPolyfill) {\n\treturn Object.defineProperties(SymbolPolyfill, {\n\t\t// To ensure proper interoperability with other native functions (e.g. Array.from)\n\t\t// fallback to eventual native implementation of given symbol\n\t\thasInstance: d(\n\t\t\t\"\", (NativeSymbol && NativeSymbol.hasInstance) || SymbolPolyfill(\"hasInstance\")\n\t\t),\n\t\tisConcatSpreadable: d(\n\t\t\t\"\",\n\t\t\t(NativeSymbol && NativeSymbol.isConcatSpreadable) ||\n\t\t\t\tSymbolPolyfill(\"isConcatSpreadable\")\n\t\t),\n\t\titerator: d(\"\", (NativeSymbol && NativeSymbol.iterator) || SymbolPolyfill(\"iterator\")),\n\t\tmatch: d(\"\", (NativeSymbol && NativeSymbol.match) || SymbolPolyfill(\"match\")),\n\t\treplace: d(\"\", (NativeSymbol && NativeSymbol.replace) || SymbolPolyfill(\"replace\")),\n\t\tsearch: d(\"\", (NativeSymbol && NativeSymbol.search) || SymbolPolyfill(\"search\")),\n\t\tspecies: d(\"\", (NativeSymbol && NativeSymbol.species) || SymbolPolyfill(\"species\")),\n\t\tsplit: d(\"\", (NativeSymbol && NativeSymbol.split) || SymbolPolyfill(\"split\")),\n\t\ttoPrimitive: d(\n\t\t\t\"\", (NativeSymbol && NativeSymbol.toPrimitive) || SymbolPolyfill(\"toPrimitive\")\n\t\t),\n\t\ttoStringTag: d(\n\t\t\t\"\", (NativeSymbol && NativeSymbol.toStringTag) || SymbolPolyfill(\"toStringTag\")\n\t\t),\n\t\tunscopables: d(\n\t\t\t\"\", (NativeSymbol && NativeSymbol.unscopables) || SymbolPolyfill(\"unscopables\")\n\t\t)\n\t});\n};\n","\"use strict\";\n\nvar d              = require(\"d\")\n  , validateSymbol = require(\"../../../validate-symbol\");\n\nvar registry = Object.create(null);\n\nmodule.exports = function (SymbolPolyfill) {\n\treturn Object.defineProperties(SymbolPolyfill, {\n\t\tfor: d(function (key) {\n\t\t\tif (registry[key]) return registry[key];\n\t\t\treturn (registry[key] = SymbolPolyfill(String(key)));\n\t\t}),\n\t\tkeyFor: d(function (symbol) {\n\t\t\tvar key;\n\t\t\tvalidateSymbol(symbol);\n\t\t\tfor (key in registry) {\n\t\t\t\tif (registry[key] === symbol) return key;\n\t\t\t}\n\t\t\treturn undefined;\n\t\t})\n\t});\n};\n","\"use strict\";\n\nvar objToString = Object.prototype.toString\n  , isFunctionStringTag = RegExp.prototype.test.bind(/^[object [A-Za-z0-9]*Function]$/);\n\nmodule.exports = function (value) {\n\treturn typeof value === \"function\" && isFunctionStringTag(objToString.call(value));\n};\n","\"use strict\";\n\nmodule.exports = function (args) {\n\tvar id, i, length = args.length;\n\tif (!length) return \"\\u0002\";\n\tid = String(args[i = 0]);\n\twhile (--length) id += \"\\u0001\" + args[++i];\n\treturn id;\n};\n","\"use strict\";\n\nmodule.exports = function (length) {\n\tif (!length) {\n\t\treturn function () {\n\t\t\treturn \"\";\n\t\t};\n\t}\n\treturn function (args) {\n\t\tvar id = String(args[0]), i = 0, currentLength = length;\n\t\twhile (--currentLength) {\n\t\t\tid += \"\\u0001\" + args[++i];\n\t\t}\n\t\treturn id;\n\t};\n};\n","/* eslint max-statements: 0 */\n\n\"use strict\";\n\nvar indexOf = require(\"es5-ext/array/#/e-index-of\");\n\nvar create = Object.create;\n\nmodule.exports = function () {\n\tvar lastId = 0, map = [], cache = create(null);\n\treturn {\n\t\tget: function (args) {\n\t\t\tvar index = 0, set = map, i, length = args.length;\n\t\t\tif (length === 0) return set[length] || null;\n\t\t\tif ((set = set[length])) {\n\t\t\t\twhile (index < length - 1) {\n\t\t\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\t\t\tif (i === -1) return null;\n\t\t\t\t\tset = set[1][i];\n\t\t\t\t\t++index;\n\t\t\t\t}\n\t\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\t\tif (i === -1) return null;\n\t\t\t\treturn set[1][i] || null;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tset: function (args) {\n\t\t\tvar index = 0, set = map, i, length = args.length;\n\t\t\tif (length === 0) {\n\t\t\t\tset[length] = ++lastId;\n\t\t\t} else {\n\t\t\t\tif (!set[length]) {\n\t\t\t\t\tset[length] = [[], []];\n\t\t\t\t}\n\t\t\t\tset = set[length];\n\t\t\t\twhile (index < length - 1) {\n\t\t\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\t\t\tif (i === -1) {\n\t\t\t\t\t\ti = set[0].push(args[index]) - 1;\n\t\t\t\t\t\tset[1].push([[], []]);\n\t\t\t\t\t}\n\t\t\t\t\tset = set[1][i];\n\t\t\t\t\t++index;\n\t\t\t\t}\n\t\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\t\tif (i === -1) {\n\t\t\t\t\ti = set[0].push(args[index]) - 1;\n\t\t\t\t}\n\t\t\t\tset[1][i] = ++lastId;\n\t\t\t}\n\t\t\tcache[lastId] = args;\n\t\t\treturn lastId;\n\t\t},\n\t\tdelete: function (id) {\n\t\t\tvar index = 0, set = map, i, args = cache[id], length = args.length, path = [];\n\t\t\tif (length === 0) {\n\t\t\t\tdelete set[length];\n\t\t\t} else if ((set = set[length])) {\n\t\t\t\twhile (index < length - 1) {\n\t\t\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\t\t\tif (i === -1) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tpath.push(set, i);\n\t\t\t\t\tset = set[1][i];\n\t\t\t\t\t++index;\n\t\t\t\t}\n\t\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\t\tif (i === -1) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tid = set[1][i];\n\t\t\t\tset[0].splice(i, 1);\n\t\t\t\tset[1].splice(i, 1);\n\t\t\t\twhile (!set[0].length && path.length) {\n\t\t\t\t\ti = path.pop();\n\t\t\t\t\tset = path.pop();\n\t\t\t\t\tset[0].splice(i, 1);\n\t\t\t\t\tset[1].splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdelete cache[id];\n\t\t},\n\t\tclear: function () {\n\t\t\tmap = [];\n\t\t\tcache = create(null);\n\t\t}\n\t};\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Number.isNaN : require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar numberIsNaN = Number.isNaN;\n\tif (typeof numberIsNaN !== \"function\") return false;\n\treturn !numberIsNaN({}) && numberIsNaN(NaN) && !numberIsNaN(34);\n};\n","\"use strict\";\n\nmodule.exports = function (value) {\n\t// eslint-disable-next-line no-self-compare\n\treturn value !== value;\n};\n","\"use strict\";\n\nvar indexOf = require(\"es5-ext/array/#/e-index-of\");\n\nmodule.exports = function () {\n\tvar lastId = 0, argsMap = [], cache = [];\n\treturn {\n\t\tget: function (args) {\n\t\t\tvar index = indexOf.call(argsMap, args[0]);\n\t\t\treturn index === -1 ? null : cache[index];\n\t\t},\n\t\tset: function (args) {\n\t\t\targsMap.push(args[0]);\n\t\t\tcache.push(++lastId);\n\t\t\treturn lastId;\n\t\t},\n\t\tdelete: function (id) {\n\t\t\tvar index = indexOf.call(cache, id);\n\t\t\tif (index !== -1) {\n\t\t\t\targsMap.splice(index, 1);\n\t\t\t\tcache.splice(index, 1);\n\t\t\t}\n\t\t},\n\t\tclear: function () {\n\t\t\targsMap = [];\n\t\t\tcache = [];\n\t\t}\n\t};\n};\n","\"use strict\";\n\nvar indexOf = require(\"es5-ext/array/#/e-index-of\")\n  , create  = Object.create;\n\nmodule.exports = function (length) {\n\tvar lastId = 0, map = [[], []], cache = create(null);\n\treturn {\n\t\tget: function (args) {\n\t\t\tvar index = 0, set = map, i;\n\t\t\twhile (index < length - 1) {\n\t\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\t\tif (i === -1) return null;\n\t\t\t\tset = set[1][i];\n\t\t\t\t++index;\n\t\t\t}\n\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\tif (i === -1) return null;\n\t\t\treturn set[1][i] || null;\n\t\t},\n\t\tset: function (args) {\n\t\t\tvar index = 0, set = map, i;\n\t\t\twhile (index < length - 1) {\n\t\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\t\tif (i === -1) {\n\t\t\t\t\ti = set[0].push(args[index]) - 1;\n\t\t\t\t\tset[1].push([[], []]);\n\t\t\t\t}\n\t\t\t\tset = set[1][i];\n\t\t\t\t++index;\n\t\t\t}\n\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\tif (i === -1) {\n\t\t\t\ti = set[0].push(args[index]) - 1;\n\t\t\t}\n\t\t\tset[1][i] = ++lastId;\n\t\t\tcache[lastId] = args;\n\t\t\treturn lastId;\n\t\t},\n\t\tdelete: function (id) {\n\t\t\tvar index = 0, set = map, i, path = [], args = cache[id];\n\t\t\twhile (index < length - 1) {\n\t\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\t\tif (i === -1) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tpath.push(set, i);\n\t\t\t\tset = set[1][i];\n\t\t\t\t++index;\n\t\t\t}\n\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\tif (i === -1) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tid = set[1][i];\n\t\t\tset[0].splice(i, 1);\n\t\t\tset[1].splice(i, 1);\n\t\t\twhile (!set[0].length && path.length) {\n\t\t\t\ti = path.pop();\n\t\t\t\tset = path.pop();\n\t\t\t\tset[0].splice(i, 1);\n\t\t\t\tset[1].splice(i, 1);\n\t\t\t}\n\t\t\tdelete cache[id];\n\t\t},\n\t\tclear: function () {\n\t\t\tmap = [[], []];\n\t\t\tcache = create(null);\n\t\t}\n\t};\n};\n","/* eslint consistent-this: 0, no-shadow:0, no-eq-null: 0, eqeqeq: 0, no-unused-vars: 0 */\n\n// Support for asynchronous functions\n\n\"use strict\";\n\nvar aFrom        = require(\"es5-ext/array/from\")\n  , objectMap    = require(\"es5-ext/object/map\")\n  , mixin        = require(\"es5-ext/object/mixin\")\n  , defineLength = require(\"es5-ext/function/_define-length\")\n  , nextTick     = require(\"next-tick\");\n\nvar slice = Array.prototype.slice, apply = Function.prototype.apply, create = Object.create;\n\nrequire(\"../lib/registered-extensions\").async = function (tbi, conf) {\n\tvar waiting = create(null)\n\t  , cache = create(null)\n\t  , base = conf.memoized\n\t  , original = conf.original\n\t  , currentCallback\n\t  , currentContext\n\t  , currentArgs;\n\n\t// Initial\n\tconf.memoized = defineLength(function (arg) {\n\t\tvar args = arguments, last = args[args.length - 1];\n\t\tif (typeof last === \"function\") {\n\t\t\tcurrentCallback = last;\n\t\t\targs = slice.call(args, 0, -1);\n\t\t}\n\t\treturn base.apply(currentContext = this, currentArgs = args);\n\t}, base);\n\ttry { mixin(conf.memoized, base); }\n\tcatch (ignore) {}\n\n\t// From cache (sync)\n\tconf.on(\"get\", function (id) {\n\t\tvar cb, context, args;\n\t\tif (!currentCallback) return;\n\n\t\t// Unresolved\n\t\tif (waiting[id]) {\n\t\t\tif (typeof waiting[id] === \"function\") waiting[id] = [waiting[id], currentCallback];\n\t\t\telse waiting[id].push(currentCallback);\n\t\t\tcurrentCallback = null;\n\t\t\treturn;\n\t\t}\n\n\t\t// Resolved, assure next tick invocation\n\t\tcb = currentCallback;\n\t\tcontext = currentContext;\n\t\targs = currentArgs;\n\t\tcurrentCallback = currentContext = currentArgs = null;\n\t\tnextTick(function () {\n\t\t\tvar data;\n\t\t\tif (hasOwnProperty.call(cache, id)) {\n\t\t\t\tdata = cache[id];\n\t\t\t\tconf.emit(\"getasync\", id, args, context);\n\t\t\t\tapply.call(cb, data.context, data.args);\n\t\t\t} else {\n\t\t\t\t// Purged in a meantime, we shouldn't rely on cached value, recall\n\t\t\t\tcurrentCallback = cb;\n\t\t\t\tcurrentContext = context;\n\t\t\t\tcurrentArgs = args;\n\t\t\t\tbase.apply(context, args);\n\t\t\t}\n\t\t});\n\t});\n\n\t// Not from cache\n\tconf.original = function () {\n\t\tvar args, cb, origCb, result;\n\t\tif (!currentCallback) return apply.call(original, this, arguments);\n\t\targs = aFrom(arguments);\n\t\tcb = function self(err) {\n\t\t\tvar cb, args, id = self.id;\n\t\t\tif (id == null) {\n\t\t\t\t// Shouldn't happen, means async callback was called sync way\n\t\t\t\tnextTick(apply.bind(self, this, arguments));\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tdelete self.id;\n\t\t\tcb = waiting[id];\n\t\t\tdelete waiting[id];\n\t\t\tif (!cb) {\n\t\t\t\t// Already processed,\n\t\t\t\t// outcome of race condition: asyncFn(1, cb), asyncFn.clear(), asyncFn(1, cb)\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\targs = aFrom(arguments);\n\t\t\tif (conf.has(id)) {\n\t\t\t\tif (err) {\n\t\t\t\t\tconf.delete(id);\n\t\t\t\t} else {\n\t\t\t\t\tcache[id] = { context: this, args: args };\n\t\t\t\t\tconf.emit(\"setasync\", id, typeof cb === \"function\" ? 1 : cb.length);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof cb === \"function\") {\n\t\t\t\tresult = apply.call(cb, this, args);\n\t\t\t} else {\n\t\t\t\tcb.forEach(function (cb) { result = apply.call(cb, this, args); }, this);\n\t\t\t}\n\t\t\treturn result;\n\t\t};\n\t\torigCb = currentCallback;\n\t\tcurrentCallback = currentContext = currentArgs = null;\n\t\targs.push(cb);\n\t\tresult = apply.call(original, this, args);\n\t\tcb.cb = origCb;\n\t\tcurrentCallback = cb;\n\t\treturn result;\n\t};\n\n\t// After not from cache call\n\tconf.on(\"set\", function (id) {\n\t\tif (!currentCallback) {\n\t\t\tconf.delete(id);\n\t\t\treturn;\n\t\t}\n\t\tif (waiting[id]) {\n\t\t\t// Race condition: asyncFn(1, cb), asyncFn.clear(), asyncFn(1, cb)\n\t\t\tif (typeof waiting[id] === \"function\") waiting[id] = [waiting[id], currentCallback.cb];\n\t\t\telse waiting[id].push(currentCallback.cb);\n\t\t} else {\n\t\t\twaiting[id] = currentCallback.cb;\n\t\t}\n\t\tdelete currentCallback.cb;\n\t\tcurrentCallback.id = id;\n\t\tcurrentCallback = null;\n\t});\n\n\t// On delete\n\tconf.on(\"delete\", function (id) {\n\t\tvar result;\n\t\t// If false, we don't have value yet, so we assume that intention is not\n\t\t// to memoize this call. After value is obtained we don't cache it but\n\t\t// gracefully pass to callback\n\t\tif (hasOwnProperty.call(waiting, id)) return;\n\t\tif (!cache[id]) return;\n\t\tresult = cache[id];\n\t\tdelete cache[id];\n\t\tconf.emit(\"deleteasync\", id, slice.call(result.args, 1));\n\t});\n\n\t// On clear\n\tconf.on(\"clear\", function () {\n\t\tvar oldCache = cache;\n\t\tcache = create(null);\n\t\tconf.emit(\n\t\t\t\"clearasync\", objectMap(oldCache, function (data) { return slice.call(data.args, 1); })\n\t\t);\n\t});\n};\n","/* eslint max-statements: 0 */\n\n// Support for functions returning promise\n\n\"use strict\";\n\nvar objectMap     = require(\"es5-ext/object/map\")\n  , primitiveSet  = require(\"es5-ext/object/primitive-set\")\n  , ensureString  = require(\"es5-ext/object/validate-stringifiable-value\")\n  , toShortString = require(\"es5-ext/to-short-string-representation\")\n  , isPromise     = require(\"is-promise\")\n  , nextTick      = require(\"next-tick\");\n\nvar create = Object.create\n  , supportedModes = primitiveSet(\"then\", \"then:finally\", \"done\", \"done:finally\");\n\nrequire(\"../lib/registered-extensions\").promise = function (mode, conf) {\n\tvar waiting = create(null), cache = create(null), promises = create(null);\n\n\tif (mode === true) {\n\t\tmode = null;\n\t} else {\n\t\tmode = ensureString(mode);\n\t\tif (!supportedModes[mode]) {\n\t\t\tthrow new TypeError(\"'\" + toShortString(mode) + \"' is not valid promise mode\");\n\t\t}\n\t}\n\n\t// After not from cache call\n\tconf.on(\"set\", function (id, ignore, promise) {\n\t\tvar isFailed = false;\n\n\t\tif (!isPromise(promise)) {\n\t\t\t// Non promise result\n\t\t\tcache[id] = promise;\n\t\t\tconf.emit(\"setasync\", id, 1);\n\t\t\treturn;\n\t\t}\n\t\twaiting[id] = 1;\n\t\tpromises[id] = promise;\n\t\tvar onSuccess = function (result) {\n\t\t\tvar count = waiting[id];\n\t\t\tif (isFailed) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\"Memoizee error: Detected unordered then|done & finally resolution, which \" +\n\t\t\t\t\t\t\"in turn makes proper detection of success/failure impossible (when in \" +\n\t\t\t\t\t\t\"'done:finally' mode)\\n\" +\n\t\t\t\t\t\t\"Consider to rely on 'then' or 'done' mode instead.\"\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (!count) return; // Deleted from cache before resolved\n\t\t\tdelete waiting[id];\n\t\t\tcache[id] = result;\n\t\t\tconf.emit(\"setasync\", id, count);\n\t\t};\n\t\tvar onFailure = function () {\n\t\t\tisFailed = true;\n\t\t\tif (!waiting[id]) return; // Deleted from cache (or succeed in case of finally)\n\t\t\tdelete waiting[id];\n\t\t\tdelete promises[id];\n\t\t\tconf.delete(id);\n\t\t};\n\n\t\tvar resolvedMode = mode;\n\t\tif (!resolvedMode) resolvedMode = \"then\";\n\n\t\tif (resolvedMode === \"then\") {\n\t\t\tvar nextTickFailure = function () { nextTick(onFailure); };\n\t\t\t// Eventual finally needs to be attached to non rejected promise\n\t\t\t// (so we not force propagation of unhandled rejection)\n\t\t\tpromise = promise.then(function (result) {\n\t\t\t\tnextTick(onSuccess.bind(this, result));\n\t\t\t}, nextTickFailure);\n\t\t\t// If `finally` is a function we attach to it to remove cancelled promises.\n\t\t\tif (typeof promise.finally === \"function\") {\n\t\t\t\tpromise.finally(nextTickFailure);\n\t\t\t}\n\t\t} else if (resolvedMode === \"done\") {\n\t\t\t// Not recommended, as it may mute any eventual \"Unhandled error\" events\n\t\t\tif (typeof promise.done !== \"function\") {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\"Memoizee error: Retrieved promise does not implement 'done' \" +\n\t\t\t\t\t\t\"in 'done' mode\"\n\t\t\t\t);\n\t\t\t}\n\t\t\tpromise.done(onSuccess, onFailure);\n\t\t} else if (resolvedMode === \"done:finally\") {\n\t\t\t// The only mode with no side effects assuming library does not throw unconditionally\n\t\t\t// for rejected promises.\n\t\t\tif (typeof promise.done !== \"function\") {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\"Memoizee error: Retrieved promise does not implement 'done' \" +\n\t\t\t\t\t\t\"in 'done:finally' mode\"\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (typeof promise.finally !== \"function\") {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\"Memoizee error: Retrieved promise does not implement 'finally' \" +\n\t\t\t\t\t\t\"in 'done:finally' mode\"\n\t\t\t\t);\n\t\t\t}\n\t\t\tpromise.done(onSuccess);\n\t\t\tpromise.finally(onFailure);\n\t\t}\n\t});\n\n\t// From cache (sync)\n\tconf.on(\"get\", function (id, args, context) {\n\t\tvar promise;\n\t\tif (waiting[id]) {\n\t\t\t++waiting[id]; // Still waiting\n\t\t\treturn;\n\t\t}\n\t\tpromise = promises[id];\n\t\tvar emit = function () { conf.emit(\"getasync\", id, args, context); };\n\t\tif (isPromise(promise)) {\n\t\t\tif (typeof promise.done === \"function\") promise.done(emit);\n\t\t\telse {\n\t\t\t\tpromise.then(function () { nextTick(emit); });\n\t\t\t}\n\t\t} else {\n\t\t\temit();\n\t\t}\n\t});\n\n\t// On delete\n\tconf.on(\"delete\", function (id) {\n\t\tdelete promises[id];\n\t\tif (waiting[id]) {\n\t\t\tdelete waiting[id];\n\t\t\treturn; // Not yet resolved\n\t\t}\n\t\tif (!hasOwnProperty.call(cache, id)) return;\n\t\tvar result = cache[id];\n\t\tdelete cache[id];\n\t\tconf.emit(\"deleteasync\", id, [result]);\n\t});\n\n\t// On clear\n\tconf.on(\"clear\", function () {\n\t\tvar oldCache = cache;\n\t\tcache = create(null);\n\t\twaiting = create(null);\n\t\tpromises = create(null);\n\t\tconf.emit(\"clearasync\", objectMap(oldCache, function (data) { return [data]; }));\n\t});\n};\n","\"use strict\";\n\nvar forEach = Array.prototype.forEach, create = Object.create;\n\n// eslint-disable-next-line no-unused-vars\nmodule.exports = function (arg/*, …args*/) {\n\tvar set = create(null);\n\tforEach.call(arguments, function (name) { set[name] = true; });\n\treturn set;\n};\n","\"use strict\";\n\nvar ensureValue   = require(\"./valid-value\")\n  , stringifiable = require(\"./validate-stringifiable\");\n\nmodule.exports = function (value) { return stringifiable(ensureValue(value)); };\n","\"use strict\";\n\nvar isCallable = require(\"./is-callable\");\n\nmodule.exports = function (stringifiable) {\n\ttry {\n\t\tif (stringifiable && isCallable(stringifiable.toString)) return stringifiable.toString();\n\t\treturn String(stringifiable);\n\t} catch (e) {\n\t\tthrow new TypeError(\"Passed argument cannot be stringifed\");\n\t}\n};\n","\"use strict\";\n\nvar safeToString = require(\"./safe-to-string\");\n\nvar reNewLine = /[\\n\\r\\u2028\\u2029]/g;\n\nmodule.exports = function (value) {\n\tvar string = safeToString(value);\n\t// Trim if too long\n\tif (string.length > 100) string = string.slice(0, 99) + \"…\";\n\t// Replace eventual new lines\n\tstring = string.replace(reNewLine, function (char) {\n\t\treturn JSON.stringify(char).slice(1, -1);\n\t});\n\treturn string;\n};\n","\"use strict\";\n\nvar isCallable = require(\"./object/is-callable\");\n\nmodule.exports = function (value) {\n\ttry {\n\t\tif (value && isCallable(value.toString)) return value.toString();\n\t\treturn String(value);\n\t} catch (e) {\n\t\treturn \"<Non-coercible to string value>\";\n\t}\n};\n","// Call dispose callback on each cache purge\n\n\"use strict\";\n\nvar callable   = require(\"es5-ext/object/valid-callable\")\n  , forEach    = require(\"es5-ext/object/for-each\")\n  , extensions = require(\"../lib/registered-extensions\")\n\n  , apply = Function.prototype.apply;\n\nextensions.dispose = function (dispose, conf, options) {\n\tvar del;\n\tcallable(dispose);\n\tif ((options.async && extensions.async) || (options.promise && extensions.promise)) {\n\t\tconf.on(\"deleteasync\", del = function (id, resultArray) {\n\t\t\tapply.call(dispose, null, resultArray);\n\t\t});\n\t\tconf.on(\"clearasync\", function (cache) {\n\t\t\tforEach(cache, function (result, id) {\n del(id, result);\n});\n\t\t});\n\t\treturn;\n\t}\n\tconf.on(\"delete\", del = function (id, result) {\n dispose(result);\n});\n\tconf.on(\"clear\", function (cache) {\n\t\tforEach(cache, function (result, id) {\n del(id, result);\n});\n\t});\n};\n","/* eslint consistent-this: 0 */\n\n// Timeout cached values\n\n\"use strict\";\n\nvar aFrom      = require(\"es5-ext/array/from\")\n  , forEach    = require(\"es5-ext/object/for-each\")\n  , nextTick   = require(\"next-tick\")\n  , isPromise  = require(\"is-promise\")\n  , timeout    = require(\"timers-ext/valid-timeout\")\n  , extensions = require(\"../lib/registered-extensions\");\n\nvar noop = Function.prototype, max = Math.max, min = Math.min, create = Object.create;\n\nextensions.maxAge = function (maxAge, conf, options) {\n\tvar timeouts, postfix, preFetchAge, preFetchTimeouts;\n\n\tmaxAge = timeout(maxAge);\n\tif (!maxAge) return;\n\n\ttimeouts = create(null);\n\tpostfix =\n\t\t(options.async && extensions.async) || (options.promise && extensions.promise)\n\t\t\t? \"async\"\n\t\t\t: \"\";\n\tconf.on(\"set\" + postfix, function (id) {\n\t\ttimeouts[id] = setTimeout(function () { conf.delete(id); }, maxAge);\n\t\tif (typeof timeouts[id].unref === \"function\") timeouts[id].unref();\n\t\tif (!preFetchTimeouts) return;\n\t\tif (preFetchTimeouts[id]) {\n\t\t\tif (preFetchTimeouts[id] !== \"nextTick\") clearTimeout(preFetchTimeouts[id]);\n\t\t}\n\t\tpreFetchTimeouts[id] = setTimeout(function () {\n\t\t\tdelete preFetchTimeouts[id];\n\t\t}, preFetchAge);\n\t\tif (typeof preFetchTimeouts[id].unref === \"function\") preFetchTimeouts[id].unref();\n\t});\n\tconf.on(\"delete\" + postfix, function (id) {\n\t\tclearTimeout(timeouts[id]);\n\t\tdelete timeouts[id];\n\t\tif (!preFetchTimeouts) return;\n\t\tif (preFetchTimeouts[id] !== \"nextTick\") clearTimeout(preFetchTimeouts[id]);\n\t\tdelete preFetchTimeouts[id];\n\t});\n\n\tif (options.preFetch) {\n\t\tif (options.preFetch === true || isNaN(options.preFetch)) {\n\t\t\tpreFetchAge = 0.333;\n\t\t} else {\n\t\t\tpreFetchAge = max(min(Number(options.preFetch), 1), 0);\n\t\t}\n\t\tif (preFetchAge) {\n\t\t\tpreFetchTimeouts = {};\n\t\t\tpreFetchAge = (1 - preFetchAge) * maxAge;\n\t\t\tconf.on(\"get\" + postfix, function (id, args, context) {\n\t\t\t\tif (!preFetchTimeouts[id]) {\n\t\t\t\t\tpreFetchTimeouts[id] = \"nextTick\";\n\t\t\t\t\tnextTick(function () {\n\t\t\t\t\t\tvar result;\n\t\t\t\t\t\tif (preFetchTimeouts[id] !== \"nextTick\") return;\n\t\t\t\t\t\tdelete preFetchTimeouts[id];\n\t\t\t\t\t\tconf.delete(id);\n\t\t\t\t\t\tif (options.async) {\n\t\t\t\t\t\t\targs = aFrom(args);\n\t\t\t\t\t\t\targs.push(noop);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult = conf.memoized.apply(context, args);\n\t\t\t\t\t\tif (options.promise) {\n\t\t\t\t\t\t\t// Supress eventual error warnings\n\t\t\t\t\t\t\tif (isPromise(result)) {\n\t\t\t\t\t\t\t\tif (typeof result.done === \"function\") result.done(noop, noop);\n\t\t\t\t\t\t\t\telse result.then(noop, noop);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tconf.on(\"clear\" + postfix, function () {\n\t\tforEach(timeouts, function (id) { clearTimeout(id); });\n\t\ttimeouts = {};\n\t\tif (preFetchTimeouts) {\n\t\t\tforEach(preFetchTimeouts, function (id) { if (id !== \"nextTick\") clearTimeout(id); });\n\t\t\tpreFetchTimeouts = {};\n\t\t}\n\t});\n};\n","\"use strict\";\n\nvar toPosInt   = require(\"es5-ext/number/to-pos-integer\")\n  , maxTimeout = require(\"./max-timeout\");\n\nmodule.exports = function (value) {\n\tvalue = toPosInt(value);\n\tif (value > maxTimeout) throw new TypeError(value + \" exceeds maximum possible timeout\");\n\treturn value;\n};\n","\"use strict\";\n\nmodule.exports = 2147483647;\n","// Limit cache size, LRU (least recently used) algorithm.\n\n\"use strict\";\n\nvar toPosInteger = require(\"es5-ext/number/to-pos-integer\")\n  , lruQueue     = require(\"lru-queue\")\n  , extensions   = require(\"../lib/registered-extensions\");\n\nextensions.max = function (max, conf, options) {\n\tvar postfix, queue, hit;\n\n\tmax = toPosInteger(max);\n\tif (!max) return;\n\n\tqueue = lruQueue(max);\n\tpostfix = (options.async && extensions.async) || (options.promise && extensions.promise)\n\t\t? \"async\" : \"\";\n\n\tconf.on(\"set\" + postfix, hit = function (id) {\n\t\tid = queue.hit(id);\n\t\tif (id === undefined) return;\n\t\tconf.delete(id);\n\t});\n\tconf.on(\"get\" + postfix, hit);\n\tconf.on(\"delete\" + postfix, queue.delete);\n\tconf.on(\"clear\" + postfix, queue.clear);\n};\n","'use strict';\n\nvar toPosInt = require('es5-ext/number/to-pos-integer')\n\n  , create = Object.create, hasOwnProperty = Object.prototype.hasOwnProperty;\n\nmodule.exports = function (limit) {\n\tvar size = 0, base = 1, queue = create(null), map = create(null), index = 0, del;\n\tlimit = toPosInt(limit);\n\treturn {\n\t\thit: function (id) {\n\t\t\tvar oldIndex = map[id], nuIndex = ++index;\n\t\t\tqueue[nuIndex] = id;\n\t\t\tmap[id] = nuIndex;\n\t\t\tif (!oldIndex) {\n\t\t\t\t++size;\n\t\t\t\tif (size <= limit) return;\n\t\t\t\tid = queue[base];\n\t\t\t\tdel(id);\n\t\t\t\treturn id;\n\t\t\t}\n\t\t\tdelete queue[oldIndex];\n\t\t\tif (base !== oldIndex) return;\n\t\t\twhile (!hasOwnProperty.call(queue, ++base)) continue; //jslint: skip\n\t\t},\n\t\tdelete: del = function (id) {\n\t\t\tvar oldIndex = map[id];\n\t\t\tif (!oldIndex) return;\n\t\t\tdelete queue[oldIndex];\n\t\t\tdelete map[id];\n\t\t\t--size;\n\t\t\tif (base !== oldIndex) return;\n\t\t\tif (!size) {\n\t\t\t\tindex = 0;\n\t\t\t\tbase = 1;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\twhile (!hasOwnProperty.call(queue, ++base)) continue; //jslint: skip\n\t\t},\n\t\tclear: function () {\n\t\t\tsize = 0;\n\t\t\tbase = 1;\n\t\t\tqueue = create(null);\n\t\t\tmap = create(null);\n\t\t\tindex = 0;\n\t\t}\n\t};\n};\n","// Reference counter, useful for garbage collector like functionality\n\n\"use strict\";\n\nvar d          = require(\"d\")\n  , extensions = require(\"../lib/registered-extensions\")\n\n  , create = Object.create, defineProperties = Object.defineProperties;\n\nextensions.refCounter = function (ignore, conf, options) {\n\tvar cache, postfix;\n\n\tcache = create(null);\n\tpostfix = (options.async && extensions.async) || (options.promise && extensions.promise)\n\t\t? \"async\" : \"\";\n\n\tconf.on(\"set\" + postfix, function (id, length) {\n cache[id] = length || 1;\n});\n\tconf.on(\"get\" + postfix, function (id) {\n ++cache[id];\n});\n\tconf.on(\"delete\" + postfix, function (id) {\n delete cache[id];\n});\n\tconf.on(\"clear\" + postfix, function () {\n cache = {};\n});\n\n\tdefineProperties(conf.memoized, {\n\t\tdeleteRef: d(function () {\n\t\t\tvar id = conf.get(arguments);\n\t\t\tif (id === null) return null;\n\t\t\tif (!cache[id]) return null;\n\t\t\tif (!--cache[id]) {\n\t\t\t\tconf.delete(id);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}),\n\t\tgetRefCount: d(function () {\n\t\t\tvar id = conf.get(arguments);\n\t\t\tif (id === null) return 0;\n\t\t\tif (!cache[id]) return 0;\n\t\t\treturn cache[id];\n\t\t})\n\t});\n};\n","\"use strict\";\n\nvar crypto = require('crypto');\nvar randomBytes = require('randombytes');\nvar Charset = require('./charset.js');\n\nfunction safeRandomBytes(length) {\n  while (true) {\n    try {\n      return randomBytes(length);\n    } catch(e) {\n      continue;\n    }\n  }\n}\n\nfunction processString(buf, initialString, chars, reqLen, maxByte) {\n  var string = initialString;\n  for (var i = 0; i < buf.length && string.length < reqLen; i++) {\n    var randomByte = buf.readUInt8(i);\n    if (randomByte < maxByte) {\n      string += chars.charAt(randomByte % chars.length);\n    }\n  }\n  return string;\n}\n\nfunction getAsyncString(string, chars, length, maxByte, cb) {\n  crypto.randomBytes(length, function(err, buf) {\n    if (err) {\n      // Since it is waiting for entropy, errors are legit and we shouldn't just keep retrying\n      cb(err);\n    }\n    var generatedString = processString(buf, string, chars, length, maxByte);\n    if (generatedString.length < length) {\n      getAsyncString(generatedString, chars, length, maxByte, cb);\n    } else {\n      cb(null, generatedString);\n    }\n  })\n}\n\nexports.generate = function(options, cb) {\n  var charset = new Charset();\n\n  var length, chars, capitalization, string = '';\n\n  // Handle options\n  if (typeof options === 'object') {\n    length = options.length || 32;\n\n    if (options.charset) {\n      charset.setType(options.charset);\n    }\n    else {\n      charset.setType('alphanumeric');\n    }\n\n    if (options.capitalization) {\n      charset.setcapitalization(options.capitalization);\n    }\n\n    if (options.readable) {\n      charset.removeUnreadable();\n    }\n\n    charset.removeDuplicates();\n  }\n  else if (typeof options === 'number') {\n    length = options;\n    charset.setType('alphanumeric');\n  }\n  else {\n    length = 32;\n    charset.setType('alphanumeric');\n  }\n\n  // Generate the string\n  var charsLen = charset.chars.length;\n  var maxByte = 256 - (256 % charsLen);\n\n  if (!cb) {\n    while (string.length < length) {\n      var buf = safeRandomBytes(Math.ceil(length * 256 / maxByte));\n      string = processString(buf, string, charset.chars, length, maxByte);\n    }\n\n    return string;\n  }\n\n  getAsyncString(string, charset.chars, length, maxByte, cb);\n\n};\n","module.exports = require('crypto').randomBytes\n","var arrayUniq = require('array-uniq');\n\nfunction Charset() {\n  this.chars = '';\n}\n\nCharset.prototype.setType = function(type) {\n  var chars;\n\n  var numbers     = '0123456789';\n  var charsLower  = 'abcdefghijklmnopqrstuvwxyz';\n  var charsUpper  = charsLower.toUpperCase();\n  var hexChars    = 'abcdef';\n  var binaryChars = '01';\n  var octalChars  = '01234567';\n\n  if (type === 'alphanumeric') {\n    chars = numbers + charsLower + charsUpper;\n  }\n  else if (type === 'numeric') {\n    chars = numbers;\n  }\n  else if (type === 'alphabetic') {\n    chars = charsLower + charsUpper;\n  }\n  else if (type === 'hex') {\n    chars = numbers + hexChars;\n  }\n  else if (type === 'binary') {\n    chars = binaryChars;\n  }\n  else if (type === 'octal') {\n    chars = octalChars;\n  }\n  else {\n    chars = type;\n  }\n\n  this.chars = chars;\n}\n\nCharset.prototype.removeUnreadable = function() {\n  var unreadableChars = /[0OIl]/g;\n  this.chars = this.chars.replace(unreadableChars, '');\n}\n\nCharset.prototype.setcapitalization = function(capitalization) {\n  if (capitalization === 'uppercase') {\n    this.chars = this.chars.toUpperCase();\n  }\n  else if (capitalization === 'lowercase') {\n    this.chars = this.chars.toLowerCase();\n  }\n}\n\nCharset.prototype.removeDuplicates = function() {\n  var charMap = this.chars.split('');\n  charMap = arrayUniq(charMap);\n  this.chars = charMap.join('');\n}\n\nmodule.exports = exports = Charset;\n","'use strict';\n\n// there's 3 implementations written in increasing order of efficiency\n\n// 1 - no Set type is defined\nfunction uniqNoSet(arr) {\n\tvar ret = [];\n\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tif (ret.indexOf(arr[i]) === -1) {\n\t\t\tret.push(arr[i]);\n\t\t}\n\t}\n\n\treturn ret;\n}\n\n// 2 - a simple Set type is defined\nfunction uniqSet(arr) {\n\tvar seen = new Set();\n\treturn arr.filter(function (el) {\n\t\tif (!seen.has(el)) {\n\t\t\tseen.add(el);\n\t\t\treturn true;\n\t\t}\n\t});\n}\n\n// 3 - a standard Set type is defined and it has a forEach method\nfunction uniqSetWithForEach(arr) {\n\tvar ret = [];\n\n\t(new Set(arr)).forEach(function (el) {\n\t\tret.push(el);\n\t});\n\n\treturn ret;\n}\n\n// V8 currently has a broken implementation\n// https://github.com/joyent/node/issues/8449\nfunction doesForEachActuallyWork() {\n\tvar ret = false;\n\n\t(new Set([true])).forEach(function (el) {\n\t\tret = el;\n\t});\n\n\treturn ret === true;\n}\n\nif ('Set' in global) {\n\tif (typeof Set.prototype.forEach === 'function' && doesForEachActuallyWork()) {\n\t\tmodule.exports = uniqSetWithForEach;\n\t} else {\n\t\tmodule.exports = uniqSet;\n\t}\n} else {\n\tmodule.exports = uniqNoSet;\n}\n","module.exports = require(\"pinejs-client-core\");","var OMeta = require(\"ometa-js/lib/ometajs/core\"), SBVRLibs = require(\"./sbvr-libs\").SBVRLibs, _ = require(\"lodash\");\n\nrequire(\"./inflection\");\n\nvar isEOL = function isEOL(x) {\n    return [ \"\\n\", \"\\r\" ].includes(x);\n}, isSpace = function isSpace(x) {\n    return x.charCodeAt(0) <= 32;\n}, SBVRParser = exports.SBVRParser = SBVRLibs._extend({\n    EOL: function() {\n        var $elf = this, _fromIdx = this.input.idx, x;\n        return this._many1(function() {\n            x = this.anything();\n            return this._pred(isEOL(x));\n        });\n    },\n    EOLSpaces: function() {\n        var $elf = this, _fromIdx = this.input.idx, c, eol;\n        eol = !1;\n        this._many(function() {\n            return this._or(function() {\n                c = this._idxConsumedBy(function() {\n                    return this._apply(\"spaces\");\n                });\n                return this._pred(c.fromIdx !== c.toIdx);\n            }, function() {\n                this._apply(\"EOL\");\n                return eol = !0;\n            });\n        });\n        return this._pred(eol);\n    },\n    IdentifierKey: function(identifier) {\n        var $elf = this, _fromIdx = this.input.idx, index;\n        index = this._or(function() {\n            this._pred(Array.isArray(identifier[3]));\n            this._pred(\"Number\" == identifier[3][0]);\n            return identifier[3][1];\n        }, function() {\n            return \"\";\n        });\n        return identifier[1] + \"|\" + identifier[2] + \"|\" + index;\n    },\n    Bind: function(identifier, bindings) {\n        var $elf = this, _fromIdx = this.input.idx, binding, identifierKey, varNumber;\n        identifierKey = this._applyWithArgs(\"IdentifierKey\", identifier);\n        varNumber = this.ruleVars[identifierKey];\n        this._pred(null != varNumber);\n        binding = [ \"RoleBinding\", identifier, varNumber ];\n        this._opt(function() {\n            this._pred(bindings);\n            return bindings.push(binding);\n        });\n        return binding;\n    },\n    spaces: function() {\n        var $elf = this, _fromIdx = this.input.idx;\n        this._applyWithArgs(\"matchUntil\", function(x) {\n            return !isSpace(x) || isEOL(x);\n        });\n        return function() {\n            \"-\" === this.input.hd && this._opt(function() {\n                return this._apply(\"NewComment\");\n            });\n        }.call(this);\n    },\n    Number: function() {\n        var $elf = this, _fromIdx = this.input.idx, n;\n        return this._or(function() {\n            this._apply(\"spaces\");\n            n = this._consumedBy(function() {\n                return this._many1(function() {\n                    return this._apply(\"digit\");\n                });\n            });\n            return [ \"Number\", parseInt(n, 10) ];\n        }, function() {\n            this._applyWithArgs(\"token\", \"one\");\n            return [ \"Number\", 1 ];\n        });\n    },\n    Real: function() {\n        var $elf = this, _fromIdx = this.input.idx, n;\n        this._apply(\"spaces\");\n        n = this._consumedBy(function() {\n            this._opt(function() {\n                return this._applyWithArgs(\"exactly\", \"-\");\n            });\n            this._many1(function() {\n                return this._apply(\"digit\");\n            });\n            this._applyWithArgs(\"exactly\", \".\");\n            return this._many1(function() {\n                return this._apply(\"digit\");\n            });\n        });\n        return [ \"Real\", Number(n) ];\n    },\n    Integer: function() {\n        var $elf = this, _fromIdx = this.input.idx, n;\n        this._apply(\"spaces\");\n        n = this._consumedBy(function() {\n            this._opt(function() {\n                return this._applyWithArgs(\"exactly\", \"-\");\n            });\n            return this._many1(function() {\n                return this._apply(\"digit\");\n            });\n        });\n        return [ \"Integer\", Number(n) ];\n    },\n    Text: function() {\n        var $elf = this, _fromIdx = this.input.idx, text;\n        this._apply(\"spaces\");\n        this._applyWithArgs(\"exactly\", '\"');\n        text = this._consumedBy(function() {\n            return this._many1(function() {\n                return this._or(function() {\n                    switch (this.anything()) {\n                      case \"\\\\\":\n                        return this._applyWithArgs(\"exactly\", '\"');\n\n                      default:\n                        throw this._fail();\n                    }\n                }, function() {\n                    this._not(function() {\n                        return this._applyWithArgs(\"exactly\", '\"');\n                    });\n                    return this.anything();\n                });\n            });\n        });\n        this._applyWithArgs(\"exactly\", '\"');\n        return [ \"Text\", text ];\n    },\n    Value: function() {\n        var $elf = this, _fromIdx = this.input.idx;\n        return this._or(function() {\n            return this._apply(\"Real\");\n        }, function() {\n            return this._apply(\"Integer\");\n        }, function() {\n            return this._apply(\"Text\");\n        });\n    },\n    toSBVREOL: function() {\n        var $elf = this, _fromIdx = this.input.idx;\n        this._apply(\"spaces\");\n        return this._consumedBy(function() {\n            return this._many(function() {\n                this._apply(\"spaces\");\n                return this._or(function() {\n                    return this._apply(\"InformalIdentifier\");\n                }, function() {\n                    switch (this.anything()) {\n                      case \"'\":\n                        this._apply(\"InformalIdentifier\");\n                        return this._applyWithArgs(\"exactly\", \"'\");\n\n                      default:\n                        throw this._fail();\n                    }\n                }, function() {\n                    return this._many1(function() {\n                        this._not(function() {\n                            return this._apply(\"space\");\n                        });\n                        return this.anything();\n                    });\n                });\n            });\n        });\n    },\n    toEOL: function() {\n        var $elf = this, _fromIdx = this.input.idx;\n        return this._consumedBy(function() {\n            return this._applyWithArgs(\"matchUntil\", isEOL);\n        });\n    },\n    token: function(x) {\n        var $elf = this, _fromIdx = this.input.idx, s;\n        this._apply(\"spaces\");\n        s = this._applyWithArgs(\"seq\", x);\n        this._lookahead(function() {\n            return this._or(function() {\n                return this._apply(\"space\");\n            }, function() {\n                return this._apply(\"end\");\n            });\n        });\n        return s;\n    },\n    AddIdentifier: function(identifierType, baseSynonym) {\n        var $elf = this, _fromIdx = this.input.idx, identifier, startInput;\n        startInput = this.input;\n        identifier = this._many1(function() {\n            return this._apply(\"IdentifierPart\");\n        });\n        identifier = identifier.join(\" \");\n        this._addToken(startInput, this.input, identifierType, []);\n        return function() {\n            return $elf._AddIdentifier(identifierType, identifier, baseSynonym);\n        };\n    },\n    InformalIdentifier: function() {\n        var $elf = this, _fromIdx = this.input.idx;\n        return this._applyWithArgs(\"Identifier\", void 0, !0);\n    },\n    Identifier: function(factTypeSoFar, noAutoComplete) {\n        var $elf = this, _fromIdx = this.input.idx, name, term;\n        this._opt(function() {\n            return this._not(function() {\n                return term = this._consumedBy(function() {\n                    return this._opt(function() {\n                        return this._applyWithArgs(\"Term\", factTypeSoFar);\n                    });\n                });\n            });\n        });\n        this._opt(function() {\n            return this._not(function() {\n                return name = this._consumedBy(function() {\n                    return this._opt(function() {\n                        return this._applyWithArgs(\"Name\", factTypeSoFar);\n                    });\n                });\n            });\n        });\n        return this._or(function() {\n            this._pred(term || name);\n            return this._or(function() {\n                this._pred(term.length > name.length);\n                return this._applyWithArgs(\"Term\", factTypeSoFar);\n            }, function() {\n                return this._applyWithArgs(\"Name\", factTypeSoFar);\n            });\n        }, function() {\n            this._pred(!noAutoComplete && void 0 !== this._getBranches());\n            return this._or(function() {\n                return this._applyWithArgs(\"Term\", factTypeSoFar);\n            }, function() {\n                return this._applyWithArgs(\"Name\", factTypeSoFar);\n            });\n        });\n    },\n    Vocabulary: function() {\n        var $elf = this, _fromIdx = this.input.idx, vocabulary;\n        vocabulary = this._apply(\"FindVocabulary\");\n        return [ \"Vocabulary\", vocabulary ];\n    },\n    Name: function(factTypeSoFar) {\n        var $elf = this, _fromIdx = this.input.idx;\n        return this._applyWithArgs(\"FindIdentifier\", \"Name\", factTypeSoFar);\n    },\n    Term: function(factTypeSoFar) {\n        var $elf = this, _fromIdx = this.input.idx, n, term;\n        term = this._applyWithArgs(\"FindIdentifier\", \"Term\", factTypeSoFar);\n        this._opt(function() {\n            n = this._consumedBy(function() {\n                return this._many1(function() {\n                    return this._apply(\"digit\");\n                });\n            });\n            return term.push([ \"Number\", Number(n) ]);\n        });\n        return term;\n    },\n    FindIdentifier: function(identifierType, factTypeSoFar) {\n        var $elf = this, _fromIdx = this.input.idx, identifier, quote;\n        this._apply(\"spaces\");\n        quote = this._opt(function() {\n            return this._applyWithArgs(\"exactly\", \"'\");\n        });\n        identifier = this._applyWithArgs(\"FindIdentifierNest\", identifierType, factTypeSoFar);\n        this._or(function() {\n            return this._pred(!quote);\n        }, function() {\n            switch (this.anything()) {\n              case \"'\":\n                return \"'\";\n\n              default:\n                throw this._fail();\n            }\n        });\n        return identifier;\n    },\n    FindIdentifierNest: function(identifierType, factTypeSoFar, identifierSoFar) {\n        var $elf = this, _fromIdx = this.input.idx, identifierSoFar, part, vocabulary;\n        part = this._apply(\"IdentifierPart\");\n        identifierSoFar = this._or(function() {\n            this._pred(identifierSoFar);\n            return identifierSoFar + \" \" + part;\n        }, function() {\n            return part;\n        });\n        this._pred(identifierSoFar.length <= this.longestIdentifier[identifierType]);\n        return this._or(function() {\n            return this._applyWithArgs(\"FindIdentifierNest\", identifierType, factTypeSoFar, identifierSoFar);\n        }, function() {\n            vocabulary = this._or(function() {\n                return this._applyWithArgs(\"FindVocabulary\", identifierSoFar);\n            }, function() {\n                return this.currentVocabulary;\n            });\n            return this._applyWithArgs(\"IsFactTypeIdentifier\", [ identifierType, identifierSoFar, vocabulary ], factTypeSoFar);\n        });\n    },\n    FindVocabulary: function(identifier) {\n        var $elf = this, _fromIdx = this.input.idx, bracket, vocabulary;\n        this._apply(\"spaces\");\n        bracket = this._opt(function() {\n            return this._applyWithArgs(\"exactly\", \"(\");\n        });\n        vocabulary = this._apply(\"FindVocabularyNest\");\n        this._pred(!identifier || this.vocabularies[vocabulary].IdentifierChildren.hasOwnProperty(identifier));\n        this._or(function() {\n            return this._pred(!bracket);\n        }, function() {\n            switch (this.anything()) {\n              case \")\":\n                return \")\";\n\n              default:\n                throw this._fail();\n            }\n        });\n        return vocabulary;\n    },\n    FindVocabularyNest: function(vocabularySoFar) {\n        var $elf = this, _fromIdx = this.input.idx, part, vocabularySoFar;\n        part = this._apply(\"IdentifierPart\");\n        vocabularySoFar = this._or(function() {\n            this._pred(vocabularySoFar);\n            return vocabularySoFar + \" \" + part;\n        }, function() {\n            return part;\n        });\n        this._pred(vocabularySoFar.length <= this.longestIdentifier.Vocabulary);\n        return this._or(function() {\n            return this._applyWithArgs(\"FindVocabularyNest\", vocabularySoFar);\n        }, function() {\n            this._pred(this.vocabularies.hasOwnProperty(vocabularySoFar));\n            return vocabularySoFar;\n        });\n    },\n    IdentifierPart: function() {\n        var $elf = this, _fromIdx = this.input.idx, r;\n        this._apply(\"spaces\");\n        return this._consumedBy(function() {\n            return this._many1(function() {\n                r = this.anything();\n                return this._pred(r >= \"a\" && r <= \"z\" || r >= \"A\" && r <= \"Z\" || \"-\" === r);\n            });\n        });\n    },\n    addVerb: function() {\n        var $elf = this, _fromIdx = this.input.idx;\n        this._apply(\"ClearSuggestions\");\n        return this._applyWithArgs(\"Verb\", !0);\n    },\n    Verb: function(factTypeSoFar) {\n        var $elf = this, _fromIdx = this.input.idx, bracket, verb;\n        this._apply(\"spaces\");\n        bracket = this._opt(function() {\n            return this._applyWithArgs(\"exactly\", \"[\");\n        });\n        verb = this._applyWithArgs(\"FindVerb\", factTypeSoFar, bracket);\n        this._or(function() {\n            return this._pred(!bracket);\n        }, function() {\n            this._apply(\"spaces\");\n            return this._applyWithArgs(\"exactly\", \"]\");\n        });\n        return verb;\n    },\n    FindVerb: function(factTypeSoFar, bracketed, verbSoFar, negated) {\n        var $elf = this, _fromIdx = this.input.idx, negated, part, verb, verbSoFar;\n        this._opt(function() {\n            this._pred(factTypeSoFar && !verbSoFar);\n            this._or(function() {\n                return this._applyWithArgs(\"Keyword\", \"isn't\");\n            }, function() {\n                return this._applyWithArgs(\"Keyword\", \"aren't\");\n            });\n            verbSoFar = \"is\";\n            return negated = !0;\n        });\n        this._apply(\"spaces\");\n        this._or(function() {\n            return this._pred(bracketed);\n        }, function() {\n            return this._not(function() {\n                return this._apply(\"Identifier\");\n            });\n        });\n        part = this._apply(\"IdentifierPart\");\n        verbSoFar = this._or(function() {\n            this._pred(verbSoFar);\n            return verbSoFar + \" \" + part;\n        }, function() {\n            return this._verbForm(part);\n        });\n        this._opt(function() {\n            this._pred(factTypeSoFar && \"is\" === verbSoFar);\n            this._apply(\"spaces\");\n            this._applyWithArgs(\"Keyword\", \"not\");\n            return negated = !0;\n        });\n        return this._or(function() {\n            return this._applyWithArgs(\"FindVerb\", factTypeSoFar, bracketed, verbSoFar, negated);\n        }, function() {\n            this._or(function() {\n                return this._pred(!0 === factTypeSoFar);\n            }, function() {\n                return this._applyWithArgs(\"IsVerb\", factTypeSoFar, verbSoFar);\n            });\n            verb = [ \"Verb\", verbSoFar, !0 === negated ];\n            return verb;\n        });\n    },\n    JoiningQuantifier: function() {\n        var $elf = this, _fromIdx = this.input.idx;\n        return this._applyWithArgs(\"matchForAll\", \"Keyword\", [ \"and\", \"at\", \"most\" ]);\n    },\n    Quantifier: function() {\n        var $elf = this, _fromIdx = this.input.idx, m, n;\n        return this._or(function() {\n            this._applyWithArgs(\"matchForAny\", \"Keyword\", [ \"each\", \"a given\" ]);\n            return [ \"UniversalQuantification\" ];\n        }, function() {\n            this._applyWithArgs(\"matchForAny\", \"Keyword\", [ \"a\", \"an\", \"some\" ]);\n            return [ \"ExistentialQuantification\" ];\n        }, function() {\n            this._applyWithArgs(\"matchForAll\", \"Keyword\", [ \"at\", \"most\" ]);\n            n = this._apply(\"Number\");\n            return [ \"AtMostNQuantification\", [ \"MaximumCardinality\", n ] ];\n        }, function() {\n            this._applyWithArgs(\"matchForAll\", \"Keyword\", [ \"at\", \"least\" ]);\n            n = this._apply(\"Number\");\n            return this._or(function() {\n                this._apply(\"JoiningQuantifier\");\n                m = this._apply(\"Number\");\n                return [ \"NumericalRangeQuantification\", [ \"MinimumCardinality\", n ], [ \"MaximumCardinality\", m ] ];\n            }, function() {\n                return [ \"AtLeastNQuantification\", [ \"MinimumCardinality\", n ] ];\n            });\n        }, function() {\n            this._applyWithArgs(\"matchForAll\", \"Keyword\", [ \"more\", \"than\" ]);\n            n = this._apply(\"Number\");\n            ++n[1];\n            return [ \"AtLeastNQuantification\", [ \"MinimumCardinality\", n ] ];\n        }, function() {\n            this._applyWithArgs(\"Keyword\", \"exactly\");\n            n = this._apply(\"Number\");\n            return [ \"ExactQuantification\", [ \"Cardinality\", n ] ];\n        }, function() {\n            this._applyWithArgs(\"Keyword\", \"no\");\n            return [ \"ExactQuantification\", [ \"Cardinality\", [ \"Number\", 0 ] ] ];\n        });\n    },\n    Keyword: function(word, noToken) {\n        var $elf = this, _fromIdx = this.input.idx;\n        return this._or(function() {\n            this._pred(!0 === noToken);\n            return this._applyWithArgs(\"seq\", word);\n        }, function() {\n            this._pred(!0 !== noToken);\n            return this._applyWithArgs(\"token\", word);\n        });\n    },\n    addThat: function() {\n        var $elf = this, _fromIdx = this.input.idx;\n        return this._applyWithArgs(\"Keyword\", \"that\");\n    },\n    addThe: function() {\n        var $elf = this, _fromIdx = this.input.idx;\n        return this._applyWithArgs(\"Keyword\", \"the\");\n    },\n    DisableCommas: function(bool) {\n        var $elf = this, _fromIdx = this.input.idx;\n        return this.disableCommas = bool;\n    },\n    addComma: function(force) {\n        var $elf = this, _fromIdx = this.input.idx;\n        this._pred(force || !this.disableCommas);\n        return this._applyWithArgs(\"Keyword\", \",\");\n    },\n    CreateVar: function(identifier) {\n        var $elf = this, _fromIdx = this.input.idx, identifierKey, varNumber;\n        identifierKey = this._applyWithArgs(\"IdentifierKey\", identifier);\n        varNumber = this._or(function() {\n            this._pred(\"|\" !== identifierKey.slice(-1));\n            this._pred(this.ruleVars[identifierKey]);\n            return this.ruleVars[identifierKey];\n        }, function() {\n            return this.ruleVars[identifierKey] = this.ruleVarsCount++;\n        });\n        return [ \"Variable\", [ \"Number\", varNumber ], identifier ];\n    },\n    EmbedVar: function(identifier, data) {\n        var $elf = this, _fromIdx = this.input.idx, identifierKey;\n        identifierKey = this._applyWithArgs(\"IdentifierKey\", identifier);\n        return this.ruleVars[identifierKey] = data;\n    },\n    IsAtomicFormulation: function(factType, bindings) {\n        var $elf = this, _fromIdx = this.input.idx, realFactType;\n        realFactType = this._applyWithArgs(\"IsFactType\", factType);\n        this._pred(realFactType);\n        return [ \"AtomicFormulation\" ].concat([ [ \"FactType\" ].concat(factType) ], bindings);\n    },\n    ClosedProjection: function(identifier, bind) {\n        var $elf = this, _fromIdx = this.input.idx, bindings, factType, verb;\n        return this._or(function() {\n            this._apply(\"addThat\");\n            return this._or(function() {\n                return this._applyWithArgs(\"Junction\", \"VerbContinuation\", [ [ identifier ], [ bind ] ]);\n            }, function() {\n                return this._applyWithArgs(\"Junction\", \"RuleBody\", [ [], [], identifier, bind ]);\n            });\n        }, function() {\n            this._applyWithArgs(\"Keyword\", \"of\");\n            factType = [ identifier ];\n            verb = \"is of\";\n            this._applyWithArgs(\"IsVerb\", factType, verb);\n            factType.push([ \"Verb\", verb, !1 ]);\n            bindings = [ bind ];\n            return this._or(function() {\n                return this._applyWithArgs(\"Junction\", \"RuleBody\", [ factType, bindings ]);\n            }, function() {\n                return this._applyWithArgs(\"IsAtomicFormulation\", factType, bindings);\n            });\n        });\n    },\n    TermEntity: function(factType, bindings) {\n        var $elf = this, _fromIdx = this.input.idx, bind, term, thatLF, varLF;\n        term = this._applyWithArgs(\"Term\", factType);\n        varLF = this._applyWithArgs(\"CreateVar\", term);\n        bind = this._applyWithArgs(\"Bind\", term, bindings);\n        this._opt(function() {\n            thatLF = this._applyWithArgs(\"ClosedProjection\", term, bind);\n            varLF.push(thatLF);\n            return this._opt(function() {\n                this._pred(factType);\n                return this._applyWithArgs(\"addComma\", !1);\n            });\n        });\n        return {\n            term: term,\n            lf: varLF\n        };\n    },\n    RuleBody: function(factType, bindings, parentIdentifier, parentBind) {\n        var $elf = this, _fromIdx = this.input.idx, bind, data, identifier, lf, quant, termEntity;\n        this._or(function() {\n            quant = this._apply(\"Quantifier\");\n            termEntity = this._applyWithArgs(\"TermEntity\", factType, bindings);\n            return factType.push(termEntity.term);\n        }, function() {\n            this._apply(\"addThe\");\n            identifier = this._applyWithArgs(\"Identifier\", factType);\n            this._or(function() {\n                return this._applyWithArgs(\"Bind\", identifier, bindings);\n            }, function() {\n                this._applyWithArgs(\"EmbedVar\", identifier, identifier);\n                return this._applyWithArgs(\"Bind\", identifier, bindings);\n            });\n            return factType.push(identifier);\n        }, function() {\n            data = this._apply(\"Value\");\n            identifier = this._applyWithArgs(\"IsFactTypeIdentifier\", [ \"Term\", data[0], \"Type\" ], factType);\n            identifier.push(data);\n            this._applyWithArgs(\"EmbedVar\", identifier, data);\n            bind = this._applyWithArgs(\"Bind\", identifier, bindings);\n            bind[2] = data;\n            return factType.push(identifier);\n        });\n        lf = this._or(function() {\n            return this._applyWithArgs(\"Junction\", \"VerbContinuation\", [ factType, bindings, parentIdentifier, parentBind ]);\n        }, function() {\n            return this._applyWithArgs(\"IsAtomicFormulation\", factType, bindings);\n        });\n        return null == quant ? lf : quant.concat([ termEntity.lf, lf ]);\n    },\n    VerbContinuation: function(factType, bindings, parentIdentifier, parentBind) {\n        var $elf = this, _fromIdx = this.input.idx, v;\n        v = this._applyWithArgs(\"Verb\", factType);\n        factType.push(v);\n        (function() {\n            if (null != parentIdentifier) {\n                factType.push(parentIdentifier);\n                bindings.push(parentBind);\n            }\n        }).call(this);\n        return this._or(function() {\n            return this._applyWithArgs(\"Junction\", \"RuleBody\", [ factType, bindings ]);\n        }, function() {\n            return this._applyWithArgs(\"IsAtomicFormulation\", factType, bindings);\n        });\n    },\n    Modifier: function() {\n        var $elf = this, _fromIdx = this.input.idx, r;\n        this._applyWithArgs(\"token\", \"It\");\n        this._applyWithArgs(\"token\", \"is\");\n        r = this._or(function() {\n            this._applyWithArgs(\"token\", \"obligatory\");\n            return [ \"ObligationFormulation\" ];\n        }, function() {\n            this._applyWithArgs(\"token\", \"necessary\");\n            return [ \"NecessityFormulation\" ];\n        }, function() {\n            this._or(function() {\n                return this._applyWithArgs(\"token\", \"prohibited\");\n            }, function() {\n                return this._applyWithArgs(\"token\", \"forbidden\");\n            });\n            return [ \"ObligationFormulation\", [ \"LogicalNegation\" ] ];\n        }, function() {\n            this._or(function() {\n                return this._applyWithArgs(\"token\", \"impossible\");\n            }, function() {\n                this._applyWithArgs(\"token\", \"not\");\n                return this._applyWithArgs(\"token\", \"possible\");\n            });\n            return [ \"NecessityFormulation\", [ \"LogicalNegation\" ] ];\n        }, function() {\n            this._applyWithArgs(\"token\", \"possible\");\n            return [ \"PossibilityFormulation\" ];\n        }, function() {\n            this._applyWithArgs(\"token\", \"permitted\");\n            return [ \"PermissibilityFormulation\" ];\n        });\n        this._applyWithArgs(\"token\", \"that\");\n        return r;\n    },\n    Disjunction: function() {\n        var $elf = this, _fromIdx = this.input.idx;\n        this._applyWithArgs(\"Keyword\", \"or\");\n        return \"Disjunction\";\n    },\n    Conjunction: function() {\n        var $elf = this, _fromIdx = this.input.idx;\n        this._applyWithArgs(\"Keyword\", \"and\");\n        return \"Conjunction\";\n    },\n    JunctionType: function() {\n        var $elf = this, _fromIdx = this.input.idx;\n        return this._or(function() {\n            return this._apply(\"Disjunction\");\n        }, function() {\n            return this._apply(\"Conjunction\");\n        });\n    },\n    SerialCommaCheck: function() {\n        var $elf = this, _fromIdx = this.input.idx;\n        this._applyWithArgs(\"exactly\", \",\");\n        return this._or(function() {\n            return this._applyWithArgs(\"token\", \"and\");\n        }, function() {\n            return this._applyWithArgs(\"token\", \"or\");\n        });\n    },\n    UpcomingCommaJunction: function() {\n        var $elf = this, _fromIdx = this.input.idx, x;\n        return this._lookahead(function() {\n            return this._or(function() {\n                this._many(function() {\n                    this._not(function() {\n                        return this._apply(\"SerialCommaCheck\");\n                    });\n                    x = this.anything();\n                    return this._pred(!isEOL(x));\n                });\n                this._apply(\"SerialCommaCheck\");\n                return !0;\n            }, function() {\n                return !1;\n            });\n        });\n    },\n    SimpleJunction: function(ruleName, args) {\n        var $elf = this, _fromIdx = this.input.idx, junctioned, result, type;\n        result = this._applyWithArgs.apply(this, [ ruleName ].concat(_.cloneDeep(args)));\n        return this._or(function() {\n            type = this._apply(\"JunctionType\");\n            junctioned = this._applyWithArgs(\"SimpleJunction\", ruleName, args);\n            return [ type, result, junctioned ];\n        }, function() {\n            return result;\n        });\n    },\n    Junction: function(ruleName, args) {\n        var $elf = this, _fromIdx = this.input.idx, commaSeparated, junctioned, result, type, upcoming;\n        upcoming = this._apply(\"UpcomingCommaJunction\");\n        this._applyWithArgs(\"DisableCommas\", upcoming || this.disableCommas);\n        result = this._opt(function() {\n            result = this._applyWithArgs(\"SimpleJunction\", ruleName, args);\n            return this._or(function() {\n                this._pred(upcoming);\n                commaSeparated = this._many(function() {\n                    this._applyWithArgs(\"addComma\", !0);\n                    return this._applyWithArgs(\"SimpleJunction\", ruleName, args);\n                });\n                this._applyWithArgs(\"addComma\", !0);\n                type = this._apply(\"JunctionType\");\n                junctioned = this._applyWithArgs(\"Junction\", ruleName, args, !0);\n                return [ type, result ].concat(commaSeparated).concat([ junctioned ]);\n            }, function() {\n                return result;\n            });\n        });\n        upcoming = this._apply(\"UpcomingCommaJunction\");\n        this._applyWithArgs(\"DisableCommas\", upcoming);\n        this._pred(result);\n        return result;\n    },\n    StartRule: function() {\n        var $elf = this, _fromIdx = this.input.idx;\n        return function() {\n            switch (this.anything()) {\n              case \"R\":\n                switch (this.anything()) {\n                  case \":\":\n                    return \"R:\";\n\n                  case \"u\":\n                    this._applyWithArgs(\"exactly\", \"l\");\n                    this._applyWithArgs(\"exactly\", \"e\");\n                    this._applyWithArgs(\"exactly\", \":\");\n                    return \"Rule:\";\n\n                  default:\n                    throw this._fail();\n                }\n\n              default:\n                throw this._fail();\n            }\n        }.call(this);\n    },\n    NewRule: function() {\n        var $elf = this, _fromIdx = this.input.idx, mod, ruleLF, ruleText;\n        this._apply(\"StartRule\");\n        this._apply(\"spaces\");\n        ruleText = this._lookahead(function() {\n            return this._apply(\"toEOL\");\n        });\n        this.ruleVars = {};\n        this.ruleVarsCount = 0;\n        mod = this._apply(\"Modifier\");\n        ruleLF = this._applyWithArgs(\"Junction\", \"RuleBody\", [ [], [] ]);\n        this._apply(\"EOLTerminator\");\n        mod = _.cloneDeep(mod);\n        2 === mod.length ? mod[1][1] = ruleLF : mod[1] = ruleLF;\n        return [ \"Rule\", mod, [ \"StructuredEnglish\", ruleText ] ];\n    },\n    StartFactType: function() {\n        var $elf = this, _fromIdx = this.input.idx;\n        return function() {\n            switch (this.anything()) {\n              case \"F\":\n                switch (this.anything()) {\n                  case \":\":\n                    return \"F:\";\n\n                  case \"a\":\n                    this._applyWithArgs(\"exactly\", \"c\");\n                    this._applyWithArgs(\"exactly\", \"t\");\n                    this._applyWithArgs(\"exactly\", \" \");\n                    this._applyWithArgs(\"exactly\", \"t\");\n                    this._applyWithArgs(\"exactly\", \"y\");\n                    this._applyWithArgs(\"exactly\", \"p\");\n                    this._applyWithArgs(\"exactly\", \"e\");\n                    this._applyWithArgs(\"exactly\", \":\");\n                    return \"Fact type:\";\n\n                  default:\n                    throw this._fail();\n                }\n\n              default:\n                throw this._fail();\n            }\n        }.call(this);\n    },\n    NewFactType: function() {\n        var $elf = this, _fromIdx = this.input.idx, factType, identifier, v;\n        this._apply(\"StartFactType\");\n        factType = [];\n        this._many1(function() {\n            identifier = this._apply(\"Identifier\");\n            v = this._apply(\"addVerb\");\n            return factType.push(identifier, v);\n        });\n        this._opt(function() {\n            identifier = this._apply(\"Identifier\");\n            return factType.push(identifier);\n        });\n        return function() {\n            $elf.AddFactType(factType, factType);\n            var attributes = [ \"Attributes\" ];\n            if (3 === factType.length && (\"has\" === factType[1][1] || \"is of\" === factType[1][1])) {\n                synFactType = _.cloneDeep(factType);\n                synFactType.reverse();\n                \"has\" === synFactType[1][1] ? synFactType[1][1] = \"is of\" : synFactType[1][1] = \"has\";\n                $elf.AddFactType(synFactType, factType);\n                attributes.push([ \"SynonymousForm\", synFactType ]);\n            }\n            return [ \"FactType\" ].concat(factType).concat([ attributes ]);\n        };\n    },\n    StartVocabulary: function() {\n        var $elf = this, _fromIdx = this.input.idx;\n        this._applyWithArgs(\"exactly\", \"V\");\n        this._applyWithArgs(\"exactly\", \"o\");\n        this._applyWithArgs(\"exactly\", \"c\");\n        this._applyWithArgs(\"exactly\", \"a\");\n        this._applyWithArgs(\"exactly\", \"b\");\n        this._applyWithArgs(\"exactly\", \"u\");\n        this._applyWithArgs(\"exactly\", \"l\");\n        this._applyWithArgs(\"exactly\", \"a\");\n        this._applyWithArgs(\"exactly\", \"r\");\n        this._applyWithArgs(\"exactly\", \"y\");\n        this._applyWithArgs(\"exactly\", \":\");\n        return \"Vocabulary\";\n    },\n    StartTerm: function() {\n        var $elf = this, _fromIdx = this.input.idx;\n        (function() {\n            switch (this.anything()) {\n              case \"T\":\n                switch (this.anything()) {\n                  case \":\":\n                    return \"T:\";\n\n                  case \"e\":\n                    this._applyWithArgs(\"exactly\", \"r\");\n                    this._applyWithArgs(\"exactly\", \"m\");\n                    this._applyWithArgs(\"exactly\", \":\");\n                    return \"Term:\";\n\n                  default:\n                    throw this._fail();\n                }\n\n              default:\n                throw this._fail();\n            }\n        }).call(this);\n        return \"Term\";\n    },\n    StartName: function() {\n        var $elf = this, _fromIdx = this.input.idx;\n        (function() {\n            switch (this.anything()) {\n              case \"N\":\n                switch (this.anything()) {\n                  case \":\":\n                    return \"N:\";\n\n                  case \"a\":\n                    this._applyWithArgs(\"exactly\", \"m\");\n                    this._applyWithArgs(\"exactly\", \"e\");\n                    this._applyWithArgs(\"exactly\", \":\");\n                    return \"Name:\";\n\n                  default:\n                    throw this._fail();\n                }\n\n              default:\n                throw this._fail();\n            }\n        }).call(this);\n        return \"Name\";\n    },\n    NewIdentifier: function() {\n        var $elf = this, _fromIdx = this.input.idx, func, identifierType;\n        identifierType = this._or(function() {\n            return this._apply(\"StartVocabulary\");\n        }, function() {\n            return this._apply(\"StartTerm\");\n        }, function() {\n            return this._apply(\"StartName\");\n        });\n        this._apply(\"ClearSuggestions\");\n        func = this._applyWithArgs(\"AddIdentifier\", identifierType);\n        return function() {\n            return func().concat([ [ \"Attributes\" ] ]);\n        };\n    },\n    NewAttribute: function() {\n        var $elf = this, _fromIdx = this.input.idx, attrName, attrValOrFunc, currentLine;\n        currentLine = _.last(this.lines);\n        attrName = this._applyWithArgs(\"AllowedAttrs\", currentLine[0]);\n        attrName = attrName.replace(/ /g, \"\");\n        this._apply(\"spaces\");\n        attrValOrFunc = this._applyWithArgs(\"ApplyFirstExisting\", [ \"Attr\" + attrName, \"DefaultAttr\" ]);\n        return function() {\n            var lastLine = $elf.lines.pop(), attrVal = \"function\" == typeof attrValOrFunc ? attrValOrFunc(lastLine) : attrValOrFunc;\n            _.last(lastLine).push([ attrName, attrVal ]);\n            return lastLine;\n        };\n    },\n    AllowedAttrs: function(termOrFactType) {\n        var $elf = this, _fromIdx = this.input.idx, attrName;\n        attrName = this._applyWithArgs(\"matchForAny\", \"seq\", this.branches.AllowedAttrs.call(this, termOrFactType));\n        return attrName.replace(\":\", \"\");\n    },\n    DefaultAttr: function() {\n        var $elf = this, _fromIdx = this.input.idx;\n        return this._apply(\"toSBVREOL\");\n    },\n    AttrConceptType: function() {\n        var $elf = this, _fromIdx = this.input.idx, term;\n        term = this._apply(\"Term\");\n        return function(currentLine) {\n            var identifier;\n            if (\"FactType\" === currentLine[0]) {\n                var attributes = _.last(currentLine), termForm = _.find(attributes, [ 0, \"TermForm\" ]);\n                if (!termForm) throw new Error(\"Cannot have a concept type for a fact type that does not have a term-form.\");\n                identifier = termForm[1];\n            } else identifier = currentLine.slice(0, 3);\n            var identifierName = identifier[1], identifierVocab = identifier[2];\n            if ($elf.vocabularies[identifierVocab].ConceptTypes.hasOwnProperty(identifier)) throw new Error(\"Two concept type attributes\");\n            if (\"FactType\" !== identifier[0]) {\n                if ($elf.IdentifiersEqual(identifier, term)) throw new Error(\"A term cannot have itself as its concept type\");\n                var termName = term[1], termVocab = term[2];\n                $elf.vocabularies[identifierVocab].ConceptTypes[identifier] = term;\n                $elf.vocabularies[termVocab].IdentifierChildren[termName].push(identifier.slice(1));\n            }\n            return term;\n        };\n    },\n    AttrDefinition: function() {\n        var $elf = this, _fromIdx = this.input.idx, moreValues, termEntity, value, values;\n        return this._or(function() {\n            this._opt(function() {\n                return this._apply(\"addThe\");\n            });\n            this.ruleVars = {};\n            this.ruleVarsCount = 0;\n            termEntity = this._apply(\"TermEntity\");\n            this._apply(\"EOLTerminator\");\n            return function(currentLine) {\n                if (\"FactType\" !== currentLine[0]) {\n                    $elf.vocabularies[currentLine[2]].ConceptTypes[currentLine.slice(0, 3)] = termEntity.term;\n                    $elf.vocabularies[currentLine[2]].IdentifierChildren[termEntity.term[1]].push([ currentLine[1], currentLine[2] ]);\n                }\n                return termEntity.lf;\n            };\n        }, function() {\n            value = this._apply(\"Value\");\n            values = this._many(function() {\n                this._apply(\"addComma\");\n                return this._apply(\"Value\");\n            });\n            this._or(function() {\n                return moreValues = this._many1(function() {\n                    this._opt(function() {\n                        return this._apply(\"addComma\");\n                    });\n                    this._apply(\"Disjunction\");\n                    return this._apply(\"Value\");\n                });\n            }, function() {\n                return this._pred(0 === values.length);\n            });\n            return [ \"Enum\", value ].concat(values, moreValues);\n        });\n    },\n    AttrGuidanceType: function() {\n        var $elf = this, _fromIdx = this.input.idx;\n        return this._applyWithArgs(\"matchForAny\", \"seq\", this.branches.AttrGuidanceType);\n    },\n    AttrNecessity: function() {\n        var $elf = this, _fromIdx = this.input.idx, lf, ruleText;\n        return this._or(function() {\n            ruleText = this._lookahead(function() {\n                return this._apply(\"toEOL\");\n            });\n            this.ruleVars = {};\n            this.ruleVarsCount = 0;\n            lf = this._applyWithArgs(\"RuleBody\", [], []);\n            this._apply(\"EOLTerminator\");\n            return [ \"Rule\", [ \"NecessityFormulation\", lf ], [ \"StructuredEnglish\", \"It is necessary that \" + ruleText ] ];\n        }, function() {\n            return this._apply(\"toSBVREOL\");\n        });\n    },\n    AttrReferenceScheme: function() {\n        var $elf = this, _fromIdx = this.input.idx, t;\n        return this._or(function() {\n            t = this._apply(\"Term\");\n            this._apply(\"EOLTerminator\");\n            return t;\n        }, function() {\n            return this._apply(\"toSBVREOL\");\n        });\n    },\n    AttrSynonym: function() {\n        var $elf = this, _fromIdx = this.input.idx, currentLine;\n        currentLine = _.last(this.lines);\n        return this._applyWithArgs(\"AddIdentifier\", currentLine[0], currentLine[1]);\n    },\n    AttrSynonymousForm: function() {\n        var $elf = this, _fromIdx = this.input.idx, factType, identifier, v;\n        factType = [];\n        this._many1(function() {\n            identifier = this._apply(\"Identifier\");\n            v = this._apply(\"addVerb\");\n            return factType.push(identifier, v);\n        });\n        this._opt(function() {\n            identifier = this._apply(\"Identifier\");\n            return factType.push(identifier);\n        });\n        return function(currentLine) {\n            $elf.AddFactType(factType, currentLine.slice(1, -1));\n            return factType;\n        };\n    },\n    AttrTermForm: function() {\n        var $elf = this, _fromIdx = this.input.idx, func;\n        func = this._applyWithArgs(\"AddIdentifier\", \"Term\");\n        return function(currentLine) {\n            for (var term = func(), i = 0; i < currentLine.length; i++) if (\"Term\" === currentLine[i][0]) {\n                var factType = [ term, [ \"Verb\", \"has\", !1 ], currentLine[i] ];\n                $elf.AddFactType(factType, factType);\n            }\n            return term;\n        };\n    },\n    StartComment: function() {\n        var $elf = this, _fromIdx = this.input.idx;\n        this._applyWithArgs(\"exactly\", \"-\");\n        this._applyWithArgs(\"exactly\", \"-\");\n        return \"--\";\n    },\n    NewComment: function() {\n        var $elf = this, _fromIdx = this.input.idx;\n        this._apply(\"StartComment\");\n        return this._apply(\"toEOL\");\n    },\n    EOLTerminator: function() {\n        var $elf = this, _fromIdx = this.input.idx;\n        this._opt(function() {\n            return this._apply(\"Terminator\");\n        });\n        this._apply(\"spaces\");\n        return this._lookahead(function() {\n            return this._or(function() {\n                return this._apply(\"EOL\");\n            }, function() {\n                return this._apply(\"end\");\n            });\n        });\n    },\n    Terminator: function() {\n        var $elf = this, _fromIdx = this.input.idx;\n        this._apply(\"spaces\");\n        return this._applyWithArgs(\"Keyword\", \".\", !0);\n    },\n    space: function() {\n        var $elf = this, _fromIdx = this.input.idx;\n        return this._or(function() {\n            return SBVRLibs._superApply(this, \"space\");\n        }, function() {\n            return this._apply(\"NewComment\");\n        });\n    },\n    Line: function() {\n        var $elf = this, _fromIdx = this.input.idx, func, l;\n        this._apply(\"spaces\");\n        l = this._or(function() {\n            func = this._or(function() {\n                return this._apply(\"NewIdentifier\");\n            }, function() {\n                return this._apply(\"NewFactType\");\n            }, function() {\n                return this._apply(\"NewAttribute\");\n            });\n            return func();\n        }, function() {\n            return this._apply(\"NewRule\");\n        });\n        this._apply(\"ClearSuggestions\");\n        this.lines.push(l);\n        return l;\n    },\n    Process: function() {\n        var $elf = this, _fromIdx = this.input.idx;\n        this._opt(function() {\n            return this._apply(\"EOLSpaces\");\n        });\n        this._opt(function() {\n            return this._apply(\"Line\");\n        });\n        this._many(function() {\n            this._apply(\"EOLSpaces\");\n            return this._apply(\"Line\");\n        });\n        this._many(function() {\n            return this._apply(\"space\");\n        });\n        this._apply(\"end\");\n        return this.lines;\n    }\n});\n\nSBVRParser.ClearSuggestions = function() {};\n\nSBVRParser.initialize = function() {\n    this.builtInVocab = \"\";\n    this.builtInVocabInputHead = \"\";\n    this.allowedAttrLists = _.cloneDeep(defaultAllowedAttrLists);\n    this.reset();\n};\n\nSBVRParser._enableTokens = function() {\n    SBVRLibs._enableTokens.call(this, [ \"StartVocabulary\", \"StartTerm\", \"StartName\", \"StartFactType\", \"StartRule\", \"NewComment\", \"Vocabulary\", \"Term\", \"Name\", \"Modifier\", \"Verb\", \"Keyword\", \"AllowedAttrs\", \"AttrGuidanceType\", \"Number\", \"Value\" ]);\n};\n\nSBVRParser._sideEffectingRules = [ \"Process\", \"Line\" ];\n\nSBVRParser._AddIdentifier = function(identifierType, identifier, baseSynonym) {\n    null == baseSynonym && (baseSynonym = identifier);\n    if (\"Vocabulary\" === identifierType) this.AddVocabulary(identifier, baseSynonym); else {\n        var vocabulary = this.vocabularies[this.currentVocabulary];\n        vocabulary.IdentifierChildren.hasOwnProperty(identifier) && this._pred(!1);\n        baseSynonym === identifier ? vocabulary.IdentifierChildren[baseSynonym] = [] : vocabulary.IdentifierChildren[identifier] = vocabulary.IdentifierChildren[baseSynonym];\n        vocabulary[identifierType][identifier] = baseSynonym;\n    }\n    this.longestIdentifier[identifierType] = Math.max(identifier.length, identifier.pluralize().length, this.longestIdentifier[identifierType]);\n    return \"Vocabulary\" === identifierType ? [ identifierType, identifier ] : [ identifierType, identifier, this.currentVocabulary ];\n};\n\nSBVRParser.BaseSynonym = function(identifier) {\n    var identifierType = identifier[0], identifierName = identifier[1], vocabulary = identifier[2], identifiers = this.vocabularies[vocabulary][identifierType];\n    if (identifiers.hasOwnProperty(identifierName)) identifierName = identifiers[identifierName]; else {\n        identifierName = identifierName.singularize();\n        this._pred(identifiers.hasOwnProperty(identifierName));\n        identifierName = identifiers[identifierName];\n    }\n    return [ identifierType, identifierName, vocabulary ];\n};\n\nSBVRParser.IsFactTypeIdentifier = function(identifier, factTypeSoFar) {\n    var identifierType = identifier[0], vocabulary = identifier[2], baseIdentifier = this.BaseSynonym(identifier), identifiers = this.branches[identifierType].call(this, factTypeSoFar, vocabulary);\n    this._pred(-1 !== identifiers.indexOf(baseIdentifier[1]));\n    return baseIdentifier;\n};\n\nSBVRParser.IsVerb = function(factTypeSoFar, verb) {\n    verb = [ \"Verb\", verb ];\n    var currentLevel = this._traverseFactType(factTypeSoFar);\n    this._pred(!1 !== currentLevel);\n    if (!currentLevel.hasOwnProperty(verb)) {\n        this._pred(currentLevel.hasOwnProperty(\"__valid\"));\n        return this.IsVerb([], verb);\n    }\n};\n\nSBVRParser._verbForm = function(verb) {\n    return \"are\" === verb ? \"is\" : \"have\" === verb ? \"has\" : \"are \" === verb.slice(0, 4) ? \"is \" + verb.slice(4) : verb;\n};\n\nSBVRParser.IsFactType = function(factType) {\n    var currentLevel = this._traverseFactType(factType);\n    return !1 !== currentLevel && currentLevel.__valid;\n};\n\nvar removeRegex = new RegExp(\"^(?:\" + [ [ \"Term\", \"\" ].toString(), [ \"Name\", \"\" ].toString(), [ \"Verb\", \"\" ].toString() ].join(\"|\") + \")(.*?)(?:,(.*))?$\"), defaultAllowedAttrLists = [ \"Concept Type:\", \"Definition:\", \"Definition (Informal):\", \"Description:\", \"Dictionary Basis:\", \"Example:\", \"General Concept:\", \"Namespace URI:\", \"Necessity:\", \"Note:\", \"Possibility:\", \"Reference Scheme:\", \"See:\", \"Source:\", \"Subject Field:\" ];\n\ndefaultAllowedAttrLists = {\n    Term: [ \"Synonym:\" ].concat(defaultAllowedAttrLists),\n    Name: [ \"Synonym:\" ].concat(defaultAllowedAttrLists),\n    FactType: [ \"Synonymous Form:\", \"Term Form:\" ].concat(defaultAllowedAttrLists),\n    Rule: [ \"Rule Name:\", \"Guidance Type:\", \"Source:\", \"Synonymous Statement:\", \"Note:\", \"Example:\", \"Enforcement Level:\" ]\n};\n\nvar getValidFactTypeParts = function getValidFactTypeParts(vocabulary, identifierType, factTypeSoFar) {\n    var vocabularies = this.vocabularies;\n    if (null == factTypeSoFar || 0 === factTypeSoFar.length) {\n        var identifiers;\n        identifiers = null == vocabulary ? vocabularies[this.currentVocabulary][identifierType] : vocabularies[vocabulary][identifierType];\n        return Object.keys(identifiers);\n    }\n    var factTypePart, currentLevel = this._traverseFactType(factTypeSoFar), factTypeParts = {}, followChildrenChain = function(vocabulary, identifier) {\n        vocabulary = vocabularies[vocabulary];\n        var identifiers = vocabulary[identifierType];\n        identifiers.hasOwnProperty(identifier) && (factTypeParts[identifiers[identifier]] = !0);\n        for (var i = 0; i < vocabulary.IdentifierChildren[identifier].length; i++) {\n            var child = vocabulary.IdentifierChildren[identifier][i];\n            followChildrenChain(child[1], child[0]);\n        }\n    };\n    for (factTypePart in currentLevel) if (currentLevel.hasOwnProperty(factTypePart)) {\n        var matches = removeRegex.exec(factTypePart), factTypePartVocabulary;\n        if (null != matches) {\n            factTypePart = matches[1];\n            if (matches[2]) {\n                factTypePartVocabulary = matches[2];\n                followChildrenChain(factTypePartVocabulary, factTypePart);\n            } else factTypeParts[factTypePart] = !0;\n        }\n    }\n    return Object.keys(factTypeParts);\n};\n\nSBVRParser.reset = function() {\n    SBVRLibs.initialize.call(this);\n    this.branches = {\n        ClearSuggestions: [],\n        StartVocabulary: [ \"Vocabulary:\" ],\n        StartTerm: [ \"Term:      \" ],\n        StartName: [ \"Name:      \" ],\n        StartFactType: [ \"Fact type: \" ],\n        StartRule: [ \"Rule:      \" ],\n        Vocabulary: function(factTypeSoFar) {\n            return Object.keys(this.vocabularies);\n        },\n        Term: function(factTypeSoFar, vocabulary) {\n            return getValidFactTypeParts.call(this, vocabulary, \"Term\", factTypeSoFar);\n        },\n        Name: function(factTypeSoFar, vocabulary) {\n            return getValidFactTypeParts.call(this, vocabulary, \"Name\", factTypeSoFar);\n        },\n        Verb: function(factTypeSoFar, vocabulary) {\n            return !0 === factTypeSoFar ? [] : getValidFactTypeParts.call(this, vocabulary, \"Verb\", factTypeSoFar);\n        },\n        AllowedAttrs: function(termOrFactType) {\n            return this.allowedAttrLists.hasOwnProperty(termOrFactType) ? this.allowedAttrLists[termOrFactType] : null == termOrFactType ? this.allowedAttrLists.Term.concat(this.allowedAttrLists.Name, this.allowedAttrLists.FactType) : [];\n        },\n        AttrGuidanceType: [ \"operative business rule\", \"structural business rule\", \"advice of permission\", \"advice of possibility\", \"advice of optionality\", \"advice of contingency\" ],\n        Modifier: [ \"It is obligatory that\", \"It is necessary that\", \"It is prohibited that\", \"It is forbidden that\", \"It is impossible that\", \"It is not possible that\", \"It is possible that\", \"It is permitted that\" ],\n        Quantifier: [ \"each\", \"a\", \"a given\", \"an\", \"some\", \"at most\", \"at least\", \"more than\", \"exactly\", \"no\" ],\n        JoiningQuantifier: [ \"and at most\" ],\n        Number: [ \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"one\" ],\n        addThat: [ \"that\", \"that the\" ],\n        addThe: [ \"the\" ],\n        addComma: [ \",\" ],\n        Disjunction: [ \"or\" ],\n        Conjunction: [ \"and\" ],\n        Terminator: [ \".\" ]\n    };\n    this.longestIdentifier = {\n        Vocabulary: 0,\n        Term: 0,\n        Name: 0\n    };\n    this.ruleVars = {};\n    this.ruleVarsCount = 0;\n    this.lines = [ \"Model\" ];\n    this.disableCommas = !1;\n    var origInputHead = this.inputHead;\n    if (\"\" !== this.builtInVocab) {\n        this.inputHead = this.builtInVocabInputHead;\n        this.matchAll(this.builtInVocab, \"Process\");\n        this.builtInVocabInputHead = this.inputHead;\n    }\n    this.inputHead = null;\n    this.inputHead = null;\n    this.matchAll(\"Vocabulary: Default\", \"Process\");\n    this.inputHead = origInputHead;\n};\n\nSBVRParser.AddBuiltInVocab = function(vocabulary) {\n    try {\n        var origInputHead = this.inputHead;\n        vocabulary += \"\\n\";\n        this.matchAll(vocabulary, \"Process\");\n        this.inputHead = origInputHead;\n        this.builtInVocab += vocabulary;\n    } catch (e) {\n        throw e;\n    } finally {\n        this.reset();\n    }\n};\n\nSBVRParser.AddCustomAttribute = function(attributeName, attachedTo) {\n    if (null == attachedTo) for (attachedTo in this.allowedAttrLists) this.allowedAttrLists.hasOwnProperty(attachedTo) && this.allowedAttrLists[attachedTo].push(attributeName); else {\n        if (!this.allowedAttrLists.hasOwnProperty(attachedTo)) throw new Error(\"Unknown attachment\");\n        this.allowedAttrLists[attachedTo].push(attributeName);\n    }\n};\n\nSBVRParser.matchForAny = function(rule, arr) {\n    for (var $elf = this, origInput = this.input, ref = {}, result = ref, idx = 0; idx < arr.length; idx++) {\n        try {\n            $elf.input = origInput;\n            result = $elf._applyWithArgs.call($elf, rule, arr[idx]);\n        } catch (e) {\n            if (!(e instanceof SyntaxError)) throw e;\n        }\n        if (result !== ref) return result;\n    }\n    throw this._fail();\n};\n\nSBVRParser.matchForAll = function(rule, arr) {\n    for (var idx = 0; idx < arr.length; idx++) this._applyWithArgs.call(this, rule, arr[idx]);\n};\n\nSBVRParser.matchUntil = function(fn) {\n    try {\n        for (;!fn(this.input.head()); ) this.input = this.input.tail();\n    } catch (e) {}\n};\n\nSBVRParser.exactly = function(wanted) {\n    if (wanted.toLowerCase() === this._apply(\"lowerCaseAnything\")) return wanted;\n    throw this._fail();\n};\n\nSBVRParser._disablePrependingInput();","/*\nCopyright (c) 2010 Ryan Schuft (ryan.schuft@gmail.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\n/*\n  This code is based in part on the work done in Ruby to support\n  infection as part of Ruby on Rails in the ActiveSupport's Inflector\n  and Inflections classes.  It was initally ported to Javascript by\n  Ryan Schuft (ryan.schuft@gmail.com) in 2007.\n\n  The code is available at http://code.google.com/p/inflection-js/\n\n  The basic usage is:\n    1. Include this script on your web page.\n    2. Call functions on any String object in Javascript\n\n  Currently implemented functions:\n\n    String.pluralize(plural) == String\n      renders a singular English language noun into its plural form\n      normal results can be overridden by passing in an alternative\n\n    String.singularize(singular) == String\n      renders a plural English language noun into its singular form\n      normal results can be overridden by passing in an alterative\n\n    String.camelize(lowFirstLetter) == String\n      renders a lower case underscored word into camel case\n      the first letter of the result will be upper case unless you pass true\n      also translates \"/\" into \"::\" (underscore does the opposite)\n\n    String.underscore() == String\n      renders a camel cased word into words seperated by underscores\n      also translates \"::\" back into \"/\" (camelize does the opposite)\n\n    String.humanize(lowFirstLetter) == String\n      renders a lower case and underscored word into human readable form\n      defaults to making the first letter capitalized unless you pass true\n\n    String.capitalize() == String\n      renders all characters to lower case and then makes the first upper\n\n    String.dasherize() == String\n      renders all underbars and spaces as dashes\n\n    String.titleize() == String\n      renders words into title casing (as for book titles)\n\n    String.demodulize() == String\n      renders class names that are prepended by modules into just the class\n\n    String.tableize() == String\n      renders camel cased singular words into their underscored plural form\n\n    String.classify() == String\n      renders an underscored plural word into its camel cased singular form\n\n    String.foreign_key(dropIdUbar) == String\n      renders a class name (camel cased singular noun) into a foreign key\n      defaults to seperating the class from the id with an underbar unless\n      you pass true\n\n    String.ordinalize() == String\n      renders all numbers found in the string into their sequence like \"22nd\"\n*/\n\n/*\n  This sets up a container for some constants in its own namespace\n  We use the window (if available) to enable dynamic loading of this script\n  Window won't necessarily exist for non-browsers.\n*/\nif (typeof window !== \"undefined\" && !window.InflectionJS)\n{\n    window.InflectionJS = null;\n}\n\n/*\n  This sets up some constants for later use\n  This should use the window namespace variable if available\n*/\nInflectionJS =\n{\n    /*\n      This is a list of nouns that use the same form for both singular and plural.\n      This list should remain entirely in lower case to correctly match Strings.\n    */\n    uncountable_words: [\n        'equipment', 'information', 'rice', 'money', 'species', 'series',\n        'fish', 'sheep', 'moose', 'deer', 'news'\n    ],\n\n    /*\n      These rules translate from the singular form of a noun to its plural form.\n    */\n    plural_rules: [\n        [new RegExp('(m)an$', 'gi'),                 '$1en'],\n        [new RegExp('(pe)rson$', 'gi'),              '$1ople'],\n        [new RegExp('(child)$', 'gi'),               '$1ren'],\n        [new RegExp('^(ox)$', 'gi'),                 '$1en'],\n        [new RegExp('(ax|test)is$', 'gi'),           '$1es'],\n        [new RegExp('(octop|vir)us$', 'gi'),         '$1i'],\n        [new RegExp('(alias|status)$', 'gi'),        '$1es'],\n        [new RegExp('(bu)s$', 'gi'),                 '$1ses'],\n        [new RegExp('(buffal|tomat|potat)o$', 'gi'), '$1oes'],\n        [new RegExp('([ti])um$', 'gi'),              '$1a'],\n        [new RegExp('sis$', 'gi'),                   'ses'],\n        [new RegExp('(?:([^f])fe|([lr])f)$', 'gi'),  '$1$2ves'],\n        [new RegExp('(hive)$', 'gi'),                '$1s'],\n        [new RegExp('([^aeiouy]|qu)y$', 'gi'),       '$1ies'],\n        [new RegExp('(x|ch|ss|sh)$', 'gi'),          '$1es'],\n        [new RegExp('(matr|vert|ind)ix|ex$', 'gi'),  '$1ices'],\n        [new RegExp('([m|l])ouse$', 'gi'),           '$1ice'],\n        [new RegExp('(quiz)$', 'gi'),                '$1zes'],\n        [new RegExp('s$', 'gi'),                     's'],\n        [new RegExp('$', 'gi'),                      's']\n    ],\n\n    /*\n      These rules translate from the plural form of a noun to its singular form.\n    */\n    singular_rules: [\n        [new RegExp('(m)en$', 'gi'),                                                       '$1an'],\n        [new RegExp('(pe)ople$', 'gi'),                                                    '$1rson'],\n        [new RegExp('(child)ren$', 'gi'),                                                  '$1'],\n        [new RegExp('([ti])a$', 'gi'),                                                     '$1um'],\n        [new RegExp('((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$','gi'), '$1$2sis'],\n        [new RegExp('(hive)s$', 'gi'),                                                     '$1'],\n        [new RegExp('(tive)s$', 'gi'),                                                     '$1'],\n        [new RegExp('(curve)s$', 'gi'),                                                    '$1'],\n        [new RegExp('([lr])ves$', 'gi'),                                                   '$1f'],\n        [new RegExp('([^fo])ves$', 'gi'),                                                  '$1fe'],\n        [new RegExp('([^aeiouy]|qu)ies$', 'gi'),                                           '$1y'],\n        [new RegExp('(s)eries$', 'gi'),                                                    '$1eries'],\n        [new RegExp('(m)ovies$', 'gi'),                                                    '$1ovie'],\n        [new RegExp('(x|ch|ss|sh)es$', 'gi'),                                              '$1'],\n        [new RegExp('([m|l])ice$', 'gi'),                                                  '$1ouse'],\n        [new RegExp('(bus)es$', 'gi'),                                                     '$1'],\n        [new RegExp('(o)es$', 'gi'),                                                       '$1'],\n        [new RegExp('(shoe)s$', 'gi'),                                                     '$1'],\n        [new RegExp('(cris|ax|test)es$', 'gi'),                                            '$1is'],\n        [new RegExp('(octop|vir)i$', 'gi'),                                                '$1us'],\n        [new RegExp('(alias|status)es$', 'gi'),                                            '$1'],\n        [new RegExp('^(ox)en', 'gi'),                                                      '$1'],\n        [new RegExp('(vert|ind)ices$', 'gi'),                                              '$1ex'],\n        [new RegExp('(matr)ices$', 'gi'),                                                  '$1ix'],\n        [new RegExp('(quiz)zes$', 'gi'),                                                   '$1'],\n        [new RegExp('s$', 'gi'),                                                           '']\n    ],\n\n    /*\n      This is a list of words that should not be capitalized for title case\n    */\n    non_titlecased_words: [\n        'and', 'or', 'nor', 'a', 'an', 'the', 'so', 'but', 'to', 'of', 'at',\n        'by', 'from', 'into', 'on', 'onto', 'off', 'out', 'in', 'over',\n        'with', 'for'\n    ],\n\n    /*\n      These are regular expressions used for converting between String formats\n    */\n    id_suffix: new RegExp('(_ids|_id)$', 'g'),\n    underbar: new RegExp('_', 'g'),\n    space_or_underbar: new RegExp('[ _]', 'g'),\n    uppercase: new RegExp('([A-Z])', 'g'),\n    underbar_prefix: new RegExp('^_'),\n    \n    /*\n      This is a helper method that applies rules based replacement to a String\n      Signature:\n        InflectionJS.apply_rules(str, rules, skip, override) == String\n      Arguments:\n        str - String - String to modify and return based on the passed rules\n        rules - Array: [RegExp, String] - Regexp to match paired with String to use for replacement\n        skip - Array: [String] - Strings to skip if they match\n      Returns:\n        String - passed String modified by passed rules\n      Examples:\n        InflectionJS.apply_rules(\"cows\", InflectionJs.singular_rules) === 'cow'\n    */\n    apply_rules: function(str, rules, skip) {\n        if (skip.indexOf(str.toLowerCase()) === -1) {\n            for (var x = 0, l = rules.length; x < l; x++) {\n                if (rules[x][0].test(str)) {\n                    return str.replace(rules[x][0], rules[x][1]);\n                }\n            }\n        }\n        return str;\n    }\n};\n\n/*\n  This lets us detect if an Array contains a given element\n  Signature:\n    Array.indexOf(item, fromIndex, compareFunc) == Integer\n  Arguments:\n    item - Object - object to locate in the Array\n    fromIndex - Integer (optional) - starts checking from this position in the Array\n    compareFunc - Function (optional) - function used to compare Array item vs passed item\n  Returns:\n    Integer - index position in the Array of the passed item\n  Examples:\n    ['hi','there'].indexOf(\"guys\") === -1\n    ['hi','there'].indexOf(\"hi\") === 0\n*/\nif (!Array.prototype.indexOf)\n{\n    Array.prototype.indexOf = function(item, fromIndex, compareFunc)\n    {\n        if (!fromIndex)\n        {\n            fromIndex = -1;\n        }\n        var index = -1;\n        for (var i = fromIndex; i < this.length; i++)\n        {\n            if (this[i] === item || compareFunc && compareFunc(this[i], item))\n            {\n                index = i;\n                break;\n            }\n        }\n        return index;\n    };\n}\n\n/*\n  You can override this list for all Strings or just one depending on if you\n  set the new values on prototype or on a given String instance.\n*/\nif (!String.prototype._uncountable_words)\n{\n    String.prototype._uncountable_words = InflectionJS.uncountable_words;\n}\n\n/*\n  You can override this list for all Strings or just one depending on if you\n  set the new values on prototype or on a given String instance.\n*/\nif (!String.prototype._plural_rules)\n{\n    String.prototype._plural_rules = InflectionJS.plural_rules;\n}\n\n/*\n  You can override this list for all Strings or just one depending on if you\n  set the new values on prototype or on a given String instance.\n*/\nif (!String.prototype._singular_rules)\n{\n    String.prototype._singular_rules = InflectionJS.singular_rules;\n}\n\n/*\n  You can override this list for all Strings or just one depending on if you\n  set the new values on prototype or on a given String instance.\n*/\nif (!String.prototype._non_titlecased_words)\n{\n    String.prototype._non_titlecased_words = InflectionJS.non_titlecased_words;\n}\n\n/*\n  This function adds plurilization support to every String object\n    Signature:\n      String.pluralize(plural) == String\n    Arguments:\n      plural - String (optional) - overrides normal output with said String\n    Returns:\n      String - singular English language nouns are returned in plural form\n    Examples:\n      \"person\".pluralize() == \"people\"\n      \"octopus\".pluralize() == \"octopi\"\n      \"Hat\".pluralize() == \"Hats\"\n      \"person\".pluralize(\"guys\") == \"guys\"\n*/\nif (!String.prototype.pluralize) {\n    (function() {\n        var memo = {};\n        String.prototype.pluralize = function(plural) {\n            if(plural) {\n                return plural;\n            }\n            var thisString = this.toString();\n            if(!memo.hasOwnProperty(thisString)) {\n                memo[thisString] = InflectionJS.apply_rules(\n                    this.toString(),\n                    this._plural_rules,\n                    this._uncountable_words\n                );\n            }\n            return memo[thisString];\n        };\n    })();\n}\n\n/*\n  This function adds singularization support to every String object\n    Signature:\n      String.singularize(singular) == String\n    Arguments:\n      singular - String (optional) - overrides normal output with said String\n    Returns:\n      String - plural English language nouns are returned in singular form\n    Examples:\n      \"people\".singularize() == \"person\"\n      \"octopi\".singularize() == \"octopus\"\n      \"Hats\".singularize() == \"Hat\"\n      \"guys\".singularize(\"person\") == \"person\"\n*/\nif (!String.prototype.singularize) {\n    (function() {\n        var memo = {};\n        String.prototype.singularize = function(singular) {\n            if(singular) {\n                return singular;\n            }\n            var thisString = this.toString();\n            if(!memo.hasOwnProperty(thisString)) {\n                memo[thisString] = InflectionJS.apply_rules(\n                    thisString,\n                    this._singular_rules,\n                    this._uncountable_words\n                );\n            }\n            return memo[thisString];\n        };\n    })();\n}\n\n/*\n  This function adds camelization support to every String object\n    Signature:\n      String.camelize(lowFirstLetter) == String\n    Arguments:\n      lowFirstLetter - boolean (optional) - default is to capitalize the first\n        letter of the results... passing true will lowercase it\n    Returns:\n      String - lower case underscored words will be returned in camel case\n        additionally '/' is translated to '::'\n    Examples:\n      \"message_properties\".camelize() == \"MessageProperties\"\n      \"message_properties\".camelize(true) == \"messageProperties\"\n*/\nif (!String.prototype.camelize)\n{\n     String.prototype.camelize = function(lowFirstLetter)\n     {\n        var str = this.toLowerCase();\n        var str_path = str.split('/');\n        for (var i = 0; i < str_path.length; i++)\n        {\n            var str_arr = str_path[i].split('_');\n            var initX = ((lowFirstLetter && i + 1 === str_path.length) ? (1) : (0));\n            for (var x = initX; x < str_arr.length; x++)\n            {\n                str_arr[x] = str_arr[x].charAt(0).toUpperCase() + str_arr[x].substring(1);\n            }\n            str_path[i] = str_arr.join('');\n        }\n        str = str_path.join('::');\n        return str;\n    };\n}\n\n/*\n  This function adds underscore support to every String object\n    Signature:\n      String.underscore() == String\n    Arguments:\n      N/A\n    Returns:\n      String - camel cased words are returned as lower cased and underscored\n        additionally '::' is translated to '/'\n    Examples:\n      \"MessageProperties\".camelize() == \"message_properties\"\n      \"messageProperties\".underscore() == \"message_properties\"\n*/\nif (!String.prototype.underscore)\n{\n     String.prototype.underscore = function()\n     {\n        var str = this;\n        var str_path = str.split('::');\n        for (var i = 0; i < str_path.length; i++)\n        {\n            str_path[i] = str_path[i].replace(InflectionJS.uppercase, '_$1');\n            str_path[i] = str_path[i].replace(InflectionJS.underbar_prefix, '');\n        }\n        str = str_path.join('/').toLowerCase();\n        return str;\n    };\n}\n\n/*\n  This function adds humanize support to every String object\n    Signature:\n      String.humanize(lowFirstLetter) == String\n    Arguments:\n      lowFirstLetter - boolean (optional) - default is to capitalize the first\n        letter of the results... passing true will lowercase it\n    Returns:\n      String - lower case underscored words will be returned in humanized form\n    Examples:\n      \"message_properties\".humanize() == \"Message properties\"\n      \"message_properties\".humanize(true) == \"message properties\"\n*/\nif (!String.prototype.humanize)\n{\n    String.prototype.humanize = function(lowFirstLetter)\n    {\n        var str = this.toLowerCase();\n        str = str.replace(InflectionJS.id_suffix, '');\n        str = str.replace(InflectionJS.underbar, ' ');\n        if (!lowFirstLetter)\n        {\n            str = str.capitalize();\n        }\n        return str;\n    };\n}\n\n/*\n  This function adds capitalization support to every String object\n    Signature:\n      String.capitalize() == String\n    Arguments:\n      N/A\n    Returns:\n      String - all characters will be lower case and the first will be upper\n    Examples:\n      \"message_properties\".capitalize() == \"Message_properties\"\n      \"message properties\".capitalize() == \"Message properties\"\n*/\nif (!String.prototype.capitalize)\n{\n    String.prototype.capitalize = function()\n    {\n        var str = this.toLowerCase();\n        str = str.substring(0, 1).toUpperCase() + str.substring(1);\n        return str;\n    };\n}\n\n/*\n  This function adds dasherization support to every String object\n    Signature:\n      String.dasherize() == String\n    Arguments:\n      N/A\n    Returns:\n      String - replaces all spaces or underbars with dashes\n    Examples:\n      \"message_properties\".capitalize() == \"message-properties\"\n      \"Message Properties\".capitalize() == \"Message-Properties\"\n*/\nif (!String.prototype.dasherize)\n{\n    String.prototype.dasherize = function()\n    {\n        var str = this;\n        str = str.replace(InflectionJS.space_or_underbar, '-');\n        return str;\n    };\n}\n\n/*\n  This function adds titleize support to every String object\n    Signature:\n      String.titleize() == String\n    Arguments:\n      N/A\n    Returns:\n      String - capitalizes words as you would for a book title\n    Examples:\n      \"message_properties\".titleize() == \"Message Properties\"\n      \"message properties to keep\".titleize() == \"Message Properties to Keep\"\n*/\nif (!String.prototype.titleize)\n{\n    String.prototype.titleize = function()\n    {\n        var str = this.toLowerCase();\n        str = str.replace(InflectionJS.underbar, ' ');\n        var str_arr = str.split(' ');\n        for (var x = 0; x < str_arr.length; x++)\n        {\n            var d = str_arr[x].split('-');\n            for (var i = 0; i < d.length; i++)\n            {\n                if (this._non_titlecased_words.indexOf(d[i].toLowerCase()) < 0)\n                {\n                    d[i] = d[i].capitalize();\n                }\n            }\n            str_arr[x] = d.join('-');\n        }\n        str = str_arr.join(' ');\n        str = str.substring(0, 1).toUpperCase() + str.substring(1);\n        return str;\n    };\n}\n\n/*\n  This function adds demodulize support to every String object\n    Signature:\n      String.demodulize() == String\n    Arguments:\n      N/A\n    Returns:\n      String - removes module names leaving only class names (Ruby style)\n    Examples:\n      \"Message::Bus::Properties\".demodulize() == \"Properties\"\n*/\nif (!String.prototype.demodulize)\n{\n    String.prototype.demodulize = function()\n    {\n        var str = this;\n        var str_arr = str.split('::');\n        str = str_arr[str_arr.length - 1];\n        return str;\n    };\n}\n\n/*\n  This function adds tableize support to every String object\n    Signature:\n      String.tableize() == String\n    Arguments:\n      N/A\n    Returns:\n      String - renders camel cased words into their underscored plural form\n    Examples:\n      \"MessageBusProperty\".tableize() == \"message_bus_properties\"\n*/\nif (!String.prototype.tableize)\n{\n    String.prototype.tableize = function()\n    {\n        var str = this;\n        str = str.underscore().pluralize();\n        return str;\n    };\n}\n\n/*\n  This function adds classification support to every String object\n    Signature:\n      String.classify() == String\n    Arguments:\n      N/A\n    Returns:\n      String - underscored plural nouns become the camel cased singular form\n    Examples:\n      \"message_bus_properties\".classify() == \"MessageBusProperty\"\n*/\nif (!String.prototype.classify)\n{\n    String.prototype.classify = function()\n    {\n        var str = this;\n        str = str.camelize().singularize();\n        return str;\n    };\n}\n\n/*\n  This function adds foreign key support to every String object\n    Signature:\n      String.foreign_key(dropIdUbar) == String\n    Arguments:\n      dropIdUbar - boolean (optional) - default is to seperate id with an\n        underbar at the end of the class name, you can pass true to skip it\n    Returns:\n      String - camel cased singular class names become underscored with id\n    Examples:\n      \"MessageBusProperty\".foreign_key() == \"message_bus_property_id\"\n      \"MessageBusProperty\".foreign_key(true) == \"message_bus_propertyid\"\n*/\nif (!String.prototype.foreign_key)\n{\n    String.prototype.foreign_key = function(dropIdUbar)\n    {\n        var str = this;\n        str = str.demodulize().underscore() + ((dropIdUbar) ? ('') : ('_')) + 'id';\n        return str;\n    };\n}\n\n/*\n  This function adds ordinalize support to every String object\n    Signature:\n      String.ordinalize() == String\n    Arguments:\n      N/A\n    Returns:\n      String - renders all found numbers their sequence like \"22nd\"\n    Examples:\n      \"the 1 pitch\".ordinalize() == \"the 1st pitch\"\n*/\nif (!String.prototype.ordinalize)\n{\n    String.prototype.ordinalize = function()\n    {\n        var str = this;\n        var str_arr = str.split(' ');\n        for (var x = 0; x < str_arr.length; x++)\n        {\n            var i = parseInt(str_arr[x], 10);\n            if (i === NaN)\n            {\n                var ltd = str_arr[x].substring(str_arr[x].length - 2);\n                var ld = str_arr[x].substring(str_arr[x].length - 1);\n                var suf = \"th\";\n                if (ltd != \"11\" && ltd != \"12\" && ltd != \"13\")\n                {\n                    if (ld === \"1\")\n                    {\n                        suf = \"st\";\n                    }\n                    else if (ld === \"2\")\n                    {\n                        suf = \"nd\";\n                    }\n                    else if (ld === \"3\")\n                    {\n                        suf = \"rd\";\n                    }\n                }\n                str_arr[x] += suf;\n            }\n        }\n        str = str_arr.join(' ');\n        return str;\n    };\n}\n","module.exports = \"Vocabulary: Type\\nTerm:       Integer\\nTerm:       Real\\nTerm:       Text\\nTerm:       Date\\nTerm:       Date Time\\nTerm:       Time\\nTerm:       Interval\\nTerm:       File\\n\\nTerm:       Big Integer\\n\\tConcept type: Integer\\n\\nTerm:       Serial\\n\\tConcept Type: Integer\\n\\tNote: An auto-incrementing 'Integer'.\\nTerm:       Case Insensitive Text\\n\\tConcept Type: Text\\n\\tNote: A 'Text' type that is compared case insensitively.\\nTerm:       JSON\\n\\tConcept Type: Text\\n\\tNote: A 'Text' type that will only allow valid JSON.\\nTerm:       Hashed\\n\\tConcept Type: Text\\n\\tNote: A 'Text' type that will automatically be converted to a hash.\\nTerm:       SHA\\n\\tConcept Type: Text\\n\\tNote: A 'Text' type that will automatically be converted to a sha256 hash.\\n\\nTerm:       Length\\n\\tConcept Type: Integer\\n\\nName:       Current Time\\n\\tConcept Type: Date Time\\n\\nFact type:  Text has Length\\n\\tNote: Length in characters\\n\\tNecessity: Each Text has exactly one Length\\n\\nFact type:  Integer1 is less than Integer2\\n\\tSynonymous Form: Integer2 is greater than Integer1\\nFact type: Integer1 is less than or equal to Integer2\\n\\tSynonymous Form: Integer2 is greater than or equal to Integer1\\nFact type:  Integer1 is equal to Integer2\\n\\tSynonymous Form: Integer2 is equal to Integer1\\n\\tSynonymous Form: Integer1 equals Integer2\\n\\tSynonymous Form: Integer2 equals Integer1\\n\\nFact type:  Real1 is less than Real2\\n\\tSynonymous Form: Real2 is greater than Real1\\nFact type: Real1 is less than or equal to Real2\\n\\tSynonymous Form: Real2 is greater than or equal to Real1\\nFact type:  Real1 is equal to Real2\\n\\tSynonymous Form: Real2 is equal to Real1\\n\\tSynonymous Form: Real1 equals Real2\\n\\tSynonymous Form: Real2 equals Real1\\n\\nFact type:  Date1 is before Date2\\n\\tSynonymous Form: Date2 is after Date1\\nFact type:  Date1 is equal to Date2\\n\\tSynonymous Form: Date2 is equal to Date1\\n\\tSynonymous Form: Date1 equals Date2\\n\\tSynonymous Form: Date2 equals Date1\\n\\nFact type:  Date Time1 is before Date Time2\\n\\tSynonymous Form: Date Time2 is after Date Time1\\nFact type:  Date Time1 is equal to Date Time2\\n\\tSynonymous Form: Date Time2 is equal to Date Time1\\n\\tSynonymous Form: Date Time1 equals Date Time2\\n\\tSynonymous Form: Date Time2 equals Date Time1\\n\\n\\nFact type:  Real is less than Integer\\n\\tSynonymous Form: Integer is greater than Real\\nFact type:  Integer is less than Real\\n\\tSynonymous Form: Real is greater than Integer\\n\\nFact type: Real is less than or equal to Integer\\n\\tSynonymous Form: Integer is greater than or equal to Real\\nFact type: Integer is less than or equal to Real\\n\\tSynonymous Form: Real is greater than or equal to Integer\\n\\nFact type:  Integer is equal to Real\\n\\tSynonymous Form: Real is equal to Integer\\n\\tSynonymous Form: Real equals Integer\\n\\tSynonymous Form: Integer equals Real\\n\\n\\nFact type:  Text1 is equal to Text2\\n\\tSynonymous Form: Text2 is equal to Text1\\n\\tSynonymous Form: Text1 equals Text2\\n\\tSynonymous Form: Text2 equals Text1\\n\\nFact type:  Text1 starts with Text2\\n\\nFact type:  Text1 ends with Text2\\n\\nFact type:  Text1 contains Text2\\n\\tSynonymous Form: Text2 is contained in Text1\\n\\nTerm:       Short Text\\n\\tConcept Type: Text\\n\\t--Necessity: each Short Text has a Length that is less than or equal to 255.\\n\\nTerm:       Red Component\\n\\tConcept Type: Integer\\nTerm:       Green Component\\n\\tConcept Type: Integer\\nTerm:       Blue Component\\n\\tConcept Type: Integer\\nTerm:       Alpha Component\\n\\tConcept Type: Integer\\nTerm:       Color\\n\\tConcept Type: Integer\\nFact type:  Color has Red Component\\n\\tNecessity: Each Color has exactly one Red Component\\nFact type:  Color has Green Component\\n\\tNecessity: Each Color has exactly one Green Component\\nFact type:  Color has Blue Component\\n\\tNecessity: Each Color has exactly one Blue Component\\nFact type:  Color has Alpha Component\\n\\tNecessity: Each Color has exactly one Alpha Component\";","module.exports = \"Vocabulary: migrations\\r\\n\\r\\nTerm: model name\\r\\n\\tConcept Type: Short Text (Type)\\r\\nTerm: executed migrations\\r\\n\\tConcept Type: JSON (Type)\\r\\nTerm: lock time\\r\\n\\tConcept Type: Date Time (Type)\\r\\n\\r\\nTerm: migration\\r\\n\\tReference Scheme: model name\\r\\n\\tDatabase ID Field: model name\\r\\nFact Type: migration has model name\\r\\n\\tNecessity: each migration has exactly one model name\\r\\nFact Type: migration has executed migrations\\r\\n\\tNecessity: each migration has exactly one executed migrations\\r\\n\\r\\nTerm: migration lock\\r\\n\\tReference Scheme: model name\\r\\n\\tDatabase ID Field: model name\\r\\n\\r\\nFact Type: migration lock has model name\\r\\n\\tNecessity: each migration lock has exactly one model name\\r\\n\";","import type {\n\tAbstractSqlModel,\n\tAbstractSqlTable,\n} from '@balena/abstract-sql-compiler';\n\nimport * as sbvrTypes from '@balena/sbvr-types';\n\n// tslint:disable-next-line:no-var-requires\nconst { version }: { version: string } = require('../../package.json');\n\nconst getResourceName = (resourceName: string): string =>\n\tresourceName\n\t\t.split('-')\n\t\t.map((namePart) => namePart.split(' ').join('_'))\n\t\t.join('__');\n\nconst forEachUniqueTable = <T>(\n\tmodel: AbstractSqlModel['tables'],\n\tcallback: (tableName: string, table: AbstractSqlTable) => T,\n): T[] => {\n\tconst usedTableNames: { [tableName: string]: true } = {};\n\n\tconst result = [];\n\tfor (const key in model) {\n\t\tif (model.hasOwnProperty(key)) {\n\t\t\tconst table = model[key];\n\t\t\tif (\n\t\t\t\ttypeof table !== 'string' &&\n\t\t\t\t!table.primitive &&\n\t\t\t\t!usedTableNames[table.name]\n\t\t\t) {\n\t\t\t\tusedTableNames[table.name] = true;\n\t\t\t\tresult.push(callback(key, table));\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n};\n\nexport const generateODataMetadata = (\n\tvocabulary: string,\n\tabstractSqlModel: AbstractSqlModel,\n) => {\n\tconst complexTypes: { [fieldType: string]: string } = {};\n\tconst resolveDataType = (fieldType: string): string => {\n\t\tif (sbvrTypes[fieldType] == null) {\n\t\t\tconsole.error('Could not resolve type', fieldType);\n\t\t\tthrow new Error('Could not resolve type' + fieldType);\n\t\t}\n\t\tconst { complexType } = sbvrTypes[fieldType].types.odata;\n\t\tif (complexType != null) {\n\t\t\tcomplexTypes[fieldType] = complexType;\n\t\t}\n\t\treturn sbvrTypes[fieldType].types.odata.name;\n\t};\n\n\tconst model = abstractSqlModel.tables;\n\tconst associations: Array<{\n\t\tname: string;\n\t\tends: Array<{\n\t\t\tresourceName: string;\n\t\t\tcardinality: '1' | '0..1' | '*';\n\t\t}>;\n\t}> = [];\n\tforEachUniqueTable(model, (_key, { name: resourceName, fields }) => {\n\t\tresourceName = getResourceName(resourceName);\n\t\tfor (const { dataType, required, references } of fields) {\n\t\t\tif (dataType === 'ForeignKey' && references != null) {\n\t\t\t\tconst { resourceName: referencedResource } = references;\n\t\t\t\tassociations.push({\n\t\t\t\t\tname: resourceName + referencedResource,\n\t\t\t\t\tends: [\n\t\t\t\t\t\t{ resourceName, cardinality: required ? '1' : '0..1' },\n\t\t\t\t\t\t{ resourceName: referencedResource, cardinality: '*' },\n\t\t\t\t\t],\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n\n\treturn (\n\t\t`\n\t\t<?xml version=\"1.0\" encoding=\"iso-8859-1\" standalone=\"yes\"?>\n\t\t<edmx:Edmx Version=\"1.0\" xmlns:edmx=\"http://schemas.microsoft.com/ado/2007/06/edmx\">\n\t\t\t<edmx:DataServices xmlns:m=\"http://schemas.microsoft.com/ado/2007/08/dataservices/metadata\" m:DataServiceVersion=\"2.0\">\n\t\t\t\t<Schema Namespace=\"${vocabulary}\"\n\t\t\t\t\txmlns:d=\"http://schemas.microsoft.com/ado/2007/08/dataservices\"\n\t\t\t\t\txmlns:m=\"http://schemas.microsoft.com/ado/2007/08/dataservices/metadata\"\n\t\t\t\t\txmlns=\"http://schemas.microsoft.com/ado/2008/09/edm\">\n\n\t\t\t\t` +\n\t\tforEachUniqueTable(\n\t\t\tmodel,\n\t\t\t(_key, { idField, name: resourceName, fields }) => {\n\t\t\t\tresourceName = getResourceName(resourceName);\n\t\t\t\treturn (\n\t\t\t\t\t`\n\t\t\t\t\t<EntityType Name=\"${resourceName}\">\n\t\t\t\t\t\t<Key>\n\t\t\t\t\t\t\t<PropertyRef Name=\"${idField}\" />\n\t\t\t\t\t\t</Key>\n\n\t\t\t\t\t\t` +\n\t\t\t\t\tfields\n\t\t\t\t\t\t.filter(({ dataType }) => dataType !== 'ForeignKey')\n\t\t\t\t\t\t.map(({ dataType, fieldName, required }) => {\n\t\t\t\t\t\t\tdataType = resolveDataType(dataType);\n\t\t\t\t\t\t\tfieldName = getResourceName(fieldName);\n\t\t\t\t\t\t\treturn `<Property Name=\"${fieldName}\" Type=\"${dataType}\" Nullable=\"${!required}\" />`;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.join('\\n') +\n\t\t\t\t\t'\\n' +\n\t\t\t\t\tfields\n\t\t\t\t\t\t.filter(\n\t\t\t\t\t\t\t({ dataType, references }) =>\n\t\t\t\t\t\t\t\tdataType === 'ForeignKey' && references != null,\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.map(({ fieldName, references }) => {\n\t\t\t\t\t\t\tconst { resourceName: referencedResource } = references!;\n\t\t\t\t\t\t\tfieldName = getResourceName(fieldName);\n\t\t\t\t\t\t\treturn `<NavigationProperty Name=\"${fieldName}\" Relationship=\"${vocabulary}.${\n\t\t\t\t\t\t\t\tresourceName + referencedResource\n\t\t\t\t\t\t\t}\" FromRole=\"${resourceName}\" ToRole=\"${referencedResource}\" />`;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.join('\\n') +\n\t\t\t\t\t'\\n' +\n\t\t\t\t\t`\n\t\t\t\t\t</EntityType>`\n\t\t\t\t);\n\t\t\t},\n\t\t).join('\\n\\n') +\n\t\tassociations\n\t\t\t.map(({ name, ends }) => {\n\t\t\t\tname = getResourceName(name);\n\t\t\t\treturn (\n\t\t\t\t\t`<Association Name=\"${name}\">` +\n\t\t\t\t\t'\\n\\t' +\n\t\t\t\t\tends\n\t\t\t\t\t\t.map(\n\t\t\t\t\t\t\t({ resourceName, cardinality }) =>\n\t\t\t\t\t\t\t\t`<End Role=\"${resourceName}\" Type=\"${vocabulary}.${resourceName}\" Multiplicity=\"${cardinality}\" />`,\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.join('\\n\\t') +\n\t\t\t\t\t'\\n' +\n\t\t\t\t\t`</Association>`\n\t\t\t\t);\n\t\t\t})\n\t\t\t.join('\\n') +\n\t\t`\n\t\t\t\t\t<EntityContainer Name=\"${vocabulary}Service\" m:IsDefaultEntityContainer=\"true\">\n\n\t\t\t\t\t` +\n\t\tforEachUniqueTable(model, (_key, { name: resourceName }) => {\n\t\t\tresourceName = getResourceName(resourceName);\n\t\t\treturn `<EntitySet Name=\"${resourceName}\" EntityType=\"${vocabulary}.${resourceName}\" />`;\n\t\t}).join('\\n') +\n\t\t'\\n' +\n\t\tassociations\n\t\t\t.map(({ name, ends }) => {\n\t\t\t\tname = getResourceName(name);\n\t\t\t\treturn (\n\t\t\t\t\t`<AssociationSet Name=\"${name}\" Association=\"${vocabulary}.${name}\">` +\n\t\t\t\t\t'\\n\\t' +\n\t\t\t\t\tends\n\t\t\t\t\t\t.map(\n\t\t\t\t\t\t\t({ resourceName }) =>\n\t\t\t\t\t\t\t\t`<End Role=\"${resourceName}\" EntitySet=\"${vocabulary}.${resourceName}\" />`,\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.join('\\n\\t') +\n\t\t\t\t\t`\n\t\t\t\t\t\t\t\t</AssociationSet>`\n\t\t\t\t);\n\t\t\t})\n\t\t\t.join('\\n') +\n\t\t`\n\t\t\t\t\t</EntityContainer>` +\n\t\tObject.values(complexTypes).join('\\n') +\n\t\t`\n\t\t\t\t</Schema>\n\t\t\t</edmx:DataServices>\n\t\t</edmx:Edmx>`\n\t);\n};\n\ngenerateODataMetadata.version = version;\n","module.exports = \"Vocabulary: dev\\r\\n\\r\\nTerm:       model value\\r\\n\\tConcept Type: JSON (Type)\\r\\nTerm:       model\\r\\n\\tReference Scheme: model value\\r\\nTerm:       vocabulary\\r\\n\\tConcept Type: Short Text (Type)\\r\\nTerm:       model type\\r\\n\\tConcept Type: Short Text (Type)\\r\\n\\r\\nFact Type: model is of vocabulary\\r\\n\\tNecessity: Each model is of exactly one vocabulary\\r\\nFact Type: model has model type\\r\\n\\tNecessity: Each model has exactly one model type\\r\\nFact Type: model has model value\\r\\n\\tNecessity: Each model has exactly one model value\\r\\n\";","\"use strict\";\n\nvar customError      = require(\"es5-ext/error/custom\")\n  , defineLength     = require(\"es5-ext/function/_define-length\")\n  , partial          = require(\"es5-ext/function/#/partial\")\n  , copy             = require(\"es5-ext/object/copy\")\n  , normalizeOpts    = require(\"es5-ext/object/normalize-options\")\n  , callable         = require(\"es5-ext/object/valid-callable\")\n  , d                = require(\"d\")\n  , WeakMap          = require(\"es6-weak-map\")\n  , resolveLength    = require(\"./resolve-length\")\n  , extensions       = require(\"./registered-extensions\")\n  , resolveResolve   = require(\"./resolve-resolve\")\n  , resolveNormalize = require(\"./resolve-normalize\");\n\nvar slice = Array.prototype.slice, defineProperties = Object.defineProperties;\n\nmodule.exports = function (memoize) {\n\treturn function (fn/*, options*/) {\n\t\tvar map, length, options = normalizeOpts(arguments[1]), memoized, resolve, normalizer;\n\n\t\tcallable(fn);\n\n\t\t// Do not memoize already memoized function\n\t\tif (hasOwnProperty.call(fn, \"__memoized__\") && !options.force) return fn;\n\n\t\tlength = resolveLength(options.length, fn.length, options.async && extensions.async);\n\t\toptions.length = length ? length - 1 : 0;\n\t\tmap = new WeakMap();\n\n\t\tif (options.resolvers) resolve = resolveResolve(options.resolvers);\n\t\tif (options.normalizer) normalizer = resolveNormalize(options.normalizer);\n\n\t\tif (\n\t\t\tlength === 1 &&\n\t\t\t!normalizer &&\n\t\t\t!options.async &&\n\t\t\t!options.dispose &&\n\t\t\t!options.maxAge &&\n\t\t\t!options.max &&\n\t\t\t!options.refCounter\n\t\t) {\n\t\t\treturn defineProperties(\n\t\t\t\tfunction (obj) {\n\t\t\t\t\tvar result, args = arguments;\n\t\t\t\t\tif (resolve) args = resolve(args);\n\t\t\t\t\tobj = args[0];\n\t\t\t\t\tif (map.has(obj)) return map.get(obj);\n\t\t\t\t\tresult = fn.apply(this, args);\n\t\t\t\t\tif (map.has(obj)) {\n\t\t\t\t\t\tthrow customError(\"Circular invocation\", \"CIRCULAR_INVOCATION\");\n\t\t\t\t\t}\n\t\t\t\t\tmap.set(obj, result);\n\t\t\t\t\treturn result;\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t__memoized__: d(true),\n\t\t\t\t\tdelete: d(function (obj) {\n\t\t\t\t\t\tif (resolve) obj = resolve(arguments)[0];\n\t\t\t\t\t\treturn map.delete(obj);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t\tmemoized = defineProperties(\n\t\t\tdefineLength(function (obj) {\n\t\t\t\tvar memoizer, args = arguments;\n\t\t\t\tif (resolve) {\n\t\t\t\t\targs = resolve(args);\n\t\t\t\t\tobj = args[0];\n\t\t\t\t}\n\t\t\t\tmemoizer = map.get(obj);\n\t\t\t\tif (!memoizer) {\n\t\t\t\t\tif (normalizer) {\n\t\t\t\t\t\toptions = copy(options);\n\t\t\t\t\t\toptions.normalizer = copy(normalizer);\n\t\t\t\t\t\toptions.normalizer.get = partial.call(options.normalizer.get, obj);\n\t\t\t\t\t\toptions.normalizer.set = partial.call(options.normalizer.set, obj);\n\t\t\t\t\t\tif (options.normalizer.delete) {\n\t\t\t\t\t\t\toptions.normalizer.delete = partial.call(\n\t\t\t\t\t\t\t\toptions.normalizer.delete, obj\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tmap.set(obj, memoizer = memoize(partial.call(fn, obj), options));\n\t\t\t\t}\n\t\t\t\treturn memoizer.apply(this, slice.call(args, 1));\n\t\t\t}, length),\n\t\t\t{\n\t\t\t\t__memoized__: d(true),\n\t\t\t\tdelete: d(\n\t\t\t\t\tdefineLength(function (obj) {\n\t\t\t\t\t\tvar memoizer, args = arguments;\n\t\t\t\t\t\tif (resolve) {\n\t\t\t\t\t\t\targs = resolve(args);\n\t\t\t\t\t\t\tobj = args[0];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmemoizer = map.get(obj);\n\t\t\t\t\t\tif (!memoizer) return;\n\t\t\t\t\t\tmemoizer.delete.apply(this, slice.call(args, 1));\n\t\t\t\t\t}, length)\n\t\t\t\t)\n\t\t\t}\n\t\t);\n\t\tif (!options.refCounter) return memoized;\n\t\tdefineProperties(memoized, {\n\t\t\tdeleteRef: d(\n\t\t\t\tdefineLength(function (obj) {\n\t\t\t\t\tvar memoizer, args = arguments;\n\t\t\t\t\tif (resolve) {\n\t\t\t\t\t\targs = resolve(args);\n\t\t\t\t\t\tobj = args[0];\n\t\t\t\t\t}\n\t\t\t\t\tmemoizer = map.get(obj);\n\t\t\t\t\tif (!memoizer) return null;\n\t\t\t\t\treturn memoizer.deleteRef.apply(this, slice.call(args, 1));\n\t\t\t\t}, length)\n\t\t\t),\n\t\t\tgetRefCount: d(\n\t\t\t\tdefineLength(function (obj) {\n\t\t\t\t\tvar memoizer, args = arguments;\n\t\t\t\t\tif (resolve) {\n\t\t\t\t\t\targs = resolve(args);\n\t\t\t\t\t\tobj = args[0];\n\t\t\t\t\t}\n\t\t\t\t\tmemoizer = map.get(obj);\n\t\t\t\t\tif (!memoizer) return 0;\n\t\t\t\t\treturn memoizer.getRefCount.apply(this, slice.call(args, 1));\n\t\t\t\t}, length)\n\t\t\t)\n\t\t});\n\t\treturn memoized;\n\t};\n};\n","\"use strict\";\n\nvar callable     = require(\"../../object/valid-callable\")\n  , aFrom        = require(\"../../array/from\")\n  , defineLength = require(\"../_define-length\")\n  , apply        = Function.prototype.apply;\n\nmodule.exports = function (/* …args*/) {\n\tvar fn = callable(this), args = aFrom(arguments);\n\n\treturn defineLength(function () {\n\t\treturn apply.call(fn, this, args.concat(aFrom(arguments)));\n\t}, fn.length - args.length);\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? WeakMap : require(\"./polyfill\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar weakMap, obj;\n\n\tif (typeof WeakMap !== \"function\") return false;\n\ttry {\n\t\t// WebKit doesn't support arguments and crashes\n\t\tweakMap = new WeakMap([[obj = {}, \"one\"], [{}, \"two\"], [{}, \"three\"]]);\n\t} catch (e) {\n\t\treturn false;\n\t}\n\tif (String(weakMap) !== \"[object WeakMap]\") return false;\n\tif (typeof weakMap.set !== \"function\") return false;\n\tif (weakMap.set({}, 1) !== weakMap) return false;\n\tif (typeof weakMap.delete !== \"function\") return false;\n\tif (typeof weakMap.has !== \"function\") return false;\n\tif (weakMap.get(obj) !== \"one\") return false;\n\n\treturn true;\n};\n","\"use strict\";\n\nvar isValue           = require(\"es5-ext/object/is-value\")\n  , setPrototypeOf    = require(\"es5-ext/object/set-prototype-of\")\n  , object            = require(\"es5-ext/object/valid-object\")\n  , ensureValue       = require(\"es5-ext/object/valid-value\")\n  , randomUniq        = require(\"es5-ext/string/random-uniq\")\n  , d                 = require(\"d\")\n  , getIterator       = require(\"es6-iterator/get\")\n  , forOf             = require(\"es6-iterator/for-of\")\n  , toStringTagSymbol = require(\"es6-symbol\").toStringTag\n  , isNative          = require(\"./is-native-implemented\")\n\n  , isArray = Array.isArray, defineProperty = Object.defineProperty\n  , objHasOwnProperty = Object.prototype.hasOwnProperty, getPrototypeOf = Object.getPrototypeOf\n  , WeakMapPoly;\n\nmodule.exports = WeakMapPoly = function (/* Iterable*/) {\n\tvar iterable = arguments[0], self;\n\n\tif (!(this instanceof WeakMapPoly)) throw new TypeError(\"Constructor requires 'new'\");\n\tself = isNative && setPrototypeOf && (WeakMap !== WeakMapPoly)\n\t\t? setPrototypeOf(new WeakMap(), getPrototypeOf(this)) : this;\n\n\tif (isValue(iterable)) {\n\t\tif (!isArray(iterable)) iterable = getIterator(iterable);\n\t}\n\tdefineProperty(self, \"__weakMapData__\", d(\"c\", \"$weakMap$\" + randomUniq()));\n\tif (!iterable) return self;\n\tforOf(iterable, function (val) {\n\t\tensureValue(val);\n\t\tself.set(val[0], val[1]);\n\t});\n\treturn self;\n};\n\nif (isNative) {\n\tif (setPrototypeOf) setPrototypeOf(WeakMapPoly, WeakMap);\n\tWeakMapPoly.prototype = Object.create(WeakMap.prototype, { constructor: d(WeakMapPoly) });\n}\n\nObject.defineProperties(WeakMapPoly.prototype, {\n\tdelete: d(function (key) {\n\t\tif (objHasOwnProperty.call(object(key), this.__weakMapData__)) {\n\t\t\tdelete key[this.__weakMapData__];\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}),\n\tget: d(function (key) {\n\t\tif (!objHasOwnProperty.call(object(key), this.__weakMapData__)) return undefined;\n\t\treturn key[this.__weakMapData__];\n\t}),\n\thas: d(function (key) {\n\t\treturn objHasOwnProperty.call(object(key), this.__weakMapData__);\n\t}),\n\tset: d(function (key, value) {\n\t\tdefineProperty(object(key), this.__weakMapData__, d(\"c\", value));\n\t\treturn this;\n\t}),\n\ttoString: d(function () {\n\t\treturn \"[object WeakMap]\";\n\t})\n});\ndefineProperty(WeakMapPoly.prototype, toStringTagSymbol, d(\"c\", \"WeakMap\"));\n","// Workaround for http://code.google.com/p/v8/issues/detail?id=2804\n\n\"use strict\";\n\nvar create = Object.create, shim;\n\nif (!require(\"./set-prototype-of/is-implemented\")()) {\n\tshim = require(\"./set-prototype-of/shim\");\n}\n\nmodule.exports = (function () {\n\tvar nullObject, polyProps, desc;\n\tif (!shim) return create;\n\tif (shim.level !== 1) return create;\n\n\tnullObject = {};\n\tpolyProps = {};\n\tdesc = { configurable: false, enumerable: false, writable: true, value: undefined };\n\tObject.getOwnPropertyNames(Object.prototype).forEach(function (name) {\n\t\tif (name === \"__proto__\") {\n\t\t\tpolyProps[name] = {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\twritable: true,\n\t\t\t\tvalue: undefined\n\t\t\t};\n\t\t\treturn;\n\t\t}\n\t\tpolyProps[name] = desc;\n\t});\n\tObject.defineProperties(nullObject, polyProps);\n\n\tObject.defineProperty(shim, \"nullPolyfill\", {\n\t\tconfigurable: false,\n\t\tenumerable: false,\n\t\twritable: false,\n\t\tvalue: nullObject\n\t});\n\n\treturn function (prototype, props) {\n\t\treturn create(prototype === null ? nullObject : prototype, props);\n\t};\n})();\n","\"use strict\";\n\nvar isObject = require(\"./is-object\");\n\nmodule.exports = function (value) {\n\tif (!isObject(value)) throw new TypeError(value + \" is not an Object\");\n\treturn value;\n};\n","\"use strict\";\n\nvar generated = Object.create(null), random = Math.random;\n\nmodule.exports = function () {\n\tvar str;\n\tdo {\n\t\tstr = random().toString(36).slice(2);\n\t} while (generated[str]);\n\treturn str;\n};\n","\"use strict\";\n\nvar setPrototypeOf = require(\"es5-ext/object/set-prototype-of\")\n  , contains       = require(\"es5-ext/string/#/contains\")\n  , d              = require(\"d\")\n  , Symbol         = require(\"es6-symbol\")\n  , Iterator       = require(\"./\");\n\nvar defineProperty = Object.defineProperty, ArrayIterator;\n\nArrayIterator = module.exports = function (arr, kind) {\n\tif (!(this instanceof ArrayIterator)) throw new TypeError(\"Constructor requires 'new'\");\n\tIterator.call(this, arr);\n\tif (!kind) kind = \"value\";\n\telse if (contains.call(kind, \"key+value\")) kind = \"key+value\";\n\telse if (contains.call(kind, \"key\")) kind = \"key\";\n\telse kind = \"value\";\n\tdefineProperty(this, \"__kind__\", d(\"\", kind));\n};\nif (setPrototypeOf) setPrototypeOf(ArrayIterator, Iterator);\n\n// Internal %ArrayIteratorPrototype% doesn't expose its constructor\ndelete ArrayIterator.prototype.constructor;\n\nArrayIterator.prototype = Object.create(Iterator.prototype, {\n\t_resolve: d(function (i) {\n\t\tif (this.__kind__ === \"value\") return this.__list__[i];\n\t\tif (this.__kind__ === \"key+value\") return [i, this.__list__[i]];\n\t\treturn i;\n\t})\n});\ndefineProperty(ArrayIterator.prototype, Symbol.toStringTag, d(\"c\", \"Array Iterator\"));\n","// Inspired by Google Closure:\n// http://closure-library.googlecode.com/svn/docs/\n// closure_goog_array_array.js.html#goog.array.clear\n\n\"use strict\";\n\nvar value = require(\"../../object/valid-value\");\n\nmodule.exports = function () {\n\tvalue(this).length = 0;\n\treturn this;\n};\n","\"use strict\";\n\nvar isValue             = require(\"type/value/is\")\n  , ensureValue         = require(\"type/value/ensure\")\n  , ensurePlainFunction = require(\"type/plain-function/ensure\")\n  , copy                = require(\"es5-ext/object/copy\")\n  , normalizeOptions    = require(\"es5-ext/object/normalize-options\")\n  , map                 = require(\"es5-ext/object/map\");\n\nvar bind = Function.prototype.bind\n  , defineProperty = Object.defineProperty\n  , hasOwnProperty = Object.prototype.hasOwnProperty\n  , define;\n\ndefine = function (name, desc, options) {\n\tvar value = ensureValue(desc) && ensurePlainFunction(desc.value), dgs;\n\tdgs = copy(desc);\n\tdelete dgs.writable;\n\tdelete dgs.value;\n\tdgs.get = function () {\n\t\tif (!options.overwriteDefinition && hasOwnProperty.call(this, name)) return value;\n\t\tdesc.value = bind.call(value, options.resolveContext ? options.resolveContext(this) : this);\n\t\tdefineProperty(this, name, desc);\n\t\treturn this[name];\n\t};\n\treturn dgs;\n};\n\nmodule.exports = function (props/*, options*/) {\n\tvar options = normalizeOptions(arguments[1]);\n\tif (isValue(options.resolveContext)) ensurePlainFunction(options.resolveContext);\n\treturn map(props, function (desc, name) { return define(name, desc, options); });\n};\n","\"use strict\";\n\nvar resolveException = require(\"../lib/resolve-exception\")\n  , is               = require(\"./is\");\n\nmodule.exports = function (value/*, options*/) {\n\tif (is(value)) return value;\n\treturn resolveException(value, \"Cannot use %v\", arguments[1]);\n};\n","\"use strict\";\n\nvar isValue  = require(\"../value/is\")\n  , isObject = require(\"../object/is\");\n\nvar objectToString = Object.prototype.toString;\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) return null;\n\tif (isObject(value)) {\n\t\t// Reject Object.prototype.toString coercion\n\t\tvar valueToString = value.toString;\n\t\tif (typeof valueToString !== \"function\") return null;\n\t\tif (valueToString === objectToString) return null;\n\t\t// Note: It can be object coming from other realm, still as there's no ES3 and CSP compliant\n\t\t// way to resolve its realm's Object.prototype.toString it's left as not addressed edge case\n\t}\n\ttry {\n\t\treturn \"\" + value; // Ensure implicit coercion\n\t} catch (error) {\n\t\treturn null;\n\t}\n};\n","\"use strict\";\n\nvar safeToString = require(\"./safe-to-string\");\n\nvar reNewLine = /[\\n\\r\\u2028\\u2029]/g;\n\nmodule.exports = function (value) {\n\tvar string = safeToString(value);\n\tif (string === null) return \"<Non-coercible to string value>\";\n\t// Trim if too long\n\tif (string.length > 100) string = string.slice(0, 99) + \"…\";\n\t// Replace eventual new lines\n\tstring = string.replace(reNewLine, function (char) {\n\t\tswitch (char) {\n\t\t\tcase \"\\n\":\n\t\t\t\treturn \"\\\\n\";\n\t\t\tcase \"\\r\":\n\t\t\t\treturn \"\\\\r\";\n\t\t\tcase \"\\u2028\":\n\t\t\t\treturn \"\\\\u2028\";\n\t\t\tcase \"\\u2029\":\n\t\t\t\treturn \"\\\\u2029\";\n\t\t\t/* istanbul ignore next */\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"Unexpected character\");\n\t\t}\n\t});\n\treturn string;\n};\n","\"use strict\";\n\nmodule.exports = function (value) {\n\ttry {\n\t\treturn value.toString();\n\t} catch (error) {\n\t\ttry { return String(value); }\n\t\tcatch (error2) { return null; }\n\t}\n};\n","\"use strict\";\n\nvar resolveException = require(\"../lib/resolve-exception\")\n  , is               = require(\"./is\");\n\nmodule.exports = function (value/*, options*/) {\n\tif (is(value)) return value;\n\treturn resolveException(value, \"%v is not a plain function\", arguments[1]);\n};\n","// Thanks @mathiasbynens\n// http://mathiasbynens.be/notes/javascript-unicode#iterating-over-symbols\n\n\"use strict\";\n\nvar setPrototypeOf = require(\"es5-ext/object/set-prototype-of\")\n  , d              = require(\"d\")\n  , Symbol         = require(\"es6-symbol\")\n  , Iterator       = require(\"./\");\n\nvar defineProperty = Object.defineProperty, StringIterator;\n\nStringIterator = module.exports = function (str) {\n\tif (!(this instanceof StringIterator)) throw new TypeError(\"Constructor requires 'new'\");\n\tstr = String(str);\n\tIterator.call(this, str);\n\tdefineProperty(this, \"__length__\", d(\"\", str.length));\n};\nif (setPrototypeOf) setPrototypeOf(StringIterator, Iterator);\n\n// Internal %ArrayIteratorPrototype% doesn't expose its constructor\ndelete StringIterator.prototype.constructor;\n\nStringIterator.prototype = Object.create(Iterator.prototype, {\n\t_next: d(function () {\n\t\tif (!this.__list__) return undefined;\n\t\tif (this.__nextIndex__ < this.__length__) return this.__nextIndex__++;\n\t\tthis._unBind();\n\t\treturn undefined;\n\t}),\n\t_resolve: d(function (i) {\n\t\tvar char = this.__list__[i], code;\n\t\tif (this.__nextIndex__ === this.__length__) return char;\n\t\tcode = char.charCodeAt(0);\n\t\tif (code >= 0xd800 && code <= 0xdbff) return char + this.__list__[this.__nextIndex__++];\n\t\treturn char;\n\t})\n});\ndefineProperty(StringIterator.prototype, Symbol.toStringTag, d(\"c\", \"String Iterator\"));\n","\"use strict\";\n\nvar isIterable = require(\"./is-iterable\");\n\nmodule.exports = function (value) {\n\tif (!isIterable(value)) throw new TypeError(value + \" is not iterable\");\n\treturn value;\n};\n","\"use strict\";\n\nvar isArguments = require(\"es5-ext/function/is-arguments\")\n  , isValue     = require(\"es5-ext/object/is-value\")\n  , isString    = require(\"es5-ext/string/is-string\");\n\nvar iteratorSymbol = require(\"es6-symbol\").iterator\n  , isArray        = Array.isArray;\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) return false;\n\tif (isArray(value)) return true;\n\tif (isString(value)) return true;\n\tif (isArguments(value)) return true;\n\treturn typeof value[iteratorSymbol] === \"function\";\n};\n","\"use strict\";\n\nvar isArguments = require(\"es5-ext/function/is-arguments\")\n  , callable    = require(\"es5-ext/object/valid-callable\")\n  , isString    = require(\"es5-ext/string/is-string\")\n  , get         = require(\"./get\");\n\nvar isArray = Array.isArray, call = Function.prototype.call, some = Array.prototype.some;\n\nmodule.exports = function (iterable, cb /*, thisArg*/) {\n\tvar mode, thisArg = arguments[2], result, doBreak, broken, i, length, char, code;\n\tif (isArray(iterable) || isArguments(iterable)) mode = \"array\";\n\telse if (isString(iterable)) mode = \"string\";\n\telse iterable = get(iterable);\n\n\tcallable(cb);\n\tdoBreak = function () {\n\t\tbroken = true;\n\t};\n\tif (mode === \"array\") {\n\t\tsome.call(iterable, function (value) {\n\t\t\tcall.call(cb, thisArg, value, doBreak);\n\t\t\treturn broken;\n\t\t});\n\t\treturn;\n\t}\n\tif (mode === \"string\") {\n\t\tlength = iterable.length;\n\t\tfor (i = 0; i < length; ++i) {\n\t\t\tchar = iterable[i];\n\t\t\tif (i + 1 < length) {\n\t\t\t\tcode = char.charCodeAt(0);\n\t\t\t\tif (code >= 0xd800 && code <= 0xdbff) char += iterable[++i];\n\t\t\t}\n\t\t\tcall.call(cb, thisArg, char, doBreak);\n\t\t\tif (broken) break;\n\t\t}\n\t\treturn;\n\t}\n\tresult = iterable.next();\n\n\twhile (!result.done) {\n\t\tcall.call(cb, thisArg, result.value, doBreak);\n\t\tif (broken) return;\n\t\tresult = iterable.next();\n\t}\n};\n","// Exports true if environment provides native `WeakMap` implementation, whatever that is.\n\n\"use strict\";\n\nmodule.exports = (function () {\n\tif (typeof WeakMap !== \"function\") return false;\n\treturn Object.prototype.toString.call(new WeakMap()) === \"[object WeakMap]\";\n}());\n","module.exports = \"Vocabulary: Auth\\r\\n\\r\\nTerm:       username\\r\\n\\tConcept Type: Short Text (Type)\\r\\nTerm:       password\\r\\n\\tConcept Type: Hashed (Type)\\r\\nTerm:       name\\r\\n\\tConcept Type: Text (Type)\\r\\nTerm:       key\\r\\n\\tConcept Type: Short Text (Type)\\r\\nTerm:       expiry date\\r\\n\\tConcept Type: Date Time (Type)\\r\\nTerm:       description\\r\\n\\tConcept Type: Text (Type)\\r\\n\\r\\nTerm:       permission\\r\\n\\tReference Scheme: name\\r\\nFact type:  permission has name\\r\\n\\tNecessity: Each permission has exactly one name.\\r\\n\\tNecessity: Each name is of exactly one permission.\\r\\n\\r\\nTerm:       role\\r\\n\\tReference Scheme: name\\r\\nFact type:  role has name\\r\\n\\tNecessity: Each role has exactly one name.\\r\\n\\tNecessity: Each name is of exactly one role.\\r\\nFact type:  role has permission\\r\\n\\r\\nTerm:       actor\\r\\n\\r\\nTerm:       user\\r\\n\\tReference Scheme: username\\r\\n\\tConcept Type: actor\\r\\nFact type:  user has username\\r\\n\\tNecessity: Each user has exactly one username.\\r\\n\\tNecessity: Each username is of exactly one user.\\r\\nFact type:  user has password\\r\\n\\tNecessity: Each user has exactly one password.\\r\\nFact type:  user has role\\r\\n\\tNote: A 'user' will inherit all the 'permissions' that the 'role' has.\\r\\n\\tTerm Form: user role\\r\\n\\tFact type: user role has expiry date\\r\\n\\t\\tNecessity: Each user role has at most one expiry date.\\r\\nFact type:  user has permission\\r\\n\\tTerm Form: user permission\\r\\n\\tFact type: user permission has expiry date\\r\\n\\t\\tNecessity: Each user permission has at most one expiry date.\\r\\n\\r\\nTerm:       api key\\r\\n\\tReference Scheme: key\\r\\nFact type:  api key has key\\r\\n\\tNecessity: each api key has exactly one key\\r\\n\\tNecessity: each key is of exactly one api key\\r\\nFact type:  api key has role\\r\\n\\tNote: An 'api key' will inherit all the 'permissions' that the 'role' has.\\r\\nFact type:  api key has permission\\r\\nFact type:  api key is of actor\\r\\n\\tNecessity: each api key is of exactly one actor\\r\\nFact type:  api key has name\\r\\n\\tNecessity: Each api key has at most one name.\\r\\nFact type:  api key has description\\r\\n\\tNecessity: Each api key has at most one description.\\r\\n\";","declare module '@balena/abstract-sql-compiler' {\n\tinterface AbstractSqlTable {\n\t\tfetchProcessingFields?: {\n\t\t\t[field: string]: NonNullable<typeof sbvrTypes[string]['fetchProcessing']>;\n\t\t};\n\t\tlocalFields?: {\n\t\t\t[odataName: string]: true;\n\t\t};\n\t}\n}\n\nimport type {\n\tAbstractSqlModel,\n\tAbstractSqlTable,\n} from '@balena/abstract-sql-compiler';\nimport type { Result, Row } from '../database-layer/db';\n\nimport { sqlNameToODataName } from '@balena/odata-to-abstract-sql';\nimport * as sbvrTypes from '@balena/sbvr-types';\nimport * as _ from 'lodash';\nimport { resolveNavigationResource, resolveSynonym } from './sbvr-utils';\n\nconst checkForExpansion = async (\n\tvocab: string,\n\tabstractSqlModel: AbstractSqlModel,\n\tparentResourceName: string,\n\tfieldName: string,\n\trow: Row,\n\topts: { includeMetadata: boolean },\n) => {\n\tlet field = row[fieldName];\n\tif (field == null) {\n\t\treturn;\n\t}\n\n\tif (typeof field === 'string') {\n\t\ttry {\n\t\t\tfield = JSON.parse(field);\n\t\t} catch (_e) {\n\t\t\t// If we can't JSON.parse the field then we use it directly.\n\t\t}\n\t}\n\n\tif (Array.isArray(field)) {\n\t\tconst mappingResourceName = resolveNavigationResource(\n\t\t\t{\n\t\t\t\tabstractSqlModel,\n\t\t\t\tvocabulary: vocab,\n\t\t\t\tresourceName: parentResourceName,\n\t\t\t},\n\t\t\tfieldName,\n\t\t);\n\t\tconst expandedField = await process(\n\t\t\tvocab,\n\t\t\tabstractSqlModel,\n\t\t\tmappingResourceName,\n\t\t\tfield,\n\t\t\topts,\n\t\t);\n\t\trow[fieldName] = expandedField;\n\t} else {\n\t\tconst mappingResourceName = resolveNavigationResource(\n\t\t\t{\n\t\t\t\tabstractSqlModel,\n\t\t\t\tvocabulary: vocab,\n\t\t\t\tresourceName: parentResourceName,\n\t\t\t},\n\t\t\tfieldName,\n\t\t);\n\t\trow[fieldName] = {\n\t\t\t__id: field,\n\t\t};\n\t\tif (opts.includeMetadata) {\n\t\t\trow[fieldName].__deferred = {\n\t\t\t\turi: resourceURI(vocab, mappingResourceName, field),\n\t\t\t};\n\t\t}\n\t}\n};\n\nexport const resourceURI = (\n\tvocab: string,\n\tresourceName: string,\n\tid: string | number,\n): string | undefined => {\n\tif (id == null) {\n\t\treturn;\n\t}\n\tif (typeof id === 'string') {\n\t\tid = \"'\" + encodeURIComponent(id) + \"'\";\n\t}\n\treturn `/${vocab}/${resourceName}(@id)?@id=${id}`;\n};\n\nconst getLocalFields = (table: AbstractSqlTable) => {\n\tif (table.localFields == null) {\n\t\ttable.localFields = {};\n\t\tfor (const { fieldName, dataType } of table.fields) {\n\t\t\t// TODO-MAJOR: This should also include ConceptType fields\n\t\t\tif (dataType !== 'ForeignKey') {\n\t\t\t\tconst odataName = sqlNameToODataName(fieldName);\n\t\t\t\ttable.localFields[odataName] = true;\n\t\t\t}\n\t\t}\n\t}\n\treturn table.localFields;\n};\nconst getFetchProcessingFields = (table: AbstractSqlTable) => {\n\treturn (table.fetchProcessingFields ??= _(table.fields)\n\t\t.filter(\n\t\t\t({ dataType }) =>\n\t\t\t\tsbvrTypes[dataType] != null &&\n\t\t\t\tsbvrTypes[dataType].fetchProcessing != null,\n\t\t)\n\t\t.map(({ fieldName, dataType }) => {\n\t\t\tconst odataName = sqlNameToODataName(fieldName);\n\t\t\treturn [odataName, sbvrTypes[dataType].fetchProcessing];\n\t\t})\n\t\t.fromPairs()\n\t\t.value());\n};\n\nexport const process = async (\n\tvocab: string,\n\tabstractSqlModel: AbstractSqlModel,\n\tresourceName: string,\n\trows: Result['rows'],\n\t{ includeMetadata }: { includeMetadata: boolean },\n): Promise<number | Row[]> => {\n\tif (rows.length === 0) {\n\t\treturn [];\n\t}\n\n\tif (rows.length === 1) {\n\t\tif (rows[0].$count != null) {\n\t\t\tconst count = parseInt(rows[0].$count, 10);\n\t\t\treturn count;\n\t\t}\n\t}\n\n\tconst sqlResourceName = resolveSynonym({\n\t\tabstractSqlModel,\n\t\tvocabulary: vocab,\n\t\tresourceName,\n\t});\n\tconst table = abstractSqlModel.tables[sqlResourceName];\n\n\tconst fieldNames = Object.keys(rows[0]);\n\n\tconst fetchProcessingFields = getFetchProcessingFields(table);\n\tconst processedFields = fieldNames.filter((fieldName) =>\n\t\tfetchProcessingFields.hasOwnProperty(fieldName),\n\t);\n\n\tconst localFields = getLocalFields(table);\n\t// We check that it's not a local field, rather than that it is a foreign key because of the case where the foreign key is on the other resource\n\t// and hence not known to this resource\n\tconst expandableFields = fieldNames.filter(\n\t\t(fieldName) => !localFields.hasOwnProperty(fieldName),\n\t);\n\n\tconst odataIdField = sqlNameToODataName(table.idField);\n\trows.forEach((row) => {\n\t\tprocessedFields.forEach((fieldName) => {\n\t\t\trow[fieldName] = fetchProcessingFields[fieldName](row[fieldName]);\n\t\t});\n\t\tif (includeMetadata) {\n\t\t\trow.__metadata = {\n\t\t\t\turi: resourceURI(vocab, resourceName, row[odataIdField]),\n\t\t\t};\n\t\t}\n\t});\n\n\tif (expandableFields.length > 0) {\n\t\tawait Promise.all(\n\t\t\trows.map(async (row) => {\n\t\t\t\tawait Promise.all(\n\t\t\t\t\texpandableFields.map(async (fieldName) => {\n\t\t\t\t\t\tawait checkForExpansion(\n\t\t\t\t\t\t\tvocab,\n\t\t\t\t\t\t\tabstractSqlModel,\n\t\t\t\t\t\t\tsqlResourceName,\n\t\t\t\t\t\t\tfieldName,\n\t\t\t\t\t\t\trow,\n\t\t\t\t\t\t\t{ includeMetadata },\n\t\t\t\t\t\t);\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\t}\n\n\treturn rows;\n};\n\nexport const prepareModel = (abstractSqlModel: AbstractSqlModel) => {\n\t_.forEach(abstractSqlModel.tables, (table) => {\n\t\tgetLocalFields(table);\n\t\tgetFetchProcessingFields(table);\n\t});\n};\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 212;","import type { Config } from '../config-loader/config-loader';\nimport type { AnyObject } from '../sbvr-api/common-types';\n\nimport { Store } from 'express-session';\nimport * as permissions from '../sbvr-api/permissions';\nimport { api } from '../sbvr-api/sbvr-utils';\n\nexport { Store };\n\nconst sessionModel = `\n\tVocabulary: session\n\n\tTerm:       session id\n\t\tConcept Type: Short Text (Type)\n\tTerm:       data\n\t\tConcept Type: JSON (Type)\n\tTerm:       expiry time\n\t\tConcept type: Date Time (Type)\n\n\tTerm:       session\n\t\tDatabase ID Field: session id\n\t\tReference Scheme: session id\n\n\tFact type:  session has data\n\t\tNecessity: Each session has exactly 1 data\n\tFact type:  session has session id\n\t\tNecessity: Each session has exactly 1 session id\n\t\tNecessity: Each session id is of exactly 1 session\n\tFact type:  session has expiry time\n\t\tNecessity: Each session has at most 1 expiry time\n`;\n\nconst asCallback = async <T>(\n\tcallback: undefined | ((err: any, result?: T) => void),\n\tpromise: Promise<T>,\n) => {\n\tlet err;\n\tlet result;\n\ttry {\n\t\tresult = await promise;\n\t} catch ($err) {\n\t\terr = $err;\n\t}\n\ttry {\n\t\tcallback?.(err, result);\n\t} catch {\n\t\t// ignore errors in the callback\n\t}\n};\n\nexport class PinejsSessionStore extends Store {\n\tpublic get = ((sid, callback) => {\n\t\tasCallback(\n\t\t\tcallback,\n\t\t\tapi.session\n\t\t\t\t.get({\n\t\t\t\t\tresource: 'session',\n\t\t\t\t\tid: sid,\n\t\t\t\t\tpassthrough: {\n\t\t\t\t\t\treq: permissions.rootRead,\n\t\t\t\t\t},\n\t\t\t\t\toptions: {\n\t\t\t\t\t\t$select: 'data',\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t\t.then((session: AnyObject) => {\n\t\t\t\t\tif (session != null) {\n\t\t\t\t\t\treturn session.data;\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t);\n\t}) as Store['get'];\n\n\tpublic set = ((sid, data, callback) => {\n\t\tconst body = {\n\t\t\tsession_id: sid,\n\t\t\tdata,\n\t\t\texpiry_time: data?.cookie?.expires ?? null,\n\t\t};\n\t\tasCallback(\n\t\t\tcallback,\n\t\t\tapi.session.put({\n\t\t\t\tresource: 'session',\n\t\t\t\tid: sid,\n\t\t\t\tpassthrough: {\n\t\t\t\t\treq: permissions.root,\n\t\t\t\t},\n\t\t\t\tbody,\n\t\t\t}),\n\t\t);\n\t}) as Store['set'];\n\n\tpublic destroy = ((sid, callback) => {\n\t\tasCallback(\n\t\t\tcallback,\n\t\t\tapi.session.delete({\n\t\t\t\tresource: 'session',\n\t\t\t\tid: sid,\n\t\t\t\tpassthrough: {\n\t\t\t\t\treq: permissions.root,\n\t\t\t\t},\n\t\t\t}),\n\t\t);\n\t}) as Store['destroy'];\n\n\tpublic all = ((callback) => {\n\t\tasCallback(\n\t\t\tcallback,\n\t\t\tapi.session\n\t\t\t\t.get({\n\t\t\t\t\tresource: 'session',\n\t\t\t\t\tpassthrough: {\n\t\t\t\t\t\treq: permissions.root,\n\t\t\t\t\t},\n\t\t\t\t\toptions: {\n\t\t\t\t\t\t$select: 'session_id',\n\t\t\t\t\t\t$filter: {\n\t\t\t\t\t\t\texpiry_time: { $ge: Date.now() },\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t\t.then((sessions: AnyObject[]) => sessions.map((s) => s.session_id)),\n\t\t);\n\t}) as Store['all'];\n\n\tpublic clear = ((callback) => {\n\t\tasCallback(\n\t\t\tcallback,\n\t\t\t// TODO: Use a truncate\n\t\t\tapi.session.delete({\n\t\t\t\tresource: 'session',\n\t\t\t\tpassthrough: {\n\t\t\t\t\treq: permissions.root,\n\t\t\t\t},\n\t\t\t}),\n\t\t);\n\t}) as Store['clear'];\n\n\tpublic length = ((callback) => {\n\t\tasCallback(\n\t\t\tcallback,\n\t\t\tapi.session.get({\n\t\t\t\tresource: 'session/',\n\t\t\t\tpassthrough: {\n\t\t\t\t\treq: permissions.rootRead,\n\t\t\t\t},\n\t\t\t\toptions: {\n\t\t\t\t\t$count: {\n\t\t\t\t\t\t$select: 'session_id',\n\t\t\t\t\t\t$filter: {\n\t\t\t\t\t\t\texpiry_time: {\n\t\t\t\t\t\t\t\t$ge: Date.now(),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}) as Promise<number>,\n\t\t);\n\t}) as Store['length'];\n\n\tpublic static config: Config = {\n\t\tmodels: [\n\t\t\t{\n\t\t\t\tmodelName: 'session',\n\t\t\t\tmodelText: sessionModel,\n\t\t\t\tapiRoot: 'session',\n\t\t\t\tlogging: {\n\t\t\t\t\tdefault: false,\n\t\t\t\t\terror: true,\n\t\t\t\t},\n\t\t\t\tmigrations: {\n\t\t\t\t\t'11.0.0-modified-at': `\n\t\t\t\t\t\tALTER TABLE \"session\"\n\t\t\t\t\t\tADD COLUMN IF NOT EXISTS \"modified at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL;\n\t\t\t\t\t`,\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t};\n}\n","module.exports = require(\"express-session\");","import * as permissions from '../sbvr-api/permissions';\n\nconst uiModel = `\\\nVocabulary: ui\n\nTerm:       text\n\tConcept type: Text (Type)\nTerm:       name\n\tConcept type: Short Text (Type)\nTerm:       textarea\n\t--Database id Field: name\n\tReference Scheme: text\nFact type:  textarea is disabled\nFact type:  textarea has name\n\tNecessity: Each textarea has exactly 1 name\n\tNecessity: Each name is of exactly 1 textarea\nFact type:  textarea has text\n\tNecessity: Each textarea has exactly 1 text`;\n\n// Middleware\nconst isServerOnAir = (() => {\n\t/** @type { ((thenableOrResult?: import('../sbvr-api/common-types').Resolvable<boolean>) => void) | undefined } */\n\tlet resolve;\n\tlet promise = new Promise(($resolve) => {\n\t\tresolve = $resolve;\n\t});\n\treturn (/** @type {boolean} */ value) => {\n\t\tif (value != null) {\n\t\t\tif (resolve != null) {\n\t\t\t\tresolve(value);\n\t\t\t\tresolve = undefined;\n\t\t\t} else {\n\t\t\t\tpromise = Promise.resolve(value);\n\t\t\t}\n\t\t}\n\t\treturn promise;\n\t};\n})();\n\n/** @type { import('express').Handler } */\nconst serverIsOnAir = async (_req, _res, next) => {\n\tconst onAir = await isServerOnAir();\n\tif (onAir) {\n\t\tnext();\n\t} else {\n\t\tnext('route');\n\t}\n};\n\nexport let config = {\n\tmodels: [\n\t\t{\n\t\t\tmodelName: 'ui',\n\t\t\tmodelText: uiModel,\n\t\t\tapiRoot: 'ui',\n\t\t\tcustomServerCode: { setup },\n\t\t\tmigrations: {\n\t\t\t\t'11.0.0-modified-at': `\\\nALTER TABLE \"textarea\"\nADD COLUMN IF NOT EXISTS \"modified at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL;\\\n`,\n\t\t\t},\n\t\t},\n\t],\n};\n\n/** @type { import('../config-loader/config-loader').SetupFunction } */\nexport async function setup(app, sbvrUtils, db) {\n\tconst uiApi = sbvrUtils.api.ui;\n\tconst devApi = sbvrUtils.api.dev;\n\tconst setupModels = async (\n\t\t/** @type { import('../database-layer/db').Tx } */ tx,\n\t) => {\n\t\ttry {\n\t\t\tconst uiApiTx = uiApi.clone({\n\t\t\t\tpassthrough: {\n\t\t\t\t\ttx,\n\t\t\t\t\treq: permissions.root,\n\t\t\t\t},\n\t\t\t});\n\t\t\tawait uiApiTx\n\t\t\t\t.get({\n\t\t\t\t\tresource: 'textarea',\n\t\t\t\t\tid: {\n\t\t\t\t\t\tname: 'model_area',\n\t\t\t\t\t},\n\t\t\t\t\toptions: {\n\t\t\t\t\t\t$select: 'id',\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t\t.then(async (/** @type { { [key: string]: any } } */ result) => {\n\t\t\t\t\tif (result == null) {\n\t\t\t\t\t\t// Add a model_area entry if it doesn't already exist.\n\t\t\t\t\t\treturn await uiApiTx.post({\n\t\t\t\t\t\t\tresource: 'textarea',\n\t\t\t\t\t\t\tbody: {\n\t\t\t\t\t\t\t\tname: 'model_area',\n\t\t\t\t\t\t\t\ttext: ' ',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\tawait devApi\n\t\t\t\t.get({\n\t\t\t\t\tresource: 'model',\n\t\t\t\t\tpassthrough: {\n\t\t\t\t\t\ttx,\n\t\t\t\t\t\treq: permissions.rootRead,\n\t\t\t\t\t},\n\t\t\t\t\toptions: {\n\t\t\t\t\t\t$select: ['is_of__vocabulary', 'model_value'],\n\t\t\t\t\t\t$filter: {\n\t\t\t\t\t\t\tmodel_type: 'se',\n\t\t\t\t\t\t\tis_of__vocabulary: 'data',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t\t.then(async (/** @type { Array<{ [key: string]: any }> } */ result) => {\n\t\t\t\t\tif (result.length === 0) {\n\t\t\t\t\t\tthrow new Error('No SE data model found');\n\t\t\t\t\t}\n\t\t\t\t\tconst instance = result[0];\n\t\t\t\t\tawait sbvrUtils.executeModel(tx, {\n\t\t\t\t\t\tapiRoot: instance.is_of__vocabulary,\n\t\t\t\t\t\tmodelText: instance.model_value,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\tawait isServerOnAir(true);\n\t\t} catch {\n\t\t\tawait isServerOnAir(false);\n\t\t}\n\t};\n\n\tapp.get('/onAir', async (_req, res) => {\n\t\tconst onAir = await isServerOnAir();\n\t\tres.json(onAir);\n\t});\n\n\tapp.post(\n\t\t'/update',\n\t\tpermissions.checkPermissionsMiddleware('all'),\n\t\tserverIsOnAir,\n\t\t(_req, res) => {\n\t\t\tres.sendStatus(404);\n\t\t},\n\t);\n\n\tapp.post(\n\t\t'/execute',\n\t\tpermissions.checkPermissionsMiddleware('all'),\n\t\tasync (_req, res) => {\n\t\t\ttry {\n\t\t\t\tawait uiApi\n\t\t\t\t\t.get({\n\t\t\t\t\t\tresource: 'textarea',\n\t\t\t\t\t\tpassthrough: { req: permissions.rootRead },\n\t\t\t\t\t\tid: {\n\t\t\t\t\t\t\tname: 'model_area',\n\t\t\t\t\t\t},\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t$select: 'text',\n\t\t\t\t\t\t},\n\t\t\t\t\t})\n\t\t\t\t\t.then(async (/** @type { { [key: string]: any } } */ result) => {\n\t\t\t\t\t\tif (result == null) {\n\t\t\t\t\t\t\tthrow new Error('Could not find the model to execute');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst modelText = result.text;\n\t\t\t\t\t\tawait db.transaction(async (tx) => {\n\t\t\t\t\t\t\tawait sbvrUtils.executeModel(tx, {\n\t\t\t\t\t\t\t\tapiRoot: 'data',\n\t\t\t\t\t\t\t\tmodelText,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tawait uiApi.patch({\n\t\t\t\t\t\t\t\tresource: 'textarea',\n\t\t\t\t\t\t\t\tpassthrough: {\n\t\t\t\t\t\t\t\t\ttx,\n\t\t\t\t\t\t\t\t\treq: permissions.root,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tid: {\n\t\t\t\t\t\t\t\t\tname: 'model_area',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tbody: {\n\t\t\t\t\t\t\t\t\tis_disabled: true,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\tawait isServerOnAir(true);\n\t\t\t\tres.sendStatus(200);\n\t\t\t} catch (err) {\n\t\t\t\tawait isServerOnAir(false);\n\t\t\t\tres.status(404).json(err);\n\t\t\t}\n\t\t},\n\t);\n\tapp.post(\n\t\t'/validate',\n\t\tpermissions.checkPermissionsMiddleware('read'),\n\t\tasync (req, res) => {\n\t\t\ttry {\n\t\t\t\tconst results = await sbvrUtils.runRule('data', req.body.rule);\n\t\t\t\tres.json(results);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log('Error validating', err);\n\t\t\t\tres.sendStatus(404);\n\t\t\t}\n\t\t},\n\t);\n\tapp.delete(\n\t\t'/cleardb',\n\t\tpermissions.checkPermissionsMiddleware('delete'),\n\t\tasync (_req, res) => {\n\t\t\ttry {\n\t\t\t\tawait db.transaction(async (tx) => {\n\t\t\t\t\tconst result = await tx.tableList();\n\n\t\t\t\t\tawait Promise.all(\n\t\t\t\t\t\tresult.rows.map((table) => tx.dropTable(table.name)),\n\t\t\t\t\t);\n\t\t\t\t\tawait sbvrUtils.executeStandardModels(tx);\n\t\t\t\t\t// TODO: HACK: This is usually done by config-loader and should be done there\n\t\t\t\t\t// In general cleardb is very destructive and should really go through a full \"reboot\" procedure to set everything up again.\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t'DEL /cleardb is very destructive and should really be followed by a full restart/reload.',\n\t\t\t\t\t);\n\t\t\t\t\tawait sbvrUtils.executeModels(tx, exports.config.models);\n\t\t\t\t\tawait setupModels(tx);\n\t\t\t\t});\n\t\t\t\tres.sendStatus(200);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error('Error clearing db', err, err.stack);\n\t\t\t\tres.sendStatus(503);\n\t\t\t}\n\t\t},\n\t);\n\tapp.put(\n\t\t'/importdb',\n\t\tpermissions.checkPermissionsMiddleware({\n\t\t\tand: ['create', 'update', 'delete'],\n\t\t}),\n\t\tasync (req, res) => {\n\t\t\ttry {\n\t\t\t\tconst queries = req.body.split(';');\n\t\t\t\tawait db.transaction(async (tx) => {\n\t\t\t\t\tfor (let query of queries) {\n\t\t\t\t\t\tquery = query.trim();\n\t\t\t\t\t\tif (query.length > 0) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tawait tx.executeSql(query);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\tthrow [query, err];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tres.sendStatus(200);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error('Error importing db', err, err.stack);\n\t\t\t\tres.sendStatus(404);\n\t\t\t}\n\t\t},\n\t);\n\tapp.get(\n\t\t'/exportdb',\n\t\tpermissions.checkPermissionsMiddleware('read'),\n\t\tasync (_req, res) => {\n\t\t\ttry {\n\t\t\t\tlet exported = '';\n\t\t\t\tawait db.transaction(async (tx) => {\n\t\t\t\t\tconst tables = await tx.tableList(\"name NOT LIKE '%_buk'\");\n\t\t\t\t\tawait Promise.all(\n\t\t\t\t\t\ttables.rows.map(async (table) => {\n\t\t\t\t\t\t\tconst tableName = table.name;\n\t\t\t\t\t\t\texported += 'DROP TABLE IF EXISTS \"' + tableName + '\";\\n';\n\t\t\t\t\t\t\texported += table.sql + ';\\n';\n\t\t\t\t\t\t\tconst result = await tx.executeSql(\n\t\t\t\t\t\t\t\t'SELECT * FROM \"' + tableName + '\";',\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tlet insQuery = '';\n\t\t\t\t\t\t\tresult.rows.forEach((currRow) => {\n\t\t\t\t\t\t\t\tlet notFirst = false;\n\t\t\t\t\t\t\t\tinsQuery += 'INSERT INTO \"' + tableName + '\" (';\n\t\t\t\t\t\t\t\tlet valQuery = '';\n\t\t\t\t\t\t\t\tfor (let propName of Object.keys(currRow)) {\n\t\t\t\t\t\t\t\t\tif (notFirst) {\n\t\t\t\t\t\t\t\t\t\tinsQuery += ',';\n\t\t\t\t\t\t\t\t\t\tvalQuery += ',';\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tnotFirst = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tinsQuery += '\"' + propName + '\"';\n\t\t\t\t\t\t\t\t\tvalQuery += \"'\" + currRow[propName] + \"'\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tinsQuery += ') values (' + valQuery + ');\\n';\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\texported += insQuery;\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t\tres.json(exported);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error('Error exporting db', err, err.stack);\n\t\t\t\tres.sendStatus(503);\n\t\t\t}\n\t\t},\n\t);\n\tapp.post(\n\t\t'/backupdb',\n\t\tpermissions.checkPermissionsMiddleware('all'),\n\t\tserverIsOnAir,\n\t\tasync (_req, res) => {\n\t\t\ttry {\n\t\t\t\tawait db.transaction(async (tx) => {\n\t\t\t\t\tconst result = await tx.tableList(\"name NOT LIKE '%_buk'\");\n\t\t\t\t\tawait Promise.all(\n\t\t\t\t\t\tresult.rows.map(async (currRow) => {\n\t\t\t\t\t\t\tconst tableName = currRow.name;\n\t\t\t\t\t\t\tawait tx.dropTable(tableName + '_buk', true);\n\n\t\t\t\t\t\t\tawait tx.executeSql(\n\t\t\t\t\t\t\t\t'ALTER TABLE \"' +\n\t\t\t\t\t\t\t\t\ttableName +\n\t\t\t\t\t\t\t\t\t'\" RENAME TO \"' +\n\t\t\t\t\t\t\t\t\ttableName +\n\t\t\t\t\t\t\t\t\t'_buk\";',\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t\tres.sendStatus(200);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error('Error backing up db', err, err.stack);\n\t\t\t\tres.sendStatus(404);\n\t\t\t}\n\t\t},\n\t);\n\tapp.post(\n\t\t'/restoredb',\n\t\tpermissions.checkPermissionsMiddleware('all'),\n\t\tserverIsOnAir,\n\t\tasync (_req, res) => {\n\t\t\ttry {\n\t\t\t\tawait db.transaction(async (tx) => {\n\t\t\t\t\tconst result = await tx.tableList(\"name LIKE '%_buk'\");\n\t\t\t\t\tawait Promise.all(\n\t\t\t\t\t\tresult.rows.map(async (currRow) => {\n\t\t\t\t\t\t\tconst tableName = currRow.name;\n\t\t\t\t\t\t\tawait tx.dropTable(tableName.slice(0, -4), true);\n\t\t\t\t\t\t\tawait tx.executeSql(\n\t\t\t\t\t\t\t\t'ALTER TABLE \"' +\n\t\t\t\t\t\t\t\t\ttableName +\n\t\t\t\t\t\t\t\t\t'\" RENAME TO \"' +\n\t\t\t\t\t\t\t\t\ttableName.slice(0, -4) +\n\t\t\t\t\t\t\t\t\t'\";',\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t\tres.sendStatus(200);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error('Error restoring db', err, err.stack);\n\t\t\t\tres.sendStatus(404);\n\t\t\t}\n\t\t},\n\t);\n\n\tapp.all('/data/*', serverIsOnAir, sbvrUtils.handleODataRequest);\n\tapp.get('/Auth/*', serverIsOnAir, sbvrUtils.handleODataRequest);\n\tapp.merge('/ui/*', sbvrUtils.handleODataRequest);\n\tapp.patch('/ui/*', sbvrUtils.handleODataRequest);\n\n\tapp.delete('/', serverIsOnAir, async (_req, res) => {\n\t\tawait Promise.all([\n\t\t\tuiApi.patch({\n\t\t\t\tresource: 'textarea',\n\t\t\t\tpassthrough: { req: permissions.root },\n\t\t\t\tid: {\n\t\t\t\t\tname: 'model_area',\n\t\t\t\t},\n\t\t\t\tbody: {\n\t\t\t\t\ttext: '',\n\t\t\t\t\tis_disabled: false,\n\t\t\t\t},\n\t\t\t}),\n\t\t\tsbvrUtils.deleteModel('data'),\n\t\t]);\n\t\tawait isServerOnAir(false);\n\t\tres.sendStatus(200);\n\t});\n\n\tawait db.transaction(setupModels);\n}\n","import * as _ from 'lodash';\nimport { odataNameToSqlName } from '@balena/odata-to-abstract-sql';\n// @ts-ignore\nconst transactionModel = require('./transaction.sbvr');\n\nexport let config = {\n\tmodels: [\n\t\t{\n\t\t\tapiRoot: 'transaction',\n\t\t\tmodelText: transactionModel,\n\t\t\tcustomServerCode: { setup },\n\t\t\tmigrations: {\n\t\t\t\t'11.0.0-modified-at': `\\\nALTER TABLE \"conditional field\"\nADD COLUMN IF NOT EXISTS \"modified at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL;\nALTER TABLE \"conditional resource\"\nADD COLUMN IF NOT EXISTS \"modified at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL;\nALTER TABLE \"lock\"\nADD COLUMN IF NOT EXISTS \"modified at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL;\nALTER TABLE \"resource\"\nADD COLUMN IF NOT EXISTS \"modified at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL;\nALTER TABLE \"resource-is under-lock\"\nADD COLUMN IF NOT EXISTS \"modified at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL;\nALTER TABLE \"transaction\"\nADD COLUMN IF NOT EXISTS \"modified at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL;\\\n`,\n\t\t\t},\n\t\t},\n\t],\n};\n\n/** @type {(modelName: string) => void} */\nexport let addModelHooks;\n\n/** @type { import('../config-loader/config-loader').SetupFunction } */\nexport function setup(app, sbvrUtils) {\n\taddModelHooks = (modelName) => {\n\t\t// TODO: Add checks on POST/PATCH requests as well.\n\t\tsbvrUtils.addPureHook('PUT', modelName, 'all', {\n\t\t\tasync PRERUN({ tx, request }) {\n\t\t\t\tconst vocab = request.vocabulary;\n\t\t\t\tconst { logger } = sbvrUtils.api[vocab];\n\t\t\t\tconst id = sbvrUtils.getID(vocab, request);\n\t\t\t\tlet result;\n\t\t\t\ttry {\n\t\t\t\t\tresult = await tx.executeSql(\n\t\t\t\t\t\t`\\\nSELECT NOT EXISTS(\n\tSELECT 1\n\tFROM \"resource\" r\n\tJOIN \"resource-is under-lock\" AS rl ON rl.\"resource\" = r.\"id\"\n\tWHERE r.\"resource type\" = ?\n\tAND r.\"resource id\" = ?\n) AS result;`,\n\t\t\t\t\t\t[request.resourceName, id],\n\t\t\t\t\t);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tlogger.error('Unable to check resource locks', err, err.stack);\n\t\t\t\t\tthrow new Error('Unable to check resource locks');\n\t\t\t\t}\n\t\t\t\tif ([false, 0, '0'].includes(result.rows[0].result)) {\n\t\t\t\t\tthrow new Error('The resource is locked and cannot be edited');\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\n\t\tconst endTransaction = (/** @type {number} */ transactionID) =>\n\t\t\tsbvrUtils.db.transaction(async (tx) => {\n\t\t\t\t/** @type {{[key: string]: { promise: Promise<any>, resolve: Function, reject: Function }}} */\n\t\t\t\tconst placeholders = {};\n\t\t\t\tconst getLockedRow = (\n\t\t\t\t\t/** @type {number} */ lockID, // 'GET', '/transaction/resource?$select=resource_id&$filter=resource__is_under__lock/lock eq ?'\n\t\t\t\t) =>\n\t\t\t\t\ttx.executeSql(\n\t\t\t\t\t\t`SELECT \"resource\".\"resource id\" AS \"resource_id\"\nFROM \"resource\",\n\"resource-is under-lock\"\nWHERE \"resource\".\"id\" = \"resource-is under-lock\".\"resource\"\nAND \"resource-is under-lock\".\"lock\" = ?;`,\n\t\t\t\t\t\t[lockID],\n\t\t\t\t\t);\n\t\t\t\tconst getFieldsObject = async (\n\t\t\t\t\t/** @type {number} */ conditionalResourceID,\n\t\t\t\t\t/** @type {import('@balena/abstract-sql-compiler').AbstractSqlTable} */ clientModel, // 'GET', '/transaction/conditional_field?$select=field_name,field_value&$filter=conditional_resource eq ?'\n\t\t\t\t) => {\n\t\t\t\t\tconst fields = await tx.executeSql(\n\t\t\t\t\t\t`SELECT \"conditional field\".\"field name\" AS \"field_name\", \"conditional field\".\"field value\" AS \"field_value\"\nFROM \"conditional field\"\nWHERE \"conditional field\".\"conditional resource\" = ?;`,\n\t\t\t\t\t\t[conditionalResourceID],\n\t\t\t\t\t);\n\t\t\t\t\t/** @type {{[key: string]: any}} */\n\t\t\t\t\tconst fieldsObject = {};\n\t\t\t\t\tawait Promise.all(\n\t\t\t\t\t\tfields.rows.map(async (field) => {\n\t\t\t\t\t\t\tconst fieldName = field.field_name.replace(\n\t\t\t\t\t\t\t\tclientModel.resourceName + '.',\n\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst fieldValue = field.field_value;\n\t\t\t\t\t\t\tconst modelField = clientModel.fields.find(\n\t\t\t\t\t\t\t\t(f) => f.fieldName === fieldName,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (modelField == null) {\n\t\t\t\t\t\t\t\tthrow new Error(`Invalid field: ${fieldName}`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tmodelField.dataType === 'ForeignKey' &&\n\t\t\t\t\t\t\t\tNumber.isNaN(Number(fieldValue))\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tif (!placeholders.hasOwnProperty(fieldValue)) {\n\t\t\t\t\t\t\t\t\tthrow new Error('Cannot resolve placeholder' + fieldValue);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\tconst resolvedID = await placeholders[fieldValue].promise;\n\t\t\t\t\t\t\t\t\t\tfieldsObject[fieldName] = resolvedID;\n\t\t\t\t\t\t\t\t\t} catch {\n\t\t\t\t\t\t\t\t\t\tthrow new Error('Placeholder failed' + fieldValue);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfieldsObject[fieldName] = fieldValue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t\treturn fieldsObject;\n\t\t\t\t};\n\n\t\t\t\t// 'GET', '/transaction/conditional_resource?$select=id,lock,resource_type,conditional_type,placeholder&$filter=transaction eq ?'\n\t\t\t\tconst conditionalResources = await tx.executeSql(\n\t\t\t\t\t`\\\nSELECT \"conditional resource\".\"id\", \"conditional resource\".\"lock\", \"conditional resource\".\"resource type\" AS \"resource_type\",\n\"conditional resource\".\"conditional type\" AS \"conditional_type\", \"conditional resource\".\"placeholder\"\nFROM \"conditional resource\"\nWHERE \"conditional resource\".\"transaction\" = ?;\\\n`,\n\t\t\t\t\t[transactionID],\n\t\t\t\t);\n\n\t\t\t\tconditionalResources.rows.forEach((conditionalResource) => {\n\t\t\t\t\tconst { placeholder } = conditionalResource;\n\t\t\t\t\tif (placeholder != null && placeholder.length > 0) {\n\t\t\t\t\t\t/** @type {Function} */\n\t\t\t\t\t\tlet resolve;\n\t\t\t\t\t\t/** @type {Function} */\n\t\t\t\t\t\tlet reject;\n\t\t\t\t\t\tconst promise = new Promise(($resolve, $reject) => {\n\t\t\t\t\t\t\tresolve = $resolve;\n\t\t\t\t\t\t\treject = $reject;\n\t\t\t\t\t\t});\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tplaceholders[placeholder] = { promise, resolve, reject };\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// get conditional resources (if exist)\n\t\t\t\tawait Promise.all(\n\t\t\t\t\tconditionalResources.rows.map(async (conditionalResource) => {\n\t\t\t\t\t\tconst { placeholder } = conditionalResource;\n\t\t\t\t\t\tconst lockID = conditionalResource.lock;\n\t\t\t\t\t\tconst doCleanup = () =>\n\t\t\t\t\t\t\tPromise.all([\n\t\t\t\t\t\t\t\ttx.executeSql(\n\t\t\t\t\t\t\t\t\t'DELETE FROM \"conditional field\" WHERE \"conditional resource\" = ?;',\n\t\t\t\t\t\t\t\t\t[conditionalResource.id],\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\ttx.executeSql(\n\t\t\t\t\t\t\t\t\t'DELETE FROM \"conditional resource\" WHERE \"lock\" = ?;',\n\t\t\t\t\t\t\t\t\t[lockID],\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\ttx.executeSql(\n\t\t\t\t\t\t\t\t\t'DELETE FROM \"resource-is under-lock\" WHERE \"lock\" = ?;',\n\t\t\t\t\t\t\t\t\t[lockID],\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\ttx.executeSql('DELETE FROM \"lock\" WHERE \"id\" = ?;', [lockID]),\n\t\t\t\t\t\t\t]);\n\n\t\t\t\t\t\tconst passthrough = { tx };\n\n\t\t\t\t\t\tconst clientModel = sbvrUtils.getAbstractSqlModel({\n\t\t\t\t\t\t\tvocabulary: modelName,\n\t\t\t\t\t\t}).tables[odataNameToSqlName(conditionalResource.resource_type)];\n\t\t\t\t\t\tlet url = modelName + '/' + conditionalResource.resource_type;\n\t\t\t\t\t\tswitch (conditionalResource.conditional_type) {\n\t\t\t\t\t\t\tcase 'DELETE': {\n\t\t\t\t\t\t\t\tconst lockedResult = await getLockedRow(lockID);\n\t\t\t\t\t\t\t\tconst lockedRow = lockedResult.rows[0];\n\t\t\t\t\t\t\t\turl =\n\t\t\t\t\t\t\t\t\turl +\n\t\t\t\t\t\t\t\t\t'?$filter=' +\n\t\t\t\t\t\t\t\t\tclientModel.idField +\n\t\t\t\t\t\t\t\t\t' eq ' +\n\t\t\t\t\t\t\t\t\tlockedRow.resource_id;\n\t\t\t\t\t\t\t\tawait sbvrUtils.PinejsClient.prototype.delete({\n\t\t\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t\t\tpassthrough,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tawait doCleanup();\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcase 'EDIT': {\n\t\t\t\t\t\t\t\tconst lockedResult = await getLockedRow(lockID);\n\t\t\t\t\t\t\t\tconst lockedRow = lockedResult.rows[0];\n\t\t\t\t\t\t\t\tconst body = await getFieldsObject(\n\t\t\t\t\t\t\t\t\tconditionalResource.id,\n\t\t\t\t\t\t\t\t\tclientModel,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tbody[clientModel.idField] = lockedRow.resource_id;\n\t\t\t\t\t\t\t\tawait sbvrUtils.PinejsClient.prototype.put({\n\t\t\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\t\t\tpassthrough,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tawait doCleanup();\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcase 'ADD': {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tconst body = await getFieldsObject(\n\t\t\t\t\t\t\t\t\t\tconditionalResource.id,\n\t\t\t\t\t\t\t\t\t\tclientModel,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t/** @type { {[key: string]: any} } */\n\t\t\t\t\t\t\t\t\tconst result = await sbvrUtils.PinejsClient.prototype.post({\n\t\t\t\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\t\t\t\tpassthrough,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tplaceholders[placeholder].resolve(\n\t\t\t\t\t\t\t\t\t\tresult[clientModel.idField],\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tawait doCleanup();\n\t\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t\tplaceholders[placeholder].reject(err);\n\t\t\t\t\t\t\t\t\tthrow err;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t\tawait tx.executeSql('DELETE FROM \"transaction\" WHERE \"id\" = ?;', [\n\t\t\t\t\ttransactionID,\n\t\t\t\t]);\n\t\t\t\tawait sbvrUtils.validateModel(tx, modelName);\n\t\t\t});\n\n\t\t// TODO: these really should be specific to the model - currently they will only work for the first model added\n\t\tapp.post('/transaction/execute', async (req, res) => {\n\t\t\tconst id = Number(req.body.id);\n\t\t\tif (Number.isNaN(id)) {\n\t\t\t\tres.sendStatus(404);\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tawait endTransaction(id);\n\n\t\t\t\t\tres.sendStatus(200);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tconsole.error('Error ending transaction', err, err.stack);\n\t\t\t\t\tres.status(404).json(err);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tapp.get('/transaction', (_req, res) => {\n\t\t\tres.json({\n\t\t\t\ttransactionURI: '/transaction/transaction',\n\t\t\t\tconditionalResourceURI: '/transaction/conditional_resource',\n\t\t\t\tconditionalFieldURI: '/transaction/conditional_field',\n\t\t\t\tlockURI: '/transaction/lock',\n\t\t\t\ttransactionLockURI: '/transaction/lock__belongs_to__transaction',\n\t\t\t\tresourceURI: '/transaction/resource',\n\t\t\t\tlockResourceURI: '/transaction/resource__is_under__lock',\n\t\t\t\texclusiveLockURI: '/transaction/lock__is_exclusive',\n\t\t\t\tcommitTransactionURI: '/transaction/execute',\n\t\t\t});\n\t\t});\n\t\tapp.all('/transaction/*', sbvrUtils.handleODataRequest);\n\t};\n}\n","module.exports = \"Vocabulary: transaction\\r\\n\\r\\nTerm:       resource id\\r\\n\\tConcept type: Text (Type)\\r\\nTerm:       resource type\\r\\n\\tConcept type: Text (Type)\\r\\nTerm:       field name\\r\\n\\tConcept type: Text (Type)\\r\\nTerm:       field value\\r\\n\\tConcept type: Text (Type)\\r\\nTerm:       placeholder\\r\\n\\tConcept type: Short Text (Type)\\r\\n\\r\\nTerm:       resource\\r\\n\\tReference Scheme: resource id\\r\\nFact type: resource has resource id\\r\\n\\tNecessity: Each resource has exactly 1 resource id.\\r\\nFact type: resource has resource type\\r\\n\\tNecessity: Each resource has exactly 1 resource type.\\r\\n\\r\\nTerm:       transaction\\r\\n\\r\\nTerm:       lock\\r\\nFact type:  lock is exclusive\\r\\nFact type:  lock belongs to transaction\\r\\n\\tNecessity: Each lock belongs to exactly 1 transaction.\\r\\nFact type:  resource is under lock\\r\\n\\tSynonymous Form: lock is on resource\\r\\nRule:       It is obligatory that each resource that is under a lock that is exclusive, is under at most 1 lock.\\r\\n\\r\\nTerm:       conditional type\\r\\n\\tConcept Type: Short Text (Type)\\r\\n\\tDefinition: \\\"ADD\\\", \\\"EDIT\\\" or \\\"DELETE\\\"\\r\\n\\r\\nTerm:       conditional resource\\r\\nFact type:  conditional resource belongs to transaction\\r\\n\\tNecessity: Each conditional resource belongs to exactly 1 transaction.\\r\\nFact type:  conditional resource has lock\\r\\n\\tNecessity: Each conditional resource has at most 1 lock.\\r\\nFact type:  conditional resource has resource type\\r\\n\\tNecessity: Each conditional resource has exactly 1 resource type.\\r\\nFact type:  conditional resource has conditional type\\r\\n\\tNecessity: Each conditional resource has exactly 1 conditional type.\\r\\nFact type:  conditional resource has placeholder\\r\\n\\tNecessity: Each conditional resource has at most 1 placeholder.\\r\\n--Rule:       It is obligatory that each conditional resource that has a placeholder, has a conditional type that is of \\\"ADD\\\".\\r\\n\\r\\nTerm:       conditional field\\r\\n\\tReference Scheme: field name\\r\\nFact type:  conditional field has field name\\r\\n\\tNecessity: Each conditional field has exactly 1 field name.\\r\\nFact type:  conditional field has field value\\r\\n\\tNecessity: Each conditional field has at most 1 field value.\\r\\nFact type:  conditional field is of conditional resource\\r\\n\\tNecessity: Each conditional field is of exactly 1 conditional resource.\\r\\n\\r\\n--Rule:       It is obligatory that each conditional resource that has a conditional type that is of \\\"EDIT\\\" or \\\"DELETE\\\", has a lock that is exclusive\\r\\nRule:       It is obligatory that each conditional resource that has a lock, has a resource type that is of a resource that the lock is on.\\r\\nRule:       It is obligatory that each conditional resource that has a lock, belongs to a transaction that the lock belongs to.\\r\\n\";","import type * as Express from 'express';\nimport type * as Passport from 'passport';\nimport type * as PassportLocal from 'passport-local';\nimport type * as ConfigLoader from '../config-loader/config-loader';\n\nimport * as permissions from '../sbvr-api/permissions';\n\n// Returns a middleware that will handle logging in using `username` and `password` body properties\nexport let login: (\n\tfn: (\n\t\terr: any,\n\t\tuser: {} | undefined,\n\t\treq: Express.Request,\n\t\tres: Express.Response,\n\t\tnext: Express.NextFunction,\n\t) => void,\n) => Express.RequestHandler;\n\n// Returns a middleware that logs the user out and then calls next()\nexport let logout: Express.RequestHandler;\n\nexport const checkPassword: PassportLocal.VerifyFunction = async (\n\tusername,\n\tpassword,\n\tdone: (error: undefined, user?: any) => void,\n) => {\n\ttry {\n\t\tconst result = await permissions.checkPassword(username, password);\n\t\tdone(undefined, result);\n\t} catch {\n\t\tdone(undefined, false);\n\t}\n};\n\nconst setup: ConfigLoader.SetupFunction = async (app: Express.Application) => {\n\tif (!process.browser) {\n\t\tconst passport: typeof Passport = require('passport');\n\t\tapp.use(passport.initialize());\n\t\tapp.use(passport.session());\n\n\t\tconst {\n\t\t\tStrategy: LocalStrategy,\n\t\t}: typeof PassportLocal = require('passport-local');\n\n\t\tpassport.serializeUser((user, done) => {\n\t\t\tdone(null, user);\n\t\t});\n\n\t\tpassport.deserializeUser((user, done) => {\n\t\t\tdone(null, user);\n\t\t});\n\n\t\tpassport.use(new LocalStrategy(checkPassword));\n\n\t\tlogin = (fn) => (req, res, next) =>\n\t\t\tpassport.authenticate('local', (err: any, user?: {}) => {\n\t\t\t\tif (err || user == null) {\n\t\t\t\t\tfn(err, user, req, res, next);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\treq.login(user, (error) => {\n\t\t\t\t\tfn(error, user, req, res, next);\n\t\t\t\t});\n\t\t\t})(req, res, next);\n\n\t\tlogout = (req, _res, next) => {\n\t\t\treq.logout();\n\t\t\tnext();\n\t\t};\n\t} else {\n\t\tlet loggedIn = false;\n\t\tlet loggedInUser: any = null;\n\t\tapp.use((req, _res, next) => {\n\t\t\tif (loggedIn === false) {\n\t\t\t\treq.user = loggedInUser;\n\t\t\t}\n\t\t\tnext();\n\t\t});\n\n\t\tlogin = (fn) => (req, res, next) =>\n\t\t\tcheckPassword(req.body.username, req.body.password, (err, user) => {\n\t\t\t\tif (user) {\n\t\t\t\t\tloggedIn = true;\n\t\t\t\t\tloggedInUser = user;\n\t\t\t\t}\n\t\t\t\tfn(err, user, req, res, next);\n\t\t\t});\n\n\t\tlogout = (req, _res, next) => {\n\t\t\tdelete req.user;\n\t\t\tloggedIn = false;\n\t\t\tloggedInUser = null;\n\t\t\tnext();\n\t\t};\n\t}\n};\n\nexport const config: ConfigLoader.Config = {\n\tmodels: [\n\t\t{\n\t\t\tcustomServerCode: { setup },\n\t\t},\n\t],\n};\n","import * as _ from 'lodash';\n\n/**\n * @typedef {Partial<Window> & {GLOBAL_PERMISSIONS?: string[]}} ExtendedWindow\n */\n\n/** @type {ExtendedWindow} */\nconst w = typeof window !== 'undefined' && window !== null ? window : {};\n\nw.GLOBAL_PERMISSIONS = ['resource.all'];\n\nconst app = (function () {\n\t/** @type Function */\n\tlet ready;\n\tconst enabled = new Promise((resolve) => {\n\t\tready = resolve;\n\t});\n\t/** @type {{[key: string]: any}} */\n\tconst appVars = { env: 'development' };\n\t/** @type {{[key: string]: any}} */\n\tconst handlers = {\n\t\t// USE is a list of middleware to run before any request.\n\t\tUSE: [],\n\t\tPOST: [],\n\t\tPUT: [],\n\t\tDELETE: [],\n\t\tGET: [],\n\t\tPATCH: [],\n\t\tMERGE: [],\n\t\tOPTIONS: [],\n\t};\n\tconst addHandler = function (\n\t\t/** @type string */ handlerName,\n\t\t/** @type {string} */ match,\n\t\t/** @type import('express').Handler[] */ ...middleware\n\t) {\n\t\t//Strip wildcard\n\t\tlet paramName;\n\t\tmatch = match.toLowerCase();\n\t\tconst newMatch = match.replace(/[\\/\\*]*$/, '');\n\t\tif (newMatch !== match) {\n\t\t\tmatch = newMatch;\n\t\t\tparamName = '*';\n\t\t} else {\n\t\t\tconst paramMatch = /:(.*)$/.exec(match);\n\t\t\tparamName = paramMatch?.[1];\n\t\t}\n\t\thandlers[handlerName].push({\n\t\t\tmatch,\n\t\t\tparamName,\n\t\t\t// Flatten middleware list to handle arrays of middleware in the arg list.\n\t\t\tmiddleware: _.flattenDeep(middleware),\n\t\t});\n\t};\n\tconst process = async function (\n\t\t/** @type string */ method,\n\t\t/** @type string */ uri,\n\t\t/** @type {{[key: string]: any}} */ headers,\n\t\t/** @type any */ body,\n\t) {\n\t\tbody ??= '';\n\t\tif (!handlers[method]) {\n\t\t\tthrow [404, null, null];\n\t\t}\n\t\tconst req = {\n\t\t\t// Have a default user for in-browser with all permissions\n\t\t\tuser: {\n\t\t\t\tpermissions: w.GLOBAL_PERMISSIONS,\n\t\t\t},\n\t\t\tmethod,\n\t\t\tbody,\n\t\t\theaders,\n\t\t\turl: uri,\n\t\t\t/** @type {{[key: string]: any}} */\n\t\t\tparams: {},\n\t\t\tquery: {},\n\t\t\tlogin(/** @type any */ _user, /** @type Function */ callback) {\n\t\t\t\tcallback();\n\t\t\t},\n\t\t};\n\t\tconsole.log(method, uri, body);\n\t\tif (uri.slice(-1) === '/') {\n\t\t\turi = uri.slice(0, uri.length - 1);\n\t\t}\n\t\turi = uri.toLowerCase();\n\t\treturn await new Promise(function (resolve, reject) {\n\t\t\tconst res = {\n\t\t\t\tstatusCode: 200,\n\t\t\t\tstatus(/** @type number */ statusCode) {\n\t\t\t\t\tthis.statusCode = statusCode;\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tjson(/** @type any */ obj) {\n\t\t\t\t\t// Stringify and parse to emulate passing over network.\n\t\t\t\t\tobj = JSON.parse(JSON.stringify(obj));\n\t\t\t\t\tif (this.statusCode >= 400) {\n\t\t\t\t\t\treject([this.statusCode, obj, null]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve([this.statusCode, obj, null]);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsend(/** @type any */ data) {\n\t\t\t\t\tdata = _.cloneDeep(data);\n\t\t\t\t\tif (this.statusCode >= 400) {\n\t\t\t\t\t\treject([this.statusCode, data, null]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve([this.statusCode, data, null]);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsendStatus(/** @type undefined | number */ statusCode) {\n\t\t\t\t\tstatusCode ??= this.statusCode;\n\t\t\t\t\tif (statusCode >= 400) {\n\t\t\t\t\t\treject([statusCode, null, null]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve([statusCode, null, null]);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tredirect() {\n\t\t\t\t\treject([307]);\n\t\t\t\t},\n\t\t\t\tset() {\n\t\t\t\t\t// noop\n\t\t\t\t},\n\t\t\t\ttype() {\n\t\t\t\t\t// noop\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tconst methodHandlers = handlers.USE.concat(handlers[method]);\n\t\t\tlet i = -1;\n\t\t\tlet j = -1;\n\n\t\t\tconst next = function (/** @type {undefined | 'route'} */ route) {\n\t\t\t\tj++;\n\t\t\t\tif (route === 'route' || j >= methodHandlers[i].middleware.length) {\n\t\t\t\t\tcheckMethodHandlers();\n\t\t\t\t} else {\n\t\t\t\t\tmethodHandlers[i].middleware[j](req, res, next);\n\t\t\t\t}\n\t\t\t};\n\t\t\tconst checkMethodHandlers = () => {\n\t\t\t\ti++;\n\t\t\t\tif (i < methodHandlers.length) {\n\t\t\t\t\tif (\n\t\t\t\t\t\turi.slice(0, methodHandlers[i].match.length) ===\n\t\t\t\t\t\tmethodHandlers[i].match\n\t\t\t\t\t) {\n\t\t\t\t\t\tj = -1;\n\t\t\t\t\t\t// Reset params that may have been added on previous routes that failed in middleware\n\t\t\t\t\t\treq.params = {};\n\t\t\t\t\t\tif (methodHandlers[i].paramName != null) {\n\t\t\t\t\t\t\treq.params[methodHandlers[i].paramName] = uri.slice(\n\t\t\t\t\t\t\t\tmethodHandlers[i].match.length,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tnext();\n\t\t\t\t\t\t} else if (uri.length !== methodHandlers[i].match.length) {\n\t\t\t\t\t\t\t// Not an exact match and no parameter matching\n\t\t\t\t\t\t\tcheckMethodHandlers();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnext();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcheckMethodHandlers();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tres.sendStatus(404);\n\t\t\t\t}\n\t\t\t};\n\t\t\tcheckMethodHandlers();\n\t\t});\n\t};\n\treturn {\n\t\tuse: _.partial(addHandler, 'USE', '/*'),\n\t\tget(/** @type string */ name) {\n\t\t\tconst callback = arguments[arguments.length - 1];\n\t\t\tif (typeof callback === 'function') {\n\t\t\t\taddHandler('GET', ...arguments);\n\t\t\t} else {\n\t\t\t\treturn appVars[name];\n\t\t\t}\n\t\t},\n\t\tpost: _.partial(addHandler, 'POST'),\n\t\tput: _.partial(addHandler, 'PUT'),\n\t\tdelete: _.partial(addHandler, 'DELETE'),\n\t\tpatch: _.partial(addHandler, 'PATCH'),\n\t\tmerge: _.partial(addHandler, 'MERGE'),\n\t\toptions: _.partial(addHandler, 'OPTIONS'),\n\t\tall(/** @type any[] */ ...args) {\n\t\t\tthis.post(...args);\n\t\t\tthis.get(...args);\n\t\t\tthis.put(...args);\n\t\t\tthis.delete(...args);\n\t\t},\n\t\tprocess(/** @type any[] */ ...args) {\n\t\t\t// The promise will run the real process function asynchronously once the app is enabled,\n\t\t\t// which matches somewhat more closely to an AJAX call than doing it synchronously.\n\t\t\treturn enabled.then(() => process(...args));\n\t\t},\n\t\tlisten() {\n\t\t\tconst callback = arguments[arguments.length - 1];\n\t\t\tready();\n\t\t\tif (typeof callback === 'function') {\n\t\t\t\treturn enabled.then(callback);\n\t\t\t}\n\t\t},\n\t\tset(/** @type string */ name, /** @type any */ value) {\n\t\t\tappVars[name] = value;\n\t\t},\n\t};\n})();\n\nconst express = () => app;\n\nmodule.exports = express;\n"],"sourceRoot":""}